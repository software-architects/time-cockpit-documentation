### YamlMime:ManagedReference
items:
- uid: TimeCockpit.Data.DataModel.Triggers.UserDetail
  commentId: T:TimeCockpit.Data.DataModel.Triggers.UserDetail
  id: UserDetail
  parent: TimeCockpit.Data.DataModel.Triggers
  children:
  - TimeCockpit.Data.DataModel.Triggers.UserDetail.#ctor
  - TimeCockpit.Data.DataModel.Triggers.UserDetail.SetCurrentCulture(TimeCockpit.Data.DataModel.Actions.ExecutionContext)
  langs:
  - csharp
  - vb
  name: UserDetail
  nameWithType: UserDetail
  fullName: TimeCockpit.Data.DataModel.Triggers.UserDetail
  type: Class
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel.Triggers
  summary: "\nRepresents a class that holds trigger methods for APP_UserDetail\n"
  syntax:
    content: >-
      [ModelEntityTrigger]

      public class UserDetail
    content.vb: >-
      <ModelEntityTrigger>

      Public Class UserDetail
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: TimeCockpit.Data.DataModel.Triggers.ModelEntityTriggerAttribute
    ctor: TimeCockpit.Data.DataModel.Triggers.ModelEntityTriggerAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TimeCockpit.Data.DataModel.Triggers.UserDetail.SetCurrentCulture(TimeCockpit.Data.DataModel.Actions.ExecutionContext)
  commentId: M:TimeCockpit.Data.DataModel.Triggers.UserDetail.SetCurrentCulture(TimeCockpit.Data.DataModel.Actions.ExecutionContext)
  id: SetCurrentCulture(TimeCockpit.Data.DataModel.Actions.ExecutionContext)
  parent: TimeCockpit.Data.DataModel.Triggers.UserDetail
  langs:
  - csharp
  - vb
  name: SetCurrentCulture(ExecutionContext)
  nameWithType: UserDetail.SetCurrentCulture(ExecutionContext)
  fullName: TimeCockpit.Data.DataModel.Triggers.UserDetail.SetCurrentCulture(TimeCockpit.Data.DataModel.Actions.ExecutionContext)
  type: Method
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel.Triggers
  summary: "\nSets the current culture if the culture of a user is updated.\n"
  syntax:
    content: >-
      [TriggerMethod]

      public static void SetCurrentCulture(ExecutionContext context)
    parameters:
    - id: context
      type: TimeCockpit.Data.DataModel.Actions.ExecutionContext
      description: The context to use.
    content.vb: >-
      <TriggerMethod>

      Public Shared Sub SetCurrentCulture(context As ExecutionContext)
  overload: TimeCockpit.Data.DataModel.Triggers.UserDetail.SetCurrentCulture*
  attributes:
  - type: TimeCockpit.Data.DataModel.Triggers.TriggerMethodAttribute
    ctor: TimeCockpit.Data.DataModel.Triggers.TriggerMethodAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: TimeCockpit.Data.DataModel.Triggers.UserDetail.#ctor
  commentId: M:TimeCockpit.Data.DataModel.Triggers.UserDetail.#ctor
  id: '#ctor'
  parent: TimeCockpit.Data.DataModel.Triggers.UserDetail
  langs:
  - csharp
  - vb
  name: UserDetail()
  nameWithType: UserDetail.UserDetail()
  fullName: TimeCockpit.Data.DataModel.Triggers.UserDetail.UserDetail()
  type: Constructor
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel.Triggers
  syntax:
    content: public UserDetail()
    content.vb: Public Sub New
  overload: TimeCockpit.Data.DataModel.Triggers.UserDetail.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: TimeCockpit.Data.DataModel.Triggers
  commentId: N:TimeCockpit.Data.DataModel.Triggers
  isExternal: true
  name: TimeCockpit.Data.DataModel.Triggers
  nameWithType: TimeCockpit.Data.DataModel.Triggers
  fullName: TimeCockpit.Data.DataModel.Triggers
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TimeCockpit.Data.DataModel.Triggers.UserDetail.SetCurrentCulture*
  commentId: Overload:TimeCockpit.Data.DataModel.Triggers.UserDetail.SetCurrentCulture
  isExternal: true
  name: SetCurrentCulture
  nameWithType: UserDetail.SetCurrentCulture
  fullName: TimeCockpit.Data.DataModel.Triggers.UserDetail.SetCurrentCulture
- uid: TimeCockpit.Data.DataModel.Actions.ExecutionContext
  commentId: T:TimeCockpit.Data.DataModel.Actions.ExecutionContext
  parent: TimeCockpit.Data.DataModel.Actions
  isExternal: true
  name: ExecutionContext
  nameWithType: ExecutionContext
  fullName: TimeCockpit.Data.DataModel.Actions.ExecutionContext
- uid: TimeCockpit.Data.DataModel.Actions
  commentId: N:TimeCockpit.Data.DataModel.Actions
  isExternal: true
  name: TimeCockpit.Data.DataModel.Actions
  nameWithType: TimeCockpit.Data.DataModel.Actions
  fullName: TimeCockpit.Data.DataModel.Actions
- uid: TimeCockpit.Data.DataModel.Triggers.UserDetail.#ctor*
  commentId: Overload:TimeCockpit.Data.DataModel.Triggers.UserDetail.#ctor
  isExternal: true
  name: UserDetail
  nameWithType: UserDetail.UserDetail
  fullName: TimeCockpit.Data.DataModel.Triggers.UserDetail.UserDetail
