### YamlMime:ManagedReference
items:
- uid: TimeCockpit.Data.NamedSet
  commentId: T:TimeCockpit.Data.NamedSet
  id: NamedSet
  parent: TimeCockpit.Data
  children:
  - TimeCockpit.Data.NamedSet.Create(TimeCockpit.Data.DataModel.NamedSetDefinition,System.Collections.Generic.IEnumerable{TimeCockpit.Data.EntityObject})
  - TimeCockpit.Data.NamedSet.Create(TimeCockpit.Data.DataModel.NamedSetDefinition,TimeCockpit.Data.IDataContext,TimeCockpit.Data.Environment)
  - TimeCockpit.Data.NamedSet.Definition
  - TimeCockpit.Data.NamedSet.GetEnumerator
  - TimeCockpit.Data.NamedSet.Name
  - TimeCockpit.Data.NamedSet.Refresh(TimeCockpit.Data.DataContext,TimeCockpit.Data.Environment)
  - TimeCockpit.Data.NamedSet.System#Collections#IEnumerable#GetEnumerator
  langs:
  - csharp
  - vb
  name: NamedSet
  nameWithType: NamedSet
  fullName: TimeCockpit.Data.NamedSet
  type: Class
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/NamedSet.cs
    id: NamedSet
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/NamedSet.cs
    startLine: 19
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data
  summary: "\nRepresents a named collection of <xref href=\"TimeCockpit.Data.EntityObject\" data-throw-if-not-resolved=\"false\"></xref>s.\n"
  example: []
  syntax:
    content: 'public class NamedSet : IEnumerable<EntityObject>, IEnumerable'
    content.vb: >-
      Public Class NamedSet
          Implements IEnumerable(Of EntityObject), IEnumerable
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.IEnumerable{TimeCockpit.Data.EntityObject}
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TimeCockpit.Data.NamedSet.Definition
  commentId: P:TimeCockpit.Data.NamedSet.Definition
  id: Definition
  parent: TimeCockpit.Data.NamedSet
  langs:
  - csharp
  - vb
  name: Definition
  nameWithType: NamedSet.Definition
  fullName: TimeCockpit.Data.NamedSet.Definition
  type: Property
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/NamedSet.cs
    id: Definition
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/NamedSet.cs
    startLine: 47
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data
  summary: "\nGets or sets the definition of the <xref href=\"TimeCockpit.Data.NamedSet\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public NamedSetDefinition Definition { get; set; }
    parameters: []
    return:
      type: TimeCockpit.Data.DataModel.NamedSetDefinition
    content.vb: Public Property Definition As NamedSetDefinition
  overload: TimeCockpit.Data.NamedSet.Definition*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.NamedSet.Name
  commentId: P:TimeCockpit.Data.NamedSet.Name
  id: Name
  parent: TimeCockpit.Data.NamedSet
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: NamedSet.Name
  fullName: TimeCockpit.Data.NamedSet.Name
  type: Property
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/NamedSet.cs
    id: Name
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/NamedSet.cs
    startLine: 56
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data
  summary: "\nGets the name of the <xref href=\"TimeCockpit.Data.NamedSet\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Name As String
  overload: TimeCockpit.Data.NamedSet.Name*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TimeCockpit.Data.NamedSet.Create(TimeCockpit.Data.DataModel.NamedSetDefinition,TimeCockpit.Data.IDataContext,TimeCockpit.Data.Environment)
  commentId: M:TimeCockpit.Data.NamedSet.Create(TimeCockpit.Data.DataModel.NamedSetDefinition,TimeCockpit.Data.IDataContext,TimeCockpit.Data.Environment)
  id: Create(TimeCockpit.Data.DataModel.NamedSetDefinition,TimeCockpit.Data.IDataContext,TimeCockpit.Data.Environment)
  parent: TimeCockpit.Data.NamedSet
  langs:
  - csharp
  - vb
  name: Create(NamedSetDefinition, IDataContext, Environment)
  nameWithType: NamedSet.Create(NamedSetDefinition, IDataContext, Environment)
  fullName: TimeCockpit.Data.NamedSet.Create(TimeCockpit.Data.DataModel.NamedSetDefinition, TimeCockpit.Data.IDataContext, TimeCockpit.Data.Environment)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/NamedSet.cs
    id: Create
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/NamedSet.cs
    startLine: 78
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data
  summary: "\nCreates an instance of a <xref href=\"TimeCockpit.Data.NamedSet\" data-throw-if-not-resolved=\"false\"></xref> basing on the\nspecified definition\n"
  example: []
  syntax:
    content: public static NamedSet Create(NamedSetDefinition definition, IDataContext context, Environment environment)
    parameters:
    - id: definition
      type: TimeCockpit.Data.DataModel.NamedSetDefinition
      description: The definition that determines the <xref href="TimeCockpit.Data.NamedSet" data-throw-if-not-resolved="false"></xref>.
    - id: context
      type: TimeCockpit.Data.IDataContext
      description: The <xref href="TimeCockpit.Data.DataContext" data-throw-if-not-resolved="false"></xref> upon which to fetch the <xref href="TimeCockpit.Data.NamedSet" data-throw-if-not-resolved="false"></xref>.
    - id: environment
      type: TimeCockpit.Data.Environment
      description: The environment.
    return:
      type: TimeCockpit.Data.NamedSet
      description: "\nAn instance of <xref href=\"TimeCockpit.Data.NamedSet\" data-throw-if-not-resolved=\"false\"></xref>\n"
    content.vb: Public Shared Function Create(definition As NamedSetDefinition, context As IDataContext, environment As Environment) As NamedSet
  overload: TimeCockpit.Data.NamedSet.Create*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: TimeCockpit.Data.NamedSet.Create(TimeCockpit.Data.DataModel.NamedSetDefinition,System.Collections.Generic.IEnumerable{TimeCockpit.Data.EntityObject})
  commentId: M:TimeCockpit.Data.NamedSet.Create(TimeCockpit.Data.DataModel.NamedSetDefinition,System.Collections.Generic.IEnumerable{TimeCockpit.Data.EntityObject})
  id: Create(TimeCockpit.Data.DataModel.NamedSetDefinition,System.Collections.Generic.IEnumerable{TimeCockpit.Data.EntityObject})
  parent: TimeCockpit.Data.NamedSet
  langs:
  - csharp
  - vb
  name: Create(NamedSetDefinition, IEnumerable<EntityObject>)
  nameWithType: NamedSet.Create(NamedSetDefinition, IEnumerable<EntityObject>)
  fullName: TimeCockpit.Data.NamedSet.Create(TimeCockpit.Data.DataModel.NamedSetDefinition, System.Collections.Generic.IEnumerable<TimeCockpit.Data.EntityObject>)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/NamedSet.cs
    id: Create
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/NamedSet.cs
    startLine: 101
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data
  summary: "\nCreates an instance of a <xref href=\"TimeCockpit.Data.NamedSet\" data-throw-if-not-resolved=\"false\"></xref> basing on the \nspecified definition\n"
  example: []
  syntax:
    content: public static NamedSet Create(NamedSetDefinition definition, IEnumerable<EntityObject> entityObjects)
    parameters:
    - id: definition
      type: TimeCockpit.Data.DataModel.NamedSetDefinition
      description: The definition that determines the <xref href="TimeCockpit.Data.NamedSet" data-throw-if-not-resolved="false"></xref>.
    - id: entityObjects
      type: System.Collections.Generic.IEnumerable{TimeCockpit.Data.EntityObject}
      description: The entity objects that represent the result of an executed <xref href="TimeCockpit.Data.NamedSet" data-throw-if-not-resolved="false"></xref>.
    return:
      type: TimeCockpit.Data.NamedSet
      description: Returns a new instance of <xref href="TimeCockpit.Data.NamedSet" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Shared Function Create(definition As NamedSetDefinition, entityObjects As IEnumerable(Of EntityObject)) As NamedSet
  overload: TimeCockpit.Data.NamedSet.Create*
  nameWithType.vb: NamedSet.Create(NamedSetDefinition, IEnumerable(Of EntityObject))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TimeCockpit.Data.NamedSet.Create(TimeCockpit.Data.DataModel.NamedSetDefinition, System.Collections.Generic.IEnumerable(Of TimeCockpit.Data.EntityObject))
  name.vb: Create(NamedSetDefinition, IEnumerable(Of EntityObject))
- uid: TimeCockpit.Data.NamedSet.Refresh(TimeCockpit.Data.DataContext,TimeCockpit.Data.Environment)
  commentId: M:TimeCockpit.Data.NamedSet.Refresh(TimeCockpit.Data.DataContext,TimeCockpit.Data.Environment)
  id: Refresh(TimeCockpit.Data.DataContext,TimeCockpit.Data.Environment)
  parent: TimeCockpit.Data.NamedSet
  langs:
  - csharp
  - vb
  name: Refresh(DataContext, Environment)
  nameWithType: NamedSet.Refresh(DataContext, Environment)
  fullName: TimeCockpit.Data.NamedSet.Refresh(TimeCockpit.Data.DataContext, TimeCockpit.Data.Environment)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/NamedSet.cs
    id: Refresh
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/NamedSet.cs
    startLine: 119
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data
  summary: "\nRefreshes the current instance of the <xref href=\"TimeCockpit.Data.NamedSet\" data-throw-if-not-resolved=\"false\"></xref> according its\n<xref href=\"TimeCockpit.Data.DataModel.NamedSetDefinition\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public void Refresh(DataContext context, Environment environment)
    parameters:
    - id: context
      type: TimeCockpit.Data.DataContext
      description: The <xref href="TimeCockpit.Data.DataContext" data-throw-if-not-resolved="false"></xref> upon which to refresh the <xref href="TimeCockpit.Data.NamedSet" data-throw-if-not-resolved="false"></xref>.
    - id: environment
      type: TimeCockpit.Data.Environment
      description: The environment.
    content.vb: Public Sub Refresh(context As DataContext, environment As Environment)
  overload: TimeCockpit.Data.NamedSet.Refresh*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.NamedSet.GetEnumerator
  commentId: M:TimeCockpit.Data.NamedSet.GetEnumerator
  id: GetEnumerator
  parent: TimeCockpit.Data.NamedSet
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: NamedSet.GetEnumerator()
  fullName: TimeCockpit.Data.NamedSet.GetEnumerator()
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/NamedSet.cs
    id: GetEnumerator
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/NamedSet.cs
    startLine: 143
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data
  summary: "\nGets the enumerator.\n"
  example: []
  syntax:
    content: public IEnumerator<EntityObject> GetEnumerator()
    return:
      type: System.Collections.Generic.IEnumerator{TimeCockpit.Data.EntityObject}
      description: "\nAn <xref href=\"System.Collections.IEnumerator%5bEntityObject%5d\" data-throw-if-not-resolved=\"false\"></xref> object that can be used to iterate through the collection. \n"
    content.vb: Public Function GetEnumerator As IEnumerator(Of EntityObject)
  overload: TimeCockpit.Data.NamedSet.GetEnumerator*
  implements:
  - System.Collections.Generic.IEnumerable{TimeCockpit.Data.EntityObject}.GetEnumerator
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.NamedSet.System#Collections#IEnumerable#GetEnumerator
  commentId: M:TimeCockpit.Data.NamedSet.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: TimeCockpit.Data.NamedSet
  langs:
  - csharp
  - vb
  name: IEnumerable.GetEnumerator()
  nameWithType: NamedSet.IEnumerable.GetEnumerator()
  fullName: TimeCockpit.Data.NamedSet.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/NamedSet.cs
    id: System.Collections.IEnumerable.GetEnumerator
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/NamedSet.cs
    startLine: 154
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data
  summary: "\nReturns an enumerator that iterates through a collection.\n"
  example: []
  syntax:
    content: IEnumerator IEnumerable.GetEnumerator()
    return:
      type: System.Collections.IEnumerator
      description: "\nAn <xref href=\"System.Collections.IEnumerator\" data-throw-if-not-resolved=\"false\"></xref> object that can be used to iterate through the collection.\n"
    content.vb: Function System.Collections.IEnumerable.GetEnumerator As IEnumerator Implements IEnumerable.GetEnumerator
  overload: TimeCockpit.Data.NamedSet.System#Collections#IEnumerable#GetEnumerator*
  implements:
  - System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: NamedSet.System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
references:
- uid: TimeCockpit.Data.EntityObject
  commentId: T:TimeCockpit.Data.EntityObject
  parent: TimeCockpit.Data
  isExternal: false
  name: EntityObject
  nameWithType: EntityObject
  fullName: TimeCockpit.Data.EntityObject
- uid: TimeCockpit.Data
  commentId: N:TimeCockpit.Data
  isExternal: false
  name: TimeCockpit.Data
  nameWithType: TimeCockpit.Data
  fullName: TimeCockpit.Data
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.Generic.IEnumerable{TimeCockpit.Data.EntityObject}
  commentId: T:System.Collections.Generic.IEnumerable{TimeCockpit.Data.EntityObject}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<EntityObject>
  nameWithType: IEnumerable<EntityObject>
  fullName: System.Collections.Generic.IEnumerable<TimeCockpit.Data.EntityObject>
  nameWithType.vb: IEnumerable(Of EntityObject)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TimeCockpit.Data.EntityObject)
  name.vb: IEnumerable(Of EntityObject)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TimeCockpit.Data.EntityObject
    name: EntityObject
    nameWithType: EntityObject
    fullName: TimeCockpit.Data.EntityObject
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TimeCockpit.Data.EntityObject
    name: EntityObject
    nameWithType: EntityObject
    fullName: TimeCockpit.Data.EntityObject
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: false
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: TimeCockpit.Data.NamedSet
  commentId: T:TimeCockpit.Data.NamedSet
  parent: TimeCockpit.Data
  isExternal: false
  name: NamedSet
  nameWithType: NamedSet
  fullName: TimeCockpit.Data.NamedSet
- uid: TimeCockpit.Data.NamedSet.Definition*
  commentId: Overload:TimeCockpit.Data.NamedSet.Definition
  isExternal: false
  name: Definition
  nameWithType: NamedSet.Definition
  fullName: TimeCockpit.Data.NamedSet.Definition
- uid: TimeCockpit.Data.DataModel.NamedSetDefinition
  commentId: T:TimeCockpit.Data.DataModel.NamedSetDefinition
  parent: TimeCockpit.Data.DataModel
  isExternal: false
  name: NamedSetDefinition
  nameWithType: NamedSetDefinition
  fullName: TimeCockpit.Data.DataModel.NamedSetDefinition
- uid: TimeCockpit.Data.DataModel
  commentId: N:TimeCockpit.Data.DataModel
  isExternal: false
  name: TimeCockpit.Data.DataModel
  nameWithType: TimeCockpit.Data.DataModel
  fullName: TimeCockpit.Data.DataModel
- uid: TimeCockpit.Data.NamedSet.Name*
  commentId: Overload:TimeCockpit.Data.NamedSet.Name
  isExternal: false
  name: Name
  nameWithType: NamedSet.Name
  fullName: TimeCockpit.Data.NamedSet.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: TimeCockpit.Data.DataContext
  commentId: T:TimeCockpit.Data.DataContext
  parent: TimeCockpit.Data
  isExternal: false
  name: DataContext
  nameWithType: DataContext
  fullName: TimeCockpit.Data.DataContext
- uid: TimeCockpit.Data.NamedSet.Create*
  commentId: Overload:TimeCockpit.Data.NamedSet.Create
  isExternal: false
  name: Create
  nameWithType: NamedSet.Create
  fullName: TimeCockpit.Data.NamedSet.Create
- uid: TimeCockpit.Data.IDataContext
  commentId: T:TimeCockpit.Data.IDataContext
  parent: TimeCockpit.Data
  isExternal: false
  name: IDataContext
  nameWithType: IDataContext
  fullName: TimeCockpit.Data.IDataContext
- uid: TimeCockpit.Data.Environment
  commentId: T:TimeCockpit.Data.Environment
  parent: TimeCockpit.Data
  isExternal: false
  name: Environment
  nameWithType: Environment
  fullName: TimeCockpit.Data.Environment
- uid: TimeCockpit.Data.NamedSet.Refresh*
  commentId: Overload:TimeCockpit.Data.NamedSet.Refresh
  isExternal: false
  name: Refresh
  nameWithType: NamedSet.Refresh
  fullName: TimeCockpit.Data.NamedSet.Refresh
- uid: System.Collections.IEnumerator[EntityObject]
  commentId: T:System.Collections.IEnumerator[EntityObject]
- uid: TimeCockpit.Data.NamedSet.GetEnumerator*
  commentId: Overload:TimeCockpit.Data.NamedSet.GetEnumerator
  isExternal: false
  name: GetEnumerator
  nameWithType: NamedSet.GetEnumerator
  fullName: TimeCockpit.Data.NamedSet.GetEnumerator
- uid: System.Collections.Generic.IEnumerable{TimeCockpit.Data.EntityObject}.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable{TimeCockpit.Data.EntityObject}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{TimeCockpit.Data.EntityObject}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<EntityObject>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<TimeCockpit.Data.EntityObject>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of EntityObject).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of TimeCockpit.Data.EntityObject).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<EntityObject>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<TimeCockpit.Data.EntityObject>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of EntityObject).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of TimeCockpit.Data.EntityObject).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator{TimeCockpit.Data.EntityObject}
  commentId: T:System.Collections.Generic.IEnumerator{TimeCockpit.Data.EntityObject}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  name: IEnumerator<EntityObject>
  nameWithType: IEnumerator<EntityObject>
  fullName: System.Collections.Generic.IEnumerator<TimeCockpit.Data.EntityObject>
  nameWithType.vb: IEnumerator(Of EntityObject)
  fullName.vb: System.Collections.Generic.IEnumerator(Of TimeCockpit.Data.EntityObject)
  name.vb: IEnumerator(Of EntityObject)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TimeCockpit.Data.EntityObject
    name: EntityObject
    nameWithType: EntityObject
    fullName: TimeCockpit.Data.EntityObject
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TimeCockpit.Data.EntityObject
    name: EntityObject
    nameWithType: EntityObject
    fullName: TimeCockpit.Data.EntityObject
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of T).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerator
  commentId: T:System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: TimeCockpit.Data.NamedSet.System#Collections#IEnumerable#GetEnumerator*
  commentId: Overload:TimeCockpit.Data.NamedSet.System#Collections#IEnumerable#GetEnumerator
  isExternal: false
  name: IEnumerable.GetEnumerator
  nameWithType: NamedSet.IEnumerable.GetEnumerator
  fullName: TimeCockpit.Data.NamedSet.System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: NamedSet.System.Collections.IEnumerable.GetEnumerator
  name.vb: System.Collections.IEnumerable.GetEnumerator
- uid: System.Collections.IEnumerable.GetEnumerator
  commentId: M:System.Collections.IEnumerable.GetEnumerator
  parent: System.Collections.IEnumerable
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable.GetEnumerator()
  fullName: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
