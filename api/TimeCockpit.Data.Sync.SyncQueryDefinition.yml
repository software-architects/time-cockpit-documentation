### YamlMime:ManagedReference
items:
- uid: TimeCockpit.Data.Sync.SyncQueryDefinition
  commentId: T:TimeCockpit.Data.Sync.SyncQueryDefinition
  id: SyncQueryDefinition
  parent: TimeCockpit.Data.Sync
  children:
  - TimeCockpit.Data.Sync.SyncQueryDefinition.#ctor
  - TimeCockpit.Data.Sync.SyncQueryDefinition.DefaultQueryForChanges
  - TimeCockpit.Data.Sync.SyncQueryDefinition.DefaultQueryForLocalVersion
  - TimeCockpit.Data.Sync.SyncQueryDefinition.SyncTableDefinitions
  langs:
  - csharp
  - vb
  name: SyncQueryDefinition
  nameWithType: SyncQueryDefinition
  fullName: TimeCockpit.Data.Sync.SyncQueryDefinition
  type: Class
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Sync/SyncQueryDefinition.cs
    id: SyncQueryDefinition
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Sync/SyncQueryDefinition.cs
    startLine: 13
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Sync
  summary: "\nDefines queries that are used during sync process for certain entities\n"
  example: []
  syntax:
    content: public sealed class SyncQueryDefinition
    content.vb: Public NotInheritable Class SyncQueryDefinition
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: TimeCockpit.Data.Sync.SyncQueryDefinition.#ctor
  commentId: M:TimeCockpit.Data.Sync.SyncQueryDefinition.#ctor
  id: '#ctor'
  parent: TimeCockpit.Data.Sync.SyncQueryDefinition
  langs:
  - csharp
  - vb
  name: SyncQueryDefinition()
  nameWithType: SyncQueryDefinition.SyncQueryDefinition()
  fullName: TimeCockpit.Data.Sync.SyncQueryDefinition.SyncQueryDefinition()
  type: Constructor
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Sync/SyncQueryDefinition.cs
    id: .ctor
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Sync/SyncQueryDefinition.cs
    startLine: 18
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Sync
  summary: "\nInitializes a new instance of the SyncQueryDefinition class\n"
  example: []
  syntax:
    content: public SyncQueryDefinition()
    content.vb: Public Sub New
  overload: TimeCockpit.Data.Sync.SyncQueryDefinition.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Sync.SyncQueryDefinition.DefaultQueryForChanges
  commentId: P:TimeCockpit.Data.Sync.SyncQueryDefinition.DefaultQueryForChanges
  id: DefaultQueryForChanges
  parent: TimeCockpit.Data.Sync.SyncQueryDefinition
  langs:
  - csharp
  - vb
  name: DefaultQueryForChanges
  nameWithType: SyncQueryDefinition.DefaultQueryForChanges
  fullName: TimeCockpit.Data.Sync.SyncQueryDefinition.DefaultQueryForChanges
  type: Property
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Sync/SyncQueryDefinition.cs
    id: DefaultQueryForChanges
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Sync/SyncQueryDefinition.cs
    startLine: 27
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Sync
  summary: "\nGets or sets the query that is used to find changes for tables\nthat have no specific definition\n"
  example: []
  syntax:
    content: public string DefaultQueryForChanges { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property DefaultQueryForChanges As String
  overload: TimeCockpit.Data.Sync.SyncQueryDefinition.DefaultQueryForChanges*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Sync.SyncQueryDefinition.DefaultQueryForLocalVersion
  commentId: P:TimeCockpit.Data.Sync.SyncQueryDefinition.DefaultQueryForLocalVersion
  id: DefaultQueryForLocalVersion
  parent: TimeCockpit.Data.Sync.SyncQueryDefinition
  langs:
  - csharp
  - vb
  name: DefaultQueryForLocalVersion
  nameWithType: SyncQueryDefinition.DefaultQueryForLocalVersion
  fullName: TimeCockpit.Data.Sync.SyncQueryDefinition.DefaultQueryForLocalVersion
  type: Property
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Sync/SyncQueryDefinition.cs
    id: DefaultQueryForLocalVersion
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Sync/SyncQueryDefinition.cs
    startLine: 33
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Sync
  summary: "\nGets or sets the query that is used to find local versions for tables\nthat have no specific definition\n"
  example: []
  syntax:
    content: public string DefaultQueryForLocalVersion { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property DefaultQueryForLocalVersion As String
  overload: TimeCockpit.Data.Sync.SyncQueryDefinition.DefaultQueryForLocalVersion*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Sync.SyncQueryDefinition.SyncTableDefinitions
  commentId: P:TimeCockpit.Data.Sync.SyncQueryDefinition.SyncTableDefinitions
  id: SyncTableDefinitions
  parent: TimeCockpit.Data.Sync.SyncQueryDefinition
  langs:
  - csharp
  - vb
  name: SyncTableDefinitions
  nameWithType: SyncQueryDefinition.SyncTableDefinitions
  fullName: TimeCockpit.Data.Sync.SyncQueryDefinition.SyncTableDefinitions
  type: Property
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Sync/SyncQueryDefinition.cs
    id: SyncTableDefinitions
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Sync/SyncQueryDefinition.cs
    startLine: 38
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Sync
  summary: "\nGets or sets the list of sync table definitions\n"
  example: []
  syntax:
    content: public List<SyncTable> SyncTableDefinitions { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{TimeCockpit.Data.Sync.SyncTable}
    content.vb: Public Property SyncTableDefinitions As List(Of SyncTable)
  overload: TimeCockpit.Data.Sync.SyncQueryDefinition.SyncTableDefinitions*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: TimeCockpit.Data.Sync
  commentId: N:TimeCockpit.Data.Sync
  isExternal: false
  name: TimeCockpit.Data.Sync
  nameWithType: TimeCockpit.Data.Sync
  fullName: TimeCockpit.Data.Sync
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: TimeCockpit.Data.Sync.SyncQueryDefinition.#ctor*
  commentId: Overload:TimeCockpit.Data.Sync.SyncQueryDefinition.#ctor
  isExternal: false
  name: SyncQueryDefinition
  nameWithType: SyncQueryDefinition.SyncQueryDefinition
  fullName: TimeCockpit.Data.Sync.SyncQueryDefinition.SyncQueryDefinition
- uid: TimeCockpit.Data.Sync.SyncQueryDefinition.DefaultQueryForChanges*
  commentId: Overload:TimeCockpit.Data.Sync.SyncQueryDefinition.DefaultQueryForChanges
  isExternal: false
  name: DefaultQueryForChanges
  nameWithType: SyncQueryDefinition.DefaultQueryForChanges
  fullName: TimeCockpit.Data.Sync.SyncQueryDefinition.DefaultQueryForChanges
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: TimeCockpit.Data.Sync.SyncQueryDefinition.DefaultQueryForLocalVersion*
  commentId: Overload:TimeCockpit.Data.Sync.SyncQueryDefinition.DefaultQueryForLocalVersion
  isExternal: false
  name: DefaultQueryForLocalVersion
  nameWithType: SyncQueryDefinition.DefaultQueryForLocalVersion
  fullName: TimeCockpit.Data.Sync.SyncQueryDefinition.DefaultQueryForLocalVersion
- uid: TimeCockpit.Data.Sync.SyncQueryDefinition.SyncTableDefinitions*
  commentId: Overload:TimeCockpit.Data.Sync.SyncQueryDefinition.SyncTableDefinitions
  isExternal: false
  name: SyncTableDefinitions
  nameWithType: SyncQueryDefinition.SyncTableDefinitions
  fullName: TimeCockpit.Data.Sync.SyncQueryDefinition.SyncTableDefinitions
- uid: System.Collections.Generic.List{TimeCockpit.Data.Sync.SyncTable}
  commentId: T:System.Collections.Generic.List{TimeCockpit.Data.Sync.SyncTable}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<SyncTable>
  nameWithType: List<SyncTable>
  fullName: System.Collections.Generic.List<TimeCockpit.Data.Sync.SyncTable>
  nameWithType.vb: List(Of SyncTable)
  fullName.vb: System.Collections.Generic.List(Of TimeCockpit.Data.Sync.SyncTable)
  name.vb: List(Of SyncTable)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TimeCockpit.Data.Sync.SyncTable
    name: SyncTable
    nameWithType: SyncTable
    fullName: TimeCockpit.Data.Sync.SyncTable
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TimeCockpit.Data.Sync.SyncTable
    name: SyncTable
    nameWithType: SyncTable
    fullName: TimeCockpit.Data.Sync.SyncTable
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
