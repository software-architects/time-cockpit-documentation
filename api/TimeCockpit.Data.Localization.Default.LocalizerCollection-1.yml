### YamlMime:ManagedReference
items:
- uid: TimeCockpit.Data.Localization.Default.LocalizerCollection`1
  commentId: T:TimeCockpit.Data.Localization.Default.LocalizerCollection`1
  id: LocalizerCollection`1
  parent: TimeCockpit.Data.Localization.Default
  children:
  - TimeCockpit.Data.Localization.Default.LocalizerCollection`1.#ctor
  - TimeCockpit.Data.Localization.Default.LocalizerCollection`1.#ctor(TimeCockpit.Data.Localization.Default.LocalizerCollection{`0})
  - TimeCockpit.Data.Localization.Default.LocalizerCollection`1.Accept(TimeCockpit.Data.Localization.Default.LocalizerVisitor)
  - TimeCockpit.Data.Localization.Default.LocalizerCollection`1.ContainsLocalizer(System.String)
  - TimeCockpit.Data.Localization.Default.LocalizerCollection`1.GetEnumerator
  - TimeCockpit.Data.Localization.Default.LocalizerCollection`1.Item(System.String)
  - TimeCockpit.Data.Localization.Default.LocalizerCollection`1.MergeFrom(TimeCockpit.Data.Localization.Default.LocalizerCollection{`0})
  - TimeCockpit.Data.Localization.Default.LocalizerCollection`1.RemoveLocalizationsFor(System.String)
  - TimeCockpit.Data.Localization.Default.LocalizerCollection`1.System#Collections#IEnumerable#GetEnumerator
  - TimeCockpit.Data.Localization.Default.LocalizerCollection`1.TryGetLocalizer(System.String,`0@)
  langs:
  - csharp
  - vb
  name: LocalizerCollection<T>
  nameWithType: LocalizerCollection<T>
  fullName: TimeCockpit.Data.Localization.Default.LocalizerCollection<T>
  type: Class
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Localization/Default/LocalizerCollection.cs
    id: LocalizerCollection
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Localization/Default/LocalizerCollection.cs
    startLine: 17
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Localization.Default
  summary: "\nGeneric localizer collection, replaces specific ones.\n"
  example: []
  syntax:
    content: 'public class LocalizerCollection<T> : IEnumerable<T>, IEnumerable where T : ModelElementLocalizer'
    typeParameters:
    - id: T
      description: the type of localizer the collection is for.
    content.vb: >-
      Public Class LocalizerCollection(Of T As ModelElementLocalizer)
          Implements IEnumerable(Of T), IEnumerable
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.IEnumerable{{T}}
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - TimeCockpit.Data.Localization.Default.LocalizerCollection`1.TimeCockpit.Data.Localization.Default.DistinctCultureCollectVisitorHelper.GetCultures``1
  nameWithType.vb: LocalizerCollection(Of T)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: TimeCockpit.Data.Localization.Default.LocalizerCollection(Of T)
  name.vb: LocalizerCollection(Of T)
- uid: TimeCockpit.Data.Localization.Default.LocalizerCollection`1.#ctor
  commentId: M:TimeCockpit.Data.Localization.Default.LocalizerCollection`1.#ctor
  id: '#ctor'
  parent: TimeCockpit.Data.Localization.Default.LocalizerCollection`1
  langs:
  - csharp
  - vb
  name: LocalizerCollection()
  nameWithType: LocalizerCollection<T>.LocalizerCollection()
  fullName: TimeCockpit.Data.Localization.Default.LocalizerCollection<T>.LocalizerCollection()
  type: Constructor
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Localization/Default/LocalizerCollection.cs
    id: .ctor
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Localization/Default/LocalizerCollection.cs
    startLine: 27
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Localization.Default
  summary: "\nInitializes a new instance of the <xref href=\"TimeCockpit.Data.Localization.Default.LocalizerCollection%601\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public LocalizerCollection()
    content.vb: Public Sub New
  overload: TimeCockpit.Data.Localization.Default.LocalizerCollection`1.#ctor*
  nameWithType.vb: LocalizerCollection(Of T).LocalizerCollection()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TimeCockpit.Data.Localization.Default.LocalizerCollection(Of T).LocalizerCollection()
- uid: TimeCockpit.Data.Localization.Default.LocalizerCollection`1.#ctor(TimeCockpit.Data.Localization.Default.LocalizerCollection{`0})
  commentId: M:TimeCockpit.Data.Localization.Default.LocalizerCollection`1.#ctor(TimeCockpit.Data.Localization.Default.LocalizerCollection{`0})
  id: '#ctor(TimeCockpit.Data.Localization.Default.LocalizerCollection{`0})'
  parent: TimeCockpit.Data.Localization.Default.LocalizerCollection`1
  langs:
  - csharp
  - vb
  name: LocalizerCollection(LocalizerCollection<T>)
  nameWithType: LocalizerCollection<T>.LocalizerCollection(LocalizerCollection<T>)
  fullName: TimeCockpit.Data.Localization.Default.LocalizerCollection<T>.LocalizerCollection(TimeCockpit.Data.Localization.Default.LocalizerCollection<T>)
  type: Constructor
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Localization/Default/LocalizerCollection.cs
    id: .ctor
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Localization/Default/LocalizerCollection.cs
    startLine: 35
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Localization.Default
  summary: "\nInitializes a new instance of the <xref href=\"TimeCockpit.Data.Localization.Default.LocalizerCollection%601\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public LocalizerCollection(LocalizerCollection<T> source)
    parameters:
    - id: source
      type: TimeCockpit.Data.Localization.Default.LocalizerCollection`1
      description: the source to copy from.
    content.vb: Public Sub New(source As LocalizerCollection(Of T))
  overload: TimeCockpit.Data.Localization.Default.LocalizerCollection`1.#ctor*
  nameWithType.vb: LocalizerCollection(Of T).LocalizerCollection(LocalizerCollection(Of T))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TimeCockpit.Data.Localization.Default.LocalizerCollection(Of T).LocalizerCollection(TimeCockpit.Data.Localization.Default.LocalizerCollection(Of T))
  name.vb: LocalizerCollection(LocalizerCollection(Of T))
- uid: TimeCockpit.Data.Localization.Default.LocalizerCollection`1.Item(System.String)
  commentId: P:TimeCockpit.Data.Localization.Default.LocalizerCollection`1.Item(System.String)
  id: Item(System.String)
  parent: TimeCockpit.Data.Localization.Default.LocalizerCollection`1
  langs:
  - csharp
  - vb
  name: Item[String]
  nameWithType: LocalizerCollection<T>.Item[String]
  fullName: TimeCockpit.Data.Localization.Default.LocalizerCollection<T>.Item[System.String]
  type: Property
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Localization/Default/LocalizerCollection.cs
    id: this[]
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Localization/Default/LocalizerCollection.cs
    startLine: 48
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Localization.Default
  summary: "\nThe indexer to the localizer.\n"
  example: []
  syntax:
    content: public T this[string name] { get; }
    parameters:
    - id: name
      type: System.String
      description: the name of the property to look up.
    return:
      type: '{T}'
      description: Returns the PropertyLocalizer of the given name.
    content.vb: Public ReadOnly Property Item(name As String) As T
  overload: TimeCockpit.Data.Localization.Default.LocalizerCollection`1.Item*
  nameWithType.vb: LocalizerCollection(Of T).Item(String)
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: TimeCockpit.Data.Localization.Default.LocalizerCollection(Of T).Item(System.String)
  name.vb: Item(String)
- uid: TimeCockpit.Data.Localization.Default.LocalizerCollection`1.TryGetLocalizer(System.String,`0@)
  commentId: M:TimeCockpit.Data.Localization.Default.LocalizerCollection`1.TryGetLocalizer(System.String,`0@)
  id: TryGetLocalizer(System.String,`0@)
  parent: TimeCockpit.Data.Localization.Default.LocalizerCollection`1
  langs:
  - csharp
  - vb
  name: TryGetLocalizer(String, out T)
  nameWithType: LocalizerCollection<T>.TryGetLocalizer(String, out T)
  fullName: TimeCockpit.Data.Localization.Default.LocalizerCollection<T>.TryGetLocalizer(System.String, out T)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Localization/Default/LocalizerCollection.cs
    id: TryGetLocalizer
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Localization/Default/LocalizerCollection.cs
    startLine: 74
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Localization.Default
  summary: "\nForwards the call to the internal collection.\n"
  example: []
  syntax:
    content: public bool TryGetLocalizer(string name, out T localizer)
    parameters:
    - id: name
      type: System.String
      description: the name of the localizer to retrieve.
    - id: localizer
      type: '{T}'
      description: the result localizer.
    return:
      type: System.Boolean
      description: True if the localizer could be fetched, false otherwise.
    content.vb: Public Function TryGetLocalizer(name As String, ByRef localizer As T) As Boolean
  overload: TimeCockpit.Data.Localization.Default.LocalizerCollection`1.TryGetLocalizer*
  nameWithType.vb: LocalizerCollection(Of T).TryGetLocalizer(String, ByRef T)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TimeCockpit.Data.Localization.Default.LocalizerCollection(Of T).TryGetLocalizer(System.String, ByRef T)
  name.vb: TryGetLocalizer(String, ByRef T)
- uid: TimeCockpit.Data.Localization.Default.LocalizerCollection`1.RemoveLocalizationsFor(System.String)
  commentId: M:TimeCockpit.Data.Localization.Default.LocalizerCollection`1.RemoveLocalizationsFor(System.String)
  id: RemoveLocalizationsFor(System.String)
  parent: TimeCockpit.Data.Localization.Default.LocalizerCollection`1
  langs:
  - csharp
  - vb
  name: RemoveLocalizationsFor(String)
  nameWithType: LocalizerCollection<T>.RemoveLocalizationsFor(String)
  fullName: TimeCockpit.Data.Localization.Default.LocalizerCollection<T>.RemoveLocalizationsFor(System.String)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Localization/Default/LocalizerCollection.cs
    id: RemoveLocalizationsFor
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Localization/Default/LocalizerCollection.cs
    startLine: 85
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Localization.Default
  summary: "\nRemoves the localizations for the element with the given name.\n"
  example: []
  syntax:
    content: public bool RemoveLocalizationsFor(string name)
    parameters:
    - id: name
      type: System.String
      description: The name of the element to remove the localizations for.
    return:
      type: System.Boolean
      description: Returns true if the element was contained and removed, false if it was not contained.
    content.vb: Public Function RemoveLocalizationsFor(name As String) As Boolean
  overload: TimeCockpit.Data.Localization.Default.LocalizerCollection`1.RemoveLocalizationsFor*
  nameWithType.vb: LocalizerCollection(Of T).RemoveLocalizationsFor(String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TimeCockpit.Data.Localization.Default.LocalizerCollection(Of T).RemoveLocalizationsFor(System.String)
- uid: TimeCockpit.Data.Localization.Default.LocalizerCollection`1.ContainsLocalizer(System.String)
  commentId: M:TimeCockpit.Data.Localization.Default.LocalizerCollection`1.ContainsLocalizer(System.String)
  id: ContainsLocalizer(System.String)
  parent: TimeCockpit.Data.Localization.Default.LocalizerCollection`1
  langs:
  - csharp
  - vb
  name: ContainsLocalizer(String)
  nameWithType: LocalizerCollection<T>.ContainsLocalizer(String)
  fullName: TimeCockpit.Data.Localization.Default.LocalizerCollection<T>.ContainsLocalizer(System.String)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Localization/Default/LocalizerCollection.cs
    id: ContainsLocalizer
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Localization/Default/LocalizerCollection.cs
    startLine: 102
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Localization.Default
  summary: "\nReturns true if the collection contains an element with the given name.\n"
  example: []
  syntax:
    content: public bool ContainsLocalizer(string name)
    parameters:
    - id: name
      type: System.String
      description: The name of the element to check.
    return:
      type: System.Boolean
      description: Returns true if an element with the given name exists, false otherwise.
    content.vb: Public Function ContainsLocalizer(name As String) As Boolean
  overload: TimeCockpit.Data.Localization.Default.LocalizerCollection`1.ContainsLocalizer*
  nameWithType.vb: LocalizerCollection(Of T).ContainsLocalizer(String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TimeCockpit.Data.Localization.Default.LocalizerCollection(Of T).ContainsLocalizer(System.String)
- uid: TimeCockpit.Data.Localization.Default.LocalizerCollection`1.MergeFrom(TimeCockpit.Data.Localization.Default.LocalizerCollection{`0})
  commentId: M:TimeCockpit.Data.Localization.Default.LocalizerCollection`1.MergeFrom(TimeCockpit.Data.Localization.Default.LocalizerCollection{`0})
  id: MergeFrom(TimeCockpit.Data.Localization.Default.LocalizerCollection{`0})
  parent: TimeCockpit.Data.Localization.Default.LocalizerCollection`1
  langs:
  - csharp
  - vb
  name: MergeFrom(LocalizerCollection<T>)
  nameWithType: LocalizerCollection<T>.MergeFrom(LocalizerCollection<T>)
  fullName: TimeCockpit.Data.Localization.Default.LocalizerCollection<T>.MergeFrom(TimeCockpit.Data.Localization.Default.LocalizerCollection<T>)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Localization/Default/LocalizerCollection.cs
    id: MergeFrom
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Localization/Default/LocalizerCollection.cs
    startLine: 111
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Localization.Default
  summary: "\nMerges changes from another localizer collection.\n"
  example: []
  syntax:
    content: public void MergeFrom(LocalizerCollection<T> source)
    parameters:
    - id: source
      type: TimeCockpit.Data.Localization.Default.LocalizerCollection`1
      description: the source to merge from.
    content.vb: Public Sub MergeFrom(source As LocalizerCollection(Of T))
  overload: TimeCockpit.Data.Localization.Default.LocalizerCollection`1.MergeFrom*
  nameWithType.vb: LocalizerCollection(Of T).MergeFrom(LocalizerCollection(Of T))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TimeCockpit.Data.Localization.Default.LocalizerCollection(Of T).MergeFrom(TimeCockpit.Data.Localization.Default.LocalizerCollection(Of T))
  name.vb: MergeFrom(LocalizerCollection(Of T))
- uid: TimeCockpit.Data.Localization.Default.LocalizerCollection`1.Accept(TimeCockpit.Data.Localization.Default.LocalizerVisitor)
  commentId: M:TimeCockpit.Data.Localization.Default.LocalizerCollection`1.Accept(TimeCockpit.Data.Localization.Default.LocalizerVisitor)
  id: Accept(TimeCockpit.Data.Localization.Default.LocalizerVisitor)
  parent: TimeCockpit.Data.Localization.Default.LocalizerCollection`1
  langs:
  - csharp
  - vb
  name: Accept(LocalizerVisitor)
  nameWithType: LocalizerCollection<T>.Accept(LocalizerVisitor)
  fullName: TimeCockpit.Data.Localization.Default.LocalizerCollection<T>.Accept(TimeCockpit.Data.Localization.Default.LocalizerVisitor)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Localization/Default/LocalizerCollection.cs
    id: Accept
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Localization/Default/LocalizerCollection.cs
    startLine: 133
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Localization.Default
  summary: "\nAccepts a visitor.\n"
  example: []
  syntax:
    content: public void Accept(LocalizerVisitor visitor)
    parameters:
    - id: visitor
      type: TimeCockpit.Data.Localization.Default.LocalizerVisitor
      description: the visitor to accept.
    content.vb: Public Sub Accept(visitor As LocalizerVisitor)
  overload: TimeCockpit.Data.Localization.Default.LocalizerCollection`1.Accept*
  nameWithType.vb: LocalizerCollection(Of T).Accept(LocalizerVisitor)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TimeCockpit.Data.Localization.Default.LocalizerCollection(Of T).Accept(TimeCockpit.Data.Localization.Default.LocalizerVisitor)
- uid: TimeCockpit.Data.Localization.Default.LocalizerCollection`1.GetEnumerator
  commentId: M:TimeCockpit.Data.Localization.Default.LocalizerCollection`1.GetEnumerator
  id: GetEnumerator
  parent: TimeCockpit.Data.Localization.Default.LocalizerCollection`1
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: LocalizerCollection<T>.GetEnumerator()
  fullName: TimeCockpit.Data.Localization.Default.LocalizerCollection<T>.GetEnumerator()
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Localization/Default/LocalizerCollection.cs
    id: GetEnumerator
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Localization/Default/LocalizerCollection.cs
    startLine: 145
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Localization.Default
  summary: "\nGets the specific enumerator over the properties.\n"
  example: []
  syntax:
    content: public IEnumerator<T> GetEnumerator()
    return:
      type: System.Collections.Generic.IEnumerator{{T}}
      description: Returns the enumerator.
    content.vb: Public Function GetEnumerator As IEnumerator(Of T)
  overload: TimeCockpit.Data.Localization.Default.LocalizerCollection`1.GetEnumerator*
  implements:
  - System.Collections.Generic.IEnumerable{{T}}.GetEnumerator
  nameWithType.vb: LocalizerCollection(Of T).GetEnumerator()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TimeCockpit.Data.Localization.Default.LocalizerCollection(Of T).GetEnumerator()
- uid: TimeCockpit.Data.Localization.Default.LocalizerCollection`1.System#Collections#IEnumerable#GetEnumerator
  commentId: M:TimeCockpit.Data.Localization.Default.LocalizerCollection`1.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: TimeCockpit.Data.Localization.Default.LocalizerCollection`1
  langs:
  - csharp
  - vb
  name: IEnumerable.GetEnumerator()
  nameWithType: LocalizerCollection<T>.IEnumerable.GetEnumerator()
  fullName: TimeCockpit.Data.Localization.Default.LocalizerCollection<T>.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Localization/Default/LocalizerCollection.cs
    id: System.Collections.IEnumerable.GetEnumerator
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Localization/Default/LocalizerCollection.cs
    startLine: 154
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Localization.Default
  summary: "\nGets the generic enumerator over the properties.\n"
  example: []
  syntax:
    content: IEnumerator IEnumerable.GetEnumerator()
    return:
      type: System.Collections.IEnumerator
      description: Returns the enumerator.
    content.vb: Function System.Collections.IEnumerable.GetEnumerator As IEnumerator Implements IEnumerable.GetEnumerator
  overload: TimeCockpit.Data.Localization.Default.LocalizerCollection`1.System#Collections#IEnumerable#GetEnumerator*
  implements:
  - System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: LocalizerCollection(Of T).System.Collections.IEnumerable.GetEnumerator()
  fullName.vb: TimeCockpit.Data.Localization.Default.LocalizerCollection(Of T).System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
references:
- uid: TimeCockpit.Data.Localization.Default
  commentId: N:TimeCockpit.Data.Localization.Default
  isExternal: false
  name: TimeCockpit.Data.Localization.Default
  nameWithType: TimeCockpit.Data.Localization.Default
  fullName: TimeCockpit.Data.Localization.Default
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.Generic.IEnumerable{{T}}
  commentId: T:System.Collections.Generic.IEnumerable{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.Localization.Default.LocalizerCollection`1.TimeCockpit.Data.Localization.Default.DistinctCultureCollectVisitorHelper.GetCultures``1
  commentId: M:TimeCockpit.Data.Localization.Default.DistinctCultureCollectVisitorHelper.GetCultures``1(TimeCockpit.Data.Localization.Default.LocalizerCollection{``0})
  parent: TimeCockpit.Data.Localization.Default.DistinctCultureCollectVisitorHelper
  definition: TimeCockpit.Data.Localization.Default.DistinctCultureCollectVisitorHelper.GetCultures``1(TimeCockpit.Data.Localization.Default.LocalizerCollection{``0})
  name: GetCultures<T>()
  nameWithType: DistinctCultureCollectVisitorHelper.GetCultures<T>()
  fullName: TimeCockpit.Data.Localization.Default.DistinctCultureCollectVisitorHelper.GetCultures<T>()
  nameWithType.vb: DistinctCultureCollectVisitorHelper.GetCultures(Of T)()
  fullName.vb: TimeCockpit.Data.Localization.Default.DistinctCultureCollectVisitorHelper.GetCultures(Of T)()
  name.vb: GetCultures(Of T)()
  spec.csharp:
  - uid: TimeCockpit.Data.Localization.Default.DistinctCultureCollectVisitorHelper.GetCultures``1
    name: GetCultures<T>
    nameWithType: DistinctCultureCollectVisitorHelper.GetCultures<T>
    fullName: TimeCockpit.Data.Localization.Default.DistinctCultureCollectVisitorHelper.GetCultures<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TimeCockpit.Data.Localization.Default.DistinctCultureCollectVisitorHelper.GetCultures``1
    name: GetCultures(Of T)
    nameWithType: DistinctCultureCollectVisitorHelper.GetCultures(Of T)
    fullName: TimeCockpit.Data.Localization.Default.DistinctCultureCollectVisitorHelper.GetCultures(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: false
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: TimeCockpit.Data.Localization.Default.DistinctCultureCollectVisitorHelper.GetCultures``1(TimeCockpit.Data.Localization.Default.LocalizerCollection{``0})
  commentId: M:TimeCockpit.Data.Localization.Default.DistinctCultureCollectVisitorHelper.GetCultures``1(TimeCockpit.Data.Localization.Default.LocalizerCollection{``0})
  isExternal: false
  name: GetCultures<T>(LocalizerCollection<T>)
  nameWithType: DistinctCultureCollectVisitorHelper.GetCultures<T>(LocalizerCollection<T>)
  fullName: TimeCockpit.Data.Localization.Default.DistinctCultureCollectVisitorHelper.GetCultures<T>(TimeCockpit.Data.Localization.Default.LocalizerCollection<T>)
  nameWithType.vb: DistinctCultureCollectVisitorHelper.GetCultures(Of T)(LocalizerCollection(Of T))
  fullName.vb: TimeCockpit.Data.Localization.Default.DistinctCultureCollectVisitorHelper.GetCultures(Of T)(TimeCockpit.Data.Localization.Default.LocalizerCollection(Of T))
  name.vb: GetCultures(Of T)(LocalizerCollection(Of T))
  spec.csharp:
  - uid: TimeCockpit.Data.Localization.Default.DistinctCultureCollectVisitorHelper.GetCultures``1(TimeCockpit.Data.Localization.Default.LocalizerCollection{``0})
    name: GetCultures<T>
    nameWithType: DistinctCultureCollectVisitorHelper.GetCultures<T>
    fullName: TimeCockpit.Data.Localization.Default.DistinctCultureCollectVisitorHelper.GetCultures<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: TimeCockpit.Data.Localization.Default.LocalizerCollection`1
    name: LocalizerCollection
    nameWithType: LocalizerCollection
    fullName: TimeCockpit.Data.Localization.Default.LocalizerCollection
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TimeCockpit.Data.Localization.Default.DistinctCultureCollectVisitorHelper.GetCultures``1(TimeCockpit.Data.Localization.Default.LocalizerCollection{``0})
    name: GetCultures(Of T)
    nameWithType: DistinctCultureCollectVisitorHelper.GetCultures(Of T)
    fullName: TimeCockpit.Data.Localization.Default.DistinctCultureCollectVisitorHelper.GetCultures(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: TimeCockpit.Data.Localization.Default.LocalizerCollection`1
    name: LocalizerCollection
    nameWithType: LocalizerCollection
    fullName: TimeCockpit.Data.Localization.Default.LocalizerCollection
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.Localization.Default.DistinctCultureCollectVisitorHelper
  commentId: T:TimeCockpit.Data.Localization.Default.DistinctCultureCollectVisitorHelper
  parent: TimeCockpit.Data.Localization.Default
  isExternal: false
  name: DistinctCultureCollectVisitorHelper
  nameWithType: DistinctCultureCollectVisitorHelper
  fullName: TimeCockpit.Data.Localization.Default.DistinctCultureCollectVisitorHelper
- uid: TimeCockpit.Data.Localization.Default.LocalizerCollection`1
  commentId: T:TimeCockpit.Data.Localization.Default.LocalizerCollection`1
  parent: TimeCockpit.Data.Localization.Default
  isExternal: false
  name: LocalizerCollection<T>
  nameWithType: LocalizerCollection<T>
  fullName: TimeCockpit.Data.Localization.Default.LocalizerCollection<T>
  nameWithType.vb: LocalizerCollection(Of T)
  fullName.vb: TimeCockpit.Data.Localization.Default.LocalizerCollection(Of T)
  name.vb: LocalizerCollection(Of T)
  spec.csharp:
  - uid: TimeCockpit.Data.Localization.Default.LocalizerCollection`1
    name: LocalizerCollection
    nameWithType: LocalizerCollection
    fullName: TimeCockpit.Data.Localization.Default.LocalizerCollection
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: TimeCockpit.Data.Localization.Default.LocalizerCollection`1
    name: LocalizerCollection
    nameWithType: LocalizerCollection
    fullName: TimeCockpit.Data.Localization.Default.LocalizerCollection
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.Localization.Default.LocalizerCollection`1.#ctor*
  commentId: Overload:TimeCockpit.Data.Localization.Default.LocalizerCollection`1.#ctor
  isExternal: false
  name: LocalizerCollection
  nameWithType: LocalizerCollection<T>.LocalizerCollection
  fullName: TimeCockpit.Data.Localization.Default.LocalizerCollection<T>.LocalizerCollection
  nameWithType.vb: LocalizerCollection(Of T).LocalizerCollection
  fullName.vb: TimeCockpit.Data.Localization.Default.LocalizerCollection(Of T).LocalizerCollection
- uid: TimeCockpit.Data.Localization.Default.LocalizerCollection`1.Item*
  commentId: Overload:TimeCockpit.Data.Localization.Default.LocalizerCollection`1.Item
  isExternal: false
  name: Item
  nameWithType: LocalizerCollection<T>.Item
  fullName: TimeCockpit.Data.Localization.Default.LocalizerCollection<T>.Item
  nameWithType.vb: LocalizerCollection(Of T).Item
  fullName.vb: TimeCockpit.Data.Localization.Default.LocalizerCollection(Of T).Item
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  isExternal: false
  name: T
  nameWithType: T
  fullName: T
- uid: TimeCockpit.Data.Localization.Default.LocalizerCollection`1.TryGetLocalizer*
  commentId: Overload:TimeCockpit.Data.Localization.Default.LocalizerCollection`1.TryGetLocalizer
  isExternal: false
  name: TryGetLocalizer
  nameWithType: LocalizerCollection<T>.TryGetLocalizer
  fullName: TimeCockpit.Data.Localization.Default.LocalizerCollection<T>.TryGetLocalizer
  nameWithType.vb: LocalizerCollection(Of T).TryGetLocalizer
  fullName.vb: TimeCockpit.Data.Localization.Default.LocalizerCollection(Of T).TryGetLocalizer
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: TimeCockpit.Data.Localization.Default.LocalizerCollection`1.RemoveLocalizationsFor*
  commentId: Overload:TimeCockpit.Data.Localization.Default.LocalizerCollection`1.RemoveLocalizationsFor
  isExternal: false
  name: RemoveLocalizationsFor
  nameWithType: LocalizerCollection<T>.RemoveLocalizationsFor
  fullName: TimeCockpit.Data.Localization.Default.LocalizerCollection<T>.RemoveLocalizationsFor
  nameWithType.vb: LocalizerCollection(Of T).RemoveLocalizationsFor
  fullName.vb: TimeCockpit.Data.Localization.Default.LocalizerCollection(Of T).RemoveLocalizationsFor
- uid: TimeCockpit.Data.Localization.Default.LocalizerCollection`1.ContainsLocalizer*
  commentId: Overload:TimeCockpit.Data.Localization.Default.LocalizerCollection`1.ContainsLocalizer
  isExternal: false
  name: ContainsLocalizer
  nameWithType: LocalizerCollection<T>.ContainsLocalizer
  fullName: TimeCockpit.Data.Localization.Default.LocalizerCollection<T>.ContainsLocalizer
  nameWithType.vb: LocalizerCollection(Of T).ContainsLocalizer
  fullName.vb: TimeCockpit.Data.Localization.Default.LocalizerCollection(Of T).ContainsLocalizer
- uid: TimeCockpit.Data.Localization.Default.LocalizerCollection`1.MergeFrom*
  commentId: Overload:TimeCockpit.Data.Localization.Default.LocalizerCollection`1.MergeFrom
  isExternal: false
  name: MergeFrom
  nameWithType: LocalizerCollection<T>.MergeFrom
  fullName: TimeCockpit.Data.Localization.Default.LocalizerCollection<T>.MergeFrom
  nameWithType.vb: LocalizerCollection(Of T).MergeFrom
  fullName.vb: TimeCockpit.Data.Localization.Default.LocalizerCollection(Of T).MergeFrom
- uid: TimeCockpit.Data.Localization.Default.LocalizerCollection`1.Accept*
  commentId: Overload:TimeCockpit.Data.Localization.Default.LocalizerCollection`1.Accept
  isExternal: false
  name: Accept
  nameWithType: LocalizerCollection<T>.Accept
  fullName: TimeCockpit.Data.Localization.Default.LocalizerCollection<T>.Accept
  nameWithType.vb: LocalizerCollection(Of T).Accept
  fullName.vb: TimeCockpit.Data.Localization.Default.LocalizerCollection(Of T).Accept
- uid: TimeCockpit.Data.Localization.Default.LocalizerVisitor
  commentId: T:TimeCockpit.Data.Localization.Default.LocalizerVisitor
  parent: TimeCockpit.Data.Localization.Default
  isExternal: false
  name: LocalizerVisitor
  nameWithType: LocalizerVisitor
  fullName: TimeCockpit.Data.Localization.Default.LocalizerVisitor
- uid: TimeCockpit.Data.Localization.Default.LocalizerCollection`1.GetEnumerator*
  commentId: Overload:TimeCockpit.Data.Localization.Default.LocalizerCollection`1.GetEnumerator
  isExternal: false
  name: GetEnumerator
  nameWithType: LocalizerCollection<T>.GetEnumerator
  fullName: TimeCockpit.Data.Localization.Default.LocalizerCollection<T>.GetEnumerator
  nameWithType.vb: LocalizerCollection(Of T).GetEnumerator
  fullName.vb: TimeCockpit.Data.Localization.Default.LocalizerCollection(Of T).GetEnumerator
- uid: System.Collections.Generic.IEnumerable{{T}}.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable{`0}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{{T}}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of T).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator{{T}}
  commentId: T:System.Collections.Generic.IEnumerator{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of T).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.Localization.Default.LocalizerCollection`1.System#Collections#IEnumerable#GetEnumerator*
  commentId: Overload:TimeCockpit.Data.Localization.Default.LocalizerCollection`1.System#Collections#IEnumerable#GetEnumerator
  isExternal: false
  name: IEnumerable.GetEnumerator
  nameWithType: LocalizerCollection<T>.IEnumerable.GetEnumerator
  fullName: TimeCockpit.Data.Localization.Default.LocalizerCollection<T>.System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: LocalizerCollection(Of T).System.Collections.IEnumerable.GetEnumerator
  fullName.vb: TimeCockpit.Data.Localization.Default.LocalizerCollection(Of T).System.Collections.IEnumerable.GetEnumerator
  name.vb: System.Collections.IEnumerable.GetEnumerator
- uid: System.Collections.IEnumerable.GetEnumerator
  commentId: M:System.Collections.IEnumerable.GetEnumerator
  parent: System.Collections.IEnumerable
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable.GetEnumerator()
  fullName: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerator
  commentId: T:System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
