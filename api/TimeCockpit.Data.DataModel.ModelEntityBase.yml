### YamlMime:ManagedReference
items:
- uid: TimeCockpit.Data.DataModel.ModelEntityBase
  commentId: T:TimeCockpit.Data.DataModel.ModelEntityBase
  id: ModelEntityBase
  parent: TimeCockpit.Data.DataModel
  children:
  - TimeCockpit.Data.DataModel.ModelEntityBase.#ctor
  - TimeCockpit.Data.DataModel.ModelEntityBase.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Object,System.Object}})
  - TimeCockpit.Data.DataModel.ModelEntityBase.#ctor(TimeCockpit.Data.DataModel.ModelEntityBase)
  - TimeCockpit.Data.DataModel.ModelEntityBase.Accept(TimeCockpit.Data.DataModel.ModelElementVisitor)
  - TimeCockpit.Data.DataModel.ModelEntityBase.AddImplementedInterface(System.String)
  - TimeCockpit.Data.DataModel.ModelEntityBase.AllRelations
  - TimeCockpit.Data.DataModel.ModelEntityBase.Attach(TimeCockpit.Data.DataModel.ModelElement)
  - TimeCockpit.Data.DataModel.ModelEntityBase.Attach(TimeCockpit.Data.DataModel.ModelElement,System.Boolean)
  - TimeCockpit.Data.DataModel.ModelEntityBase.AuditMode
  - TimeCockpit.Data.DataModel.ModelEntityBase.CreateAuditTrailMessage
  - TimeCockpit.Data.DataModel.ModelEntityBase.CreateAuditTrailMessage(System.String)
  - TimeCockpit.Data.DataModel.ModelEntityBase.CreateEntityObject``1
  - TimeCockpit.Data.DataModel.ModelEntityBase.CreateEntityObject``1(System.Boolean)
  - TimeCockpit.Data.DataModel.ModelEntityBase.CreateEntityObject``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Object,System.Object}})
  - TimeCockpit.Data.DataModel.ModelEntityBase.CreateEntityObject``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Object,System.Object}},System.Boolean)
  - TimeCockpit.Data.DataModel.ModelEntityBase.CreateEntityObject``1(System.Guid,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Object,System.Object}})
  - TimeCockpit.Data.DataModel.ModelEntityBase.CreateEntityObject``1(System.Guid,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Object,System.Object}},System.Boolean,System.Boolean,System.Boolean,TimeCockpit.Data.Environment)
  - TimeCockpit.Data.DataModel.ModelEntityBase.CreateEntityObject``1(TimeCockpit.Data.Environment)
  - TimeCockpit.Data.DataModel.ModelEntityBase.CyclicRelations
  - TimeCockpit.Data.DataModel.ModelEntityBase.DefaultDisplayPropertyName
  - TimeCockpit.Data.DataModel.ModelEntityBase.DefaultFormName
  - TimeCockpit.Data.DataModel.ModelEntityBase.DefaultListName
  - TimeCockpit.Data.DataModel.ModelEntityBase.DefaultRelationListName
  - TimeCockpit.Data.DataModel.ModelEntityBase.DependentModelEntities
  - TimeCockpit.Data.DataModel.ModelEntityBase.DependentRelationPaths
  - TimeCockpit.Data.DataModel.ModelEntityBase.Evaluate``1(System.String)
  - TimeCockpit.Data.DataModel.ModelEntityBase.Evaluate``1(System.String,TimeCockpit.Data.Environment,System.Collections.Generic.IEnumerable{TimeCockpit.Data.QueryLanguage.QueryParameter},TimeCockpit.Data.EntityObject)
  - TimeCockpit.Data.DataModel.ModelEntityBase.GetAutoIncludedRelations
  - TimeCockpit.Data.DataModel.ModelEntityBase.GetMember(System.String)
  - TimeCockpit.Data.DataModel.ModelEntityBase.ImplementedInterfaces
  - TimeCockpit.Data.DataModel.ModelEntityBase.IsDataSynced
  - TimeCockpit.Data.DataModel.ModelEntityBase.IsGenericRelationEntity
  - TimeCockpit.Data.DataModel.ModelEntityBase.IsModelSynced
  - TimeCockpit.Data.DataModel.ModelEntityBase.LogicalRelations
  - TimeCockpit.Data.DataModel.ModelEntityBase.NewInstance
  - TimeCockpit.Data.DataModel.ModelEntityBase.OnDeserializing(System.Runtime.Serialization.StreamingContext)
  - TimeCockpit.Data.DataModel.ModelEntityBase.Permissions
  - TimeCockpit.Data.DataModel.ModelEntityBase.PersistBehavior
  - TimeCockpit.Data.DataModel.ModelEntityBase.PersistedProperties
  - TimeCockpit.Data.DataModel.ModelEntityBase.PostSaveTriggers
  - TimeCockpit.Data.DataModel.ModelEntityBase.PreSaveTriggers
  - TimeCockpit.Data.DataModel.ModelEntityBase.Properties
  - TimeCockpit.Data.DataModel.ModelEntityBase.ReadOnlyExpression
  - TimeCockpit.Data.DataModel.ModelEntityBase.Relations
  - TimeCockpit.Data.DataModel.ModelEntityBase.RemoveImplementedInterface(System.String)
  - TimeCockpit.Data.DataModel.ModelEntityBase.SyncBehavior
  - TimeCockpit.Data.DataModel.ModelEntityBase.ToString
  - TimeCockpit.Data.DataModel.ModelEntityBase.Triggers
  - TimeCockpit.Data.DataModel.ModelEntityBase.Validate(System.Collections.Generic.IList{TimeCockpit.Data.DataModel.PropertyValidationMessage}@,System.Boolean)
  - TimeCockpit.Data.DataModel.ModelEntityBase.ValidationRules
  langs:
  - csharp
  - vb
  name: ModelEntityBase
  nameWithType: ModelEntityBase
  fullName: TimeCockpit.Data.DataModel.ModelEntityBase
  type: Class
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel
  summary: "\nActs as the base class for entities in Time Cockpit&apos;s data model\n"
  remarks: "\nEntities in Time Cockpit&apos;s data model can be seen similar to tables in a relation database management\nsystem. In fact persisted entities are stored in tables in Time Cockpit&apos;s database. However, not every\nentity needs to have a representation as a table. Applications can create entities during runtime; they can\nmark these entites as non-persistent (see <xref href=\"TimeCockpit.Data.DataModel.ModelElement.PersistBehavior\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: 'public abstract class ModelEntityBase : ModelElement, IDynamicMetaObjectProvider, INotifyPropertyChanged, IDataErrorInfo'
    content.vb: >-
      Public MustInherit Class ModelEntityBase
          Inherits ModelElement
          Implements IDynamicMetaObjectProvider, INotifyPropertyChanged, IDataErrorInfo
  inheritance:
  - System.Object
  - TimeCockpit.Data.DynamicObject
  - TimeCockpit.Data.DataModel.NamedDynamicObject
  - TimeCockpit.Data.DataModel.ModelElement
  derivedClasses:
  - TimeCockpit.Data.DataModel.ModelEntity
  implements:
  - System.Dynamic.IDynamicMetaObjectProvider
  - System.ComponentModel.INotifyPropertyChanged
  - System.ComponentModel.IDataErrorInfo
  inheritedMembers:
  - TimeCockpit.Data.DataModel.ModelElement.IsValidIdentifier(System.String)
  - TimeCockpit.Data.DataModel.ModelElement.Detach
  - TimeCockpit.Data.DataModel.ModelElement.SetOwnershipPrefix(System.String)
  - TimeCockpit.Data.DataModel.ModelElement.UpdateChildren(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  - TimeCockpit.Data.DataModel.ModelElement.SetPersistBehavior(TimeCockpit.Data.DataModel.PersistBehavior)
  - TimeCockpit.Data.DataModel.ModelElement.SetName(System.String)
  - TimeCockpit.Data.DataModel.ModelElement.SetOwnership(TimeCockpit.Data.DataModel.Ownership)
  - TimeCockpit.Data.DataModel.ModelElement.ElementGuid
  - TimeCockpit.Data.DataModel.ModelElement.Name
  - TimeCockpit.Data.DataModel.ModelElement.Parent
  - TimeCockpit.Data.DataModel.ModelElement.Children
  - TimeCockpit.Data.DataModel.ModelElement.IsFullPersistBehavior
  - TimeCockpit.Data.DataModel.ModelElement.IsNonePersistBehavior
  - TimeCockpit.Data.DataModel.ModelElement.IsSystemElement
  - TimeCockpit.Data.DataModel.ModelElement.IsApplicationSpecificElement
  - TimeCockpit.Data.DataModel.ModelElement.IsUserElement
  - TimeCockpit.Data.DataModel.ModelElement.IsSystemOrApplicationSpecificElement
  - TimeCockpit.Data.DataModel.ModelElement.InvariantFriendlyName
  - TimeCockpit.Data.DataModel.ModelElement.CreationVersion
  - TimeCockpit.Data.DataModel.ModelElement.LastUpdateVersion
  - TimeCockpit.Data.DataModel.ModelElement.Error
  - TimeCockpit.Data.DataModel.ModelElement.ErrorSummary
  - TimeCockpit.Data.DataModel.ModelElement.IsValid
  - TimeCockpit.Data.DataModel.ModelElement.Ownership
  - TimeCockpit.Data.DataModel.ModelElement.OwnershipPrefix
  - TimeCockpit.Data.DataModel.ModelElement.NonPrefixedName
  - TimeCockpit.Data.DataModel.NamedDynamicObject.OnPropertyChanged(System.String)
  - TimeCockpit.Data.DataModel.NamedDynamicObject.PropertyChanged
  - TimeCockpit.Data.DynamicObject.SetMember(System.String,System.Object)
  - TimeCockpit.Data.DynamicObject.GetMetaObject(System.Linq.Expressions.Expression)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: TimeCockpit.Data.DataModel.ModelEntityBase.#ctor
  commentId: M:TimeCockpit.Data.DataModel.ModelEntityBase.#ctor
  id: '#ctor'
  parent: TimeCockpit.Data.DataModel.ModelEntityBase
  langs:
  - csharp
  - vb
  name: ModelEntityBase()
  nameWithType: ModelEntityBase.ModelEntityBase()
  fullName: TimeCockpit.Data.DataModel.ModelEntityBase.ModelEntityBase()
  type: Constructor
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel
  summary: "\nInitializes a new instance of the ModelEntityBase class.\n"
  syntax:
    content: protected ModelEntityBase()
    content.vb: Protected Sub New
  overload: TimeCockpit.Data.DataModel.ModelEntityBase.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: TimeCockpit.Data.DataModel.ModelEntityBase.#ctor(TimeCockpit.Data.DataModel.ModelEntityBase)
  commentId: M:TimeCockpit.Data.DataModel.ModelEntityBase.#ctor(TimeCockpit.Data.DataModel.ModelEntityBase)
  id: '#ctor(TimeCockpit.Data.DataModel.ModelEntityBase)'
  parent: TimeCockpit.Data.DataModel.ModelEntityBase
  langs:
  - csharp
  - vb
  name: ModelEntityBase(ModelEntityBase)
  nameWithType: ModelEntityBase.ModelEntityBase(ModelEntityBase)
  fullName: TimeCockpit.Data.DataModel.ModelEntityBase.ModelEntityBase(TimeCockpit.Data.DataModel.ModelEntityBase)
  type: Constructor
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel
  summary: "\nInitializes a new instance of the <xref href=\"TimeCockpit.Data.DataModel.ModelEntityBase\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  remarks: "\nCopy constructor for copying values of an instance of <xref href=\"TimeCockpit.Data.DataModel.ModelEntityBase\" data-throw-if-not-resolved=\"false\"></xref>.\nThe constructor copies all the values of the value types.\n<xref href=\"TimeCockpit.Data.DataModel.ModelEntityInterface\" data-throw-if-not-resolved=\"false\"></xref>s, <xref href=\"TimeCockpit.Data.Security.Permission\" data-throw-if-not-resolved=\"false\"></xref>s, <xref href=\"TimeCockpit.Data.DataModel.Triggers.Trigger\" data-throw-if-not-resolved=\"false\"></xref>s,\n<xref href=\"TimeCockpit.Data.DataModel.ValidationRule\" data-throw-if-not-resolved=\"false\"></xref>s, <xref href=\"TimeCockpit.Data.DataModel.ModelProperty\" data-throw-if-not-resolved=\"false\"></xref>s and <xref href=\"TimeCockpit.Data.DataModel.Relation\" data-throw-if-not-resolved=\"false\"></xref>s of the \n<xref href=\"TimeCockpit.Data.DataModel.ModelEntityBase\" data-throw-if-not-resolved=\"false\"></xref> to copy are just added to the corresponding collections.\nPlease note that if this method is called alone always clones that targets of a relation. It does not preserve\nthe object references. Consider calling the copy constructor of <xref href=\"TimeCockpit.Data.DataModel.Model\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected ModelEntityBase(ModelEntityBase element)
    parameters:
    - id: element
      type: TimeCockpit.Data.DataModel.ModelEntityBase
      description: The element to copy.
    content.vb: Protected Sub New(element As ModelEntityBase)
  overload: TimeCockpit.Data.DataModel.ModelEntityBase.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: TimeCockpit.Data.DataModel.ModelEntityBase.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Object,System.Object}})
  commentId: M:TimeCockpit.Data.DataModel.ModelEntityBase.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Object,System.Object}})
  id: '#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Object,System.Object}})'
  parent: TimeCockpit.Data.DataModel.ModelEntityBase
  langs:
  - csharp
  - vb
  name: ModelEntityBase(IEnumerable<KeyValuePair<Object, Object>>)
  nameWithType: ModelEntityBase.ModelEntityBase(IEnumerable<KeyValuePair<Object, Object>>)
  fullName: TimeCockpit.Data.DataModel.ModelEntityBase.ModelEntityBase(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.Object, System.Object>>)
  type: Constructor
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel
  summary: "\nInitializes a new instance of the ModelEntityBase class.\n"
  remarks: "\n<p>\n  You can use this constructor to initialize a new instance of the\n  ModelElement class by specifying its properties in a list of key/value\n  pairs. This is especially useful for dynamic languages like python.\n</p>\n"
  syntax:
    content: protected ModelEntityBase(IEnumerable<KeyValuePair<object, object>> properties)
    parameters:
    - id: properties
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Object,System.Object}}
      description: "\nCollection of properties.\n"
    content.vb: Protected Sub New(properties As IEnumerable(Of KeyValuePair(Of Object, Object)))
  overload: TimeCockpit.Data.DataModel.ModelEntityBase.#ctor*
  nameWithType.vb: ModelEntityBase.ModelEntityBase(IEnumerable(Of KeyValuePair(Of Object, Object)))
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: TimeCockpit.Data.DataModel.ModelEntityBase.ModelEntityBase(System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.Object, System.Object)))
  name.vb: ModelEntityBase(IEnumerable(Of KeyValuePair(Of Object, Object)))
- uid: TimeCockpit.Data.DataModel.ModelEntityBase.Accept(TimeCockpit.Data.DataModel.ModelElementVisitor)
  commentId: M:TimeCockpit.Data.DataModel.ModelEntityBase.Accept(TimeCockpit.Data.DataModel.ModelElementVisitor)
  id: Accept(TimeCockpit.Data.DataModel.ModelElementVisitor)
  parent: TimeCockpit.Data.DataModel.ModelEntityBase
  langs:
  - csharp
  - vb
  name: Accept(ModelElementVisitor)
  nameWithType: ModelEntityBase.Accept(ModelElementVisitor)
  fullName: TimeCockpit.Data.DataModel.ModelEntityBase.Accept(TimeCockpit.Data.DataModel.ModelElementVisitor)
  type: Method
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel
  summary: "\nAccepts the visitor by dispatching the corresponding visit handler in the visitor for the given type.\n"
  syntax:
    content: public override void Accept(ModelElementVisitor visitor)
    parameters:
    - id: visitor
      type: TimeCockpit.Data.DataModel.ModelElementVisitor
      description: the visitor to accept.
    content.vb: Public Overrides Sub Accept(visitor As ModelElementVisitor)
  overridden: TimeCockpit.Data.DataModel.ModelElement.Accept(TimeCockpit.Data.DataModel.ModelElementVisitor)
  overload: TimeCockpit.Data.DataModel.ModelEntityBase.Accept*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: TimeCockpit.Data.DataModel.ModelEntityBase.OnDeserializing(System.Runtime.Serialization.StreamingContext)
  commentId: M:TimeCockpit.Data.DataModel.ModelEntityBase.OnDeserializing(System.Runtime.Serialization.StreamingContext)
  id: OnDeserializing(System.Runtime.Serialization.StreamingContext)
  parent: TimeCockpit.Data.DataModel.ModelEntityBase
  langs:
  - csharp
  - vb
  name: OnDeserializing(StreamingContext)
  nameWithType: ModelEntityBase.OnDeserializing(StreamingContext)
  fullName: TimeCockpit.Data.DataModel.ModelEntityBase.OnDeserializing(System.Runtime.Serialization.StreamingContext)
  type: Method
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel
  summary: "\nCalled whenever deserialization of the model element is happening\n"
  remarks: "\nThis method is necessary to instantiate an instance of the current\n<xref href=\"TimeCockpit.Data.DataModel.ModelElement\" data-throw-if-not-resolved=\"false\"></xref> after deserialization. As for the <xref href=\"System.Runtime.Serialization.DataContractSerializer\" data-throw-if-not-resolved=\"false\"></xref>,\nconstructors are not always called and fields not correctly initialized. While deserializing,\nthis method is called and the fields of the <xref href=\"TimeCockpit.Data.DataModel.ModelElement\" data-throw-if-not-resolved=\"false\"></xref> are correctly initialized.\n"
  syntax:
    content: >-
      [OnDeserializing]

      public void OnDeserializing(StreamingContext context)
    parameters:
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: Stream context used for deserialization.
    content.vb: >-
      <OnDeserializing>

      Public Sub OnDeserializing(context As StreamingContext)
  overload: TimeCockpit.Data.DataModel.ModelEntityBase.OnDeserializing*
  attributes:
  - type: System.Runtime.Serialization.OnDeserializingAttribute
    ctor: System.Runtime.Serialization.OnDeserializingAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.DataModel.ModelEntityBase.GetMember(System.String)
  commentId: M:TimeCockpit.Data.DataModel.ModelEntityBase.GetMember(System.String)
  id: GetMember(System.String)
  parent: TimeCockpit.Data.DataModel.ModelEntityBase
  langs:
  - csharp
  - vb
  name: GetMember(String)
  nameWithType: ModelEntityBase.GetMember(String)
  fullName: TimeCockpit.Data.DataModel.ModelEntityBase.GetMember(System.String)
  type: Method
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel
  summary: "\nGets a member dynamically.\n"
  syntax:
    content: public override object GetMember(string name)
    parameters:
    - id: name
      type: System.String
      description: Name of the member to get.
    return:
      type: System.Object
      description: Dynamic member.
    content.vb: Public Overrides Function GetMember(name As String) As Object
  overridden: TimeCockpit.Data.DynamicObject.GetMember(System.String)
  overload: TimeCockpit.Data.DataModel.ModelEntityBase.GetMember*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: TimeCockpit.Data.DataModel.ModelEntityBase.AddImplementedInterface(System.String)
  commentId: M:TimeCockpit.Data.DataModel.ModelEntityBase.AddImplementedInterface(System.String)
  id: AddImplementedInterface(System.String)
  parent: TimeCockpit.Data.DataModel.ModelEntityBase
  langs:
  - csharp
  - vb
  name: AddImplementedInterface(String)
  nameWithType: ModelEntityBase.AddImplementedInterface(String)
  fullName: TimeCockpit.Data.DataModel.ModelEntityBase.AddImplementedInterface(System.String)
  type: Method
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel
  summary: "\nAdds a type to the <xref href=\"TimeCockpit.Data.DataModel.ModelEntityBase.ImplementedInterfaces\" data-throw-if-not-resolved=\"false\"></xref> collection\n"
  remarks: "\nThis is a helper method to make it easier to add interfaces by name (e.g. in scripts). Note that the\nvalue of the <xref href=\"TimeCockpit.Data.DataModel.ModelElement.PersistBehavior\" data-throw-if-not-resolved=\"false\"></xref> property of the <code>ModelEntityBase</code> is copied to the \n<xref href=\"TimeCockpit.Data.DataModel.ModelElement.PersistBehavior\" data-throw-if-not-resolved=\"false\"></xref> property of the new <xref href=\"TimeCockpit.Data.DataModel.ModelEntityInterface\" data-throw-if-not-resolved=\"false\"></xref> object.\n"
  syntax:
    content: public void AddImplementedInterface(string typeName)
    parameters:
    - id: typeName
      type: System.String
      description: "\nThe assembly-qualified name of the type to add. See <xref href=\"System.Type.AssemblyQualifiedName\" data-throw-if-not-resolved=\"false\"></xref>. \nIf the type is in the currently executing assembly or in Mscorlib.dll, it is sufficient to supply the type name \nqualified by its namespace.\n"
    content.vb: Public Sub AddImplementedInterface(typeName As String)
  overload: TimeCockpit.Data.DataModel.ModelEntityBase.AddImplementedInterface*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.DataModel.ModelEntityBase.Evaluate``1(System.String)
  commentId: M:TimeCockpit.Data.DataModel.ModelEntityBase.Evaluate``1(System.String)
  id: Evaluate``1(System.String)
  parent: TimeCockpit.Data.DataModel.ModelEntityBase
  langs:
  - csharp
  - vb
  name: Evaluate<T>(String)
  nameWithType: ModelEntityBase.Evaluate<T>(String)
  fullName: TimeCockpit.Data.DataModel.ModelEntityBase.Evaluate<T>(System.String)
  type: Method
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel
  summary: "\nEvaluates the specified expression and returns a compiled function \n"
  syntax:
    content: public T Evaluate<T>(string expression)
    parameters:
    - id: expression
      type: System.String
      description: The expression that should be compiled.
    typeParameters:
    - id: T
      description: The datatype the result of the expression should be casted to
    return:
      type: '{T}'
      description: The result of the expression when applied to the instance of the <xref href="TimeCockpit.Data.DataModel.ModelEntityBase" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Function Evaluate(Of T)(expression As String) As T
  overload: TimeCockpit.Data.DataModel.ModelEntityBase.Evaluate*
  nameWithType.vb: ModelEntityBase.Evaluate(Of T)(String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TimeCockpit.Data.DataModel.ModelEntityBase.Evaluate(Of T)(System.String)
  name.vb: Evaluate(Of T)(String)
- uid: TimeCockpit.Data.DataModel.ModelEntityBase.Evaluate``1(System.String,TimeCockpit.Data.Environment,System.Collections.Generic.IEnumerable{TimeCockpit.Data.QueryLanguage.QueryParameter},TimeCockpit.Data.EntityObject)
  commentId: M:TimeCockpit.Data.DataModel.ModelEntityBase.Evaluate``1(System.String,TimeCockpit.Data.Environment,System.Collections.Generic.IEnumerable{TimeCockpit.Data.QueryLanguage.QueryParameter},TimeCockpit.Data.EntityObject)
  id: Evaluate``1(System.String,TimeCockpit.Data.Environment,System.Collections.Generic.IEnumerable{TimeCockpit.Data.QueryLanguage.QueryParameter},TimeCockpit.Data.EntityObject)
  parent: TimeCockpit.Data.DataModel.ModelEntityBase
  langs:
  - csharp
  - vb
  name: Evaluate<T>(String, Environment, IEnumerable<QueryParameter>, EntityObject)
  nameWithType: ModelEntityBase.Evaluate<T>(String, Environment, IEnumerable<QueryParameter>, EntityObject)
  fullName: TimeCockpit.Data.DataModel.ModelEntityBase.Evaluate<T>(System.String, TimeCockpit.Data.Environment, System.Collections.Generic.IEnumerable<TimeCockpit.Data.QueryLanguage.QueryParameter>, TimeCockpit.Data.EntityObject)
  type: Method
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel
  summary: "\nEvaluates the specified expression and returns a compiled function \n"
  syntax:
    content: public T Evaluate<T>(string expression, Environment environment, IEnumerable<QueryParameter> parameters = null, EntityObject current = null)
    parameters:
    - id: expression
      type: System.String
      description: The expression that should be compiled.
    - id: environment
      type: TimeCockpit.Data.Environment
      description: An instance of <xref href="TimeCockpit.Data.Environment" data-throw-if-not-resolved="false"></xref> that has to be supplied, if the expression referenes Environment variables
    - id: parameters
      type: System.Collections.Generic.IEnumerable{TimeCockpit.Data.QueryLanguage.QueryParameter}
      description: The parameters that are passed to the expression.
    - id: current
      type: TimeCockpit.Data.EntityObject
      description: Optional, current entity object.
    typeParameters:
    - id: T
      description: The datatype the result of the expression should be casted to
    return:
      type: '{T}'
      description: The result of the expression when applied to the instance of the <xref href="TimeCockpit.Data.DataModel.ModelEntityBase" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Function Evaluate(Of T)(expression As String, environment As Environment, parameters As IEnumerable(Of QueryParameter) = Nothing, current As EntityObject = Nothing) As T
  overload: TimeCockpit.Data.DataModel.ModelEntityBase.Evaluate*
  nameWithType.vb: ModelEntityBase.Evaluate(Of T)(String, Environment, IEnumerable(Of QueryParameter), EntityObject)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TimeCockpit.Data.DataModel.ModelEntityBase.Evaluate(Of T)(System.String, TimeCockpit.Data.Environment, System.Collections.Generic.IEnumerable(Of TimeCockpit.Data.QueryLanguage.QueryParameter), TimeCockpit.Data.EntityObject)
  name.vb: Evaluate(Of T)(String, Environment, IEnumerable(Of QueryParameter), EntityObject)
- uid: TimeCockpit.Data.DataModel.ModelEntityBase.RemoveImplementedInterface(System.String)
  commentId: M:TimeCockpit.Data.DataModel.ModelEntityBase.RemoveImplementedInterface(System.String)
  id: RemoveImplementedInterface(System.String)
  parent: TimeCockpit.Data.DataModel.ModelEntityBase
  langs:
  - csharp
  - vb
  name: RemoveImplementedInterface(String)
  nameWithType: ModelEntityBase.RemoveImplementedInterface(String)
  fullName: TimeCockpit.Data.DataModel.ModelEntityBase.RemoveImplementedInterface(System.String)
  type: Method
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel
  summary: "\nRemoves a type from the <xref href=\"TimeCockpit.Data.DataModel.ModelEntityBase.ImplementedInterfaces\" data-throw-if-not-resolved=\"false\"></xref> collection\n"
  remarks: "\nThis is a helper method to make it easier to remove interfaces by name (e.g. in scripts).\n"
  syntax:
    content: public void RemoveImplementedInterface(string typeName)
    parameters:
    - id: typeName
      type: System.String
      description: "\nThe assembly-qualified name of the type to add. See <xref href=\"System.Type.AssemblyQualifiedName\" data-throw-if-not-resolved=\"false\"></xref>. \nIf the type is in the currently executing assembly or in Mscorlib.dll, it is sufficient to supply the type name \nqualified by its namespace. \n"
    content.vb: Public Sub RemoveImplementedInterface(typeName As String)
  overload: TimeCockpit.Data.DataModel.ModelEntityBase.RemoveImplementedInterface*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.DataModel.ModelEntityBase.NewInstance
  commentId: M:TimeCockpit.Data.DataModel.ModelEntityBase.NewInstance
  id: NewInstance
  parent: TimeCockpit.Data.DataModel.ModelEntityBase
  langs:
  - csharp
  - vb
  name: NewInstance()
  nameWithType: ModelEntityBase.NewInstance()
  fullName: TimeCockpit.Data.DataModel.ModelEntityBase.NewInstance()
  type: Method
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel
  summary: "\nCreates a new instance of <xref href=\"TimeCockpit.Data.EntityObject\" data-throw-if-not-resolved=\"false\"></xref> basing the the current instance of <xref href=\"TimeCockpit.Data.DataModel.ModelEntityBase\" data-throw-if-not-resolved=\"false\"></xref>\n"
  syntax:
    content: public EntityObject NewInstance()
    return:
      type: TimeCockpit.Data.EntityObject
      description: A new instance of <xref href="TimeCockpit.Data.EntityObject" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Function NewInstance As EntityObject
  overload: TimeCockpit.Data.DataModel.ModelEntityBase.NewInstance*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.DataModel.ModelEntityBase.CreateEntityObject``1
  commentId: M:TimeCockpit.Data.DataModel.ModelEntityBase.CreateEntityObject``1
  id: CreateEntityObject``1
  parent: TimeCockpit.Data.DataModel.ModelEntityBase
  langs:
  - csharp
  - vb
  name: CreateEntityObject<T>()
  nameWithType: ModelEntityBase.CreateEntityObject<T>()
  fullName: TimeCockpit.Data.DataModel.ModelEntityBase.CreateEntityObject<T>()
  type: Method
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel
  summary: "\nCreates a new instance of the <xref href=\"TimeCockpit.Data.EntityObject\" data-throw-if-not-resolved=\"false\"></xref> class that represents an object of this\nmodel entity.\n"
  remarks: "\n<p>\n  Note that the data context of the <code>ModelEntityBase</code> object is copied as the data context\n  into the <xref href=\"TimeCockpit.Data.EntityObject\" data-throw-if-not-resolved=\"false\"></xref> object.\n</p>\n"
  syntax:
    content: >-
      public T CreateEntityObject<T>()
          where T : class
    typeParameters:
    - id: T
      description: "\n<xref href=\"TimeCockpit.Data.EntityObject\" data-throw-if-not-resolved=\"false\"></xref> or one of the implemented interfaces (<xref href=\"TimeCockpit.Data.DataModel.ModelEntityBase.ImplementedInterfaces\" data-throw-if-not-resolved=\"false\"></xref>).\n"
    return:
      type: '{T}'
      description: "\nNewly created object.\n"
    content.vb: Public Function CreateEntityObject(Of T As Class) As T
  overload: TimeCockpit.Data.DataModel.ModelEntityBase.CreateEntityObject*
  nameWithType.vb: ModelEntityBase.CreateEntityObject(Of T)()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TimeCockpit.Data.DataModel.ModelEntityBase.CreateEntityObject(Of T)()
  name.vb: CreateEntityObject(Of T)()
- uid: TimeCockpit.Data.DataModel.ModelEntityBase.CreateEntityObject``1(TimeCockpit.Data.Environment)
  commentId: M:TimeCockpit.Data.DataModel.ModelEntityBase.CreateEntityObject``1(TimeCockpit.Data.Environment)
  id: CreateEntityObject``1(TimeCockpit.Data.Environment)
  parent: TimeCockpit.Data.DataModel.ModelEntityBase
  langs:
  - csharp
  - vb
  name: CreateEntityObject<T>(Environment)
  nameWithType: ModelEntityBase.CreateEntityObject<T>(Environment)
  fullName: TimeCockpit.Data.DataModel.ModelEntityBase.CreateEntityObject<T>(TimeCockpit.Data.Environment)
  type: Method
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel
  summary: "\nCreates a new instance of the <xref href=\"TimeCockpit.Data.EntityObject\" data-throw-if-not-resolved=\"false\"></xref> class that represents an object of this\nmodel entity.\n"
  remarks: "\n<p>\n  Note that the data context of the <code>ModelEntityBase</code> object is copied as the data context\n  into the <xref href=\"TimeCockpit.Data.EntityObject\" data-throw-if-not-resolved=\"false\"></xref> object.\n</p>\n"
  syntax:
    content: >-
      public T CreateEntityObject<T>(Environment environment)
          where T : class
    parameters:
    - id: environment
      type: TimeCockpit.Data.Environment
      description: '&quot;Optional&quot; environment.'
    typeParameters:
    - id: T
      description: "\n<xref href=\"TimeCockpit.Data.EntityObject\" data-throw-if-not-resolved=\"false\"></xref> or one of the implemented interfaces (<xref href=\"TimeCockpit.Data.DataModel.ModelEntityBase.ImplementedInterfaces\" data-throw-if-not-resolved=\"false\"></xref>).\n"
    return:
      type: '{T}'
      description: "\nNewly created object.\n"
    content.vb: Public Function CreateEntityObject(Of T As Class)(environment As Environment) As T
  overload: TimeCockpit.Data.DataModel.ModelEntityBase.CreateEntityObject*
  nameWithType.vb: ModelEntityBase.CreateEntityObject(Of T)(Environment)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TimeCockpit.Data.DataModel.ModelEntityBase.CreateEntityObject(Of T)(TimeCockpit.Data.Environment)
  name.vb: CreateEntityObject(Of T)(Environment)
- uid: TimeCockpit.Data.DataModel.ModelEntityBase.CreateEntityObject``1(System.Boolean)
  commentId: M:TimeCockpit.Data.DataModel.ModelEntityBase.CreateEntityObject``1(System.Boolean)
  id: CreateEntityObject``1(System.Boolean)
  parent: TimeCockpit.Data.DataModel.ModelEntityBase
  langs:
  - csharp
  - vb
  name: CreateEntityObject<T>(Boolean)
  nameWithType: ModelEntityBase.CreateEntityObject<T>(Boolean)
  fullName: TimeCockpit.Data.DataModel.ModelEntityBase.CreateEntityObject<T>(System.Boolean)
  type: Method
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel
  summary: "\nCreates a new instance of the <xref href=\"TimeCockpit.Data.EntityObject\" data-throw-if-not-resolved=\"false\"></xref> class that represents an object of this\nmodel entity.\n"
  remarks: "\n<p>\n  Note that the data context of the <code>ModelEntityBase</code> object is copied as the data context\n  into the <xref href=\"TimeCockpit.Data.EntityObject\" data-throw-if-not-resolved=\"false\"></xref> object.\n</p>\n"
  syntax:
    content: >-
      public T CreateEntityObject<T>(bool validateModelEntity)
          where T : class
    parameters:
    - id: validateModelEntity
      type: System.Boolean
      description: "\nIndicates whether the model entity should be validated\n"
    typeParameters:
    - id: T
      description: "\n<xref href=\"TimeCockpit.Data.EntityObject\" data-throw-if-not-resolved=\"false\"></xref> or one of the implemented interfaces (<xref href=\"TimeCockpit.Data.DataModel.ModelEntityBase.ImplementedInterfaces\" data-throw-if-not-resolved=\"false\"></xref>).\n"
    return:
      type: '{T}'
      description: "\nNewly created object.\n"
    content.vb: Public Function CreateEntityObject(Of T As Class)(validateModelEntity As Boolean) As T
  overload: TimeCockpit.Data.DataModel.ModelEntityBase.CreateEntityObject*
  nameWithType.vb: ModelEntityBase.CreateEntityObject(Of T)(Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TimeCockpit.Data.DataModel.ModelEntityBase.CreateEntityObject(Of T)(System.Boolean)
  name.vb: CreateEntityObject(Of T)(Boolean)
- uid: TimeCockpit.Data.DataModel.ModelEntityBase.CreateEntityObject``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Object,System.Object}})
  commentId: M:TimeCockpit.Data.DataModel.ModelEntityBase.CreateEntityObject``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Object,System.Object}})
  id: CreateEntityObject``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Object,System.Object}})
  parent: TimeCockpit.Data.DataModel.ModelEntityBase
  langs:
  - csharp
  - vb
  name: CreateEntityObject<T>(IEnumerable<KeyValuePair<Object, Object>>)
  nameWithType: ModelEntityBase.CreateEntityObject<T>(IEnumerable<KeyValuePair<Object, Object>>)
  fullName: TimeCockpit.Data.DataModel.ModelEntityBase.CreateEntityObject<T>(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.Object, System.Object>>)
  type: Method
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel
  summary: "\nCreates a new instance of the <xref href=\"TimeCockpit.Data.EntityObject\" data-throw-if-not-resolved=\"false\"></xref> class that represents an object of this\nmodel entity.\n"
  remarks: "\n<p>\n  The parameter <code>properties</code> can be used to initialize the dynamic properties of the object. The collection contains\n  key/value pairs in which the key is the name of property. If you do not want to initialize properties you have to pass \n<xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>. \n</p>\n<p>\n  Note that the data context of the <code>ModelEntityBase</code> object is copied as the data context\n  into the <xref href=\"TimeCockpit.Data.EntityObject\" data-throw-if-not-resolved=\"false\"></xref> object.\n</p>\n"
  syntax:
    content: >-
      public T CreateEntityObject<T>(IEnumerable<KeyValuePair<object, object>> properties)
          where T : class
    parameters:
    - id: properties
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Object,System.Object}}
      description: "\nCollection of dynamic properties used to initialize the object. \n<xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if no initialization is needed (see remarks section for details).\n"
    typeParameters:
    - id: T
      description: "\n<xref href=\"TimeCockpit.Data.EntityObject\" data-throw-if-not-resolved=\"false\"></xref> or one of the implemented interfaces (<xref href=\"TimeCockpit.Data.DataModel.ModelEntityBase.ImplementedInterfaces\" data-throw-if-not-resolved=\"false\"></xref>).\n"
    return:
      type: '{T}'
      description: Newly created object
    content.vb: Public Function CreateEntityObject(Of T As Class)(properties As IEnumerable(Of KeyValuePair(Of Object, Object))) As T
  overload: TimeCockpit.Data.DataModel.ModelEntityBase.CreateEntityObject*
  nameWithType.vb: ModelEntityBase.CreateEntityObject(Of T)(IEnumerable(Of KeyValuePair(Of Object, Object)))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TimeCockpit.Data.DataModel.ModelEntityBase.CreateEntityObject(Of T)(System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.Object, System.Object)))
  name.vb: CreateEntityObject(Of T)(IEnumerable(Of KeyValuePair(Of Object, Object)))
- uid: TimeCockpit.Data.DataModel.ModelEntityBase.CreateEntityObject``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Object,System.Object}},System.Boolean)
  commentId: M:TimeCockpit.Data.DataModel.ModelEntityBase.CreateEntityObject``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Object,System.Object}},System.Boolean)
  id: CreateEntityObject``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Object,System.Object}},System.Boolean)
  parent: TimeCockpit.Data.DataModel.ModelEntityBase
  langs:
  - csharp
  - vb
  name: CreateEntityObject<T>(IEnumerable<KeyValuePair<Object, Object>>, Boolean)
  nameWithType: ModelEntityBase.CreateEntityObject<T>(IEnumerable<KeyValuePair<Object, Object>>, Boolean)
  fullName: TimeCockpit.Data.DataModel.ModelEntityBase.CreateEntityObject<T>(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.Object, System.Object>>, System.Boolean)
  type: Method
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel
  summary: "\nCreates a new instance of the <xref href=\"TimeCockpit.Data.EntityObject\" data-throw-if-not-resolved=\"false\"></xref> class that represents an object of this\nmodel entity.\n"
  remarks: "\n<p>\n  The parameter <code>properties</code> can be used to initialize the dynamic properties of the object. The collection contains\n  key/value pairs in which the key is the name of property. If you do not want to initialize properties you have to pass \n<xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>. \n</p>\n<p>\n  Note that the data context of the <code>ModelEntityBase</code> object is copied as the data context\n  into the <xref href=\"TimeCockpit.Data.EntityObject\" data-throw-if-not-resolved=\"false\"></xref> object.\n</p>\n"
  syntax:
    content: >-
      public T CreateEntityObject<T>(IEnumerable<KeyValuePair<object, object>> properties, bool validateModelEntity)
          where T : class
    parameters:
    - id: properties
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Object,System.Object}}
      description: "\nCollection of dynamic properties used to initialize the object. \n<xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if no initialization is needed (see remarks section for details).\n"
    - id: validateModelEntity
      type: System.Boolean
      description: "\nIndicates whether the model entity should be validated\n"
    typeParameters:
    - id: T
      description: "\n<xref href=\"TimeCockpit.Data.EntityObject\" data-throw-if-not-resolved=\"false\"></xref> or one of the implemented interfaces (<xref href=\"TimeCockpit.Data.DataModel.ModelEntityBase.ImplementedInterfaces\" data-throw-if-not-resolved=\"false\"></xref>).\n"
    return:
      type: '{T}'
      description: Newly created object
    content.vb: Public Function CreateEntityObject(Of T As Class)(properties As IEnumerable(Of KeyValuePair(Of Object, Object)), validateModelEntity As Boolean) As T
  overload: TimeCockpit.Data.DataModel.ModelEntityBase.CreateEntityObject*
  nameWithType.vb: ModelEntityBase.CreateEntityObject(Of T)(IEnumerable(Of KeyValuePair(Of Object, Object)), Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TimeCockpit.Data.DataModel.ModelEntityBase.CreateEntityObject(Of T)(System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.Object, System.Object)), System.Boolean)
  name.vb: CreateEntityObject(Of T)(IEnumerable(Of KeyValuePair(Of Object, Object)), Boolean)
- uid: TimeCockpit.Data.DataModel.ModelEntityBase.CreateEntityObject``1(System.Guid,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Object,System.Object}})
  commentId: M:TimeCockpit.Data.DataModel.ModelEntityBase.CreateEntityObject``1(System.Guid,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Object,System.Object}})
  id: CreateEntityObject``1(System.Guid,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Object,System.Object}})
  parent: TimeCockpit.Data.DataModel.ModelEntityBase
  langs:
  - csharp
  - vb
  name: CreateEntityObject<T>(Guid, IEnumerable<KeyValuePair<Object, Object>>)
  nameWithType: ModelEntityBase.CreateEntityObject<T>(Guid, IEnumerable<KeyValuePair<Object, Object>>)
  fullName: TimeCockpit.Data.DataModel.ModelEntityBase.CreateEntityObject<T>(System.Guid, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.Object, System.Object>>)
  type: Method
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel
  summary: "\nCreates a new instance of the <xref href=\"TimeCockpit.Data.EntityObject\" data-throw-if-not-resolved=\"false\"></xref> class that represents an object of this\nmodel entity.\n"
  remarks: "\n<p>\n  If the entity object represents an existing object (e.g. coming from the database) pass its existing id \n  as <code>objectUuid</code>. If it is a new entity object that has not existed before pass <xref href=\"System.Guid.Empty\" data-throw-if-not-resolved=\"false\"></xref>. \n  In this case a new id will be generated for the object.\n</p>\n<p>\n  The parameter <code>properties</code> can be used to initialize the dynamic properties of the object. The collection contains\n  key/value pairs in which the key is the name of property. If you do not want to initialize properties you have to pass \n<xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n</p>\n<p>\n  Note that the data context of the <code>ModelEntityBase</code> object is copied as the data context\n  into the <xref href=\"TimeCockpit.Data.EntityObject\" data-throw-if-not-resolved=\"false\"></xref> object.\n</p>\n"
  syntax:
    content: >-
      public T CreateEntityObject<T>(Guid objectUuid, IEnumerable<KeyValuePair<object, object>> properties)
          where T : class
    parameters:
    - id: objectUuid
      type: System.Guid
      description: "\nId of the object.\n<xref href=\"System.Guid.Empty\" data-throw-if-not-resolved=\"false\"></xref> if it is a new object (see remarks section for details).\n"
    - id: properties
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Object,System.Object}}
      description: "\nCollection of dynamic properties used to initialize the object. \n<xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if no initialization is needed (see remarks section for details).\n"
    typeParameters:
    - id: T
      description: "\n<xref href=\"TimeCockpit.Data.EntityObject\" data-throw-if-not-resolved=\"false\"></xref> or one of the implemented interfaces (<xref href=\"TimeCockpit.Data.DataModel.ModelEntityBase.ImplementedInterfaces\" data-throw-if-not-resolved=\"false\"></xref>).\n"
    return:
      type: '{T}'
      description: Newly created object
    content.vb: Public Function CreateEntityObject(Of T As Class)(objectUuid As Guid, properties As IEnumerable(Of KeyValuePair(Of Object, Object))) As T
  overload: TimeCockpit.Data.DataModel.ModelEntityBase.CreateEntityObject*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<code>T</code> is not <xref href=\"TimeCockpit.Data.EntityObject\" data-throw-if-not-resolved=\"false\"></xref> and not in the list of implemented interfaces \n(<xref href=\"TimeCockpit.Data.DataModel.ModelEntityBase.ImplementedInterfaces\" data-throw-if-not-resolved=\"false\"></xref>)\n"
  seealso:
  - linkId: TimeCockpit.Data.EntityObject
    commentId: T:TimeCockpit.Data.EntityObject
  nameWithType.vb: ModelEntityBase.CreateEntityObject(Of T)(Guid, IEnumerable(Of KeyValuePair(Of Object, Object)))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TimeCockpit.Data.DataModel.ModelEntityBase.CreateEntityObject(Of T)(System.Guid, System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.Object, System.Object)))
  name.vb: CreateEntityObject(Of T)(Guid, IEnumerable(Of KeyValuePair(Of Object, Object)))
- uid: TimeCockpit.Data.DataModel.ModelEntityBase.CreateAuditTrailMessage(System.String)
  commentId: M:TimeCockpit.Data.DataModel.ModelEntityBase.CreateAuditTrailMessage(System.String)
  id: CreateAuditTrailMessage(System.String)
  parent: TimeCockpit.Data.DataModel.ModelEntityBase
  langs:
  - csharp
  - vb
  name: CreateAuditTrailMessage(String)
  nameWithType: ModelEntityBase.CreateAuditTrailMessage(String)
  fullName: TimeCockpit.Data.DataModel.ModelEntityBase.CreateAuditTrailMessage(System.String)
  type: Method
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel
  summary: "\nCreates the audit trail message for the current instance of <xref href=\"TimeCockpit.Data.DataModel.ModelEntityBase\" data-throw-if-not-resolved=\"false\"></xref>.\nThe method sets the EntityUuid, EntityName, OperationTimestamp and Username.\n"
  syntax:
    content: public EntityObject CreateAuditTrailMessage(string username)
    parameters:
    - id: username
      type: System.String
      description: The username of the use that has requested the audittrailmessage.
    return:
      type: TimeCockpit.Data.EntityObject
      description: "\nAn instance of a AuditTrail <xref href=\"TimeCockpit.Data.EntityObject\" data-throw-if-not-resolved=\"false\"></xref>.\n"
    content.vb: Public Function CreateAuditTrailMessage(username As String) As EntityObject
  overload: TimeCockpit.Data.DataModel.ModelEntityBase.CreateAuditTrailMessage*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\nThrown if the current entity is not attached to an instance of <xref href=\"TimeCockpit.Data.DataModel.Model\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.DataModel.ModelEntityBase.CreateAuditTrailMessage
  commentId: M:TimeCockpit.Data.DataModel.ModelEntityBase.CreateAuditTrailMessage
  id: CreateAuditTrailMessage
  parent: TimeCockpit.Data.DataModel.ModelEntityBase
  langs:
  - csharp
  - vb
  name: CreateAuditTrailMessage()
  nameWithType: ModelEntityBase.CreateAuditTrailMessage()
  fullName: TimeCockpit.Data.DataModel.ModelEntityBase.CreateAuditTrailMessage()
  type: Method
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel
  summary: "\nCreates the audit trail message for the current instance of <xref href=\"TimeCockpit.Data.DataModel.ModelEntityBase\" data-throw-if-not-resolved=\"false\"></xref>.\nThe method sets the EntityUuid, EntityName, OperationTimestamp.\n"
  syntax:
    content: public EntityObject CreateAuditTrailMessage()
    return:
      type: TimeCockpit.Data.EntityObject
      description: "\nAn instance of a AuditTrail <xref href=\"TimeCockpit.Data.EntityObject\" data-throw-if-not-resolved=\"false\"></xref>.\n"
    content.vb: Public Function CreateAuditTrailMessage As EntityObject
  overload: TimeCockpit.Data.DataModel.ModelEntityBase.CreateAuditTrailMessage*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\nThrown if the current entity is not attached to an instance of <xref href=\"TimeCockpit.Data.DataModel.Model\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.DataModel.ModelEntityBase.ToString
  commentId: M:TimeCockpit.Data.DataModel.ModelEntityBase.ToString
  id: ToString
  parent: TimeCockpit.Data.DataModel.ModelEntityBase
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: ModelEntityBase.ToString()
  fullName: TimeCockpit.Data.DataModel.ModelEntityBase.ToString()
  type: Method
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel
  summary: "\nReturns a <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> that represents this instance.\n"
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: "\nA <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> that represents this instance.\n"
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: TimeCockpit.Data.DataModel.ModelEntityBase.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: TimeCockpit.Data.DataModel.ModelEntityBase.CreateEntityObject``1(System.Guid,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Object,System.Object}},System.Boolean,System.Boolean,System.Boolean,TimeCockpit.Data.Environment)
  commentId: M:TimeCockpit.Data.DataModel.ModelEntityBase.CreateEntityObject``1(System.Guid,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Object,System.Object}},System.Boolean,System.Boolean,System.Boolean,TimeCockpit.Data.Environment)
  id: CreateEntityObject``1(System.Guid,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Object,System.Object}},System.Boolean,System.Boolean,System.Boolean,TimeCockpit.Data.Environment)
  parent: TimeCockpit.Data.DataModel.ModelEntityBase
  langs:
  - csharp
  - vb
  name: CreateEntityObject<T>(Guid, IEnumerable<KeyValuePair<Object, Object>>, Boolean, Boolean, Boolean, Environment)
  nameWithType: ModelEntityBase.CreateEntityObject<T>(Guid, IEnumerable<KeyValuePair<Object, Object>>, Boolean, Boolean, Boolean, Environment)
  fullName: TimeCockpit.Data.DataModel.ModelEntityBase.CreateEntityObject<T>(System.Guid, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.Object, System.Object>>, System.Boolean, System.Boolean, System.Boolean, TimeCockpit.Data.Environment)
  type: Method
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel
  summary: "\nCreates a new instance of the <xref href=\"TimeCockpit.Data.EntityObject\" data-throw-if-not-resolved=\"false\"></xref> class that represents an object of this\nmodel entity.\n"
  remarks: "\n<p>\nIf the entity object represents an existing object (e.g. coming from the database) pass its existing id\nas <code>objectUuid</code>. If it is a new entity object that has not existed before pass <xref href=\"System.Guid.Empty\" data-throw-if-not-resolved=\"false\"></xref>.\nIn this case a new id will be generated for the object.\n</p>\n<p>\nThe parameter <code>properties</code> can be used to initialize the dynamic properties of the object. The collection contains\nkey/value pairs in which the key is the name of property. If you do not want to initialize properties you have to pass\n<xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n</p>\n<p>\nNote that the data context of the <code>ModelEntityBase</code> object is copied as the data context\ninto the <xref href=\"TimeCockpit.Data.EntityObject\" data-throw-if-not-resolved=\"false\"></xref> object.\n</p>\n"
  syntax:
    content: >-
      public T CreateEntityObject<T>(Guid objectUuid, IEnumerable<KeyValuePair<object, object>> properties, bool validateModelEntity, bool isClone = false, bool isDeserialization = false, Environment environment = null)
          where T : class
    parameters:
    - id: objectUuid
      type: System.Guid
      description: >-
        Id of the object.

        <xref href="System.Guid.Empty" data-throw-if-not-resolved="false"></xref> if it is a new object (see remarks section for details).
    - id: properties
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Object,System.Object}}
      description: >-
        Collection of dynamic properties used to initialize the object.

        <xref uid="langword_csharp_null" name="null" href=""></xref> if no initialization is needed (see remarks section for details).
    - id: validateModelEntity
      type: System.Boolean
      description: Indicates whether the model entity should be validated
    - id: isClone
      type: System.Boolean
      description: if set to <code>true</code> the method is called in the process of cloning an <xref href="TimeCockpit.Data.EntityObject" data-throw-if-not-resolved="false"></xref>.
    - id: isDeserialization
      type: System.Boolean
      description: if set to <code>true</code> the method is called in the process of deserializing an <xref href="TimeCockpit.Data.EntityObject" data-throw-if-not-resolved="false"></xref>.
    - id: environment
      type: TimeCockpit.Data.Environment
      description: '&quot;Optional&quot; environment.'
    typeParameters:
    - id: T
      description: <xref href="TimeCockpit.Data.EntityObject" data-throw-if-not-resolved="false"></xref> or one of the implemented interfaces (<xref href="TimeCockpit.Data.DataModel.ModelEntityBase.ImplementedInterfaces" data-throw-if-not-resolved="false"></xref>).
    return:
      type: '{T}'
      description: "\nNewly created object\n"
    content.vb: Public Function CreateEntityObject(Of T As Class)(objectUuid As Guid, properties As IEnumerable(Of KeyValuePair(Of Object, Object)), validateModelEntity As Boolean, isClone As Boolean = False, isDeserialization As Boolean = False, environment As Environment = Nothing) As T
  overload: TimeCockpit.Data.DataModel.ModelEntityBase.CreateEntityObject*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<code>T</code> is not <xref href=\"TimeCockpit.Data.EntityObject\" data-throw-if-not-resolved=\"false\"></xref> and not in the list of implemented interfaces\n(<xref href=\"TimeCockpit.Data.DataModel.ModelEntityBase.ImplementedInterfaces\" data-throw-if-not-resolved=\"false\"></xref>)\n"
  seealso:
  - linkId: TimeCockpit.Data.EntityObject
    commentId: T:TimeCockpit.Data.EntityObject
  nameWithType.vb: ModelEntityBase.CreateEntityObject(Of T)(Guid, IEnumerable(Of KeyValuePair(Of Object, Object)), Boolean, Boolean, Boolean, Environment)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TimeCockpit.Data.DataModel.ModelEntityBase.CreateEntityObject(Of T)(System.Guid, System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.Object, System.Object)), System.Boolean, System.Boolean, System.Boolean, TimeCockpit.Data.Environment)
  name.vb: CreateEntityObject(Of T)(Guid, IEnumerable(Of KeyValuePair(Of Object, Object)), Boolean, Boolean, Boolean, Environment)
- uid: TimeCockpit.Data.DataModel.ModelEntityBase.GetAutoIncludedRelations
  commentId: M:TimeCockpit.Data.DataModel.ModelEntityBase.GetAutoIncludedRelations
  id: GetAutoIncludedRelations
  parent: TimeCockpit.Data.DataModel.ModelEntityBase
  langs:
  - csharp
  - vb
  name: GetAutoIncludedRelations()
  nameWithType: ModelEntityBase.GetAutoIncludedRelations()
  fullName: TimeCockpit.Data.DataModel.ModelEntityBase.GetAutoIncludedRelations()
  type: Method
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel
  summary: "\nIterates over validation rules, default value expressions, permissions and calculated properties and finds the\nrelations that are contained in the various expressions.\n"
  syntax:
    content: public List<string> GetAutoIncludedRelations()
    return:
      type: System.Collections.Generic.List{System.String}
      description: A list of strings representing relation reference paths
    content.vb: Public Function GetAutoIncludedRelations As List(Of String)
  overload: TimeCockpit.Data.DataModel.ModelEntityBase.GetAutoIncludedRelations*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.DataModel.ModelEntityBase.Attach(TimeCockpit.Data.DataModel.ModelElement,System.Boolean)
  commentId: M:TimeCockpit.Data.DataModel.ModelEntityBase.Attach(TimeCockpit.Data.DataModel.ModelElement,System.Boolean)
  id: Attach(TimeCockpit.Data.DataModel.ModelElement,System.Boolean)
  parent: TimeCockpit.Data.DataModel.ModelEntityBase
  langs:
  - csharp
  - vb
  name: Attach(ModelElement, Boolean)
  nameWithType: ModelEntityBase.Attach(ModelElement, Boolean)
  fullName: TimeCockpit.Data.DataModel.ModelEntityBase.Attach(TimeCockpit.Data.DataModel.ModelElement, System.Boolean)
  type: Method
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel
  summary: "\nAttaches a dimension to a parent model element.\nThis is only required if the datacontext of a model is created after some elements are added to the model.\nIn this case first all entities have to be created, then the relations can be created.\n"
  syntax:
    content: protected void Attach(ModelElement newParent, bool attachRelations)
    parameters:
    - id: newParent
      type: TimeCockpit.Data.DataModel.ModelElement
      description: Parent model element.
    - id: attachRelations
      type: System.Boolean
      description: "Indicates if relations of the entity should be attached. \nBy default the relations should be attached immediatly. Only if the data context of a model \nis created after some elements are already added fist all entities have to be attached, then \nthe relations can be attached.\n"
    content.vb: Protected Sub Attach(newParent As ModelElement, attachRelations As Boolean)
  overload: TimeCockpit.Data.DataModel.ModelEntityBase.Attach*
  seealso:
  - linkId: TimeCockpit.Data.DataModel.ModelElement.Attach(TimeCockpit.Data.DataModel.ModelElement)
    commentId: M:TimeCockpit.Data.DataModel.ModelElement.Attach(TimeCockpit.Data.DataModel.ModelElement)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: TimeCockpit.Data.DataModel.ModelEntityBase.Attach(TimeCockpit.Data.DataModel.ModelElement)
  commentId: M:TimeCockpit.Data.DataModel.ModelEntityBase.Attach(TimeCockpit.Data.DataModel.ModelElement)
  id: Attach(TimeCockpit.Data.DataModel.ModelElement)
  parent: TimeCockpit.Data.DataModel.ModelEntityBase
  langs:
  - csharp
  - vb
  name: Attach(ModelElement)
  nameWithType: ModelEntityBase.Attach(ModelElement)
  fullName: TimeCockpit.Data.DataModel.ModelEntityBase.Attach(TimeCockpit.Data.DataModel.ModelElement)
  type: Method
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel
  summary: "\nAttaches a dimension to a parent model element.\n"
  syntax:
    content: protected override void Attach(ModelElement newParent)
    parameters:
    - id: newParent
      type: TimeCockpit.Data.DataModel.ModelElement
      description: Parent model element.
    content.vb: Protected Overrides Sub Attach(newParent As ModelElement)
  overridden: TimeCockpit.Data.DataModel.ModelElement.Attach(TimeCockpit.Data.DataModel.ModelElement)
  overload: TimeCockpit.Data.DataModel.ModelEntityBase.Attach*
  seealso:
  - linkId: TimeCockpit.Data.DataModel.ModelElement.Attach(TimeCockpit.Data.DataModel.ModelElement)
    commentId: M:TimeCockpit.Data.DataModel.ModelElement.Attach(TimeCockpit.Data.DataModel.ModelElement)
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: TimeCockpit.Data.DataModel.ModelEntityBase.Validate(System.Collections.Generic.IList{TimeCockpit.Data.DataModel.PropertyValidationMessage}@,System.Boolean)
  commentId: M:TimeCockpit.Data.DataModel.ModelEntityBase.Validate(System.Collections.Generic.IList{TimeCockpit.Data.DataModel.PropertyValidationMessage}@,System.Boolean)
  id: Validate(System.Collections.Generic.IList{TimeCockpit.Data.DataModel.PropertyValidationMessage}@,System.Boolean)
  parent: TimeCockpit.Data.DataModel.ModelEntityBase
  langs:
  - csharp
  - vb
  name: Validate(ref IList<PropertyValidationMessage>, Boolean)
  nameWithType: ModelEntityBase.Validate(ref IList<PropertyValidationMessage>, Boolean)
  fullName: TimeCockpit.Data.DataModel.ModelEntityBase.Validate(ref System.Collections.Generic.IList<TimeCockpit.Data.DataModel.PropertyValidationMessage>, System.Boolean)
  type: Method
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel
  summary: "\nValidates a <xref href=\"TimeCockpit.Data.DataModel.ModelElement\" data-throw-if-not-resolved=\"false\"></xref> according to certain rules.\n"
  remarks: "\n<p>\nThe rules the <xref href=\"TimeCockpit.Data.DataModel.ModelElement\" data-throw-if-not-resolved=\"false\"></xref> is validated against are dependent on the \ntype of <xref href=\"TimeCockpit.Data.DataModel.ModelElement\" data-throw-if-not-resolved=\"false\"></xref> that is validated. \nThis method can be overridden to provide custom validation behavior for subclasses of \n<xref href=\"TimeCockpit.Data.DataModel.ModelElement\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n<p>\nWhen <xref href=\"TimeCockpit.Data.DataModel.ModelEntityBase.Validate(System.Collections.Generic.IList%7bTimeCockpit.Data.DataModel.PropertyValidationMessage%7d%40%2cSystem.Boolean)\" data-throw-if-not-resolved=\"false\"></xref> is called on a modelelement, the <xref href=\"TimeCockpit.Data.DataModel.ModelEntityBase.Validate(System.Collections.Generic.IList%7bTimeCockpit.Data.DataModel.PropertyValidationMessage%7d%40%2cSystem.Boolean)\" data-throw-if-not-resolved=\"false\"></xref> method\nof all children attatched to the modelelemnt are validated recursivly.\n</p>\n"
  syntax:
    content: protected override void Validate(ref IList<PropertyValidationMessage> messages, bool validateRecursively)
    parameters:
    - id: messages
      type: System.Collections.Generic.IList{TimeCockpit.Data.DataModel.PropertyValidationMessage}
      description: "\nAn list of strings that stores that picks up the validation errors of a model element.\n"
    - id: validateRecursively
      type: System.Boolean
      description: "\nIndicates wheter to validate only the current model element or all its children (recursively) as well.\n"
    content.vb: Protected Overrides Sub Validate(ByRef messages As IList(Of PropertyValidationMessage), validateRecursively As Boolean)
  overridden: TimeCockpit.Data.DataModel.ModelElement.Validate(System.Collections.Generic.IList{TimeCockpit.Data.DataModel.PropertyValidationMessage}@,System.Boolean)
  overload: TimeCockpit.Data.DataModel.ModelEntityBase.Validate*
  nameWithType.vb: ModelEntityBase.Validate(ByRef IList(Of PropertyValidationMessage), Boolean)
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: TimeCockpit.Data.DataModel.ModelEntityBase.Validate(ByRef System.Collections.Generic.IList(Of TimeCockpit.Data.DataModel.PropertyValidationMessage), System.Boolean)
  name.vb: Validate(ByRef IList(Of PropertyValidationMessage), Boolean)
- uid: TimeCockpit.Data.DataModel.ModelEntityBase.DefaultDisplayPropertyName
  commentId: P:TimeCockpit.Data.DataModel.ModelEntityBase.DefaultDisplayPropertyName
  id: DefaultDisplayPropertyName
  parent: TimeCockpit.Data.DataModel.ModelEntityBase
  langs:
  - csharp
  - vb
  name: DefaultDisplayPropertyName
  nameWithType: ModelEntityBase.DefaultDisplayPropertyName
  fullName: TimeCockpit.Data.DataModel.ModelEntityBase.DefaultDisplayPropertyName
  type: Property
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel
  summary: "\nGets or sets the default property name to display\n"
  syntax:
    content: public string DefaultDisplayPropertyName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property DefaultDisplayPropertyName As String
  overload: TimeCockpit.Data.DataModel.ModelEntityBase.DefaultDisplayPropertyName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.DataModel.ModelEntityBase.ReadOnlyExpression
  commentId: P:TimeCockpit.Data.DataModel.ModelEntityBase.ReadOnlyExpression
  id: ReadOnlyExpression
  parent: TimeCockpit.Data.DataModel.ModelEntityBase
  langs:
  - csharp
  - vb
  name: ReadOnlyExpression
  nameWithType: ModelEntityBase.ReadOnlyExpression
  fullName: TimeCockpit.Data.DataModel.ModelEntityBase.ReadOnlyExpression
  type: Property
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel
  summary: "\nGets or sets a tcql expression that indicates if a instance of a\nmodel entity can be changed or not.\n"
  remarks: "\nThe TCQL expression must evaluate to true.\n"
  syntax:
    content: public string ReadOnlyExpression { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ReadOnlyExpression As String
  overload: TimeCockpit.Data.DataModel.ModelEntityBase.ReadOnlyExpression*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.DataModel.ModelEntityBase.DefaultListName
  commentId: P:TimeCockpit.Data.DataModel.ModelEntityBase.DefaultListName
  id: DefaultListName
  parent: TimeCockpit.Data.DataModel.ModelEntityBase
  langs:
  - csharp
  - vb
  name: DefaultListName
  nameWithType: ModelEntityBase.DefaultListName
  fullName: TimeCockpit.Data.DataModel.ModelEntityBase.DefaultListName
  type: Property
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel
  summary: "\nGets or sets the default list of the <xref href=\"TimeCockpit.Data.DataModel.ModelEntityBase\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public string DefaultListName { get; set; }
    parameters: []
    return:
      type: System.String
      description: The name of the default list.
    content.vb: Public Property DefaultListName As String
  overload: TimeCockpit.Data.DataModel.ModelEntityBase.DefaultListName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.DataModel.ModelEntityBase.DefaultFormName
  commentId: P:TimeCockpit.Data.DataModel.ModelEntityBase.DefaultFormName
  id: DefaultFormName
  parent: TimeCockpit.Data.DataModel.ModelEntityBase
  langs:
  - csharp
  - vb
  name: DefaultFormName
  nameWithType: ModelEntityBase.DefaultFormName
  fullName: TimeCockpit.Data.DataModel.ModelEntityBase.DefaultFormName
  type: Property
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel
  summary: "\nGets or sets the default form of the <xref href=\"TimeCockpit.Data.DataModel.ModelEntityBase\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public string DefaultFormName { get; set; }
    parameters: []
    return:
      type: System.String
      description: The name of the default form.
    content.vb: Public Property DefaultFormName As String
  overload: TimeCockpit.Data.DataModel.ModelEntityBase.DefaultFormName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.DataModel.ModelEntityBase.DefaultRelationListName
  commentId: P:TimeCockpit.Data.DataModel.ModelEntityBase.DefaultRelationListName
  id: DefaultRelationListName
  parent: TimeCockpit.Data.DataModel.ModelEntityBase
  langs:
  - csharp
  - vb
  name: DefaultRelationListName
  nameWithType: ModelEntityBase.DefaultRelationListName
  fullName: TimeCockpit.Data.DataModel.ModelEntityBase.DefaultRelationListName
  type: Property
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel
  summary: "\nGets or sets the default name of the list that is used when the current instance\nof <xref href=\"TimeCockpit.Data.DataModel.ModelEntityBase\" data-throw-if-not-resolved=\"false\"></xref> is displayed in a combobox.\n"
  syntax:
    content: public string DefaultRelationListName { get; set; }
    parameters: []
    return:
      type: System.String
      description: "\nThe default name of the relation list.\n"
    content.vb: Public Property DefaultRelationListName As String
  overload: TimeCockpit.Data.DataModel.ModelEntityBase.DefaultRelationListName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.DataModel.ModelEntityBase.AuditMode
  commentId: P:TimeCockpit.Data.DataModel.ModelEntityBase.AuditMode
  id: AuditMode
  parent: TimeCockpit.Data.DataModel.ModelEntityBase
  langs:
  - csharp
  - vb
  name: AuditMode
  nameWithType: ModelEntityBase.AuditMode
  fullName: TimeCockpit.Data.DataModel.ModelEntityBase.AuditMode
  type: Property
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel
  summary: "\nGets or sets the audit mode for the given <xref href=\"TimeCockpit.Data.DataModel.ModelEntityBase\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public AuditMode AuditMode { get; set; }
    parameters: []
    return:
      type: TimeCockpit.Data.DataModel.AuditMode
    content.vb: Public Property AuditMode As AuditMode
  overload: TimeCockpit.Data.DataModel.ModelEntityBase.AuditMode*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.DataModel.ModelEntityBase.Properties
  commentId: P:TimeCockpit.Data.DataModel.ModelEntityBase.Properties
  id: Properties
  parent: TimeCockpit.Data.DataModel.ModelEntityBase
  langs:
  - csharp
  - vb
  name: Properties
  nameWithType: ModelEntityBase.Properties
  fullName: TimeCockpit.Data.DataModel.ModelEntityBase.Properties
  type: Property
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel
  summary: "\nGets the collection of properties.\n"
  syntax:
    content: public ModelCollection<ModelProperty> Properties { get; }
    parameters: []
    return:
      type: TimeCockpit.Data.DataModel.ModelCollection{TimeCockpit.Data.DataModel.ModelProperty}
    content.vb: Public ReadOnly Property Properties As ModelCollection(Of ModelProperty)
  overload: TimeCockpit.Data.DataModel.ModelEntityBase.Properties*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TimeCockpit.Data.DataModel.ModelEntityBase.Relations
  commentId: P:TimeCockpit.Data.DataModel.ModelEntityBase.Relations
  id: Relations
  parent: TimeCockpit.Data.DataModel.ModelEntityBase
  langs:
  - csharp
  - vb
  name: Relations
  nameWithType: ModelEntityBase.Relations
  fullName: TimeCockpit.Data.DataModel.ModelEntityBase.Relations
  type: Property
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel
  summary: "\nGets the collection used to store the relations of the dimension to other dimensions.\n"
  syntax:
    content: public ModelCollection<Relation> Relations { get; }
    parameters: []
    return:
      type: TimeCockpit.Data.DataModel.ModelCollection{TimeCockpit.Data.DataModel.Relation}
    content.vb: Public ReadOnly Property Relations As ModelCollection(Of Relation)
  overload: TimeCockpit.Data.DataModel.ModelEntityBase.Relations*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TimeCockpit.Data.DataModel.ModelEntityBase.LogicalRelations
  commentId: P:TimeCockpit.Data.DataModel.ModelEntityBase.LogicalRelations
  id: LogicalRelations
  parent: TimeCockpit.Data.DataModel.ModelEntityBase
  langs:
  - csharp
  - vb
  name: LogicalRelations
  nameWithType: ModelEntityBase.LogicalRelations
  fullName: TimeCockpit.Data.DataModel.ModelEntityBase.LogicalRelations
  type: Property
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel
  summary: "\nGets the collection of logical relations.\n"
  syntax:
    content: public ModelCollection<LogicalRelation> LogicalRelations { get; }
    parameters: []
    return:
      type: TimeCockpit.Data.DataModel.ModelCollection{TimeCockpit.Data.DataModel.LogicalRelation}
    content.vb: Public ReadOnly Property LogicalRelations As ModelCollection(Of LogicalRelation)
  overload: TimeCockpit.Data.DataModel.ModelEntityBase.LogicalRelations*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TimeCockpit.Data.DataModel.ModelEntityBase.AllRelations
  commentId: P:TimeCockpit.Data.DataModel.ModelEntityBase.AllRelations
  id: AllRelations
  parent: TimeCockpit.Data.DataModel.ModelEntityBase
  langs:
  - csharp
  - vb
  name: AllRelations
  nameWithType: ModelEntityBase.AllRelations
  fullName: TimeCockpit.Data.DataModel.ModelEntityBase.AllRelations
  type: Property
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel
  summary: "\nGets the combined view of all physical and logical relations.\n"
  syntax:
    content: public CombinedModelCollectionView<RelationBase, Relation, LogicalRelation> AllRelations { get; }
    parameters: []
    return:
      type: TimeCockpit.Data.DataModel.CombinedModelCollectionView{TimeCockpit.Data.DataModel.RelationBase,TimeCockpit.Data.DataModel.Relation,TimeCockpit.Data.DataModel.LogicalRelation}
    content.vb: Public ReadOnly Property AllRelations As CombinedModelCollectionView(Of RelationBase, Relation, LogicalRelation)
  overload: TimeCockpit.Data.DataModel.ModelEntityBase.AllRelations*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TimeCockpit.Data.DataModel.ModelEntityBase.CyclicRelations
  commentId: P:TimeCockpit.Data.DataModel.ModelEntityBase.CyclicRelations
  id: CyclicRelations
  parent: TimeCockpit.Data.DataModel.ModelEntityBase
  langs:
  - csharp
  - vb
  name: CyclicRelations
  nameWithType: ModelEntityBase.CyclicRelations
  fullName: TimeCockpit.Data.DataModel.ModelEntityBase.CyclicRelations
  type: Property
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel
  summary: "\nGets the cyclic relations.\n"
  syntax:
    content: public Relation[] CyclicRelations { get; }
    parameters: []
    return:
      type: TimeCockpit.Data.DataModel.Relation[]
    content.vb: Public ReadOnly Property CyclicRelations As Relation()
  overload: TimeCockpit.Data.DataModel.ModelEntityBase.CyclicRelations*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TimeCockpit.Data.DataModel.ModelEntityBase.ValidationRules
  commentId: P:TimeCockpit.Data.DataModel.ModelEntityBase.ValidationRules
  id: ValidationRules
  parent: TimeCockpit.Data.DataModel.ModelEntityBase
  langs:
  - csharp
  - vb
  name: ValidationRules
  nameWithType: ModelEntityBase.ValidationRules
  fullName: TimeCockpit.Data.DataModel.ModelEntityBase.ValidationRules
  type: Property
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel
  summary: "\nGets the collection of the validation of the dimension\n"
  syntax:
    content: public ModelCollection<ValidationRule> ValidationRules { get; }
    parameters: []
    return:
      type: TimeCockpit.Data.DataModel.ModelCollection{TimeCockpit.Data.DataModel.ValidationRule}
    content.vb: Public ReadOnly Property ValidationRules As ModelCollection(Of ValidationRule)
  overload: TimeCockpit.Data.DataModel.ModelEntityBase.ValidationRules*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TimeCockpit.Data.DataModel.ModelEntityBase.ImplementedInterfaces
  commentId: P:TimeCockpit.Data.DataModel.ModelEntityBase.ImplementedInterfaces
  id: ImplementedInterfaces
  parent: TimeCockpit.Data.DataModel.ModelEntityBase
  langs:
  - csharp
  - vb
  name: ImplementedInterfaces
  nameWithType: ModelEntityBase.ImplementedInterfaces
  fullName: TimeCockpit.Data.DataModel.ModelEntityBase.ImplementedInterfaces
  type: Property
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel
  summary: "\nGets the collection used to store the interfaces implemented by this model entity\n"
  remarks: "\n<p>\n  If you need to add/remove implemented interfaces by name (commonly needed in script\n  languages) use <xref href=\"TimeCockpit.Data.DataModel.ModelEntityBase.AddImplementedInterface(System.String)\" data-throw-if-not-resolved=\"false\"></xref>/<xref href=\"TimeCockpit.Data.DataModel.ModelEntityBase.RemoveImplementedInterface(System.String)\" data-throw-if-not-resolved=\"false\"></xref>.\n</p>\n"
  syntax:
    content: public ModelCollection<ModelEntityInterface> ImplementedInterfaces { get; }
    parameters: []
    return:
      type: TimeCockpit.Data.DataModel.ModelCollection{TimeCockpit.Data.DataModel.ModelEntityInterface}
    content.vb: Public ReadOnly Property ImplementedInterfaces As ModelCollection(Of ModelEntityInterface)
  overload: TimeCockpit.Data.DataModel.ModelEntityBase.ImplementedInterfaces*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TimeCockpit.Data.DataModel.ModelEntityBase.Permissions
  commentId: P:TimeCockpit.Data.DataModel.ModelEntityBase.Permissions
  id: Permissions
  parent: TimeCockpit.Data.DataModel.ModelEntityBase
  langs:
  - csharp
  - vb
  name: Permissions
  nameWithType: ModelEntityBase.Permissions
  fullName: TimeCockpit.Data.DataModel.ModelEntityBase.Permissions
  type: Property
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel
  summary: "\nGets the read permissions of the <xref href=\"TimeCockpit.Data.DataModel.ModelEntityBase\" data-throw-if-not-resolved=\"false\"></xref>\n"
  syntax:
    content: public ModelCollection<Permission> Permissions { get; }
    parameters: []
    return:
      type: TimeCockpit.Data.DataModel.ModelCollection{TimeCockpit.Data.Security.Permission}
    content.vb: Public ReadOnly Property Permissions As ModelCollection(Of Permission)
  overload: TimeCockpit.Data.DataModel.ModelEntityBase.Permissions*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TimeCockpit.Data.DataModel.ModelEntityBase.SyncBehavior
  commentId: P:TimeCockpit.Data.DataModel.ModelEntityBase.SyncBehavior
  id: SyncBehavior
  parent: TimeCockpit.Data.DataModel.ModelEntityBase
  langs:
  - csharp
  - vb
  name: SyncBehavior
  nameWithType: ModelEntityBase.SyncBehavior
  fullName: TimeCockpit.Data.DataModel.ModelEntityBase.SyncBehavior
  type: Property
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel
  summary: "\nGets or sets a value indicating whether a model entity is synced or not\n"
  syntax:
    content: public SyncContent SyncBehavior { get; set; }
    parameters: []
    return:
      type: TimeCockpit.Data.Sync.SyncContent
    content.vb: Public Property SyncBehavior As SyncContent
  overload: TimeCockpit.Data.DataModel.ModelEntityBase.SyncBehavior*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.DataModel.ModelEntityBase.IsDataSynced
  commentId: P:TimeCockpit.Data.DataModel.ModelEntityBase.IsDataSynced
  id: IsDataSynced
  parent: TimeCockpit.Data.DataModel.ModelEntityBase
  langs:
  - csharp
  - vb
  name: IsDataSynced
  nameWithType: ModelEntityBase.IsDataSynced
  fullName: TimeCockpit.Data.DataModel.ModelEntityBase.IsDataSynced
  type: Property
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel
  summary: "\nGets a value indicating whether records of a model entity are synced or not\n"
  syntax:
    content: public bool IsDataSynced { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsDataSynced As Boolean
  overload: TimeCockpit.Data.DataModel.ModelEntityBase.IsDataSynced*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TimeCockpit.Data.DataModel.ModelEntityBase.IsModelSynced
  commentId: P:TimeCockpit.Data.DataModel.ModelEntityBase.IsModelSynced
  id: IsModelSynced
  parent: TimeCockpit.Data.DataModel.ModelEntityBase
  langs:
  - csharp
  - vb
  name: IsModelSynced
  nameWithType: ModelEntityBase.IsModelSynced
  fullName: TimeCockpit.Data.DataModel.ModelEntityBase.IsModelSynced
  type: Property
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel
  summary: "\nGets a value indicating whether the model of a model entity is synced or not\n"
  syntax:
    content: public bool IsModelSynced { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsModelSynced As Boolean
  overload: TimeCockpit.Data.DataModel.ModelEntityBase.IsModelSynced*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TimeCockpit.Data.DataModel.ModelEntityBase.PersistBehavior
  commentId: P:TimeCockpit.Data.DataModel.ModelEntityBase.PersistBehavior
  id: PersistBehavior
  parent: TimeCockpit.Data.DataModel.ModelEntityBase
  langs:
  - csharp
  - vb
  name: PersistBehavior
  nameWithType: ModelEntityBase.PersistBehavior
  fullName: TimeCockpit.Data.DataModel.ModelEntityBase.PersistBehavior
  type: Property
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel
  summary: "\nGets or sets a value indicating whether the <code>ModelElement</code> instance should be persisted in \nthe database.\n"
  remarks: "\n<p>\n  The default value for this property is <xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"></xref>.\n</p>\n<p>\n  You should use this property if you need to create temporary model elements. These objects should not result in \n  changes in the database. Therefore they are marked as non-persistent.\n</p>\n<p>\n  Note that you have to set this property to false immediately after object creation if you do not want it\n  to be stored in the database. Changing the property value to false at a later point in time only prevents further\n  changes to the object to be written to the database. However, changing the value to false does never remove anything\n  from the database that has been written before!\n</p>\n<p>\nIf the PersistBehavior is set for a model entity, all depending properties and relations inherit the same persist behavior\nas their parent model entity.\n</p>\n"
  syntax:
    content: public override PersistBehavior PersistBehavior { get; set; }
    parameters: []
    return:
      type: TimeCockpit.Data.DataModel.PersistBehavior
    content.vb: Public Overrides Property PersistBehavior As PersistBehavior
  overridden: TimeCockpit.Data.DataModel.ModelElement.PersistBehavior
  overload: TimeCockpit.Data.DataModel.ModelEntityBase.PersistBehavior*
  modifiers.csharp:
  - public
  - override
  - get
  - set
  modifiers.vb:
  - Public
  - Overrides
- uid: TimeCockpit.Data.DataModel.ModelEntityBase.PersistedProperties
  commentId: P:TimeCockpit.Data.DataModel.ModelEntityBase.PersistedProperties
  id: PersistedProperties
  parent: TimeCockpit.Data.DataModel.ModelEntityBase
  langs:
  - csharp
  - vb
  name: PersistedProperties
  nameWithType: ModelEntityBase.PersistedProperties
  fullName: TimeCockpit.Data.DataModel.ModelEntityBase.PersistedProperties
  type: Property
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel
  summary: "\nGets the collection of persisted properties of the dimension.\n"
  remarks: >-
    Similar to <xref href="TimeCockpit.Data.DataModel.ModelEntityBase.Properties" data-throw-if-not-resolved="false"></xref>; filtered for instances of type <xref href="TimeCockpit.Data.DataModel.PersistedProperty" data-throw-if-not-resolved="false"></xref> and PersistBehavior.Full.

    This property is only used for the string templates building select statements.
  syntax:
    content: public IEnumerable<PersistedProperty> PersistedProperties { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.PersistedProperty}
    content.vb: Public ReadOnly Property PersistedProperties As IEnumerable(Of PersistedProperty)
  overload: TimeCockpit.Data.DataModel.ModelEntityBase.PersistedProperties*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TimeCockpit.Data.DataModel.ModelEntityBase.DependentModelEntities
  commentId: P:TimeCockpit.Data.DataModel.ModelEntityBase.DependentModelEntities
  id: DependentModelEntities
  parent: TimeCockpit.Data.DataModel.ModelEntityBase
  langs:
  - csharp
  - vb
  name: DependentModelEntities
  nameWithType: ModelEntityBase.DependentModelEntities
  fullName: TimeCockpit.Data.DataModel.ModelEntityBase.DependentModelEntities
  type: Property
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel
  summary: "\nGets the dependent model entities in the correct order for deletion.\n"
  syntax:
    content: public IEnumerable<Dependency> DependentModelEntities { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.Dependency}
    content.vb: Public ReadOnly Property DependentModelEntities As IEnumerable(Of Dependency)
  overload: TimeCockpit.Data.DataModel.ModelEntityBase.DependentModelEntities*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TimeCockpit.Data.DataModel.ModelEntityBase.DependentRelationPaths
  commentId: P:TimeCockpit.Data.DataModel.ModelEntityBase.DependentRelationPaths
  id: DependentRelationPaths
  parent: TimeCockpit.Data.DataModel.ModelEntityBase
  langs:
  - csharp
  - vb
  name: DependentRelationPaths
  nameWithType: ModelEntityBase.DependentRelationPaths
  fullName: TimeCockpit.Data.DataModel.ModelEntityBase.DependentRelationPaths
  type: Property
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel
  summary: "\nGets the dependent relation paths.\n"
  syntax:
    content: public IEnumerable<IEnumerable<Relation>> DependentRelationPaths { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.Relation}}
    content.vb: Public ReadOnly Property DependentRelationPaths As IEnumerable(Of IEnumerable(Of Relation))
  overload: TimeCockpit.Data.DataModel.ModelEntityBase.DependentRelationPaths*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TimeCockpit.Data.DataModel.ModelEntityBase.IsGenericRelationEntity
  commentId: P:TimeCockpit.Data.DataModel.ModelEntityBase.IsGenericRelationEntity
  id: IsGenericRelationEntity
  parent: TimeCockpit.Data.DataModel.ModelEntityBase
  langs:
  - csharp
  - vb
  name: IsGenericRelationEntity
  nameWithType: ModelEntityBase.IsGenericRelationEntity
  fullName: TimeCockpit.Data.DataModel.ModelEntityBase.IsGenericRelationEntity
  type: Property
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel
  summary: "\nGets or sets a value indicating whether this entity should act as a generic relation.\n"
  remarks: "\n<p>Generic relations allow to attach the entity to all other entities via a logical, generic link.\nSystem entities as well as other generic entities are excluded as possible link targets.\nThe related objects are persisted via non-foreign-key guid properties (&quot;ModelEntityUuid&quot; and &quot;EntityObjectUuid&quot;)\nwhich are automatically added to the model entity when this flag is set to true. Please be aware\nthat setting this flag to false will not remove those properties.</p>\n<p>The access to the related object is implemented by providing transient, non-persisted logical relation.\nFor each possible link target entity a logical relation named like the entity is automatically inserted when\nthe model is being loaded. Additionally we support a virtual property &quot;GenericRelation&quot; which also\nprovides in-memory access to the related object.</p>\n"
  syntax:
    content: public bool IsGenericRelationEntity { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsGenericRelationEntity As Boolean
  overload: TimeCockpit.Data.DataModel.ModelEntityBase.IsGenericRelationEntity*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.DataModel.ModelEntityBase.Triggers
  commentId: P:TimeCockpit.Data.DataModel.ModelEntityBase.Triggers
  id: Triggers
  parent: TimeCockpit.Data.DataModel.ModelEntityBase
  langs:
  - csharp
  - vb
  name: Triggers
  nameWithType: ModelEntityBase.Triggers
  fullName: TimeCockpit.Data.DataModel.ModelEntityBase.Triggers
  type: Property
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel
  summary: "\nGets or sets the triggers defined on the current instance \nof <xref href=\"TimeCockpit.Data.DataModel.ModelEntityBase\" data-throw-if-not-resolved=\"false\"></xref>\n"
  syntax:
    content: public ModelCollection<Trigger> Triggers { get; set; }
    parameters: []
    return:
      type: TimeCockpit.Data.DataModel.ModelCollection{TimeCockpit.Data.DataModel.Triggers.Trigger}
    content.vb: Public Property Triggers As ModelCollection(Of Trigger)
  overload: TimeCockpit.Data.DataModel.ModelEntityBase.Triggers*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.DataModel.ModelEntityBase.PreSaveTriggers
  commentId: P:TimeCockpit.Data.DataModel.ModelEntityBase.PreSaveTriggers
  id: PreSaveTriggers
  parent: TimeCockpit.Data.DataModel.ModelEntityBase
  langs:
  - csharp
  - vb
  name: PreSaveTriggers
  nameWithType: ModelEntityBase.PreSaveTriggers
  fullName: TimeCockpit.Data.DataModel.ModelEntityBase.PreSaveTriggers
  type: Property
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel
  summary: "\nGets the pre save trigger that are executed\nbefore an instance of the <xref href=\"TimeCockpit.Data.DataModel.ModelEntityBase\" data-throw-if-not-resolved=\"false\"></xref> (<xref href=\"TimeCockpit.Data.EntityObject\" data-throw-if-not-resolved=\"false\"></xref>)\nis saved.\n"
  syntax:
    content: public IEnumerable<Trigger> PreSaveTriggers { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.Triggers.Trigger}
    content.vb: Public ReadOnly Property PreSaveTriggers As IEnumerable(Of Trigger)
  overload: TimeCockpit.Data.DataModel.ModelEntityBase.PreSaveTriggers*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TimeCockpit.Data.DataModel.ModelEntityBase.PostSaveTriggers
  commentId: P:TimeCockpit.Data.DataModel.ModelEntityBase.PostSaveTriggers
  id: PostSaveTriggers
  parent: TimeCockpit.Data.DataModel.ModelEntityBase
  langs:
  - csharp
  - vb
  name: PostSaveTriggers
  nameWithType: ModelEntityBase.PostSaveTriggers
  fullName: TimeCockpit.Data.DataModel.ModelEntityBase.PostSaveTriggers
  type: Property
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel
  summary: "\nGets the post save trigger that are executed\nbefore an instance of the <xref href=\"TimeCockpit.Data.DataModel.ModelEntityBase\" data-throw-if-not-resolved=\"false\"></xref> (<xref href=\"TimeCockpit.Data.EntityObject\" data-throw-if-not-resolved=\"false\"></xref>)\nis saved.\n"
  syntax:
    content: public IEnumerable<Trigger> PostSaveTriggers { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.Triggers.Trigger}
    content.vb: Public ReadOnly Property PostSaveTriggers As IEnumerable(Of Trigger)
  overload: TimeCockpit.Data.DataModel.ModelEntityBase.PostSaveTriggers*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: TimeCockpit.Data.DataModel
  commentId: N:TimeCockpit.Data.DataModel
  isExternal: true
  name: TimeCockpit.Data.DataModel
  nameWithType: TimeCockpit.Data.DataModel
  fullName: TimeCockpit.Data.DataModel
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: TimeCockpit.Data.DynamicObject
  commentId: T:TimeCockpit.Data.DynamicObject
  parent: TimeCockpit.Data
  isExternal: true
  name: DynamicObject
  nameWithType: DynamicObject
  fullName: TimeCockpit.Data.DynamicObject
- uid: TimeCockpit.Data.DataModel.NamedDynamicObject
  commentId: T:TimeCockpit.Data.DataModel.NamedDynamicObject
  parent: TimeCockpit.Data.DataModel
  isExternal: true
  name: NamedDynamicObject
  nameWithType: NamedDynamicObject
  fullName: TimeCockpit.Data.DataModel.NamedDynamicObject
- uid: TimeCockpit.Data.DataModel.ModelElement
  commentId: T:TimeCockpit.Data.DataModel.ModelElement
  parent: TimeCockpit.Data.DataModel
  isExternal: true
  name: ModelElement
  nameWithType: ModelElement
  fullName: TimeCockpit.Data.DataModel.ModelElement
- uid: System.Dynamic.IDynamicMetaObjectProvider
  isExternal: true
  name: IDynamicMetaObjectProvider
  nameWithType: IDynamicMetaObjectProvider
  fullName: System.Dynamic.IDynamicMetaObjectProvider
- uid: System.ComponentModel.INotifyPropertyChanged
  isExternal: true
  name: INotifyPropertyChanged
  nameWithType: INotifyPropertyChanged
  fullName: System.ComponentModel.INotifyPropertyChanged
- uid: System.ComponentModel.IDataErrorInfo
  isExternal: true
  name: IDataErrorInfo
  nameWithType: IDataErrorInfo
  fullName: System.ComponentModel.IDataErrorInfo
- uid: TimeCockpit.Data.DataModel.ModelElement.IsValidIdentifier(System.String)
  commentId: M:TimeCockpit.Data.DataModel.ModelElement.IsValidIdentifier(System.String)
  parent: TimeCockpit.Data.DataModel.ModelElement
  isExternal: true
  name: IsValidIdentifier(String)
  nameWithType: ModelElement.IsValidIdentifier(String)
  fullName: TimeCockpit.Data.DataModel.ModelElement.IsValidIdentifier(System.String)
  spec.csharp:
  - uid: TimeCockpit.Data.DataModel.ModelElement.IsValidIdentifier(System.String)
    name: IsValidIdentifier
    nameWithType: ModelElement.IsValidIdentifier
    fullName: TimeCockpit.Data.DataModel.ModelElement.IsValidIdentifier
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TimeCockpit.Data.DataModel.ModelElement.IsValidIdentifier(System.String)
    name: IsValidIdentifier
    nameWithType: ModelElement.IsValidIdentifier
    fullName: TimeCockpit.Data.DataModel.ModelElement.IsValidIdentifier
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.DataModel.ModelElement.Detach
  commentId: M:TimeCockpit.Data.DataModel.ModelElement.Detach
  parent: TimeCockpit.Data.DataModel.ModelElement
  isExternal: true
  name: Detach()
  nameWithType: ModelElement.Detach()
  fullName: TimeCockpit.Data.DataModel.ModelElement.Detach()
  spec.csharp:
  - uid: TimeCockpit.Data.DataModel.ModelElement.Detach
    name: Detach
    nameWithType: ModelElement.Detach
    fullName: TimeCockpit.Data.DataModel.ModelElement.Detach
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TimeCockpit.Data.DataModel.ModelElement.Detach
    name: Detach
    nameWithType: ModelElement.Detach
    fullName: TimeCockpit.Data.DataModel.ModelElement.Detach
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.DataModel.ModelElement.SetOwnershipPrefix(System.String)
  commentId: M:TimeCockpit.Data.DataModel.ModelElement.SetOwnershipPrefix(System.String)
  parent: TimeCockpit.Data.DataModel.ModelElement
  isExternal: true
  name: SetOwnershipPrefix(String)
  nameWithType: ModelElement.SetOwnershipPrefix(String)
  fullName: TimeCockpit.Data.DataModel.ModelElement.SetOwnershipPrefix(System.String)
  spec.csharp:
  - uid: TimeCockpit.Data.DataModel.ModelElement.SetOwnershipPrefix(System.String)
    name: SetOwnershipPrefix
    nameWithType: ModelElement.SetOwnershipPrefix
    fullName: TimeCockpit.Data.DataModel.ModelElement.SetOwnershipPrefix
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TimeCockpit.Data.DataModel.ModelElement.SetOwnershipPrefix(System.String)
    name: SetOwnershipPrefix
    nameWithType: ModelElement.SetOwnershipPrefix
    fullName: TimeCockpit.Data.DataModel.ModelElement.SetOwnershipPrefix
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.DataModel.ModelElement.UpdateChildren(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  commentId: M:TimeCockpit.Data.DataModel.ModelElement.UpdateChildren(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  parent: TimeCockpit.Data.DataModel.ModelElement
  isExternal: true
  name: UpdateChildren(NotifyCollectionChangedEventArgs)
  nameWithType: ModelElement.UpdateChildren(NotifyCollectionChangedEventArgs)
  fullName: TimeCockpit.Data.DataModel.ModelElement.UpdateChildren(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  spec.csharp:
  - uid: TimeCockpit.Data.DataModel.ModelElement.UpdateChildren(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
    name: UpdateChildren
    nameWithType: ModelElement.UpdateChildren
    fullName: TimeCockpit.Data.DataModel.ModelElement.UpdateChildren
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    name: NotifyCollectionChangedEventArgs
    nameWithType: NotifyCollectionChangedEventArgs
    fullName: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TimeCockpit.Data.DataModel.ModelElement.UpdateChildren(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
    name: UpdateChildren
    nameWithType: ModelElement.UpdateChildren
    fullName: TimeCockpit.Data.DataModel.ModelElement.UpdateChildren
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    name: NotifyCollectionChangedEventArgs
    nameWithType: NotifyCollectionChangedEventArgs
    fullName: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.DataModel.ModelElement.SetPersistBehavior(TimeCockpit.Data.DataModel.PersistBehavior)
  commentId: M:TimeCockpit.Data.DataModel.ModelElement.SetPersistBehavior(TimeCockpit.Data.DataModel.PersistBehavior)
  parent: TimeCockpit.Data.DataModel.ModelElement
  isExternal: true
  name: SetPersistBehavior(PersistBehavior)
  nameWithType: ModelElement.SetPersistBehavior(PersistBehavior)
  fullName: TimeCockpit.Data.DataModel.ModelElement.SetPersistBehavior(TimeCockpit.Data.DataModel.PersistBehavior)
  spec.csharp:
  - uid: TimeCockpit.Data.DataModel.ModelElement.SetPersistBehavior(TimeCockpit.Data.DataModel.PersistBehavior)
    name: SetPersistBehavior
    nameWithType: ModelElement.SetPersistBehavior
    fullName: TimeCockpit.Data.DataModel.ModelElement.SetPersistBehavior
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: TimeCockpit.Data.DataModel.PersistBehavior
    name: PersistBehavior
    nameWithType: PersistBehavior
    fullName: TimeCockpit.Data.DataModel.PersistBehavior
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TimeCockpit.Data.DataModel.ModelElement.SetPersistBehavior(TimeCockpit.Data.DataModel.PersistBehavior)
    name: SetPersistBehavior
    nameWithType: ModelElement.SetPersistBehavior
    fullName: TimeCockpit.Data.DataModel.ModelElement.SetPersistBehavior
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: TimeCockpit.Data.DataModel.PersistBehavior
    name: PersistBehavior
    nameWithType: PersistBehavior
    fullName: TimeCockpit.Data.DataModel.PersistBehavior
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.DataModel.ModelElement.SetName(System.String)
  commentId: M:TimeCockpit.Data.DataModel.ModelElement.SetName(System.String)
  parent: TimeCockpit.Data.DataModel.ModelElement
  isExternal: true
  name: SetName(String)
  nameWithType: ModelElement.SetName(String)
  fullName: TimeCockpit.Data.DataModel.ModelElement.SetName(System.String)
  spec.csharp:
  - uid: TimeCockpit.Data.DataModel.ModelElement.SetName(System.String)
    name: SetName
    nameWithType: ModelElement.SetName
    fullName: TimeCockpit.Data.DataModel.ModelElement.SetName
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TimeCockpit.Data.DataModel.ModelElement.SetName(System.String)
    name: SetName
    nameWithType: ModelElement.SetName
    fullName: TimeCockpit.Data.DataModel.ModelElement.SetName
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.DataModel.ModelElement.SetOwnership(TimeCockpit.Data.DataModel.Ownership)
  commentId: M:TimeCockpit.Data.DataModel.ModelElement.SetOwnership(TimeCockpit.Data.DataModel.Ownership)
  parent: TimeCockpit.Data.DataModel.ModelElement
  isExternal: true
  name: SetOwnership(Ownership)
  nameWithType: ModelElement.SetOwnership(Ownership)
  fullName: TimeCockpit.Data.DataModel.ModelElement.SetOwnership(TimeCockpit.Data.DataModel.Ownership)
  spec.csharp:
  - uid: TimeCockpit.Data.DataModel.ModelElement.SetOwnership(TimeCockpit.Data.DataModel.Ownership)
    name: SetOwnership
    nameWithType: ModelElement.SetOwnership
    fullName: TimeCockpit.Data.DataModel.ModelElement.SetOwnership
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: TimeCockpit.Data.DataModel.Ownership
    name: Ownership
    nameWithType: Ownership
    fullName: TimeCockpit.Data.DataModel.Ownership
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TimeCockpit.Data.DataModel.ModelElement.SetOwnership(TimeCockpit.Data.DataModel.Ownership)
    name: SetOwnership
    nameWithType: ModelElement.SetOwnership
    fullName: TimeCockpit.Data.DataModel.ModelElement.SetOwnership
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: TimeCockpit.Data.DataModel.Ownership
    name: Ownership
    nameWithType: Ownership
    fullName: TimeCockpit.Data.DataModel.Ownership
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.DataModel.ModelElement.ElementGuid
  commentId: P:TimeCockpit.Data.DataModel.ModelElement.ElementGuid
  parent: TimeCockpit.Data.DataModel.ModelElement
  isExternal: true
  name: ElementGuid
  nameWithType: ModelElement.ElementGuid
  fullName: TimeCockpit.Data.DataModel.ModelElement.ElementGuid
- uid: TimeCockpit.Data.DataModel.ModelElement.Name
  commentId: P:TimeCockpit.Data.DataModel.ModelElement.Name
  parent: TimeCockpit.Data.DataModel.ModelElement
  isExternal: true
  name: Name
  nameWithType: ModelElement.Name
  fullName: TimeCockpit.Data.DataModel.ModelElement.Name
- uid: TimeCockpit.Data.DataModel.ModelElement.Parent
  commentId: P:TimeCockpit.Data.DataModel.ModelElement.Parent
  parent: TimeCockpit.Data.DataModel.ModelElement
  isExternal: true
  name: Parent
  nameWithType: ModelElement.Parent
  fullName: TimeCockpit.Data.DataModel.ModelElement.Parent
- uid: TimeCockpit.Data.DataModel.ModelElement.Children
  commentId: P:TimeCockpit.Data.DataModel.ModelElement.Children
  parent: TimeCockpit.Data.DataModel.ModelElement
  isExternal: true
  name: Children
  nameWithType: ModelElement.Children
  fullName: TimeCockpit.Data.DataModel.ModelElement.Children
- uid: TimeCockpit.Data.DataModel.ModelElement.IsFullPersistBehavior
  commentId: P:TimeCockpit.Data.DataModel.ModelElement.IsFullPersistBehavior
  parent: TimeCockpit.Data.DataModel.ModelElement
  isExternal: true
  name: IsFullPersistBehavior
  nameWithType: ModelElement.IsFullPersistBehavior
  fullName: TimeCockpit.Data.DataModel.ModelElement.IsFullPersistBehavior
- uid: TimeCockpit.Data.DataModel.ModelElement.IsNonePersistBehavior
  commentId: P:TimeCockpit.Data.DataModel.ModelElement.IsNonePersistBehavior
  parent: TimeCockpit.Data.DataModel.ModelElement
  isExternal: true
  name: IsNonePersistBehavior
  nameWithType: ModelElement.IsNonePersistBehavior
  fullName: TimeCockpit.Data.DataModel.ModelElement.IsNonePersistBehavior
- uid: TimeCockpit.Data.DataModel.ModelElement.IsSystemElement
  commentId: P:TimeCockpit.Data.DataModel.ModelElement.IsSystemElement
  parent: TimeCockpit.Data.DataModel.ModelElement
  isExternal: true
  name: IsSystemElement
  nameWithType: ModelElement.IsSystemElement
  fullName: TimeCockpit.Data.DataModel.ModelElement.IsSystemElement
- uid: TimeCockpit.Data.DataModel.ModelElement.IsApplicationSpecificElement
  commentId: P:TimeCockpit.Data.DataModel.ModelElement.IsApplicationSpecificElement
  parent: TimeCockpit.Data.DataModel.ModelElement
  isExternal: true
  name: IsApplicationSpecificElement
  nameWithType: ModelElement.IsApplicationSpecificElement
  fullName: TimeCockpit.Data.DataModel.ModelElement.IsApplicationSpecificElement
- uid: TimeCockpit.Data.DataModel.ModelElement.IsUserElement
  commentId: P:TimeCockpit.Data.DataModel.ModelElement.IsUserElement
  parent: TimeCockpit.Data.DataModel.ModelElement
  isExternal: true
  name: IsUserElement
  nameWithType: ModelElement.IsUserElement
  fullName: TimeCockpit.Data.DataModel.ModelElement.IsUserElement
- uid: TimeCockpit.Data.DataModel.ModelElement.IsSystemOrApplicationSpecificElement
  commentId: P:TimeCockpit.Data.DataModel.ModelElement.IsSystemOrApplicationSpecificElement
  parent: TimeCockpit.Data.DataModel.ModelElement
  isExternal: true
  name: IsSystemOrApplicationSpecificElement
  nameWithType: ModelElement.IsSystemOrApplicationSpecificElement
  fullName: TimeCockpit.Data.DataModel.ModelElement.IsSystemOrApplicationSpecificElement
- uid: TimeCockpit.Data.DataModel.ModelElement.InvariantFriendlyName
  commentId: P:TimeCockpit.Data.DataModel.ModelElement.InvariantFriendlyName
  parent: TimeCockpit.Data.DataModel.ModelElement
  isExternal: true
  name: InvariantFriendlyName
  nameWithType: ModelElement.InvariantFriendlyName
  fullName: TimeCockpit.Data.DataModel.ModelElement.InvariantFriendlyName
- uid: TimeCockpit.Data.DataModel.ModelElement.CreationVersion
  commentId: P:TimeCockpit.Data.DataModel.ModelElement.CreationVersion
  parent: TimeCockpit.Data.DataModel.ModelElement
  isExternal: true
  name: CreationVersion
  nameWithType: ModelElement.CreationVersion
  fullName: TimeCockpit.Data.DataModel.ModelElement.CreationVersion
- uid: TimeCockpit.Data.DataModel.ModelElement.LastUpdateVersion
  commentId: P:TimeCockpit.Data.DataModel.ModelElement.LastUpdateVersion
  parent: TimeCockpit.Data.DataModel.ModelElement
  isExternal: true
  name: LastUpdateVersion
  nameWithType: ModelElement.LastUpdateVersion
  fullName: TimeCockpit.Data.DataModel.ModelElement.LastUpdateVersion
- uid: TimeCockpit.Data.DataModel.ModelElement.Error
  commentId: P:TimeCockpit.Data.DataModel.ModelElement.Error
  parent: TimeCockpit.Data.DataModel.ModelElement
  isExternal: true
  name: Error
  nameWithType: ModelElement.Error
  fullName: TimeCockpit.Data.DataModel.ModelElement.Error
- uid: TimeCockpit.Data.DataModel.ModelElement.ErrorSummary
  commentId: P:TimeCockpit.Data.DataModel.ModelElement.ErrorSummary
  parent: TimeCockpit.Data.DataModel.ModelElement
  isExternal: true
  name: ErrorSummary
  nameWithType: ModelElement.ErrorSummary
  fullName: TimeCockpit.Data.DataModel.ModelElement.ErrorSummary
- uid: TimeCockpit.Data.DataModel.ModelElement.IsValid
  commentId: P:TimeCockpit.Data.DataModel.ModelElement.IsValid
  parent: TimeCockpit.Data.DataModel.ModelElement
  isExternal: true
  name: IsValid
  nameWithType: ModelElement.IsValid
  fullName: TimeCockpit.Data.DataModel.ModelElement.IsValid
- uid: TimeCockpit.Data.DataModel.ModelElement.Ownership
  commentId: P:TimeCockpit.Data.DataModel.ModelElement.Ownership
  parent: TimeCockpit.Data.DataModel.ModelElement
  isExternal: true
  name: Ownership
  nameWithType: ModelElement.Ownership
  fullName: TimeCockpit.Data.DataModel.ModelElement.Ownership
- uid: TimeCockpit.Data.DataModel.ModelElement.OwnershipPrefix
  commentId: P:TimeCockpit.Data.DataModel.ModelElement.OwnershipPrefix
  parent: TimeCockpit.Data.DataModel.ModelElement
  isExternal: true
  name: OwnershipPrefix
  nameWithType: ModelElement.OwnershipPrefix
  fullName: TimeCockpit.Data.DataModel.ModelElement.OwnershipPrefix
- uid: TimeCockpit.Data.DataModel.ModelElement.NonPrefixedName
  commentId: P:TimeCockpit.Data.DataModel.ModelElement.NonPrefixedName
  parent: TimeCockpit.Data.DataModel.ModelElement
  isExternal: true
  name: NonPrefixedName
  nameWithType: ModelElement.NonPrefixedName
  fullName: TimeCockpit.Data.DataModel.ModelElement.NonPrefixedName
- uid: TimeCockpit.Data.DataModel.NamedDynamicObject.OnPropertyChanged(System.String)
  commentId: M:TimeCockpit.Data.DataModel.NamedDynamicObject.OnPropertyChanged(System.String)
  parent: TimeCockpit.Data.DataModel.NamedDynamicObject
  isExternal: true
  name: OnPropertyChanged(String)
  nameWithType: NamedDynamicObject.OnPropertyChanged(String)
  fullName: TimeCockpit.Data.DataModel.NamedDynamicObject.OnPropertyChanged(System.String)
  spec.csharp:
  - uid: TimeCockpit.Data.DataModel.NamedDynamicObject.OnPropertyChanged(System.String)
    name: OnPropertyChanged
    nameWithType: NamedDynamicObject.OnPropertyChanged
    fullName: TimeCockpit.Data.DataModel.NamedDynamicObject.OnPropertyChanged
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TimeCockpit.Data.DataModel.NamedDynamicObject.OnPropertyChanged(System.String)
    name: OnPropertyChanged
    nameWithType: NamedDynamicObject.OnPropertyChanged
    fullName: TimeCockpit.Data.DataModel.NamedDynamicObject.OnPropertyChanged
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.DataModel.NamedDynamicObject.PropertyChanged
  commentId: E:TimeCockpit.Data.DataModel.NamedDynamicObject.PropertyChanged
  parent: TimeCockpit.Data.DataModel.NamedDynamicObject
  isExternal: true
  name: PropertyChanged
  nameWithType: NamedDynamicObject.PropertyChanged
  fullName: TimeCockpit.Data.DataModel.NamedDynamicObject.PropertyChanged
- uid: TimeCockpit.Data.DynamicObject.SetMember(System.String,System.Object)
  commentId: M:TimeCockpit.Data.DynamicObject.SetMember(System.String,System.Object)
  parent: TimeCockpit.Data.DynamicObject
  isExternal: true
  name: SetMember(String, Object)
  nameWithType: DynamicObject.SetMember(String, Object)
  fullName: TimeCockpit.Data.DynamicObject.SetMember(System.String, System.Object)
  spec.csharp:
  - uid: TimeCockpit.Data.DynamicObject.SetMember(System.String,System.Object)
    name: SetMember
    nameWithType: DynamicObject.SetMember
    fullName: TimeCockpit.Data.DynamicObject.SetMember
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TimeCockpit.Data.DynamicObject.SetMember(System.String,System.Object)
    name: SetMember
    nameWithType: DynamicObject.SetMember
    fullName: TimeCockpit.Data.DynamicObject.SetMember
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.DynamicObject.GetMetaObject(System.Linq.Expressions.Expression)
  commentId: M:TimeCockpit.Data.DynamicObject.GetMetaObject(System.Linq.Expressions.Expression)
  parent: TimeCockpit.Data.DynamicObject
  isExternal: true
  name: GetMetaObject(Expression)
  nameWithType: DynamicObject.GetMetaObject(Expression)
  fullName: TimeCockpit.Data.DynamicObject.GetMetaObject(System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: TimeCockpit.Data.DynamicObject.GetMetaObject(System.Linq.Expressions.Expression)
    name: GetMetaObject
    nameWithType: DynamicObject.GetMetaObject
    fullName: TimeCockpit.Data.DynamicObject.GetMetaObject
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TimeCockpit.Data.DynamicObject.GetMetaObject(System.Linq.Expressions.Expression)
    name: GetMetaObject
    nameWithType: DynamicObject.GetMetaObject
    fullName: TimeCockpit.Data.DynamicObject.GetMetaObject
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TimeCockpit.Data
  commentId: N:TimeCockpit.Data
  isExternal: true
  name: TimeCockpit.Data
  nameWithType: TimeCockpit.Data
  fullName: TimeCockpit.Data
- uid: TimeCockpit.Data.DataModel.ModelEntityBase.#ctor*
  commentId: Overload:TimeCockpit.Data.DataModel.ModelEntityBase.#ctor
  isExternal: true
  name: ModelEntityBase
  nameWithType: ModelEntityBase.ModelEntityBase
  fullName: TimeCockpit.Data.DataModel.ModelEntityBase.ModelEntityBase
- uid: TimeCockpit.Data.DataModel.ModelEntityBase
  commentId: T:TimeCockpit.Data.DataModel.ModelEntityBase
  parent: TimeCockpit.Data.DataModel
  isExternal: true
  name: ModelEntityBase
  nameWithType: ModelEntityBase
  fullName: TimeCockpit.Data.DataModel.ModelEntityBase
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Object,System.Object}}
  commentId: T:System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Object,System.Object}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<KeyValuePair<Object, Object>>
  nameWithType: IEnumerable<KeyValuePair<Object, Object>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.Object, System.Object>>
  nameWithType.vb: IEnumerable(Of KeyValuePair(Of Object, Object))
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.Object, System.Object))
  name.vb: IEnumerable(Of KeyValuePair(Of Object, Object))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: TimeCockpit.Data.DataModel.ModelElement.Accept(TimeCockpit.Data.DataModel.ModelElementVisitor)
  commentId: M:TimeCockpit.Data.DataModel.ModelElement.Accept(TimeCockpit.Data.DataModel.ModelElementVisitor)
  parent: TimeCockpit.Data.DataModel.ModelElement
  isExternal: true
  name: Accept(ModelElementVisitor)
  nameWithType: ModelElement.Accept(ModelElementVisitor)
  fullName: TimeCockpit.Data.DataModel.ModelElement.Accept(TimeCockpit.Data.DataModel.ModelElementVisitor)
  spec.csharp:
  - uid: TimeCockpit.Data.DataModel.ModelElement.Accept(TimeCockpit.Data.DataModel.ModelElementVisitor)
    name: Accept
    nameWithType: ModelElement.Accept
    fullName: TimeCockpit.Data.DataModel.ModelElement.Accept
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: TimeCockpit.Data.DataModel.ModelElementVisitor
    name: ModelElementVisitor
    nameWithType: ModelElementVisitor
    fullName: TimeCockpit.Data.DataModel.ModelElementVisitor
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TimeCockpit.Data.DataModel.ModelElement.Accept(TimeCockpit.Data.DataModel.ModelElementVisitor)
    name: Accept
    nameWithType: ModelElement.Accept
    fullName: TimeCockpit.Data.DataModel.ModelElement.Accept
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: TimeCockpit.Data.DataModel.ModelElementVisitor
    name: ModelElementVisitor
    nameWithType: ModelElementVisitor
    fullName: TimeCockpit.Data.DataModel.ModelElementVisitor
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.DataModel.ModelEntityBase.Accept*
  commentId: Overload:TimeCockpit.Data.DataModel.ModelEntityBase.Accept
  isExternal: true
  name: Accept
  nameWithType: ModelEntityBase.Accept
  fullName: TimeCockpit.Data.DataModel.ModelEntityBase.Accept
- uid: TimeCockpit.Data.DataModel.ModelElementVisitor
  commentId: T:TimeCockpit.Data.DataModel.ModelElementVisitor
  parent: TimeCockpit.Data.DataModel
  isExternal: true
  name: ModelElementVisitor
  nameWithType: ModelElementVisitor
  fullName: TimeCockpit.Data.DataModel.ModelElementVisitor
- uid: TimeCockpit.Data.DataModel.ModelEntityBase.OnDeserializing*
  commentId: Overload:TimeCockpit.Data.DataModel.ModelEntityBase.OnDeserializing
  isExternal: true
  name: OnDeserializing
  nameWithType: ModelEntityBase.OnDeserializing
  fullName: TimeCockpit.Data.DataModel.ModelEntityBase.OnDeserializing
- uid: System.Runtime.Serialization.StreamingContext
  commentId: T:System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Runtime.Serialization
  commentId: N:System.Runtime.Serialization
  isExternal: true
  name: System.Runtime.Serialization
  nameWithType: System.Runtime.Serialization
  fullName: System.Runtime.Serialization
- uid: TimeCockpit.Data.DynamicObject.GetMember(System.String)
  commentId: M:TimeCockpit.Data.DynamicObject.GetMember(System.String)
  parent: TimeCockpit.Data.DynamicObject
  isExternal: true
  name: GetMember(String)
  nameWithType: DynamicObject.GetMember(String)
  fullName: TimeCockpit.Data.DynamicObject.GetMember(System.String)
  spec.csharp:
  - uid: TimeCockpit.Data.DynamicObject.GetMember(System.String)
    name: GetMember
    nameWithType: DynamicObject.GetMember
    fullName: TimeCockpit.Data.DynamicObject.GetMember
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TimeCockpit.Data.DynamicObject.GetMember(System.String)
    name: GetMember
    nameWithType: DynamicObject.GetMember
    fullName: TimeCockpit.Data.DynamicObject.GetMember
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.DataModel.ModelEntityBase.GetMember*
  commentId: Overload:TimeCockpit.Data.DataModel.ModelEntityBase.GetMember
  isExternal: true
  name: GetMember
  nameWithType: ModelEntityBase.GetMember
  fullName: TimeCockpit.Data.DataModel.ModelEntityBase.GetMember
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: TimeCockpit.Data.DataModel.ModelEntityBase.AddImplementedInterface*
  commentId: Overload:TimeCockpit.Data.DataModel.ModelEntityBase.AddImplementedInterface
  isExternal: true
  name: AddImplementedInterface
  nameWithType: ModelEntityBase.AddImplementedInterface
  fullName: TimeCockpit.Data.DataModel.ModelEntityBase.AddImplementedInterface
- uid: TimeCockpit.Data.DataModel.ModelEntityBase.Evaluate*
  commentId: Overload:TimeCockpit.Data.DataModel.ModelEntityBase.Evaluate
  isExternal: true
  name: Evaluate
  nameWithType: ModelEntityBase.Evaluate
  fullName: TimeCockpit.Data.DataModel.ModelEntityBase.Evaluate
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: TimeCockpit.Data.Environment
  commentId: T:TimeCockpit.Data.Environment
  parent: TimeCockpit.Data
  isExternal: true
  name: Environment
  nameWithType: Environment
  fullName: TimeCockpit.Data.Environment
- uid: System.Collections.Generic.IEnumerable{TimeCockpit.Data.QueryLanguage.QueryParameter}
  commentId: T:System.Collections.Generic.IEnumerable{TimeCockpit.Data.QueryLanguage.QueryParameter}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<QueryParameter>
  nameWithType: IEnumerable<QueryParameter>
  fullName: System.Collections.Generic.IEnumerable<TimeCockpit.Data.QueryLanguage.QueryParameter>
  nameWithType.vb: IEnumerable(Of QueryParameter)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TimeCockpit.Data.QueryLanguage.QueryParameter)
  name.vb: IEnumerable(Of QueryParameter)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TimeCockpit.Data.QueryLanguage.QueryParameter
    name: QueryParameter
    nameWithType: QueryParameter
    fullName: TimeCockpit.Data.QueryLanguage.QueryParameter
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TimeCockpit.Data.QueryLanguage.QueryParameter
    name: QueryParameter
    nameWithType: QueryParameter
    fullName: TimeCockpit.Data.QueryLanguage.QueryParameter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.EntityObject
  commentId: T:TimeCockpit.Data.EntityObject
  parent: TimeCockpit.Data
  isExternal: true
  name: EntityObject
  nameWithType: EntityObject
  fullName: TimeCockpit.Data.EntityObject
- uid: TimeCockpit.Data.DataModel.ModelEntityBase.RemoveImplementedInterface*
  commentId: Overload:TimeCockpit.Data.DataModel.ModelEntityBase.RemoveImplementedInterface
  isExternal: true
  name: RemoveImplementedInterface
  nameWithType: ModelEntityBase.RemoveImplementedInterface
  fullName: TimeCockpit.Data.DataModel.ModelEntityBase.RemoveImplementedInterface
- uid: TimeCockpit.Data.DataModel.ModelEntityBase.NewInstance*
  commentId: Overload:TimeCockpit.Data.DataModel.ModelEntityBase.NewInstance
  isExternal: true
  name: NewInstance
  nameWithType: ModelEntityBase.NewInstance
  fullName: TimeCockpit.Data.DataModel.ModelEntityBase.NewInstance
- uid: TimeCockpit.Data.DataModel.ModelEntityBase.CreateEntityObject*
  commentId: Overload:TimeCockpit.Data.DataModel.ModelEntityBase.CreateEntityObject
  isExternal: true
  name: CreateEntityObject
  nameWithType: ModelEntityBase.CreateEntityObject
  fullName: TimeCockpit.Data.DataModel.ModelEntityBase.CreateEntityObject
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  isExternal: true
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: TimeCockpit.Data.DataModel.ModelEntityBase.CreateAuditTrailMessage*
  commentId: Overload:TimeCockpit.Data.DataModel.ModelEntityBase.CreateAuditTrailMessage
  isExternal: true
  name: CreateAuditTrailMessage
  nameWithType: ModelEntityBase.CreateAuditTrailMessage
  fullName: TimeCockpit.Data.DataModel.ModelEntityBase.CreateAuditTrailMessage
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
  isExternal: true
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.DataModel.ModelEntityBase.ToString*
  commentId: Overload:TimeCockpit.Data.DataModel.ModelEntityBase.ToString
  isExternal: true
  name: ToString
  nameWithType: ModelEntityBase.ToString
  fullName: TimeCockpit.Data.DataModel.ModelEntityBase.ToString
- uid: TimeCockpit.Data.DataModel.ModelEntityBase.GetAutoIncludedRelations*
  commentId: Overload:TimeCockpit.Data.DataModel.ModelEntityBase.GetAutoIncludedRelations
  isExternal: true
  name: GetAutoIncludedRelations
  nameWithType: ModelEntityBase.GetAutoIncludedRelations
  fullName: TimeCockpit.Data.DataModel.ModelEntityBase.GetAutoIncludedRelations
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<String>
  nameWithType: List<String>
  fullName: System.Collections.Generic.List<System.String>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of System.String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.DataModel.ModelEntityBase.Attach*
  commentId: Overload:TimeCockpit.Data.DataModel.ModelEntityBase.Attach
  isExternal: true
  name: Attach
  nameWithType: ModelEntityBase.Attach
  fullName: TimeCockpit.Data.DataModel.ModelEntityBase.Attach
- uid: TimeCockpit.Data.DataModel.ModelElement.Attach(TimeCockpit.Data.DataModel.ModelElement)
  commentId: M:TimeCockpit.Data.DataModel.ModelElement.Attach(TimeCockpit.Data.DataModel.ModelElement)
  parent: TimeCockpit.Data.DataModel.ModelElement
  isExternal: true
  name: Attach(ModelElement)
  nameWithType: ModelElement.Attach(ModelElement)
  fullName: TimeCockpit.Data.DataModel.ModelElement.Attach(TimeCockpit.Data.DataModel.ModelElement)
  spec.csharp:
  - uid: TimeCockpit.Data.DataModel.ModelElement.Attach(TimeCockpit.Data.DataModel.ModelElement)
    name: Attach
    nameWithType: ModelElement.Attach
    fullName: TimeCockpit.Data.DataModel.ModelElement.Attach
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: TimeCockpit.Data.DataModel.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: TimeCockpit.Data.DataModel.ModelElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TimeCockpit.Data.DataModel.ModelElement.Attach(TimeCockpit.Data.DataModel.ModelElement)
    name: Attach
    nameWithType: ModelElement.Attach
    fullName: TimeCockpit.Data.DataModel.ModelElement.Attach
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: TimeCockpit.Data.DataModel.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: TimeCockpit.Data.DataModel.ModelElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.DataModel.ModelElement.Validate(System.Collections.Generic.IList{TimeCockpit.Data.DataModel.PropertyValidationMessage}@,System.Boolean)
  commentId: M:TimeCockpit.Data.DataModel.ModelElement.Validate(System.Collections.Generic.IList{TimeCockpit.Data.DataModel.PropertyValidationMessage}@,System.Boolean)
  parent: TimeCockpit.Data.DataModel.ModelElement
  isExternal: true
  name: Validate(IList<PropertyValidationMessage>, Boolean)
  nameWithType: ModelElement.Validate(IList<PropertyValidationMessage>, Boolean)
  fullName: TimeCockpit.Data.DataModel.ModelElement.Validate(System.Collections.Generic.IList<TimeCockpit.Data.DataModel.PropertyValidationMessage>, System.Boolean)
  nameWithType.vb: ModelElement.Validate(IList(Of PropertyValidationMessage), Boolean)
  fullName.vb: TimeCockpit.Data.DataModel.ModelElement.Validate(System.Collections.Generic.IList(Of TimeCockpit.Data.DataModel.PropertyValidationMessage), System.Boolean)
  name.vb: Validate(IList(Of PropertyValidationMessage), Boolean)
  spec.csharp:
  - uid: TimeCockpit.Data.DataModel.ModelElement.Validate(System.Collections.Generic.IList{TimeCockpit.Data.DataModel.PropertyValidationMessage}@,System.Boolean)
    name: Validate
    nameWithType: ModelElement.Validate
    fullName: TimeCockpit.Data.DataModel.ModelElement.Validate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TimeCockpit.Data.DataModel.PropertyValidationMessage
    name: PropertyValidationMessage
    nameWithType: PropertyValidationMessage
    fullName: TimeCockpit.Data.DataModel.PropertyValidationMessage
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TimeCockpit.Data.DataModel.ModelElement.Validate(System.Collections.Generic.IList{TimeCockpit.Data.DataModel.PropertyValidationMessage}@,System.Boolean)
    name: Validate
    nameWithType: ModelElement.Validate
    fullName: TimeCockpit.Data.DataModel.ModelElement.Validate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TimeCockpit.Data.DataModel.PropertyValidationMessage
    name: PropertyValidationMessage
    nameWithType: PropertyValidationMessage
    fullName: TimeCockpit.Data.DataModel.PropertyValidationMessage
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.DataModel.ModelEntityBase.Validate*
  commentId: Overload:TimeCockpit.Data.DataModel.ModelEntityBase.Validate
  isExternal: true
  name: Validate
  nameWithType: ModelEntityBase.Validate
  fullName: TimeCockpit.Data.DataModel.ModelEntityBase.Validate
- uid: System.Collections.Generic.IList{TimeCockpit.Data.DataModel.PropertyValidationMessage}
  commentId: T:System.Collections.Generic.IList{TimeCockpit.Data.DataModel.PropertyValidationMessage}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<PropertyValidationMessage>
  nameWithType: IList<PropertyValidationMessage>
  fullName: System.Collections.Generic.IList<TimeCockpit.Data.DataModel.PropertyValidationMessage>
  nameWithType.vb: IList(Of PropertyValidationMessage)
  fullName.vb: System.Collections.Generic.IList(Of TimeCockpit.Data.DataModel.PropertyValidationMessage)
  name.vb: IList(Of PropertyValidationMessage)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TimeCockpit.Data.DataModel.PropertyValidationMessage
    name: PropertyValidationMessage
    nameWithType: PropertyValidationMessage
    fullName: TimeCockpit.Data.DataModel.PropertyValidationMessage
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TimeCockpit.Data.DataModel.PropertyValidationMessage
    name: PropertyValidationMessage
    nameWithType: PropertyValidationMessage
    fullName: TimeCockpit.Data.DataModel.PropertyValidationMessage
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.DataModel.ModelEntityBase.DefaultDisplayPropertyName*
  commentId: Overload:TimeCockpit.Data.DataModel.ModelEntityBase.DefaultDisplayPropertyName
  isExternal: true
  name: DefaultDisplayPropertyName
  nameWithType: ModelEntityBase.DefaultDisplayPropertyName
  fullName: TimeCockpit.Data.DataModel.ModelEntityBase.DefaultDisplayPropertyName
- uid: TimeCockpit.Data.DataModel.ModelEntityBase.ReadOnlyExpression*
  commentId: Overload:TimeCockpit.Data.DataModel.ModelEntityBase.ReadOnlyExpression
  isExternal: true
  name: ReadOnlyExpression
  nameWithType: ModelEntityBase.ReadOnlyExpression
  fullName: TimeCockpit.Data.DataModel.ModelEntityBase.ReadOnlyExpression
- uid: TimeCockpit.Data.DataModel.ModelEntityBase.DefaultListName*
  commentId: Overload:TimeCockpit.Data.DataModel.ModelEntityBase.DefaultListName
  isExternal: true
  name: DefaultListName
  nameWithType: ModelEntityBase.DefaultListName
  fullName: TimeCockpit.Data.DataModel.ModelEntityBase.DefaultListName
- uid: TimeCockpit.Data.DataModel.ModelEntityBase.DefaultFormName*
  commentId: Overload:TimeCockpit.Data.DataModel.ModelEntityBase.DefaultFormName
  isExternal: true
  name: DefaultFormName
  nameWithType: ModelEntityBase.DefaultFormName
  fullName: TimeCockpit.Data.DataModel.ModelEntityBase.DefaultFormName
- uid: TimeCockpit.Data.DataModel.ModelEntityBase.DefaultRelationListName*
  commentId: Overload:TimeCockpit.Data.DataModel.ModelEntityBase.DefaultRelationListName
  isExternal: true
  name: DefaultRelationListName
  nameWithType: ModelEntityBase.DefaultRelationListName
  fullName: TimeCockpit.Data.DataModel.ModelEntityBase.DefaultRelationListName
- uid: TimeCockpit.Data.DataModel.ModelEntityBase.AuditMode*
  commentId: Overload:TimeCockpit.Data.DataModel.ModelEntityBase.AuditMode
  isExternal: true
  name: AuditMode
  nameWithType: ModelEntityBase.AuditMode
  fullName: TimeCockpit.Data.DataModel.ModelEntityBase.AuditMode
- uid: TimeCockpit.Data.DataModel.AuditMode
  commentId: T:TimeCockpit.Data.DataModel.AuditMode
  parent: TimeCockpit.Data.DataModel
  isExternal: true
  name: AuditMode
  nameWithType: AuditMode
  fullName: TimeCockpit.Data.DataModel.AuditMode
- uid: TimeCockpit.Data.DataModel.ModelEntityBase.Properties*
  commentId: Overload:TimeCockpit.Data.DataModel.ModelEntityBase.Properties
  isExternal: true
  name: Properties
  nameWithType: ModelEntityBase.Properties
  fullName: TimeCockpit.Data.DataModel.ModelEntityBase.Properties
- uid: TimeCockpit.Data.DataModel.ModelCollection{TimeCockpit.Data.DataModel.ModelProperty}
  commentId: T:TimeCockpit.Data.DataModel.ModelCollection{TimeCockpit.Data.DataModel.ModelProperty}
  parent: TimeCockpit.Data.DataModel
  definition: TimeCockpit.Data.DataModel.ModelCollection`1
  name: ModelCollection<ModelProperty>
  nameWithType: ModelCollection<ModelProperty>
  fullName: TimeCockpit.Data.DataModel.ModelCollection<TimeCockpit.Data.DataModel.ModelProperty>
  nameWithType.vb: ModelCollection(Of ModelProperty)
  fullName.vb: TimeCockpit.Data.DataModel.ModelCollection(Of TimeCockpit.Data.DataModel.ModelProperty)
  name.vb: ModelCollection(Of ModelProperty)
  spec.csharp:
  - uid: TimeCockpit.Data.DataModel.ModelCollection`1
    name: ModelCollection
    nameWithType: ModelCollection
    fullName: TimeCockpit.Data.DataModel.ModelCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TimeCockpit.Data.DataModel.ModelProperty
    name: ModelProperty
    nameWithType: ModelProperty
    fullName: TimeCockpit.Data.DataModel.ModelProperty
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: TimeCockpit.Data.DataModel.ModelCollection`1
    name: ModelCollection
    nameWithType: ModelCollection
    fullName: TimeCockpit.Data.DataModel.ModelCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TimeCockpit.Data.DataModel.ModelProperty
    name: ModelProperty
    nameWithType: ModelProperty
    fullName: TimeCockpit.Data.DataModel.ModelProperty
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.DataModel.ModelCollection`1
  commentId: T:TimeCockpit.Data.DataModel.ModelCollection`1
  isExternal: true
  name: ModelCollection<T>
  nameWithType: ModelCollection<T>
  fullName: TimeCockpit.Data.DataModel.ModelCollection<T>
  nameWithType.vb: ModelCollection(Of T)
  fullName.vb: TimeCockpit.Data.DataModel.ModelCollection(Of T)
  name.vb: ModelCollection(Of T)
  spec.csharp:
  - uid: TimeCockpit.Data.DataModel.ModelCollection`1
    name: ModelCollection
    nameWithType: ModelCollection
    fullName: TimeCockpit.Data.DataModel.ModelCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: TimeCockpit.Data.DataModel.ModelCollection`1
    name: ModelCollection
    nameWithType: ModelCollection
    fullName: TimeCockpit.Data.DataModel.ModelCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.DataModel.ModelEntityBase.Relations*
  commentId: Overload:TimeCockpit.Data.DataModel.ModelEntityBase.Relations
  isExternal: true
  name: Relations
  nameWithType: ModelEntityBase.Relations
  fullName: TimeCockpit.Data.DataModel.ModelEntityBase.Relations
- uid: TimeCockpit.Data.DataModel.ModelCollection{TimeCockpit.Data.DataModel.Relation}
  commentId: T:TimeCockpit.Data.DataModel.ModelCollection{TimeCockpit.Data.DataModel.Relation}
  parent: TimeCockpit.Data.DataModel
  definition: TimeCockpit.Data.DataModel.ModelCollection`1
  name: ModelCollection<Relation>
  nameWithType: ModelCollection<Relation>
  fullName: TimeCockpit.Data.DataModel.ModelCollection<TimeCockpit.Data.DataModel.Relation>
  nameWithType.vb: ModelCollection(Of Relation)
  fullName.vb: TimeCockpit.Data.DataModel.ModelCollection(Of TimeCockpit.Data.DataModel.Relation)
  name.vb: ModelCollection(Of Relation)
  spec.csharp:
  - uid: TimeCockpit.Data.DataModel.ModelCollection`1
    name: ModelCollection
    nameWithType: ModelCollection
    fullName: TimeCockpit.Data.DataModel.ModelCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TimeCockpit.Data.DataModel.Relation
    name: Relation
    nameWithType: Relation
    fullName: TimeCockpit.Data.DataModel.Relation
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: TimeCockpit.Data.DataModel.ModelCollection`1
    name: ModelCollection
    nameWithType: ModelCollection
    fullName: TimeCockpit.Data.DataModel.ModelCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TimeCockpit.Data.DataModel.Relation
    name: Relation
    nameWithType: Relation
    fullName: TimeCockpit.Data.DataModel.Relation
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.DataModel.ModelEntityBase.LogicalRelations*
  commentId: Overload:TimeCockpit.Data.DataModel.ModelEntityBase.LogicalRelations
  isExternal: true
  name: LogicalRelations
  nameWithType: ModelEntityBase.LogicalRelations
  fullName: TimeCockpit.Data.DataModel.ModelEntityBase.LogicalRelations
- uid: TimeCockpit.Data.DataModel.ModelCollection{TimeCockpit.Data.DataModel.LogicalRelation}
  commentId: T:TimeCockpit.Data.DataModel.ModelCollection{TimeCockpit.Data.DataModel.LogicalRelation}
  parent: TimeCockpit.Data.DataModel
  definition: TimeCockpit.Data.DataModel.ModelCollection`1
  name: ModelCollection<LogicalRelation>
  nameWithType: ModelCollection<LogicalRelation>
  fullName: TimeCockpit.Data.DataModel.ModelCollection<TimeCockpit.Data.DataModel.LogicalRelation>
  nameWithType.vb: ModelCollection(Of LogicalRelation)
  fullName.vb: TimeCockpit.Data.DataModel.ModelCollection(Of TimeCockpit.Data.DataModel.LogicalRelation)
  name.vb: ModelCollection(Of LogicalRelation)
  spec.csharp:
  - uid: TimeCockpit.Data.DataModel.ModelCollection`1
    name: ModelCollection
    nameWithType: ModelCollection
    fullName: TimeCockpit.Data.DataModel.ModelCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TimeCockpit.Data.DataModel.LogicalRelation
    name: LogicalRelation
    nameWithType: LogicalRelation
    fullName: TimeCockpit.Data.DataModel.LogicalRelation
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: TimeCockpit.Data.DataModel.ModelCollection`1
    name: ModelCollection
    nameWithType: ModelCollection
    fullName: TimeCockpit.Data.DataModel.ModelCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TimeCockpit.Data.DataModel.LogicalRelation
    name: LogicalRelation
    nameWithType: LogicalRelation
    fullName: TimeCockpit.Data.DataModel.LogicalRelation
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.DataModel.ModelEntityBase.AllRelations*
  commentId: Overload:TimeCockpit.Data.DataModel.ModelEntityBase.AllRelations
  isExternal: true
  name: AllRelations
  nameWithType: ModelEntityBase.AllRelations
  fullName: TimeCockpit.Data.DataModel.ModelEntityBase.AllRelations
- uid: TimeCockpit.Data.DataModel.CombinedModelCollectionView{TimeCockpit.Data.DataModel.RelationBase,TimeCockpit.Data.DataModel.Relation,TimeCockpit.Data.DataModel.LogicalRelation}
  commentId: T:TimeCockpit.Data.DataModel.CombinedModelCollectionView{TimeCockpit.Data.DataModel.RelationBase,TimeCockpit.Data.DataModel.Relation,TimeCockpit.Data.DataModel.LogicalRelation}
  parent: TimeCockpit.Data.DataModel
  definition: TimeCockpit.Data.DataModel.CombinedModelCollectionView`3
  name: CombinedModelCollectionView<RelationBase, Relation, LogicalRelation>
  nameWithType: CombinedModelCollectionView<RelationBase, Relation, LogicalRelation>
  fullName: TimeCockpit.Data.DataModel.CombinedModelCollectionView<TimeCockpit.Data.DataModel.RelationBase, TimeCockpit.Data.DataModel.Relation, TimeCockpit.Data.DataModel.LogicalRelation>
  nameWithType.vb: CombinedModelCollectionView(Of RelationBase, Relation, LogicalRelation)
  fullName.vb: TimeCockpit.Data.DataModel.CombinedModelCollectionView(Of TimeCockpit.Data.DataModel.RelationBase, TimeCockpit.Data.DataModel.Relation, TimeCockpit.Data.DataModel.LogicalRelation)
  name.vb: CombinedModelCollectionView(Of RelationBase, Relation, LogicalRelation)
  spec.csharp:
  - uid: TimeCockpit.Data.DataModel.CombinedModelCollectionView`3
    name: CombinedModelCollectionView
    nameWithType: CombinedModelCollectionView
    fullName: TimeCockpit.Data.DataModel.CombinedModelCollectionView
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TimeCockpit.Data.DataModel.RelationBase
    name: RelationBase
    nameWithType: RelationBase
    fullName: TimeCockpit.Data.DataModel.RelationBase
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TimeCockpit.Data.DataModel.Relation
    name: Relation
    nameWithType: Relation
    fullName: TimeCockpit.Data.DataModel.Relation
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TimeCockpit.Data.DataModel.LogicalRelation
    name: LogicalRelation
    nameWithType: LogicalRelation
    fullName: TimeCockpit.Data.DataModel.LogicalRelation
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: TimeCockpit.Data.DataModel.CombinedModelCollectionView`3
    name: CombinedModelCollectionView
    nameWithType: CombinedModelCollectionView
    fullName: TimeCockpit.Data.DataModel.CombinedModelCollectionView
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TimeCockpit.Data.DataModel.RelationBase
    name: RelationBase
    nameWithType: RelationBase
    fullName: TimeCockpit.Data.DataModel.RelationBase
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TimeCockpit.Data.DataModel.Relation
    name: Relation
    nameWithType: Relation
    fullName: TimeCockpit.Data.DataModel.Relation
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TimeCockpit.Data.DataModel.LogicalRelation
    name: LogicalRelation
    nameWithType: LogicalRelation
    fullName: TimeCockpit.Data.DataModel.LogicalRelation
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.DataModel.CombinedModelCollectionView`3
  commentId: T:TimeCockpit.Data.DataModel.CombinedModelCollectionView`3
  isExternal: true
  name: CombinedModelCollectionView<TBase, TPrimary, TSecondary>
  nameWithType: CombinedModelCollectionView<TBase, TPrimary, TSecondary>
  fullName: TimeCockpit.Data.DataModel.CombinedModelCollectionView<TBase, TPrimary, TSecondary>
  nameWithType.vb: CombinedModelCollectionView(Of TBase, TPrimary, TSecondary)
  fullName.vb: TimeCockpit.Data.DataModel.CombinedModelCollectionView(Of TBase, TPrimary, TSecondary)
  name.vb: CombinedModelCollectionView(Of TBase, TPrimary, TSecondary)
  spec.csharp:
  - uid: TimeCockpit.Data.DataModel.CombinedModelCollectionView`3
    name: CombinedModelCollectionView
    nameWithType: CombinedModelCollectionView
    fullName: TimeCockpit.Data.DataModel.CombinedModelCollectionView
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TBase
    nameWithType: TBase
    fullName: TBase
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TPrimary
    nameWithType: TPrimary
    fullName: TPrimary
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TSecondary
    nameWithType: TSecondary
    fullName: TSecondary
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: TimeCockpit.Data.DataModel.CombinedModelCollectionView`3
    name: CombinedModelCollectionView
    nameWithType: CombinedModelCollectionView
    fullName: TimeCockpit.Data.DataModel.CombinedModelCollectionView
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TBase
    nameWithType: TBase
    fullName: TBase
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TPrimary
    nameWithType: TPrimary
    fullName: TPrimary
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TSecondary
    nameWithType: TSecondary
    fullName: TSecondary
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.DataModel.ModelEntityBase.CyclicRelations*
  commentId: Overload:TimeCockpit.Data.DataModel.ModelEntityBase.CyclicRelations
  isExternal: true
  name: CyclicRelations
  nameWithType: ModelEntityBase.CyclicRelations
  fullName: TimeCockpit.Data.DataModel.ModelEntityBase.CyclicRelations
- uid: TimeCockpit.Data.DataModel.Relation[]
  isExternal: true
  name: Relation[]
  nameWithType: Relation[]
  fullName: TimeCockpit.Data.DataModel.Relation[]
  nameWithType.vb: Relation()
  fullName.vb: TimeCockpit.Data.DataModel.Relation()
  name.vb: Relation()
  spec.csharp:
  - uid: TimeCockpit.Data.DataModel.Relation
    name: Relation
    nameWithType: Relation
    fullName: TimeCockpit.Data.DataModel.Relation
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: TimeCockpit.Data.DataModel.Relation
    name: Relation
    nameWithType: Relation
    fullName: TimeCockpit.Data.DataModel.Relation
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: TimeCockpit.Data.DataModel.ModelEntityBase.ValidationRules*
  commentId: Overload:TimeCockpit.Data.DataModel.ModelEntityBase.ValidationRules
  isExternal: true
  name: ValidationRules
  nameWithType: ModelEntityBase.ValidationRules
  fullName: TimeCockpit.Data.DataModel.ModelEntityBase.ValidationRules
- uid: TimeCockpit.Data.DataModel.ModelCollection{TimeCockpit.Data.DataModel.ValidationRule}
  commentId: T:TimeCockpit.Data.DataModel.ModelCollection{TimeCockpit.Data.DataModel.ValidationRule}
  parent: TimeCockpit.Data.DataModel
  definition: TimeCockpit.Data.DataModel.ModelCollection`1
  name: ModelCollection<ValidationRule>
  nameWithType: ModelCollection<ValidationRule>
  fullName: TimeCockpit.Data.DataModel.ModelCollection<TimeCockpit.Data.DataModel.ValidationRule>
  nameWithType.vb: ModelCollection(Of ValidationRule)
  fullName.vb: TimeCockpit.Data.DataModel.ModelCollection(Of TimeCockpit.Data.DataModel.ValidationRule)
  name.vb: ModelCollection(Of ValidationRule)
  spec.csharp:
  - uid: TimeCockpit.Data.DataModel.ModelCollection`1
    name: ModelCollection
    nameWithType: ModelCollection
    fullName: TimeCockpit.Data.DataModel.ModelCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TimeCockpit.Data.DataModel.ValidationRule
    name: ValidationRule
    nameWithType: ValidationRule
    fullName: TimeCockpit.Data.DataModel.ValidationRule
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: TimeCockpit.Data.DataModel.ModelCollection`1
    name: ModelCollection
    nameWithType: ModelCollection
    fullName: TimeCockpit.Data.DataModel.ModelCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TimeCockpit.Data.DataModel.ValidationRule
    name: ValidationRule
    nameWithType: ValidationRule
    fullName: TimeCockpit.Data.DataModel.ValidationRule
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.DataModel.ModelEntityBase.ImplementedInterfaces*
  commentId: Overload:TimeCockpit.Data.DataModel.ModelEntityBase.ImplementedInterfaces
  isExternal: true
  name: ImplementedInterfaces
  nameWithType: ModelEntityBase.ImplementedInterfaces
  fullName: TimeCockpit.Data.DataModel.ModelEntityBase.ImplementedInterfaces
- uid: TimeCockpit.Data.DataModel.ModelCollection{TimeCockpit.Data.DataModel.ModelEntityInterface}
  commentId: T:TimeCockpit.Data.DataModel.ModelCollection{TimeCockpit.Data.DataModel.ModelEntityInterface}
  parent: TimeCockpit.Data.DataModel
  definition: TimeCockpit.Data.DataModel.ModelCollection`1
  name: ModelCollection<ModelEntityInterface>
  nameWithType: ModelCollection<ModelEntityInterface>
  fullName: TimeCockpit.Data.DataModel.ModelCollection<TimeCockpit.Data.DataModel.ModelEntityInterface>
  nameWithType.vb: ModelCollection(Of ModelEntityInterface)
  fullName.vb: TimeCockpit.Data.DataModel.ModelCollection(Of TimeCockpit.Data.DataModel.ModelEntityInterface)
  name.vb: ModelCollection(Of ModelEntityInterface)
  spec.csharp:
  - uid: TimeCockpit.Data.DataModel.ModelCollection`1
    name: ModelCollection
    nameWithType: ModelCollection
    fullName: TimeCockpit.Data.DataModel.ModelCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TimeCockpit.Data.DataModel.ModelEntityInterface
    name: ModelEntityInterface
    nameWithType: ModelEntityInterface
    fullName: TimeCockpit.Data.DataModel.ModelEntityInterface
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: TimeCockpit.Data.DataModel.ModelCollection`1
    name: ModelCollection
    nameWithType: ModelCollection
    fullName: TimeCockpit.Data.DataModel.ModelCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TimeCockpit.Data.DataModel.ModelEntityInterface
    name: ModelEntityInterface
    nameWithType: ModelEntityInterface
    fullName: TimeCockpit.Data.DataModel.ModelEntityInterface
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.DataModel.ModelEntityBase.Permissions*
  commentId: Overload:TimeCockpit.Data.DataModel.ModelEntityBase.Permissions
  isExternal: true
  name: Permissions
  nameWithType: ModelEntityBase.Permissions
  fullName: TimeCockpit.Data.DataModel.ModelEntityBase.Permissions
- uid: TimeCockpit.Data.DataModel.ModelCollection{TimeCockpit.Data.Security.Permission}
  commentId: T:TimeCockpit.Data.DataModel.ModelCollection{TimeCockpit.Data.Security.Permission}
  parent: TimeCockpit.Data.DataModel
  definition: TimeCockpit.Data.DataModel.ModelCollection`1
  name: ModelCollection<Permission>
  nameWithType: ModelCollection<Permission>
  fullName: TimeCockpit.Data.DataModel.ModelCollection<TimeCockpit.Data.Security.Permission>
  nameWithType.vb: ModelCollection(Of Permission)
  fullName.vb: TimeCockpit.Data.DataModel.ModelCollection(Of TimeCockpit.Data.Security.Permission)
  name.vb: ModelCollection(Of Permission)
  spec.csharp:
  - uid: TimeCockpit.Data.DataModel.ModelCollection`1
    name: ModelCollection
    nameWithType: ModelCollection
    fullName: TimeCockpit.Data.DataModel.ModelCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TimeCockpit.Data.Security.Permission
    name: Permission
    nameWithType: Permission
    fullName: TimeCockpit.Data.Security.Permission
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: TimeCockpit.Data.DataModel.ModelCollection`1
    name: ModelCollection
    nameWithType: ModelCollection
    fullName: TimeCockpit.Data.DataModel.ModelCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TimeCockpit.Data.Security.Permission
    name: Permission
    nameWithType: Permission
    fullName: TimeCockpit.Data.Security.Permission
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.DataModel.ModelEntityBase.SyncBehavior*
  commentId: Overload:TimeCockpit.Data.DataModel.ModelEntityBase.SyncBehavior
  isExternal: true
  name: SyncBehavior
  nameWithType: ModelEntityBase.SyncBehavior
  fullName: TimeCockpit.Data.DataModel.ModelEntityBase.SyncBehavior
- uid: TimeCockpit.Data.Sync.SyncContent
  commentId: T:TimeCockpit.Data.Sync.SyncContent
  parent: TimeCockpit.Data.Sync
  isExternal: true
  name: SyncContent
  nameWithType: SyncContent
  fullName: TimeCockpit.Data.Sync.SyncContent
- uid: TimeCockpit.Data.Sync
  commentId: N:TimeCockpit.Data.Sync
  isExternal: true
  name: TimeCockpit.Data.Sync
  nameWithType: TimeCockpit.Data.Sync
  fullName: TimeCockpit.Data.Sync
- uid: TimeCockpit.Data.DataModel.ModelEntityBase.IsDataSynced*
  commentId: Overload:TimeCockpit.Data.DataModel.ModelEntityBase.IsDataSynced
  isExternal: true
  name: IsDataSynced
  nameWithType: ModelEntityBase.IsDataSynced
  fullName: TimeCockpit.Data.DataModel.ModelEntityBase.IsDataSynced
- uid: TimeCockpit.Data.DataModel.ModelEntityBase.IsModelSynced*
  commentId: Overload:TimeCockpit.Data.DataModel.ModelEntityBase.IsModelSynced
  isExternal: true
  name: IsModelSynced
  nameWithType: ModelEntityBase.IsModelSynced
  fullName: TimeCockpit.Data.DataModel.ModelEntityBase.IsModelSynced
- uid: TimeCockpit.Data.DataModel.ModelElement.PersistBehavior
  commentId: P:TimeCockpit.Data.DataModel.ModelElement.PersistBehavior
  parent: TimeCockpit.Data.DataModel.ModelElement
  isExternal: true
  name: PersistBehavior
  nameWithType: ModelElement.PersistBehavior
  fullName: TimeCockpit.Data.DataModel.ModelElement.PersistBehavior
- uid: TimeCockpit.Data.DataModel.ModelEntityBase.PersistBehavior*
  commentId: Overload:TimeCockpit.Data.DataModel.ModelEntityBase.PersistBehavior
  isExternal: true
  name: PersistBehavior
  nameWithType: ModelEntityBase.PersistBehavior
  fullName: TimeCockpit.Data.DataModel.ModelEntityBase.PersistBehavior
- uid: TimeCockpit.Data.DataModel.PersistBehavior
  commentId: T:TimeCockpit.Data.DataModel.PersistBehavior
  parent: TimeCockpit.Data.DataModel
  isExternal: true
  name: PersistBehavior
  nameWithType: PersistBehavior
  fullName: TimeCockpit.Data.DataModel.PersistBehavior
- uid: TimeCockpit.Data.DataModel.ModelEntityBase.PersistedProperties*
  commentId: Overload:TimeCockpit.Data.DataModel.ModelEntityBase.PersistedProperties
  isExternal: true
  name: PersistedProperties
  nameWithType: ModelEntityBase.PersistedProperties
  fullName: TimeCockpit.Data.DataModel.ModelEntityBase.PersistedProperties
- uid: System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.PersistedProperty}
  commentId: T:System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.PersistedProperty}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<PersistedProperty>
  nameWithType: IEnumerable<PersistedProperty>
  fullName: System.Collections.Generic.IEnumerable<TimeCockpit.Data.DataModel.PersistedProperty>
  nameWithType.vb: IEnumerable(Of PersistedProperty)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TimeCockpit.Data.DataModel.PersistedProperty)
  name.vb: IEnumerable(Of PersistedProperty)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TimeCockpit.Data.DataModel.PersistedProperty
    name: PersistedProperty
    nameWithType: PersistedProperty
    fullName: TimeCockpit.Data.DataModel.PersistedProperty
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TimeCockpit.Data.DataModel.PersistedProperty
    name: PersistedProperty
    nameWithType: PersistedProperty
    fullName: TimeCockpit.Data.DataModel.PersistedProperty
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.DataModel.ModelEntityBase.DependentModelEntities*
  commentId: Overload:TimeCockpit.Data.DataModel.ModelEntityBase.DependentModelEntities
  isExternal: true
  name: DependentModelEntities
  nameWithType: ModelEntityBase.DependentModelEntities
  fullName: TimeCockpit.Data.DataModel.ModelEntityBase.DependentModelEntities
- uid: System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.Dependency}
  commentId: T:System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.Dependency}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Dependency>
  nameWithType: IEnumerable<Dependency>
  fullName: System.Collections.Generic.IEnumerable<TimeCockpit.Data.DataModel.Dependency>
  nameWithType.vb: IEnumerable(Of Dependency)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TimeCockpit.Data.DataModel.Dependency)
  name.vb: IEnumerable(Of Dependency)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TimeCockpit.Data.DataModel.Dependency
    name: Dependency
    nameWithType: Dependency
    fullName: TimeCockpit.Data.DataModel.Dependency
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TimeCockpit.Data.DataModel.Dependency
    name: Dependency
    nameWithType: Dependency
    fullName: TimeCockpit.Data.DataModel.Dependency
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.DataModel.ModelEntityBase.DependentRelationPaths*
  commentId: Overload:TimeCockpit.Data.DataModel.ModelEntityBase.DependentRelationPaths
  isExternal: true
  name: DependentRelationPaths
  nameWithType: ModelEntityBase.DependentRelationPaths
  fullName: TimeCockpit.Data.DataModel.ModelEntityBase.DependentRelationPaths
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.Relation}}
  commentId: T:System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.Relation}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IEnumerable<Relation>>
  nameWithType: IEnumerable<IEnumerable<Relation>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.IEnumerable<TimeCockpit.Data.DataModel.Relation>>
  nameWithType.vb: IEnumerable(Of IEnumerable(Of Relation))
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.IEnumerable(Of TimeCockpit.Data.DataModel.Relation))
  name.vb: IEnumerable(Of IEnumerable(Of Relation))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TimeCockpit.Data.DataModel.Relation
    name: Relation
    nameWithType: Relation
    fullName: TimeCockpit.Data.DataModel.Relation
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TimeCockpit.Data.DataModel.Relation
    name: Relation
    nameWithType: Relation
    fullName: TimeCockpit.Data.DataModel.Relation
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.DataModel.ModelEntityBase.IsGenericRelationEntity*
  commentId: Overload:TimeCockpit.Data.DataModel.ModelEntityBase.IsGenericRelationEntity
  isExternal: true
  name: IsGenericRelationEntity
  nameWithType: ModelEntityBase.IsGenericRelationEntity
  fullName: TimeCockpit.Data.DataModel.ModelEntityBase.IsGenericRelationEntity
- uid: TimeCockpit.Data.DataModel.ModelEntityBase.Triggers*
  commentId: Overload:TimeCockpit.Data.DataModel.ModelEntityBase.Triggers
  isExternal: true
  name: Triggers
  nameWithType: ModelEntityBase.Triggers
  fullName: TimeCockpit.Data.DataModel.ModelEntityBase.Triggers
- uid: TimeCockpit.Data.DataModel.ModelCollection{TimeCockpit.Data.DataModel.Triggers.Trigger}
  commentId: T:TimeCockpit.Data.DataModel.ModelCollection{TimeCockpit.Data.DataModel.Triggers.Trigger}
  parent: TimeCockpit.Data.DataModel
  definition: TimeCockpit.Data.DataModel.ModelCollection`1
  name: ModelCollection<Trigger>
  nameWithType: ModelCollection<Trigger>
  fullName: TimeCockpit.Data.DataModel.ModelCollection<TimeCockpit.Data.DataModel.Triggers.Trigger>
  nameWithType.vb: ModelCollection(Of Trigger)
  fullName.vb: TimeCockpit.Data.DataModel.ModelCollection(Of TimeCockpit.Data.DataModel.Triggers.Trigger)
  name.vb: ModelCollection(Of Trigger)
  spec.csharp:
  - uid: TimeCockpit.Data.DataModel.ModelCollection`1
    name: ModelCollection
    nameWithType: ModelCollection
    fullName: TimeCockpit.Data.DataModel.ModelCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TimeCockpit.Data.DataModel.Triggers.Trigger
    name: Trigger
    nameWithType: Trigger
    fullName: TimeCockpit.Data.DataModel.Triggers.Trigger
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: TimeCockpit.Data.DataModel.ModelCollection`1
    name: ModelCollection
    nameWithType: ModelCollection
    fullName: TimeCockpit.Data.DataModel.ModelCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TimeCockpit.Data.DataModel.Triggers.Trigger
    name: Trigger
    nameWithType: Trigger
    fullName: TimeCockpit.Data.DataModel.Triggers.Trigger
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.DataModel.ModelEntityBase.PreSaveTriggers*
  commentId: Overload:TimeCockpit.Data.DataModel.ModelEntityBase.PreSaveTriggers
  isExternal: true
  name: PreSaveTriggers
  nameWithType: ModelEntityBase.PreSaveTriggers
  fullName: TimeCockpit.Data.DataModel.ModelEntityBase.PreSaveTriggers
- uid: System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.Triggers.Trigger}
  commentId: T:System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.Triggers.Trigger}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Trigger>
  nameWithType: IEnumerable<Trigger>
  fullName: System.Collections.Generic.IEnumerable<TimeCockpit.Data.DataModel.Triggers.Trigger>
  nameWithType.vb: IEnumerable(Of Trigger)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TimeCockpit.Data.DataModel.Triggers.Trigger)
  name.vb: IEnumerable(Of Trigger)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TimeCockpit.Data.DataModel.Triggers.Trigger
    name: Trigger
    nameWithType: Trigger
    fullName: TimeCockpit.Data.DataModel.Triggers.Trigger
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TimeCockpit.Data.DataModel.Triggers.Trigger
    name: Trigger
    nameWithType: Trigger
    fullName: TimeCockpit.Data.DataModel.Triggers.Trigger
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.DataModel.ModelEntityBase.PostSaveTriggers*
  commentId: Overload:TimeCockpit.Data.DataModel.ModelEntityBase.PostSaveTriggers
  isExternal: true
  name: PostSaveTriggers
  nameWithType: ModelEntityBase.PostSaveTriggers
  fullName: TimeCockpit.Data.DataModel.ModelEntityBase.PostSaveTriggers
