### YamlMime:ManagedReference
items:
- uid: TimeCockpit.Data.Import.ImportEngineFactory
  commentId: T:TimeCockpit.Data.Import.ImportEngineFactory
  id: ImportEngineFactory
  parent: TimeCockpit.Data.Import
  children:
  - TimeCockpit.Data.Import.ImportEngineFactory.#ctor
  - TimeCockpit.Data.Import.ImportEngineFactory.AvailableEngines
  - TimeCockpit.Data.Import.ImportEngineFactory.Create(System.String,TimeCockpit.Data.DataContext)
  - TimeCockpit.Data.Import.ImportEngineFactory.CsvEngine
  - TimeCockpit.Data.Import.ImportEngineFactory.EngineRequiresFileInput(System.String)
  - TimeCockpit.Data.Import.ImportEngineFactory.GetEngineFileFilter(System.String)
  - TimeCockpit.Data.Import.ImportEngineFactory.GetEngineTemplateFileExtension(System.String)
  - TimeCockpit.Data.Import.ImportEngineFactory.GetValidFileExtensions(System.String)
  - TimeCockpit.Data.Import.ImportEngineFactory.XlsxEngine
  langs:
  - csharp
  - vb
  name: ImportEngineFactory
  nameWithType: ImportEngineFactory
  fullName: TimeCockpit.Data.Import.ImportEngineFactory
  type: Class
  source:
    path: TimeCockpit.Data.Import
    isExternal: true
  assemblies:
  - TimeCockpit.Data.Import
  namespace: TimeCockpit.Data.Import
  syntax:
    content: public class ImportEngineFactory
    content.vb: Public Class ImportEngineFactory
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TimeCockpit.Data.Import.ImportEngineFactory.EngineRequiresFileInput(System.String)
  commentId: M:TimeCockpit.Data.Import.ImportEngineFactory.EngineRequiresFileInput(System.String)
  id: EngineRequiresFileInput(System.String)
  parent: TimeCockpit.Data.Import.ImportEngineFactory
  langs:
  - csharp
  - vb
  name: EngineRequiresFileInput(String)
  nameWithType: ImportEngineFactory.EngineRequiresFileInput(String)
  fullName: TimeCockpit.Data.Import.ImportEngineFactory.EngineRequiresFileInput(System.String)
  type: Method
  source:
    path: TimeCockpit.Data.Import
    isExternal: true
  assemblies:
  - TimeCockpit.Data.Import
  namespace: TimeCockpit.Data.Import
  syntax:
    content: public static bool EngineRequiresFileInput(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Shared Function EngineRequiresFileInput(name As String) As Boolean
  overload: TimeCockpit.Data.Import.ImportEngineFactory.EngineRequiresFileInput*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: TimeCockpit.Data.Import.ImportEngineFactory.GetValidFileExtensions(System.String)
  commentId: M:TimeCockpit.Data.Import.ImportEngineFactory.GetValidFileExtensions(System.String)
  id: GetValidFileExtensions(System.String)
  parent: TimeCockpit.Data.Import.ImportEngineFactory
  langs:
  - csharp
  - vb
  name: GetValidFileExtensions(String)
  nameWithType: ImportEngineFactory.GetValidFileExtensions(String)
  fullName: TimeCockpit.Data.Import.ImportEngineFactory.GetValidFileExtensions(System.String)
  type: Method
  source:
    path: TimeCockpit.Data.Import
    isExternal: true
  assemblies:
  - TimeCockpit.Data.Import
  namespace: TimeCockpit.Data.Import
  syntax:
    content: public static IEnumerable<string> GetValidFileExtensions(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
    content.vb: Public Shared Function GetValidFileExtensions(name As String) As IEnumerable(Of String)
  overload: TimeCockpit.Data.Import.ImportEngineFactory.GetValidFileExtensions*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: TimeCockpit.Data.Import.ImportEngineFactory.GetEngineFileFilter(System.String)
  commentId: M:TimeCockpit.Data.Import.ImportEngineFactory.GetEngineFileFilter(System.String)
  id: GetEngineFileFilter(System.String)
  parent: TimeCockpit.Data.Import.ImportEngineFactory
  langs:
  - csharp
  - vb
  name: GetEngineFileFilter(String)
  nameWithType: ImportEngineFactory.GetEngineFileFilter(String)
  fullName: TimeCockpit.Data.Import.ImportEngineFactory.GetEngineFileFilter(System.String)
  type: Method
  source:
    path: TimeCockpit.Data.Import
    isExternal: true
  assemblies:
  - TimeCockpit.Data.Import
  namespace: TimeCockpit.Data.Import
  syntax:
    content: public static string GetEngineFileFilter(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: System.String
    content.vb: Public Shared Function GetEngineFileFilter(name As String) As String
  overload: TimeCockpit.Data.Import.ImportEngineFactory.GetEngineFileFilter*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: TimeCockpit.Data.Import.ImportEngineFactory.GetEngineTemplateFileExtension(System.String)
  commentId: M:TimeCockpit.Data.Import.ImportEngineFactory.GetEngineTemplateFileExtension(System.String)
  id: GetEngineTemplateFileExtension(System.String)
  parent: TimeCockpit.Data.Import.ImportEngineFactory
  langs:
  - csharp
  - vb
  name: GetEngineTemplateFileExtension(String)
  nameWithType: ImportEngineFactory.GetEngineTemplateFileExtension(String)
  fullName: TimeCockpit.Data.Import.ImportEngineFactory.GetEngineTemplateFileExtension(System.String)
  type: Method
  source:
    path: TimeCockpit.Data.Import
    isExternal: true
  assemblies:
  - TimeCockpit.Data.Import
  namespace: TimeCockpit.Data.Import
  syntax:
    content: public static string GetEngineTemplateFileExtension(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: System.String
    content.vb: Public Shared Function GetEngineTemplateFileExtension(name As String) As String
  overload: TimeCockpit.Data.Import.ImportEngineFactory.GetEngineTemplateFileExtension*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: TimeCockpit.Data.Import.ImportEngineFactory.Create(System.String,TimeCockpit.Data.DataContext)
  commentId: M:TimeCockpit.Data.Import.ImportEngineFactory.Create(System.String,TimeCockpit.Data.DataContext)
  id: Create(System.String,TimeCockpit.Data.DataContext)
  parent: TimeCockpit.Data.Import.ImportEngineFactory
  langs:
  - csharp
  - vb
  name: Create(String, DataContext)
  nameWithType: ImportEngineFactory.Create(String, DataContext)
  fullName: TimeCockpit.Data.Import.ImportEngineFactory.Create(System.String, TimeCockpit.Data.DataContext)
  type: Method
  source:
    path: TimeCockpit.Data.Import
    isExternal: true
  assemblies:
  - TimeCockpit.Data.Import
  namespace: TimeCockpit.Data.Import
  syntax:
    content: public static ImportEngine Create(string name, DataContext dataContext)
    parameters:
    - id: name
      type: System.String
    - id: dataContext
      type: TimeCockpit.Data.DataContext
    return:
      type: TimeCockpit.Data.Import.ImportEngine
    content.vb: Public Shared Function Create(name As String, dataContext As DataContext) As ImportEngine
  overload: TimeCockpit.Data.Import.ImportEngineFactory.Create*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: TimeCockpit.Data.Import.ImportEngineFactory.#ctor
  commentId: M:TimeCockpit.Data.Import.ImportEngineFactory.#ctor
  id: '#ctor'
  parent: TimeCockpit.Data.Import.ImportEngineFactory
  langs:
  - csharp
  - vb
  name: ImportEngineFactory()
  nameWithType: ImportEngineFactory.ImportEngineFactory()
  fullName: TimeCockpit.Data.Import.ImportEngineFactory.ImportEngineFactory()
  type: Constructor
  source:
    path: TimeCockpit.Data.Import
    isExternal: true
  assemblies:
  - TimeCockpit.Data.Import
  namespace: TimeCockpit.Data.Import
  syntax:
    content: public ImportEngineFactory()
    content.vb: Public Sub New
  overload: TimeCockpit.Data.Import.ImportEngineFactory.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Import.ImportEngineFactory.XlsxEngine
  commentId: P:TimeCockpit.Data.Import.ImportEngineFactory.XlsxEngine
  id: XlsxEngine
  parent: TimeCockpit.Data.Import.ImportEngineFactory
  langs:
  - csharp
  - vb
  name: XlsxEngine
  nameWithType: ImportEngineFactory.XlsxEngine
  fullName: TimeCockpit.Data.Import.ImportEngineFactory.XlsxEngine
  type: Property
  source:
    path: TimeCockpit.Data.Import
    isExternal: true
  assemblies:
  - TimeCockpit.Data.Import
  namespace: TimeCockpit.Data.Import
  syntax:
    content: public static string XlsxEngine { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Shared ReadOnly Property XlsxEngine As String
  overload: TimeCockpit.Data.Import.ImportEngineFactory.XlsxEngine*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: TimeCockpit.Data.Import.ImportEngineFactory.CsvEngine
  commentId: P:TimeCockpit.Data.Import.ImportEngineFactory.CsvEngine
  id: CsvEngine
  parent: TimeCockpit.Data.Import.ImportEngineFactory
  langs:
  - csharp
  - vb
  name: CsvEngine
  nameWithType: ImportEngineFactory.CsvEngine
  fullName: TimeCockpit.Data.Import.ImportEngineFactory.CsvEngine
  type: Property
  source:
    path: TimeCockpit.Data.Import
    isExternal: true
  assemblies:
  - TimeCockpit.Data.Import
  namespace: TimeCockpit.Data.Import
  syntax:
    content: public static string CsvEngine { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Shared ReadOnly Property CsvEngine As String
  overload: TimeCockpit.Data.Import.ImportEngineFactory.CsvEngine*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: TimeCockpit.Data.Import.ImportEngineFactory.AvailableEngines
  commentId: P:TimeCockpit.Data.Import.ImportEngineFactory.AvailableEngines
  id: AvailableEngines
  parent: TimeCockpit.Data.Import.ImportEngineFactory
  langs:
  - csharp
  - vb
  name: AvailableEngines
  nameWithType: ImportEngineFactory.AvailableEngines
  fullName: TimeCockpit.Data.Import.ImportEngineFactory.AvailableEngines
  type: Property
  source:
    path: TimeCockpit.Data.Import
    isExternal: true
  assemblies:
  - TimeCockpit.Data.Import
  namespace: TimeCockpit.Data.Import
  syntax:
    content: public static string[] AvailableEngines { get; }
    parameters: []
    return:
      type: System.String[]
    content.vb: Public Shared ReadOnly Property AvailableEngines As String()
  overload: TimeCockpit.Data.Import.ImportEngineFactory.AvailableEngines*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
references:
- uid: TimeCockpit.Data.Import
  commentId: N:TimeCockpit.Data.Import
  isExternal: true
  name: TimeCockpit.Data.Import
  nameWithType: TimeCockpit.Data.Import
  fullName: TimeCockpit.Data.Import
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TimeCockpit.Data.Import.ImportEngineFactory.EngineRequiresFileInput*
  commentId: Overload:TimeCockpit.Data.Import.ImportEngineFactory.EngineRequiresFileInput
  isExternal: true
  name: EngineRequiresFileInput
  nameWithType: ImportEngineFactory.EngineRequiresFileInput
  fullName: TimeCockpit.Data.Import.ImportEngineFactory.EngineRequiresFileInput
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: TimeCockpit.Data.Import.ImportEngineFactory.GetValidFileExtensions*
  commentId: Overload:TimeCockpit.Data.Import.ImportEngineFactory.GetValidFileExtensions
  isExternal: true
  name: GetValidFileExtensions
  nameWithType: ImportEngineFactory.GetValidFileExtensions
  fullName: TimeCockpit.Data.Import.ImportEngineFactory.GetValidFileExtensions
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: TimeCockpit.Data.Import.ImportEngineFactory.GetEngineFileFilter*
  commentId: Overload:TimeCockpit.Data.Import.ImportEngineFactory.GetEngineFileFilter
  isExternal: true
  name: GetEngineFileFilter
  nameWithType: ImportEngineFactory.GetEngineFileFilter
  fullName: TimeCockpit.Data.Import.ImportEngineFactory.GetEngineFileFilter
- uid: TimeCockpit.Data.Import.ImportEngineFactory.GetEngineTemplateFileExtension*
  commentId: Overload:TimeCockpit.Data.Import.ImportEngineFactory.GetEngineTemplateFileExtension
  isExternal: true
  name: GetEngineTemplateFileExtension
  nameWithType: ImportEngineFactory.GetEngineTemplateFileExtension
  fullName: TimeCockpit.Data.Import.ImportEngineFactory.GetEngineTemplateFileExtension
- uid: TimeCockpit.Data.Import.ImportEngineFactory.Create*
  commentId: Overload:TimeCockpit.Data.Import.ImportEngineFactory.Create
  isExternal: true
  name: Create
  nameWithType: ImportEngineFactory.Create
  fullName: TimeCockpit.Data.Import.ImportEngineFactory.Create
- uid: TimeCockpit.Data.DataContext
  commentId: T:TimeCockpit.Data.DataContext
  parent: TimeCockpit.Data
  isExternal: true
  name: DataContext
  nameWithType: DataContext
  fullName: TimeCockpit.Data.DataContext
- uid: TimeCockpit.Data.Import.ImportEngine
  commentId: T:TimeCockpit.Data.Import.ImportEngine
  parent: TimeCockpit.Data.Import
  isExternal: true
  name: ImportEngine
  nameWithType: ImportEngine
  fullName: TimeCockpit.Data.Import.ImportEngine
- uid: TimeCockpit.Data
  commentId: N:TimeCockpit.Data
  isExternal: true
  name: TimeCockpit.Data
  nameWithType: TimeCockpit.Data
  fullName: TimeCockpit.Data
- uid: TimeCockpit.Data.Import.ImportEngineFactory.#ctor*
  commentId: Overload:TimeCockpit.Data.Import.ImportEngineFactory.#ctor
  isExternal: true
  name: ImportEngineFactory
  nameWithType: ImportEngineFactory.ImportEngineFactory
  fullName: TimeCockpit.Data.Import.ImportEngineFactory.ImportEngineFactory
- uid: TimeCockpit.Data.Import.ImportEngineFactory.XlsxEngine*
  commentId: Overload:TimeCockpit.Data.Import.ImportEngineFactory.XlsxEngine
  isExternal: true
  name: XlsxEngine
  nameWithType: ImportEngineFactory.XlsxEngine
  fullName: TimeCockpit.Data.Import.ImportEngineFactory.XlsxEngine
- uid: TimeCockpit.Data.Import.ImportEngineFactory.CsvEngine*
  commentId: Overload:TimeCockpit.Data.Import.ImportEngineFactory.CsvEngine
  isExternal: true
  name: CsvEngine
  nameWithType: ImportEngineFactory.CsvEngine
  fullName: TimeCockpit.Data.Import.ImportEngineFactory.CsvEngine
- uid: TimeCockpit.Data.Import.ImportEngineFactory.AvailableEngines*
  commentId: Overload:TimeCockpit.Data.Import.ImportEngineFactory.AvailableEngines
  isExternal: true
  name: AvailableEngines
  nameWithType: ImportEngineFactory.AvailableEngines
  fullName: TimeCockpit.Data.Import.ImportEngineFactory.AvailableEngines
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
