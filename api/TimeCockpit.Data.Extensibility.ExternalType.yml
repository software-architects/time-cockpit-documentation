### YamlMime:ManagedReference
items:
- uid: TimeCockpit.Data.Extensibility.ExternalType
  commentId: T:TimeCockpit.Data.Extensibility.ExternalType
  id: ExternalType
  parent: TimeCockpit.Data.Extensibility
  children:
  - TimeCockpit.Data.Extensibility.ExternalType.#ctor
  - TimeCockpit.Data.Extensibility.ExternalType.AssemblyName
  - TimeCockpit.Data.Extensibility.ExternalType.Name
  - TimeCockpit.Data.Extensibility.ExternalType.Namespace
  - TimeCockpit.Data.Extensibility.ExternalType.Path
  - TimeCockpit.Data.Extensibility.ExternalType.TypeName
  langs:
  - csharp
  - vb
  name: ExternalType
  nameWithType: ExternalType
  fullName: TimeCockpit.Data.Extensibility.ExternalType
  type: Class
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Extensibility
  summary: "\nA class that represents a reference to an assembly that should be loaded from the fx.\n"
  syntax:
    content: public class ExternalType
    content.vb: Public Class ExternalType
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TimeCockpit.Data.Extensibility.ExternalType.#ctor
  commentId: M:TimeCockpit.Data.Extensibility.ExternalType.#ctor
  id: '#ctor'
  parent: TimeCockpit.Data.Extensibility.ExternalType
  langs:
  - csharp
  - vb
  name: ExternalType()
  nameWithType: ExternalType.ExternalType()
  fullName: TimeCockpit.Data.Extensibility.ExternalType.ExternalType()
  type: Constructor
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Extensibility
  syntax:
    content: public ExternalType()
    content.vb: Public Sub New
  overload: TimeCockpit.Data.Extensibility.ExternalType.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Extensibility.ExternalType.Name
  commentId: P:TimeCockpit.Data.Extensibility.ExternalType.Name
  id: Name
  parent: TimeCockpit.Data.Extensibility.ExternalType
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ExternalType.Name
  fullName: TimeCockpit.Data.Extensibility.ExternalType.Name
  type: Property
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Extensibility
  summary: "\nGets or sets the name.\n"
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: TimeCockpit.Data.Extensibility.ExternalType.Name*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Extensibility.ExternalType.Path
  commentId: P:TimeCockpit.Data.Extensibility.ExternalType.Path
  id: Path
  parent: TimeCockpit.Data.Extensibility.ExternalType
  langs:
  - csharp
  - vb
  name: Path
  nameWithType: ExternalType.Path
  fullName: TimeCockpit.Data.Extensibility.ExternalType.Path
  type: Property
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Extensibility
  summary: "\nGets or sets the path.\n"
  syntax:
    content: public string Path { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Path As String
  overload: TimeCockpit.Data.Extensibility.ExternalType.Path*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Extensibility.ExternalType.TypeName
  commentId: P:TimeCockpit.Data.Extensibility.ExternalType.TypeName
  id: TypeName
  parent: TimeCockpit.Data.Extensibility.ExternalType
  langs:
  - csharp
  - vb
  name: TypeName
  nameWithType: ExternalType.TypeName
  fullName: TimeCockpit.Data.Extensibility.ExternalType.TypeName
  type: Property
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Extensibility
  summary: "\nGets or sets the name of the type.\n"
  syntax:
    content: public string TypeName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property TypeName As String
  overload: TimeCockpit.Data.Extensibility.ExternalType.TypeName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Extensibility.ExternalType.Namespace
  commentId: P:TimeCockpit.Data.Extensibility.ExternalType.Namespace
  id: Namespace
  parent: TimeCockpit.Data.Extensibility.ExternalType
  langs:
  - csharp
  - vb
  name: Namespace
  nameWithType: ExternalType.Namespace
  fullName: TimeCockpit.Data.Extensibility.ExternalType.Namespace
  type: Property
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Extensibility
  summary: "\nGets or sets the namespace.\n"
  syntax:
    content: public string Namespace { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Namespace As String
  overload: TimeCockpit.Data.Extensibility.ExternalType.Namespace*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Extensibility.ExternalType.AssemblyName
  commentId: P:TimeCockpit.Data.Extensibility.ExternalType.AssemblyName
  id: AssemblyName
  parent: TimeCockpit.Data.Extensibility.ExternalType
  langs:
  - csharp
  - vb
  name: AssemblyName
  nameWithType: ExternalType.AssemblyName
  fullName: TimeCockpit.Data.Extensibility.ExternalType.AssemblyName
  type: Property
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Extensibility
  summary: "\nGets or sets the name of the assembly.\n"
  syntax:
    content: public AssemblyName AssemblyName { get; set; }
    parameters: []
    return:
      type: System.Reflection.AssemblyName
    content.vb: Public Property AssemblyName As AssemblyName
  overload: TimeCockpit.Data.Extensibility.ExternalType.AssemblyName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: TimeCockpit.Data.Extensibility
  commentId: N:TimeCockpit.Data.Extensibility
  isExternal: true
  name: TimeCockpit.Data.Extensibility
  nameWithType: TimeCockpit.Data.Extensibility
  fullName: TimeCockpit.Data.Extensibility
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TimeCockpit.Data.Extensibility.ExternalType.#ctor*
  commentId: Overload:TimeCockpit.Data.Extensibility.ExternalType.#ctor
  isExternal: true
  name: ExternalType
  nameWithType: ExternalType.ExternalType
  fullName: TimeCockpit.Data.Extensibility.ExternalType.ExternalType
- uid: TimeCockpit.Data.Extensibility.ExternalType.Name*
  commentId: Overload:TimeCockpit.Data.Extensibility.ExternalType.Name
  isExternal: true
  name: Name
  nameWithType: ExternalType.Name
  fullName: TimeCockpit.Data.Extensibility.ExternalType.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: TimeCockpit.Data.Extensibility.ExternalType.Path*
  commentId: Overload:TimeCockpit.Data.Extensibility.ExternalType.Path
  isExternal: true
  name: Path
  nameWithType: ExternalType.Path
  fullName: TimeCockpit.Data.Extensibility.ExternalType.Path
- uid: TimeCockpit.Data.Extensibility.ExternalType.TypeName*
  commentId: Overload:TimeCockpit.Data.Extensibility.ExternalType.TypeName
  isExternal: true
  name: TypeName
  nameWithType: ExternalType.TypeName
  fullName: TimeCockpit.Data.Extensibility.ExternalType.TypeName
- uid: TimeCockpit.Data.Extensibility.ExternalType.Namespace*
  commentId: Overload:TimeCockpit.Data.Extensibility.ExternalType.Namespace
  isExternal: true
  name: Namespace
  nameWithType: ExternalType.Namespace
  fullName: TimeCockpit.Data.Extensibility.ExternalType.Namespace
- uid: TimeCockpit.Data.Extensibility.ExternalType.AssemblyName*
  commentId: Overload:TimeCockpit.Data.Extensibility.ExternalType.AssemblyName
  isExternal: true
  name: AssemblyName
  nameWithType: ExternalType.AssemblyName
  fullName: TimeCockpit.Data.Extensibility.ExternalType.AssemblyName
- uid: System.Reflection.AssemblyName
  commentId: T:System.Reflection.AssemblyName
  parent: System.Reflection
  isExternal: true
  name: AssemblyName
  nameWithType: AssemblyName
  fullName: System.Reflection.AssemblyName
- uid: System.Reflection
  commentId: N:System.Reflection
  isExternal: true
  name: System.Reflection
  nameWithType: System.Reflection
  fullName: System.Reflection
