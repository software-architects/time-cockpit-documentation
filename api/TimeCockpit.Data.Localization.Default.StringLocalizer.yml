### YamlMime:ManagedReference
items:
- uid: TimeCockpit.Data.Localization.Default.StringLocalizer
  commentId: T:TimeCockpit.Data.Localization.Default.StringLocalizer
  id: StringLocalizer
  parent: TimeCockpit.Data.Localization.Default
  children:
  - TimeCockpit.Data.Localization.Default.StringLocalizer.#ctor(System.String)
  - TimeCockpit.Data.Localization.Default.StringLocalizer.#ctor(TimeCockpit.Data.Localization.Default.StringLocalizer)
  - TimeCockpit.Data.Localization.Default.StringLocalizer.ClearDirtyFlag
  - TimeCockpit.Data.Localization.Default.StringLocalizer.ContainsCulture(System.String)
  - TimeCockpit.Data.Localization.Default.StringLocalizer.Cultures
  - TimeCockpit.Data.Localization.Default.StringLocalizer.DeletedCultures
  - TimeCockpit.Data.Localization.Default.StringLocalizer.Get(System.String)
  - TimeCockpit.Data.Localization.Default.StringLocalizer.GetEnumerator
  - TimeCockpit.Data.Localization.Default.StringLocalizer.Item(System.String)
  - TimeCockpit.Data.Localization.Default.StringLocalizer.MergeFrom(TimeCockpit.Data.Localization.Default.StringLocalizer)
  - TimeCockpit.Data.Localization.Default.StringLocalizer.OnValueChanged
  - TimeCockpit.Data.Localization.Default.StringLocalizer.RemoveAllCultures
  - TimeCockpit.Data.Localization.Default.StringLocalizer.RemoveCulture(System.String)
  - TimeCockpit.Data.Localization.Default.StringLocalizer.System#Collections#IEnumerable#GetEnumerator
  - TimeCockpit.Data.Localization.Default.StringLocalizer.TechnicalName
  - TimeCockpit.Data.Localization.Default.StringLocalizer.TryGetLocalization(System.String,TimeCockpit.Data.Localization.Default.LocalizedString@)
  - TimeCockpit.Data.Localization.Default.StringLocalizer.Update(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Object,System.Object}})
  - TimeCockpit.Data.Localization.Default.StringLocalizer.Update(System.Collections.Generic.IEnumerable{TimeCockpit.Data.Localization.Default.LocalizedString})
  - TimeCockpit.Data.Localization.Default.StringLocalizer.Update(System.String,System.String)
  - TimeCockpit.Data.Localization.Default.StringLocalizer.Update(TimeCockpit.Data.Localization.Default.LocalizedString)
  - TimeCockpit.Data.Localization.Default.StringLocalizer.ValueChanged
  langs:
  - csharp
  - vb
  name: StringLocalizer
  nameWithType: StringLocalizer
  fullName: TimeCockpit.Data.Localization.Default.StringLocalizer
  type: Class
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Localization.Default
  summary: "\nclass representing a localized string.\n"
  syntax:
    content: 'public class StringLocalizer : IEnumerable<LocalizedString>, IEnumerable'
    content.vb: >-
      Public Class StringLocalizer
          Implements IEnumerable(Of LocalizedString), IEnumerable
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.IEnumerable{TimeCockpit.Data.Localization.Default.LocalizedString}
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TimeCockpit.Data.Localization.Default.StringLocalizer.#ctor(System.String)
  commentId: M:TimeCockpit.Data.Localization.Default.StringLocalizer.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: TimeCockpit.Data.Localization.Default.StringLocalizer
  langs:
  - csharp
  - vb
  name: StringLocalizer(String)
  nameWithType: StringLocalizer.StringLocalizer(String)
  fullName: TimeCockpit.Data.Localization.Default.StringLocalizer.StringLocalizer(System.String)
  type: Constructor
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Localization.Default
  summary: "\nInitializes a new instance of the <xref href=\"TimeCockpit.Data.Localization.Default.StringLocalizer\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  syntax:
    content: public StringLocalizer(string technicalName)
    parameters:
    - id: technicalName
      type: System.String
      description: The technical name of the string localizer.
    content.vb: Public Sub New(technicalName As String)
  overload: TimeCockpit.Data.Localization.Default.StringLocalizer.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Localization.Default.StringLocalizer.#ctor(TimeCockpit.Data.Localization.Default.StringLocalizer)
  commentId: M:TimeCockpit.Data.Localization.Default.StringLocalizer.#ctor(TimeCockpit.Data.Localization.Default.StringLocalizer)
  id: '#ctor(TimeCockpit.Data.Localization.Default.StringLocalizer)'
  parent: TimeCockpit.Data.Localization.Default.StringLocalizer
  langs:
  - csharp
  - vb
  name: StringLocalizer(StringLocalizer)
  nameWithType: StringLocalizer.StringLocalizer(StringLocalizer)
  fullName: TimeCockpit.Data.Localization.Default.StringLocalizer.StringLocalizer(TimeCockpit.Data.Localization.Default.StringLocalizer)
  type: Constructor
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Localization.Default
  summary: "\nInitializes a new instance of the <xref href=\"TimeCockpit.Data.Localization.Default.StringLocalizer\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  syntax:
    content: public StringLocalizer(StringLocalizer source)
    parameters:
    - id: source
      type: TimeCockpit.Data.Localization.Default.StringLocalizer
      description: the source to copy from.
    content.vb: Public Sub New(source As StringLocalizer)
  overload: TimeCockpit.Data.Localization.Default.StringLocalizer.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Localization.Default.StringLocalizer.TryGetLocalization(System.String,TimeCockpit.Data.Localization.Default.LocalizedString@)
  commentId: M:TimeCockpit.Data.Localization.Default.StringLocalizer.TryGetLocalization(System.String,TimeCockpit.Data.Localization.Default.LocalizedString@)
  id: TryGetLocalization(System.String,TimeCockpit.Data.Localization.Default.LocalizedString@)
  parent: TimeCockpit.Data.Localization.Default.StringLocalizer
  langs:
  - csharp
  - vb
  name: TryGetLocalization(String, out LocalizedString)
  nameWithType: StringLocalizer.TryGetLocalization(String, out LocalizedString)
  fullName: TimeCockpit.Data.Localization.Default.StringLocalizer.TryGetLocalization(System.String, out TimeCockpit.Data.Localization.Default.LocalizedString)
  type: Method
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Localization.Default
  summary: "\nTries to retireve a localized string from the localizations backing collection.\n"
  syntax:
    content: public bool TryGetLocalization(string culture, out LocalizedString localizedString)
    parameters:
    - id: culture
      type: System.String
      description: the culture to retrieve.
    - id: localizedString
      type: TimeCockpit.Data.Localization.Default.LocalizedString
      description: the resulting localized string.
    return:
      type: System.Boolean
      description: Returns true if a value was retrieved, false otherwise.
    content.vb: Public Function TryGetLocalization(culture As String, ByRef localizedString As LocalizedString) As Boolean
  overload: TimeCockpit.Data.Localization.Default.StringLocalizer.TryGetLocalization*
  nameWithType.vb: StringLocalizer.TryGetLocalization(String, ByRef LocalizedString)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TimeCockpit.Data.Localization.Default.StringLocalizer.TryGetLocalization(System.String, ByRef TimeCockpit.Data.Localization.Default.LocalizedString)
  name.vb: TryGetLocalization(String, ByRef LocalizedString)
- uid: TimeCockpit.Data.Localization.Default.StringLocalizer.ContainsCulture(System.String)
  commentId: M:TimeCockpit.Data.Localization.Default.StringLocalizer.ContainsCulture(System.String)
  id: ContainsCulture(System.String)
  parent: TimeCockpit.Data.Localization.Default.StringLocalizer
  langs:
  - csharp
  - vb
  name: ContainsCulture(String)
  nameWithType: StringLocalizer.ContainsCulture(String)
  fullName: TimeCockpit.Data.Localization.Default.StringLocalizer.ContainsCulture(System.String)
  type: Method
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Localization.Default
  summary: "\nReturns true if the culture is set, false otherwise.\n"
  syntax:
    content: public bool ContainsCulture(string culture)
    parameters:
    - id: culture
      type: System.String
      description: the culture to check.
    return:
      type: System.Boolean
      description: returns true if the culture exists, false otherwise.
    content.vb: Public Function ContainsCulture(culture As String) As Boolean
  overload: TimeCockpit.Data.Localization.Default.StringLocalizer.ContainsCulture*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Localization.Default.StringLocalizer.Get(System.String)
  commentId: M:TimeCockpit.Data.Localization.Default.StringLocalizer.Get(System.String)
  id: Get(System.String)
  parent: TimeCockpit.Data.Localization.Default.StringLocalizer
  langs:
  - csharp
  - vb
  name: Get(String)
  nameWithType: StringLocalizer.Get(String)
  fullName: TimeCockpit.Data.Localization.Default.StringLocalizer.Get(System.String)
  type: Method
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Localization.Default
  summary: "\nGets the localized string for the given culture.\n"
  syntax:
    content: public LocalizedString Get(string culture)
    parameters:
    - id: culture
      type: System.String
      description: the culture to get a <xref href="TimeCockpit.Data.Localization.Default.LocalizedString" data-throw-if-not-resolved="false"></xref> for.
    return:
      type: TimeCockpit.Data.Localization.Default.LocalizedString
      description: Returns the LocalizedString.
    content.vb: Public Function Get(culture As String) As LocalizedString
  overload: TimeCockpit.Data.Localization.Default.StringLocalizer.Get*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Localization.Default.StringLocalizer.RemoveCulture(System.String)
  commentId: M:TimeCockpit.Data.Localization.Default.StringLocalizer.RemoveCulture(System.String)
  id: RemoveCulture(System.String)
  parent: TimeCockpit.Data.Localization.Default.StringLocalizer
  langs:
  - csharp
  - vb
  name: RemoveCulture(String)
  nameWithType: StringLocalizer.RemoveCulture(String)
  fullName: TimeCockpit.Data.Localization.Default.StringLocalizer.RemoveCulture(System.String)
  type: Method
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Localization.Default
  summary: "\nremoves the culture from the localized string.\n"
  syntax:
    content: public void RemoveCulture(string culture)
    parameters:
    - id: culture
      type: System.String
      description: the culture to remove.
    content.vb: Public Sub RemoveCulture(culture As String)
  overload: TimeCockpit.Data.Localization.Default.StringLocalizer.RemoveCulture*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Localization.Default.StringLocalizer.RemoveAllCultures
  commentId: M:TimeCockpit.Data.Localization.Default.StringLocalizer.RemoveAllCultures
  id: RemoveAllCultures
  parent: TimeCockpit.Data.Localization.Default.StringLocalizer
  langs:
  - csharp
  - vb
  name: RemoveAllCultures()
  nameWithType: StringLocalizer.RemoveAllCultures()
  fullName: TimeCockpit.Data.Localization.Default.StringLocalizer.RemoveAllCultures()
  type: Method
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Localization.Default
  summary: "\nremoves all cultures.\n"
  syntax:
    content: public void RemoveAllCultures()
    content.vb: Public Sub RemoveAllCultures
  overload: TimeCockpit.Data.Localization.Default.StringLocalizer.RemoveAllCultures*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Localization.Default.StringLocalizer.ClearDirtyFlag
  commentId: M:TimeCockpit.Data.Localization.Default.StringLocalizer.ClearDirtyFlag
  id: ClearDirtyFlag
  parent: TimeCockpit.Data.Localization.Default.StringLocalizer
  langs:
  - csharp
  - vb
  name: ClearDirtyFlag()
  nameWithType: StringLocalizer.ClearDirtyFlag()
  fullName: TimeCockpit.Data.Localization.Default.StringLocalizer.ClearDirtyFlag()
  type: Method
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Localization.Default
  summary: "\nClears the dirty flag for the localizer as well as nested items.\n"
  syntax:
    content: public void ClearDirtyFlag()
    content.vb: Public Sub ClearDirtyFlag
  overload: TimeCockpit.Data.Localization.Default.StringLocalizer.ClearDirtyFlag*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Localization.Default.StringLocalizer.Update(TimeCockpit.Data.Localization.Default.LocalizedString)
  commentId: M:TimeCockpit.Data.Localization.Default.StringLocalizer.Update(TimeCockpit.Data.Localization.Default.LocalizedString)
  id: Update(TimeCockpit.Data.Localization.Default.LocalizedString)
  parent: TimeCockpit.Data.Localization.Default.StringLocalizer
  langs:
  - csharp
  - vb
  name: Update(LocalizedString)
  nameWithType: StringLocalizer.Update(LocalizedString)
  fullName: TimeCockpit.Data.Localization.Default.StringLocalizer.Update(TimeCockpit.Data.Localization.Default.LocalizedString)
  type: Method
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Localization.Default
  summary: "\nUpdates the string for a specific culture.\n"
  syntax:
    content: public void Update(LocalizedString localization)
    parameters:
    - id: localization
      type: TimeCockpit.Data.Localization.Default.LocalizedString
      description: the localization to update.
    content.vb: Public Sub Update(localization As LocalizedString)
  overload: TimeCockpit.Data.Localization.Default.StringLocalizer.Update*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Localization.Default.StringLocalizer.Update(System.String,System.String)
  commentId: M:TimeCockpit.Data.Localization.Default.StringLocalizer.Update(System.String,System.String)
  id: Update(System.String,System.String)
  parent: TimeCockpit.Data.Localization.Default.StringLocalizer
  langs:
  - csharp
  - vb
  name: Update(String, String)
  nameWithType: StringLocalizer.Update(String, String)
  fullName: TimeCockpit.Data.Localization.Default.StringLocalizer.Update(System.String, System.String)
  type: Method
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Localization.Default
  summary: "\nhelper to update a single instance.\n"
  syntax:
    content: public void Update(string culture, string text)
    parameters:
    - id: culture
      type: System.String
      description: the culture to update for.
    - id: text
      type: System.String
      description: the text of the culture.
    content.vb: Public Sub Update(culture As String, text As String)
  overload: TimeCockpit.Data.Localization.Default.StringLocalizer.Update*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Localization.Default.StringLocalizer.Update(System.Collections.Generic.IEnumerable{TimeCockpit.Data.Localization.Default.LocalizedString})
  commentId: M:TimeCockpit.Data.Localization.Default.StringLocalizer.Update(System.Collections.Generic.IEnumerable{TimeCockpit.Data.Localization.Default.LocalizedString})
  id: Update(System.Collections.Generic.IEnumerable{TimeCockpit.Data.Localization.Default.LocalizedString})
  parent: TimeCockpit.Data.Localization.Default.StringLocalizer
  langs:
  - csharp
  - vb
  name: Update(IEnumerable<LocalizedString>)
  nameWithType: StringLocalizer.Update(IEnumerable<LocalizedString>)
  fullName: TimeCockpit.Data.Localization.Default.StringLocalizer.Update(System.Collections.Generic.IEnumerable<TimeCockpit.Data.Localization.Default.LocalizedString>)
  type: Method
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Localization.Default
  summary: "\nUpdates the localizations.\n"
  syntax:
    content: public void Update(IEnumerable<LocalizedString> localizations)
    parameters:
    - id: localizations
      type: System.Collections.Generic.IEnumerable{TimeCockpit.Data.Localization.Default.LocalizedString}
      description: the localizations to update.
    content.vb: Public Sub Update(localizations As IEnumerable(Of LocalizedString))
  overload: TimeCockpit.Data.Localization.Default.StringLocalizer.Update*
  nameWithType.vb: StringLocalizer.Update(IEnumerable(Of LocalizedString))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TimeCockpit.Data.Localization.Default.StringLocalizer.Update(System.Collections.Generic.IEnumerable(Of TimeCockpit.Data.Localization.Default.LocalizedString))
  name.vb: Update(IEnumerable(Of LocalizedString))
- uid: TimeCockpit.Data.Localization.Default.StringLocalizer.Update(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Object,System.Object}})
  commentId: M:TimeCockpit.Data.Localization.Default.StringLocalizer.Update(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Object,System.Object}})
  id: Update(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Object,System.Object}})
  parent: TimeCockpit.Data.Localization.Default.StringLocalizer
  langs:
  - csharp
  - vb
  name: Update(IEnumerable<KeyValuePair<Object, Object>>)
  nameWithType: StringLocalizer.Update(IEnumerable<KeyValuePair<Object, Object>>)
  fullName: TimeCockpit.Data.Localization.Default.StringLocalizer.Update(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.Object, System.Object>>)
  type: Method
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Localization.Default
  summary: "\nHelper update method for python ease-of-use.\n"
  syntax:
    content: public void Update(IEnumerable<KeyValuePair<object, object>> localizations)
    parameters:
    - id: localizations
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Object,System.Object}}
      description: the localizations to update.
    content.vb: Public Sub Update(localizations As IEnumerable(Of KeyValuePair(Of Object, Object)))
  overload: TimeCockpit.Data.Localization.Default.StringLocalizer.Update*
  nameWithType.vb: StringLocalizer.Update(IEnumerable(Of KeyValuePair(Of Object, Object)))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TimeCockpit.Data.Localization.Default.StringLocalizer.Update(System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.Object, System.Object)))
  name.vb: Update(IEnumerable(Of KeyValuePair(Of Object, Object)))
- uid: TimeCockpit.Data.Localization.Default.StringLocalizer.MergeFrom(TimeCockpit.Data.Localization.Default.StringLocalizer)
  commentId: M:TimeCockpit.Data.Localization.Default.StringLocalizer.MergeFrom(TimeCockpit.Data.Localization.Default.StringLocalizer)
  id: MergeFrom(TimeCockpit.Data.Localization.Default.StringLocalizer)
  parent: TimeCockpit.Data.Localization.Default.StringLocalizer
  langs:
  - csharp
  - vb
  name: MergeFrom(StringLocalizer)
  nameWithType: StringLocalizer.MergeFrom(StringLocalizer)
  fullName: TimeCockpit.Data.Localization.Default.StringLocalizer.MergeFrom(TimeCockpit.Data.Localization.Default.StringLocalizer)
  type: Method
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Localization.Default
  summary: "\nMerges changes from the source to this instance.\n"
  syntax:
    content: public void MergeFrom(StringLocalizer source)
    parameters:
    - id: source
      type: TimeCockpit.Data.Localization.Default.StringLocalizer
      description: the source to retrieve updates from.
    content.vb: Public Sub MergeFrom(source As StringLocalizer)
  overload: TimeCockpit.Data.Localization.Default.StringLocalizer.MergeFrom*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Localization.Default.StringLocalizer.GetEnumerator
  commentId: M:TimeCockpit.Data.Localization.Default.StringLocalizer.GetEnumerator
  id: GetEnumerator
  parent: TimeCockpit.Data.Localization.Default.StringLocalizer
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: StringLocalizer.GetEnumerator()
  fullName: TimeCockpit.Data.Localization.Default.StringLocalizer.GetEnumerator()
  type: Method
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Localization.Default
  summary: "\nGet an enumerator over all localized strings.\n"
  syntax:
    content: public IEnumerator<LocalizedString> GetEnumerator()
    return:
      type: System.Collections.Generic.IEnumerator{TimeCockpit.Data.Localization.Default.LocalizedString}
      description: Returns the enumerator across all localizations.
    content.vb: Public Function GetEnumerator As IEnumerator(Of LocalizedString)
  overload: TimeCockpit.Data.Localization.Default.StringLocalizer.GetEnumerator*
  implements:
  - System.Collections.Generic.IEnumerable{TimeCockpit.Data.Localization.Default.LocalizedString}.GetEnumerator
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Localization.Default.StringLocalizer.System#Collections#IEnumerable#GetEnumerator
  commentId: M:TimeCockpit.Data.Localization.Default.StringLocalizer.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: TimeCockpit.Data.Localization.Default.StringLocalizer
  langs:
  - csharp
  - vb
  name: IEnumerable.GetEnumerator()
  nameWithType: StringLocalizer.IEnumerable.GetEnumerator()
  fullName: TimeCockpit.Data.Localization.Default.StringLocalizer.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Localization.Default
  summary: "\nGet an enumerator over all localized strings.\n"
  syntax:
    content: IEnumerator IEnumerable.GetEnumerator()
    return:
      type: System.Collections.IEnumerator
      description: Returns the enumerator across all localizations.
    content.vb: Function System.Collections.IEnumerable.GetEnumerator As IEnumerator Implements IEnumerable.GetEnumerator
  overload: TimeCockpit.Data.Localization.Default.StringLocalizer.System#Collections#IEnumerable#GetEnumerator*
  implements:
  - System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: StringLocalizer.System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
- uid: TimeCockpit.Data.Localization.Default.StringLocalizer.OnValueChanged
  commentId: M:TimeCockpit.Data.Localization.Default.StringLocalizer.OnValueChanged
  id: OnValueChanged
  parent: TimeCockpit.Data.Localization.Default.StringLocalizer
  langs:
  - csharp
  - vb
  name: OnValueChanged()
  nameWithType: StringLocalizer.OnValueChanged()
  fullName: TimeCockpit.Data.Localization.Default.StringLocalizer.OnValueChanged()
  type: Method
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Localization.Default
  summary: "\nCalls the <xref href=\"TimeCockpit.Data.Localization.Default.StringLocalizer.ValueChanged\" data-throw-if-not-resolved=\"false\"></xref> event.\n"
  syntax:
    content: protected void OnValueChanged()
    content.vb: Protected Sub OnValueChanged
  overload: TimeCockpit.Data.Localization.Default.StringLocalizer.OnValueChanged*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: TimeCockpit.Data.Localization.Default.StringLocalizer.TechnicalName
  commentId: P:TimeCockpit.Data.Localization.Default.StringLocalizer.TechnicalName
  id: TechnicalName
  parent: TimeCockpit.Data.Localization.Default.StringLocalizer
  langs:
  - csharp
  - vb
  name: TechnicalName
  nameWithType: StringLocalizer.TechnicalName
  fullName: TimeCockpit.Data.Localization.Default.StringLocalizer.TechnicalName
  type: Property
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Localization.Default
  summary: "\nGets the technical name of the localizer.\n"
  syntax:
    content: public string TechnicalName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property TechnicalName As String
  overload: TimeCockpit.Data.Localization.Default.StringLocalizer.TechnicalName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TimeCockpit.Data.Localization.Default.StringLocalizer.Cultures
  commentId: P:TimeCockpit.Data.Localization.Default.StringLocalizer.Cultures
  id: Cultures
  parent: TimeCockpit.Data.Localization.Default.StringLocalizer
  langs:
  - csharp
  - vb
  name: Cultures
  nameWithType: StringLocalizer.Cultures
  fullName: TimeCockpit.Data.Localization.Default.StringLocalizer.Cultures
  type: Property
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Localization.Default
  summary: "\nGets an enumerable over all cultures stored in the string localizer.\n"
  syntax:
    content: public IEnumerable<string> Cultures { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
    content.vb: Public ReadOnly Property Cultures As IEnumerable(Of String)
  overload: TimeCockpit.Data.Localization.Default.StringLocalizer.Cultures*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TimeCockpit.Data.Localization.Default.StringLocalizer.DeletedCultures
  commentId: P:TimeCockpit.Data.Localization.Default.StringLocalizer.DeletedCultures
  id: DeletedCultures
  parent: TimeCockpit.Data.Localization.Default.StringLocalizer
  langs:
  - csharp
  - vb
  name: DeletedCultures
  nameWithType: StringLocalizer.DeletedCultures
  fullName: TimeCockpit.Data.Localization.Default.StringLocalizer.DeletedCultures
  type: Property
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Localization.Default
  summary: "\nGets the deleted cultures.\n"
  syntax:
    content: public IEnumerable<string> DeletedCultures { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
    content.vb: Public ReadOnly Property DeletedCultures As IEnumerable(Of String)
  overload: TimeCockpit.Data.Localization.Default.StringLocalizer.DeletedCultures*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TimeCockpit.Data.Localization.Default.StringLocalizer.Item(System.String)
  commentId: P:TimeCockpit.Data.Localization.Default.StringLocalizer.Item(System.String)
  id: Item(System.String)
  parent: TimeCockpit.Data.Localization.Default.StringLocalizer
  langs:
  - csharp
  - vb
  name: Item[String]
  nameWithType: StringLocalizer.Item[String]
  fullName: TimeCockpit.Data.Localization.Default.StringLocalizer.Item[System.String]
  type: Property
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Localization.Default
  summary: "\nThe indexer by culture.\n"
  syntax:
    content: public string this[string culture] { get; set; }
    parameters:
    - id: culture
      type: System.String
      description: the culture of the name.
    return:
      type: System.String
      description: Returns the localized string.
    content.vb: Public Property Item(culture As String) As String
  overload: TimeCockpit.Data.Localization.Default.StringLocalizer.Item*
  nameWithType.vb: StringLocalizer.Item(String)
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: TimeCockpit.Data.Localization.Default.StringLocalizer.Item(System.String)
  name.vb: Item(String)
- uid: TimeCockpit.Data.Localization.Default.StringLocalizer.ValueChanged
  commentId: E:TimeCockpit.Data.Localization.Default.StringLocalizer.ValueChanged
  id: ValueChanged
  parent: TimeCockpit.Data.Localization.Default.StringLocalizer
  langs:
  - csharp
  - vb
  name: ValueChanged
  nameWithType: StringLocalizer.ValueChanged
  fullName: TimeCockpit.Data.Localization.Default.StringLocalizer.ValueChanged
  type: Event
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Localization.Default
  summary: "\nEvent fired when a new generic key is added.\n"
  syntax:
    content: public event EventHandler ValueChanged
    return:
      type: System.EventHandler
    content.vb: Public Event ValueChanged As EventHandler
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: TimeCockpit.Data.Localization.Default
  commentId: N:TimeCockpit.Data.Localization.Default
  isExternal: true
  name: TimeCockpit.Data.Localization.Default
  nameWithType: TimeCockpit.Data.Localization.Default
  fullName: TimeCockpit.Data.Localization.Default
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.Generic.IEnumerable{TimeCockpit.Data.Localization.Default.LocalizedString}
  commentId: T:System.Collections.Generic.IEnumerable{TimeCockpit.Data.Localization.Default.LocalizedString}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<LocalizedString>
  nameWithType: IEnumerable<LocalizedString>
  fullName: System.Collections.Generic.IEnumerable<TimeCockpit.Data.Localization.Default.LocalizedString>
  nameWithType.vb: IEnumerable(Of LocalizedString)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TimeCockpit.Data.Localization.Default.LocalizedString)
  name.vb: IEnumerable(Of LocalizedString)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TimeCockpit.Data.Localization.Default.LocalizedString
    name: LocalizedString
    nameWithType: LocalizedString
    fullName: TimeCockpit.Data.Localization.Default.LocalizedString
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TimeCockpit.Data.Localization.Default.LocalizedString
    name: LocalizedString
    nameWithType: LocalizedString
    fullName: TimeCockpit.Data.Localization.Default.LocalizedString
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: TimeCockpit.Data.Localization.Default.StringLocalizer.#ctor*
  commentId: Overload:TimeCockpit.Data.Localization.Default.StringLocalizer.#ctor
  isExternal: true
  name: StringLocalizer
  nameWithType: StringLocalizer.StringLocalizer
  fullName: TimeCockpit.Data.Localization.Default.StringLocalizer.StringLocalizer
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: TimeCockpit.Data.Localization.Default.StringLocalizer
  commentId: T:TimeCockpit.Data.Localization.Default.StringLocalizer
  parent: TimeCockpit.Data.Localization.Default
  isExternal: true
  name: StringLocalizer
  nameWithType: StringLocalizer
  fullName: TimeCockpit.Data.Localization.Default.StringLocalizer
- uid: TimeCockpit.Data.Localization.Default.StringLocalizer.TryGetLocalization*
  commentId: Overload:TimeCockpit.Data.Localization.Default.StringLocalizer.TryGetLocalization
  isExternal: true
  name: TryGetLocalization
  nameWithType: StringLocalizer.TryGetLocalization
  fullName: TimeCockpit.Data.Localization.Default.StringLocalizer.TryGetLocalization
- uid: TimeCockpit.Data.Localization.Default.LocalizedString
  commentId: T:TimeCockpit.Data.Localization.Default.LocalizedString
  parent: TimeCockpit.Data.Localization.Default
  isExternal: true
  name: LocalizedString
  nameWithType: LocalizedString
  fullName: TimeCockpit.Data.Localization.Default.LocalizedString
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: TimeCockpit.Data.Localization.Default.StringLocalizer.ContainsCulture*
  commentId: Overload:TimeCockpit.Data.Localization.Default.StringLocalizer.ContainsCulture
  isExternal: true
  name: ContainsCulture
  nameWithType: StringLocalizer.ContainsCulture
  fullName: TimeCockpit.Data.Localization.Default.StringLocalizer.ContainsCulture
- uid: TimeCockpit.Data.Localization.Default.StringLocalizer.Get*
  commentId: Overload:TimeCockpit.Data.Localization.Default.StringLocalizer.Get
  isExternal: true
  name: Get
  nameWithType: StringLocalizer.Get
  fullName: TimeCockpit.Data.Localization.Default.StringLocalizer.Get
- uid: TimeCockpit.Data.Localization.Default.StringLocalizer.RemoveCulture*
  commentId: Overload:TimeCockpit.Data.Localization.Default.StringLocalizer.RemoveCulture
  isExternal: true
  name: RemoveCulture
  nameWithType: StringLocalizer.RemoveCulture
  fullName: TimeCockpit.Data.Localization.Default.StringLocalizer.RemoveCulture
- uid: TimeCockpit.Data.Localization.Default.StringLocalizer.RemoveAllCultures*
  commentId: Overload:TimeCockpit.Data.Localization.Default.StringLocalizer.RemoveAllCultures
  isExternal: true
  name: RemoveAllCultures
  nameWithType: StringLocalizer.RemoveAllCultures
  fullName: TimeCockpit.Data.Localization.Default.StringLocalizer.RemoveAllCultures
- uid: TimeCockpit.Data.Localization.Default.StringLocalizer.ClearDirtyFlag*
  commentId: Overload:TimeCockpit.Data.Localization.Default.StringLocalizer.ClearDirtyFlag
  isExternal: true
  name: ClearDirtyFlag
  nameWithType: StringLocalizer.ClearDirtyFlag
  fullName: TimeCockpit.Data.Localization.Default.StringLocalizer.ClearDirtyFlag
- uid: TimeCockpit.Data.Localization.Default.StringLocalizer.Update*
  commentId: Overload:TimeCockpit.Data.Localization.Default.StringLocalizer.Update
  isExternal: true
  name: Update
  nameWithType: StringLocalizer.Update
  fullName: TimeCockpit.Data.Localization.Default.StringLocalizer.Update
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Object,System.Object}}
  commentId: T:System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Object,System.Object}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<KeyValuePair<Object, Object>>
  nameWithType: IEnumerable<KeyValuePair<Object, Object>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.Object, System.Object>>
  nameWithType.vb: IEnumerable(Of KeyValuePair(Of Object, Object))
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.Object, System.Object))
  name.vb: IEnumerable(Of KeyValuePair(Of Object, Object))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.Localization.Default.StringLocalizer.MergeFrom*
  commentId: Overload:TimeCockpit.Data.Localization.Default.StringLocalizer.MergeFrom
  isExternal: true
  name: MergeFrom
  nameWithType: StringLocalizer.MergeFrom
  fullName: TimeCockpit.Data.Localization.Default.StringLocalizer.MergeFrom
- uid: TimeCockpit.Data.Localization.Default.StringLocalizer.GetEnumerator*
  commentId: Overload:TimeCockpit.Data.Localization.Default.StringLocalizer.GetEnumerator
  isExternal: true
  name: GetEnumerator
  nameWithType: StringLocalizer.GetEnumerator
  fullName: TimeCockpit.Data.Localization.Default.StringLocalizer.GetEnumerator
- uid: System.Collections.Generic.IEnumerable{TimeCockpit.Data.Localization.Default.LocalizedString}.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable{TimeCockpit.Data.Localization.Default.LocalizedString}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{TimeCockpit.Data.Localization.Default.LocalizedString}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<LocalizedString>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<TimeCockpit.Data.Localization.Default.LocalizedString>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of LocalizedString).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of TimeCockpit.Data.Localization.Default.LocalizedString).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<LocalizedString>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<TimeCockpit.Data.Localization.Default.LocalizedString>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of LocalizedString).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of TimeCockpit.Data.Localization.Default.LocalizedString).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator{TimeCockpit.Data.Localization.Default.LocalizedString}
  commentId: T:System.Collections.Generic.IEnumerator{TimeCockpit.Data.Localization.Default.LocalizedString}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  name: IEnumerator<LocalizedString>
  nameWithType: IEnumerator<LocalizedString>
  fullName: System.Collections.Generic.IEnumerator<TimeCockpit.Data.Localization.Default.LocalizedString>
  nameWithType.vb: IEnumerator(Of LocalizedString)
  fullName.vb: System.Collections.Generic.IEnumerator(Of TimeCockpit.Data.Localization.Default.LocalizedString)
  name.vb: IEnumerator(Of LocalizedString)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TimeCockpit.Data.Localization.Default.LocalizedString
    name: LocalizedString
    nameWithType: LocalizedString
    fullName: TimeCockpit.Data.Localization.Default.LocalizedString
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TimeCockpit.Data.Localization.Default.LocalizedString
    name: LocalizedString
    nameWithType: LocalizedString
    fullName: TimeCockpit.Data.Localization.Default.LocalizedString
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of T).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.Localization.Default.StringLocalizer.System#Collections#IEnumerable#GetEnumerator*
  commentId: Overload:TimeCockpit.Data.Localization.Default.StringLocalizer.System#Collections#IEnumerable#GetEnumerator
  isExternal: true
  name: IEnumerable.GetEnumerator
  nameWithType: StringLocalizer.IEnumerable.GetEnumerator
  fullName: TimeCockpit.Data.Localization.Default.StringLocalizer.System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: StringLocalizer.System.Collections.IEnumerable.GetEnumerator
  name.vb: System.Collections.IEnumerable.GetEnumerator
- uid: System.Collections.IEnumerable.GetEnumerator
  commentId: M:System.Collections.IEnumerable.GetEnumerator
  parent: System.Collections.IEnumerable
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable.GetEnumerator()
  fullName: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerator
  commentId: T:System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: TimeCockpit.Data.Localization.Default.StringLocalizer.OnValueChanged*
  commentId: Overload:TimeCockpit.Data.Localization.Default.StringLocalizer.OnValueChanged
  isExternal: true
  name: OnValueChanged
  nameWithType: StringLocalizer.OnValueChanged
  fullName: TimeCockpit.Data.Localization.Default.StringLocalizer.OnValueChanged
- uid: TimeCockpit.Data.Localization.Default.StringLocalizer.TechnicalName*
  commentId: Overload:TimeCockpit.Data.Localization.Default.StringLocalizer.TechnicalName
  isExternal: true
  name: TechnicalName
  nameWithType: StringLocalizer.TechnicalName
  fullName: TimeCockpit.Data.Localization.Default.StringLocalizer.TechnicalName
- uid: TimeCockpit.Data.Localization.Default.StringLocalizer.Cultures*
  commentId: Overload:TimeCockpit.Data.Localization.Default.StringLocalizer.Cultures
  isExternal: true
  name: Cultures
  nameWithType: StringLocalizer.Cultures
  fullName: TimeCockpit.Data.Localization.Default.StringLocalizer.Cultures
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.Localization.Default.StringLocalizer.DeletedCultures*
  commentId: Overload:TimeCockpit.Data.Localization.Default.StringLocalizer.DeletedCultures
  isExternal: true
  name: DeletedCultures
  nameWithType: StringLocalizer.DeletedCultures
  fullName: TimeCockpit.Data.Localization.Default.StringLocalizer.DeletedCultures
- uid: TimeCockpit.Data.Localization.Default.StringLocalizer.Item*
  commentId: Overload:TimeCockpit.Data.Localization.Default.StringLocalizer.Item
  isExternal: true
  name: Item
  nameWithType: StringLocalizer.Item
  fullName: TimeCockpit.Data.Localization.Default.StringLocalizer.Item
- uid: System.EventHandler
  commentId: T:System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
