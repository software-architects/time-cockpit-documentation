### YamlMime:ManagedReference
items:
- uid: TimeCockpit.Data.JsonConverters.JsonActionResponse
  commentId: T:TimeCockpit.Data.JsonConverters.JsonActionResponse
  id: JsonActionResponse
  parent: TimeCockpit.Data.JsonConverters
  children:
  - TimeCockpit.Data.JsonConverters.JsonActionResponse.#ctor
  - TimeCockpit.Data.JsonConverters.JsonActionResponse.Error
  - TimeCockpit.Data.JsonConverters.JsonActionResponse.ModifiedInputSet
  - TimeCockpit.Data.JsonConverters.JsonActionResponse.Output
  - TimeCockpit.Data.JsonConverters.JsonActionResponse.Read(Newtonsoft.Json.JsonReader,TimeCockpit.Data.DataModel.Model,TimeCockpit.Data.Environment)
  - TimeCockpit.Data.JsonConverters.JsonActionResponse.Write(Newtonsoft.Json.JsonWriter,TimeCockpit.Data.DataModel.Model,TimeCockpit.Data.JsonConverters.JsonActionResponse,System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.ModelEntityBase})
  langs:
  - csharp
  - vb
  name: JsonActionResponse
  nameWithType: JsonActionResponse
  fullName: TimeCockpit.Data.JsonConverters.JsonActionResponse
  type: Class
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/JsonConverters/JsonActionResponse.cs
    id: JsonActionResponse
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/JsonConverters/JsonActionResponse.cs
    startLine: 17
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.JsonConverters
  summary: "\nRepresents the response of a successfully executed action\n"
  example: []
  syntax:
    content: public class JsonActionResponse
    content.vb: Public Class JsonActionResponse
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TimeCockpit.Data.JsonConverters.JsonActionResponse.#ctor
  commentId: M:TimeCockpit.Data.JsonConverters.JsonActionResponse.#ctor
  id: '#ctor'
  parent: TimeCockpit.Data.JsonConverters.JsonActionResponse
  langs:
  - csharp
  - vb
  name: JsonActionResponse()
  nameWithType: JsonActionResponse.JsonActionResponse()
  fullName: TimeCockpit.Data.JsonConverters.JsonActionResponse.JsonActionResponse()
  type: Constructor
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/JsonConverters/JsonActionResponse.cs
    id: .ctor
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/JsonConverters/JsonActionResponse.cs
    startLine: 24
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.JsonConverters
  summary: "\nInitializes a new instance of the <xref href=\"TimeCockpit.Data.JsonConverters.JsonActionResponse\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public JsonActionResponse()
    content.vb: Public Sub New
  overload: TimeCockpit.Data.JsonConverters.JsonActionResponse.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.JsonConverters.JsonActionResponse.Output
  commentId: P:TimeCockpit.Data.JsonConverters.JsonActionResponse.Output
  id: Output
  parent: TimeCockpit.Data.JsonConverters.JsonActionResponse
  langs:
  - csharp
  - vb
  name: Output
  nameWithType: JsonActionResponse.Output
  fullName: TimeCockpit.Data.JsonConverters.JsonActionResponse.Output
  type: Property
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/JsonConverters/JsonActionResponse.cs
    id: Output
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/JsonConverters/JsonActionResponse.cs
    startLine: 39
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.JsonConverters
  summary: "\nGets or sets the output.\n"
  example: []
  syntax:
    content: public string Output { get; set; }
    parameters: []
    return:
      type: System.String
      description: "\nThe output.\n"
    content.vb: Public Property Output As String
  overload: TimeCockpit.Data.JsonConverters.JsonActionResponse.Output*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.JsonConverters.JsonActionResponse.ModifiedInputSet
  commentId: P:TimeCockpit.Data.JsonConverters.JsonActionResponse.ModifiedInputSet
  id: ModifiedInputSet
  parent: TimeCockpit.Data.JsonConverters.JsonActionResponse
  langs:
  - csharp
  - vb
  name: ModifiedInputSet
  nameWithType: JsonActionResponse.ModifiedInputSet
  fullName: TimeCockpit.Data.JsonConverters.JsonActionResponse.ModifiedInputSet
  type: Property
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/JsonConverters/JsonActionResponse.cs
    id: ModifiedInputSet
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/JsonConverters/JsonActionResponse.cs
    startLine: 44
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.JsonConverters
  summary: "\nGets or sets the input set that was used as input to the action, but contains possible modifications by actions.\n"
  example: []
  syntax:
    content: public IEnumerable<EntityObject> ModifiedInputSet { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{TimeCockpit.Data.EntityObject}
    content.vb: Public Property ModifiedInputSet As IEnumerable(Of EntityObject)
  overload: TimeCockpit.Data.JsonConverters.JsonActionResponse.ModifiedInputSet*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.JsonConverters.JsonActionResponse.Error
  commentId: P:TimeCockpit.Data.JsonConverters.JsonActionResponse.Error
  id: Error
  parent: TimeCockpit.Data.JsonConverters.JsonActionResponse
  langs:
  - csharp
  - vb
  name: Error
  nameWithType: JsonActionResponse.Error
  fullName: TimeCockpit.Data.JsonConverters.JsonActionResponse.Error
  type: Property
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/JsonConverters/JsonActionResponse.cs
    id: Error
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/JsonConverters/JsonActionResponse.cs
    startLine: 52
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.JsonConverters
  summary: "\nGets or sets the error.\n"
  example: []
  syntax:
    content: public JsonErrorMessage Error { get; set; }
    parameters: []
    return:
      type: TimeCockpit.Data.JsonConverters.JsonErrorMessage
      description: "\nThe error.\n"
    content.vb: Public Property Error As JsonErrorMessage
  overload: TimeCockpit.Data.JsonConverters.JsonActionResponse.Error*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.JsonConverters.JsonActionResponse.Read(Newtonsoft.Json.JsonReader,TimeCockpit.Data.DataModel.Model,TimeCockpit.Data.Environment)
  commentId: M:TimeCockpit.Data.JsonConverters.JsonActionResponse.Read(Newtonsoft.Json.JsonReader,TimeCockpit.Data.DataModel.Model,TimeCockpit.Data.Environment)
  id: Read(Newtonsoft.Json.JsonReader,TimeCockpit.Data.DataModel.Model,TimeCockpit.Data.Environment)
  parent: TimeCockpit.Data.JsonConverters.JsonActionResponse
  langs:
  - csharp
  - vb
  name: Read(JsonReader, Model, Environment)
  nameWithType: JsonActionResponse.Read(JsonReader, Model, Environment)
  fullName: TimeCockpit.Data.JsonConverters.JsonActionResponse.Read(Newtonsoft.Json.JsonReader, TimeCockpit.Data.DataModel.Model, TimeCockpit.Data.Environment)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/JsonConverters/JsonActionResponse.cs
    id: Read
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/JsonConverters/JsonActionResponse.cs
    startLine: 67
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.JsonConverters
  summary: "\nReads the json action resposne.\n"
  example: []
  syntax:
    content: public static JsonActionResponse Read(JsonReader reader, Model model, Environment environment)
    parameters:
    - id: reader
      type: Newtonsoft.Json.JsonReader
      description: The reader that reads json.
    - id: model
      type: TimeCockpit.Data.DataModel.Model
      description: The model to deserialze the inputset.
    - id: environment
      type: TimeCockpit.Data.Environment
      description: The environment.
    return:
      type: TimeCockpit.Data.JsonConverters.JsonActionResponse
      description: "\nAn instance of <xref href=\"TimeCockpit.Data.JsonConverters.JsonActionResponse\" data-throw-if-not-resolved=\"false\"></xref>.\n"
    content.vb: Public Shared Function Read(reader As JsonReader, model As Model, environment As Environment) As JsonActionResponse
  overload: TimeCockpit.Data.JsonConverters.JsonActionResponse.Read*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: TimeCockpit.Data.JsonConverters.JsonActionResponse.Write(Newtonsoft.Json.JsonWriter,TimeCockpit.Data.DataModel.Model,TimeCockpit.Data.JsonConverters.JsonActionResponse,System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.ModelEntityBase})
  commentId: M:TimeCockpit.Data.JsonConverters.JsonActionResponse.Write(Newtonsoft.Json.JsonWriter,TimeCockpit.Data.DataModel.Model,TimeCockpit.Data.JsonConverters.JsonActionResponse,System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.ModelEntityBase})
  id: Write(Newtonsoft.Json.JsonWriter,TimeCockpit.Data.DataModel.Model,TimeCockpit.Data.JsonConverters.JsonActionResponse,System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.ModelEntityBase})
  parent: TimeCockpit.Data.JsonConverters.JsonActionResponse
  langs:
  - csharp
  - vb
  name: Write(JsonWriter, Model, JsonActionResponse, IEnumerable<ModelEntityBase>)
  nameWithType: JsonActionResponse.Write(JsonWriter, Model, JsonActionResponse, IEnumerable<ModelEntityBase>)
  fullName: TimeCockpit.Data.JsonConverters.JsonActionResponse.Write(Newtonsoft.Json.JsonWriter, TimeCockpit.Data.DataModel.Model, TimeCockpit.Data.JsonConverters.JsonActionResponse, System.Collections.Generic.IEnumerable<TimeCockpit.Data.DataModel.ModelEntityBase>)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/JsonConverters/JsonActionResponse.cs
    id: Write
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/JsonConverters/JsonActionResponse.cs
    startLine: 117
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.JsonConverters
  summary: "\nWrites the json action response.\n"
  example: []
  syntax:
    content: public static void Write(JsonWriter writer, Model model, JsonActionResponse actionResponse, IEnumerable<ModelEntityBase> anonTypes)
    parameters:
    - id: writer
      type: Newtonsoft.Json.JsonWriter
      description: The writer that writes json.
    - id: model
      type: TimeCockpit.Data.DataModel.Model
      description: The model.
    - id: actionResponse
      type: TimeCockpit.Data.JsonConverters.JsonActionResponse
      description: The select response.
    - id: anonTypes
      type: System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.ModelEntityBase}
      description: anonymous types.
    content.vb: Public Shared Sub Write(writer As JsonWriter, model As Model, actionResponse As JsonActionResponse, anonTypes As IEnumerable(Of ModelEntityBase))
  overload: TimeCockpit.Data.JsonConverters.JsonActionResponse.Write*
  nameWithType.vb: JsonActionResponse.Write(JsonWriter, Model, JsonActionResponse, IEnumerable(Of ModelEntityBase))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TimeCockpit.Data.JsonConverters.JsonActionResponse.Write(Newtonsoft.Json.JsonWriter, TimeCockpit.Data.DataModel.Model, TimeCockpit.Data.JsonConverters.JsonActionResponse, System.Collections.Generic.IEnumerable(Of TimeCockpit.Data.DataModel.ModelEntityBase))
  name.vb: Write(JsonWriter, Model, JsonActionResponse, IEnumerable(Of ModelEntityBase))
references:
- uid: TimeCockpit.Data.JsonConverters
  commentId: N:TimeCockpit.Data.JsonConverters
  isExternal: false
  name: TimeCockpit.Data.JsonConverters
  nameWithType: TimeCockpit.Data.JsonConverters
  fullName: TimeCockpit.Data.JsonConverters
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: TimeCockpit.Data.JsonConverters.JsonActionResponse
  commentId: T:TimeCockpit.Data.JsonConverters.JsonActionResponse
  parent: TimeCockpit.Data.JsonConverters
  isExternal: false
  name: JsonActionResponse
  nameWithType: JsonActionResponse
  fullName: TimeCockpit.Data.JsonConverters.JsonActionResponse
- uid: TimeCockpit.Data.JsonConverters.JsonActionResponse.#ctor*
  commentId: Overload:TimeCockpit.Data.JsonConverters.JsonActionResponse.#ctor
  isExternal: false
  name: JsonActionResponse
  nameWithType: JsonActionResponse.JsonActionResponse
  fullName: TimeCockpit.Data.JsonConverters.JsonActionResponse.JsonActionResponse
- uid: TimeCockpit.Data.JsonConverters.JsonActionResponse.Output*
  commentId: Overload:TimeCockpit.Data.JsonConverters.JsonActionResponse.Output
  isExternal: false
  name: Output
  nameWithType: JsonActionResponse.Output
  fullName: TimeCockpit.Data.JsonConverters.JsonActionResponse.Output
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: TimeCockpit.Data.JsonConverters.JsonActionResponse.ModifiedInputSet*
  commentId: Overload:TimeCockpit.Data.JsonConverters.JsonActionResponse.ModifiedInputSet
  isExternal: false
  name: ModifiedInputSet
  nameWithType: JsonActionResponse.ModifiedInputSet
  fullName: TimeCockpit.Data.JsonConverters.JsonActionResponse.ModifiedInputSet
- uid: System.Collections.Generic.IEnumerable{TimeCockpit.Data.EntityObject}
  commentId: T:System.Collections.Generic.IEnumerable{TimeCockpit.Data.EntityObject}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<EntityObject>
  nameWithType: IEnumerable<EntityObject>
  fullName: System.Collections.Generic.IEnumerable<TimeCockpit.Data.EntityObject>
  nameWithType.vb: IEnumerable(Of EntityObject)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TimeCockpit.Data.EntityObject)
  name.vb: IEnumerable(Of EntityObject)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TimeCockpit.Data.EntityObject
    name: EntityObject
    nameWithType: EntityObject
    fullName: TimeCockpit.Data.EntityObject
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TimeCockpit.Data.EntityObject
    name: EntityObject
    nameWithType: EntityObject
    fullName: TimeCockpit.Data.EntityObject
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: TimeCockpit.Data.JsonConverters.JsonActionResponse.Error*
  commentId: Overload:TimeCockpit.Data.JsonConverters.JsonActionResponse.Error
  isExternal: false
  name: Error
  nameWithType: JsonActionResponse.Error
  fullName: TimeCockpit.Data.JsonConverters.JsonActionResponse.Error
- uid: TimeCockpit.Data.JsonConverters.JsonErrorMessage
  commentId: T:TimeCockpit.Data.JsonConverters.JsonErrorMessage
  parent: TimeCockpit.Data.JsonConverters
  isExternal: false
  name: JsonErrorMessage
  nameWithType: JsonErrorMessage
  fullName: TimeCockpit.Data.JsonConverters.JsonErrorMessage
- uid: TimeCockpit.Data.JsonConverters.JsonActionResponse.Read*
  commentId: Overload:TimeCockpit.Data.JsonConverters.JsonActionResponse.Read
  isExternal: false
  name: Read
  nameWithType: JsonActionResponse.Read
  fullName: TimeCockpit.Data.JsonConverters.JsonActionResponse.Read
- uid: Newtonsoft.Json.JsonReader
  commentId: T:Newtonsoft.Json.JsonReader
  parent: Newtonsoft.Json
  isExternal: true
  name: JsonReader
  nameWithType: JsonReader
  fullName: Newtonsoft.Json.JsonReader
- uid: TimeCockpit.Data.DataModel.Model
  commentId: T:TimeCockpit.Data.DataModel.Model
  parent: TimeCockpit.Data.DataModel
  isExternal: false
  name: Model
  nameWithType: Model
  fullName: TimeCockpit.Data.DataModel.Model
- uid: TimeCockpit.Data.Environment
  commentId: T:TimeCockpit.Data.Environment
  parent: TimeCockpit.Data
  isExternal: false
  name: Environment
  nameWithType: Environment
  fullName: TimeCockpit.Data.Environment
- uid: Newtonsoft.Json
  commentId: N:Newtonsoft.Json
  isExternal: false
  name: Newtonsoft.Json
  nameWithType: Newtonsoft.Json
  fullName: Newtonsoft.Json
- uid: TimeCockpit.Data.DataModel
  commentId: N:TimeCockpit.Data.DataModel
  isExternal: false
  name: TimeCockpit.Data.DataModel
  nameWithType: TimeCockpit.Data.DataModel
  fullName: TimeCockpit.Data.DataModel
- uid: TimeCockpit.Data
  commentId: N:TimeCockpit.Data
  isExternal: false
  name: TimeCockpit.Data
  nameWithType: TimeCockpit.Data
  fullName: TimeCockpit.Data
- uid: TimeCockpit.Data.JsonConverters.JsonActionResponse.Write*
  commentId: Overload:TimeCockpit.Data.JsonConverters.JsonActionResponse.Write
  isExternal: false
  name: Write
  nameWithType: JsonActionResponse.Write
  fullName: TimeCockpit.Data.JsonConverters.JsonActionResponse.Write
- uid: Newtonsoft.Json.JsonWriter
  commentId: T:Newtonsoft.Json.JsonWriter
  parent: Newtonsoft.Json
  isExternal: true
  name: JsonWriter
  nameWithType: JsonWriter
  fullName: Newtonsoft.Json.JsonWriter
- uid: System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.ModelEntityBase}
  commentId: T:System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.ModelEntityBase}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<ModelEntityBase>
  nameWithType: IEnumerable<ModelEntityBase>
  fullName: System.Collections.Generic.IEnumerable<TimeCockpit.Data.DataModel.ModelEntityBase>
  nameWithType.vb: IEnumerable(Of ModelEntityBase)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TimeCockpit.Data.DataModel.ModelEntityBase)
  name.vb: IEnumerable(Of ModelEntityBase)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TimeCockpit.Data.DataModel.ModelEntityBase
    name: ModelEntityBase
    nameWithType: ModelEntityBase
    fullName: TimeCockpit.Data.DataModel.ModelEntityBase
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TimeCockpit.Data.DataModel.ModelEntityBase
    name: ModelEntityBase
    nameWithType: ModelEntityBase
    fullName: TimeCockpit.Data.DataModel.ModelEntityBase
  - name: )
    nameWithType: )
    fullName: )
