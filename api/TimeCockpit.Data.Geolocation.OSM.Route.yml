### YamlMime:ManagedReference
items:
- uid: TimeCockpit.Data.Geolocation.OSM.Route
  commentId: T:TimeCockpit.Data.Geolocation.OSM.Route
  id: Route
  parent: TimeCockpit.Data.Geolocation.OSM
  children:
  - TimeCockpit.Data.Geolocation.OSM.Route.#ctor
  - TimeCockpit.Data.Geolocation.OSM.Route.Distance
  - TimeCockpit.Data.Geolocation.OSM.Route.IsSuccess
  - TimeCockpit.Data.Geolocation.OSM.Route.NoMatch
  - TimeCockpit.Data.Geolocation.OSM.Route.Time
  langs:
  - csharp
  - vb
  name: Route
  nameWithType: Route
  fullName: TimeCockpit.Data.Geolocation.OSM.Route
  type: Class
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Geolocation.OSM
  summary: "\nSimple route representation.\n"
  syntax:
    content: public class Route
    content.vb: Public Class Route
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TimeCockpit.Data.Geolocation.OSM.Route.NoMatch
  commentId: F:TimeCockpit.Data.Geolocation.OSM.Route.NoMatch
  id: NoMatch
  parent: TimeCockpit.Data.Geolocation.OSM.Route
  langs:
  - csharp
  - vb
  name: NoMatch
  nameWithType: Route.NoMatch
  fullName: TimeCockpit.Data.Geolocation.OSM.Route.NoMatch
  type: Field
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Geolocation.OSM
  summary: "\nConstant no-match route.\n"
  syntax:
    content: public static readonly Route NoMatch
    return:
      type: TimeCockpit.Data.Geolocation.OSM.Route
    content.vb: Public Shared ReadOnly NoMatch As Route
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: TimeCockpit.Data.Geolocation.OSM.Route.#ctor
  commentId: M:TimeCockpit.Data.Geolocation.OSM.Route.#ctor
  id: '#ctor'
  parent: TimeCockpit.Data.Geolocation.OSM.Route
  langs:
  - csharp
  - vb
  name: Route()
  nameWithType: Route.Route()
  fullName: TimeCockpit.Data.Geolocation.OSM.Route.Route()
  type: Constructor
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Geolocation.OSM
  syntax:
    content: public Route()
    content.vb: Public Sub New
  overload: TimeCockpit.Data.Geolocation.OSM.Route.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Geolocation.OSM.Route.Distance
  commentId: P:TimeCockpit.Data.Geolocation.OSM.Route.Distance
  id: Distance
  parent: TimeCockpit.Data.Geolocation.OSM.Route
  langs:
  - csharp
  - vb
  name: Distance
  nameWithType: Route.Distance
  fullName: TimeCockpit.Data.Geolocation.OSM.Route.Distance
  type: Property
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Geolocation.OSM
  summary: "\nGets or sets the route distance in meters.\n"
  syntax:
    content: public decimal Distance { get; set; }
    parameters: []
    return:
      type: System.Decimal
    content.vb: Public Property Distance As Decimal
  overload: TimeCockpit.Data.Geolocation.OSM.Route.Distance*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Geolocation.OSM.Route.Time
  commentId: P:TimeCockpit.Data.Geolocation.OSM.Route.Time
  id: Time
  parent: TimeCockpit.Data.Geolocation.OSM.Route
  langs:
  - csharp
  - vb
  name: Time
  nameWithType: Route.Time
  fullName: TimeCockpit.Data.Geolocation.OSM.Route.Time
  type: Property
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Geolocation.OSM
  summary: "\nGets or sets the route travel time in seconds.\n"
  syntax:
    content: public decimal Time { get; set; }
    parameters: []
    return:
      type: System.Decimal
    content.vb: Public Property Time As Decimal
  overload: TimeCockpit.Data.Geolocation.OSM.Route.Time*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Geolocation.OSM.Route.IsSuccess
  commentId: P:TimeCockpit.Data.Geolocation.OSM.Route.IsSuccess
  id: IsSuccess
  parent: TimeCockpit.Data.Geolocation.OSM.Route
  langs:
  - csharp
  - vb
  name: IsSuccess
  nameWithType: Route.IsSuccess
  fullName: TimeCockpit.Data.Geolocation.OSM.Route.IsSuccess
  type: Property
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Geolocation.OSM
  summary: "\nGets or sets a value indicating whether the route could be successfully determined.\n"
  syntax:
    content: public bool IsSuccess { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsSuccess As Boolean
  overload: TimeCockpit.Data.Geolocation.OSM.Route.IsSuccess*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: TimeCockpit.Data.Geolocation.OSM
  commentId: N:TimeCockpit.Data.Geolocation.OSM
  isExternal: true
  name: TimeCockpit.Data.Geolocation.OSM
  nameWithType: TimeCockpit.Data.Geolocation.OSM
  fullName: TimeCockpit.Data.Geolocation.OSM
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TimeCockpit.Data.Geolocation.OSM.Route
  commentId: T:TimeCockpit.Data.Geolocation.OSM.Route
  parent: TimeCockpit.Data.Geolocation.OSM
  isExternal: true
  name: Route
  nameWithType: Route
  fullName: TimeCockpit.Data.Geolocation.OSM.Route
- uid: TimeCockpit.Data.Geolocation.OSM.Route.#ctor*
  commentId: Overload:TimeCockpit.Data.Geolocation.OSM.Route.#ctor
  isExternal: true
  name: Route
  nameWithType: Route.Route
  fullName: TimeCockpit.Data.Geolocation.OSM.Route.Route
- uid: TimeCockpit.Data.Geolocation.OSM.Route.Distance*
  commentId: Overload:TimeCockpit.Data.Geolocation.OSM.Route.Distance
  isExternal: true
  name: Distance
  nameWithType: Route.Distance
  fullName: TimeCockpit.Data.Geolocation.OSM.Route.Distance
- uid: System.Decimal
  commentId: T:System.Decimal
  parent: System
  isExternal: true
  name: Decimal
  nameWithType: Decimal
  fullName: System.Decimal
- uid: TimeCockpit.Data.Geolocation.OSM.Route.Time*
  commentId: Overload:TimeCockpit.Data.Geolocation.OSM.Route.Time
  isExternal: true
  name: Time
  nameWithType: Route.Time
  fullName: TimeCockpit.Data.Geolocation.OSM.Route.Time
- uid: TimeCockpit.Data.Geolocation.OSM.Route.IsSuccess*
  commentId: Overload:TimeCockpit.Data.Geolocation.OSM.Route.IsSuccess
  isExternal: true
  name: IsSuccess
  nameWithType: Route.IsSuccess
  fullName: TimeCockpit.Data.Geolocation.OSM.Route.IsSuccess
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
