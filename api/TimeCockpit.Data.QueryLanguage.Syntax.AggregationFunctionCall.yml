### YamlMime:ManagedReference
items:
- uid: TimeCockpit.Data.QueryLanguage.Syntax.AggregationFunctionCall
  commentId: T:TimeCockpit.Data.QueryLanguage.Syntax.AggregationFunctionCall
  id: AggregationFunctionCall
  parent: TimeCockpit.Data.QueryLanguage.Syntax
  children:
  - TimeCockpit.Data.QueryLanguage.Syntax.AggregationFunctionCall.#ctor(TimeCockpit.Data.QueryLanguage.Syntax.AggregationFunctionCallType,TimeCockpit.Data.QueryLanguage.Syntax.Expression)
  - TimeCockpit.Data.QueryLanguage.Syntax.AggregationFunctionCall.Accept(TimeCockpit.Data.QueryLanguage.Syntax.Visitor)
  - TimeCockpit.Data.QueryLanguage.Syntax.AggregationFunctionCall.Parameter
  - TimeCockpit.Data.QueryLanguage.Syntax.AggregationFunctionCall.Type
  langs:
  - csharp
  - vb
  name: AggregationFunctionCall
  nameWithType: AggregationFunctionCall
  fullName: TimeCockpit.Data.QueryLanguage.Syntax.AggregationFunctionCall
  type: Class
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/QueryLanguage/Syntax/AggregationFunctionCall.cs
    id: AggregationFunctionCall
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/QueryLanguage/Syntax/AggregationFunctionCall.cs
    startLine: 16
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.QueryLanguage.Syntax
  summary: "\nAST Node Type representing an aggregation function call.\n"
  example: []
  syntax:
    content: 'public class AggregationFunctionCall : Expression'
    content.vb: >-
      Public Class AggregationFunctionCall
          Inherits Expression
  inheritance:
  - System.Object
  - TimeCockpit.Data.QueryLanguage.Syntax.Node
  - TimeCockpit.Data.QueryLanguage.Syntax.Expression
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TimeCockpit.Data.QueryLanguage.Syntax.AggregationFunctionCall.#ctor(TimeCockpit.Data.QueryLanguage.Syntax.AggregationFunctionCallType,TimeCockpit.Data.QueryLanguage.Syntax.Expression)
  commentId: M:TimeCockpit.Data.QueryLanguage.Syntax.AggregationFunctionCall.#ctor(TimeCockpit.Data.QueryLanguage.Syntax.AggregationFunctionCallType,TimeCockpit.Data.QueryLanguage.Syntax.Expression)
  id: '#ctor(TimeCockpit.Data.QueryLanguage.Syntax.AggregationFunctionCallType,TimeCockpit.Data.QueryLanguage.Syntax.Expression)'
  parent: TimeCockpit.Data.QueryLanguage.Syntax.AggregationFunctionCall
  langs:
  - csharp
  - vb
  name: AggregationFunctionCall(AggregationFunctionCallType, Expression)
  nameWithType: AggregationFunctionCall.AggregationFunctionCall(AggregationFunctionCallType, Expression)
  fullName: TimeCockpit.Data.QueryLanguage.Syntax.AggregationFunctionCall.AggregationFunctionCall(TimeCockpit.Data.QueryLanguage.Syntax.AggregationFunctionCallType, TimeCockpit.Data.QueryLanguage.Syntax.Expression)
  type: Constructor
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/QueryLanguage/Syntax/AggregationFunctionCall.cs
    id: .ctor
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/QueryLanguage/Syntax/AggregationFunctionCall.cs
    startLine: 23
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.QueryLanguage.Syntax
  summary: "\nInitializes a new instance of the <xref href=\"TimeCockpit.Data.QueryLanguage.Syntax.AggregationFunctionCall\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public AggregationFunctionCall(AggregationFunctionCallType type, Expression parameter)
    parameters:
    - id: type
      type: TimeCockpit.Data.QueryLanguage.Syntax.AggregationFunctionCallType
      description: The type of the aggregation.
    - id: parameter
      type: TimeCockpit.Data.QueryLanguage.Syntax.Expression
      description: The parameter expression.
    content.vb: Public Sub New(type As AggregationFunctionCallType, parameter As Expression)
  overload: TimeCockpit.Data.QueryLanguage.Syntax.AggregationFunctionCall.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.QueryLanguage.Syntax.AggregationFunctionCall.Type
  commentId: P:TimeCockpit.Data.QueryLanguage.Syntax.AggregationFunctionCall.Type
  id: Type
  parent: TimeCockpit.Data.QueryLanguage.Syntax.AggregationFunctionCall
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: AggregationFunctionCall.Type
  fullName: TimeCockpit.Data.QueryLanguage.Syntax.AggregationFunctionCall.Type
  type: Property
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/QueryLanguage/Syntax/AggregationFunctionCall.cs
    id: Type
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/QueryLanguage/Syntax/AggregationFunctionCall.cs
    startLine: 47
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.QueryLanguage.Syntax
  summary: "\nGets the type of the aggregation function.\n"
  example: []
  syntax:
    content: public AggregationFunctionCallType Type { get; }
    parameters: []
    return:
      type: TimeCockpit.Data.QueryLanguage.Syntax.AggregationFunctionCallType
    content.vb: Public ReadOnly Property Type As AggregationFunctionCallType
  overload: TimeCockpit.Data.QueryLanguage.Syntax.AggregationFunctionCall.Type*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TimeCockpit.Data.QueryLanguage.Syntax.AggregationFunctionCall.Parameter
  commentId: P:TimeCockpit.Data.QueryLanguage.Syntax.AggregationFunctionCall.Parameter
  id: Parameter
  parent: TimeCockpit.Data.QueryLanguage.Syntax.AggregationFunctionCall
  langs:
  - csharp
  - vb
  name: Parameter
  nameWithType: AggregationFunctionCall.Parameter
  fullName: TimeCockpit.Data.QueryLanguage.Syntax.AggregationFunctionCall.Parameter
  type: Property
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/QueryLanguage/Syntax/AggregationFunctionCall.cs
    id: Parameter
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/QueryLanguage/Syntax/AggregationFunctionCall.cs
    startLine: 52
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.QueryLanguage.Syntax
  summary: "\nGets the expression of the parameter.\n"
  example: []
  syntax:
    content: public Expression Parameter { get; }
    parameters: []
    return:
      type: TimeCockpit.Data.QueryLanguage.Syntax.Expression
    content.vb: Public ReadOnly Property Parameter As Expression
  overload: TimeCockpit.Data.QueryLanguage.Syntax.AggregationFunctionCall.Parameter*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TimeCockpit.Data.QueryLanguage.Syntax.AggregationFunctionCall.Accept(TimeCockpit.Data.QueryLanguage.Syntax.Visitor)
  commentId: M:TimeCockpit.Data.QueryLanguage.Syntax.AggregationFunctionCall.Accept(TimeCockpit.Data.QueryLanguage.Syntax.Visitor)
  id: Accept(TimeCockpit.Data.QueryLanguage.Syntax.Visitor)
  parent: TimeCockpit.Data.QueryLanguage.Syntax.AggregationFunctionCall
  langs:
  - csharp
  - vb
  name: Accept(Visitor)
  nameWithType: AggregationFunctionCall.Accept(Visitor)
  fullName: TimeCockpit.Data.QueryLanguage.Syntax.AggregationFunctionCall.Accept(TimeCockpit.Data.QueryLanguage.Syntax.Visitor)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/QueryLanguage/Syntax/AggregationFunctionCall.cs
    id: Accept
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/QueryLanguage/Syntax/AggregationFunctionCall.cs
    startLine: 59
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.QueryLanguage.Syntax
  summary: "\nDispatches to the correct <xref href=\"TimeCockpit.Data.QueryLanguage.Syntax.Visitor.VisitQuery(TimeCockpit.Data.QueryLanguage.Syntax.Query)\" data-throw-if-not-resolved=\"false\"></xref> method.\n"
  example: []
  syntax:
    content: public override Node Accept(Visitor visitor)
    parameters:
    - id: visitor
      type: TimeCockpit.Data.QueryLanguage.Syntax.Visitor
      description: the visitor to dispatch to.
    return:
      type: TimeCockpit.Data.QueryLanguage.Syntax.Node
      description: Returns the value returned by the call to <xref href="TimeCockpit.Data.QueryLanguage.Syntax.Visitor.VisitQuery(TimeCockpit.Data.QueryLanguage.Syntax.Query)" data-throw-if-not-resolved="false"></xref> method.
    content.vb: Public Overrides Function Accept(visitor As Visitor) As Node
  overridden: TimeCockpit.Data.QueryLanguage.Syntax.Node.Accept(TimeCockpit.Data.QueryLanguage.Syntax.Visitor)
  overload: TimeCockpit.Data.QueryLanguage.Syntax.AggregationFunctionCall.Accept*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: TimeCockpit.Data.QueryLanguage.Syntax
  commentId: N:TimeCockpit.Data.QueryLanguage.Syntax
  isExternal: false
  name: TimeCockpit.Data.QueryLanguage.Syntax
  nameWithType: TimeCockpit.Data.QueryLanguage.Syntax
  fullName: TimeCockpit.Data.QueryLanguage.Syntax
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: TimeCockpit.Data.QueryLanguage.Syntax.Node
  commentId: T:TimeCockpit.Data.QueryLanguage.Syntax.Node
  parent: TimeCockpit.Data.QueryLanguage.Syntax
  isExternal: false
  name: Node
  nameWithType: Node
  fullName: TimeCockpit.Data.QueryLanguage.Syntax.Node
- uid: TimeCockpit.Data.QueryLanguage.Syntax.Expression
  commentId: T:TimeCockpit.Data.QueryLanguage.Syntax.Expression
  parent: TimeCockpit.Data.QueryLanguage.Syntax
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: TimeCockpit.Data.QueryLanguage.Syntax.Expression
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: TimeCockpit.Data.QueryLanguage.Syntax.AggregationFunctionCall
  commentId: T:TimeCockpit.Data.QueryLanguage.Syntax.AggregationFunctionCall
  parent: TimeCockpit.Data.QueryLanguage.Syntax
  isExternal: false
  name: AggregationFunctionCall
  nameWithType: AggregationFunctionCall
  fullName: TimeCockpit.Data.QueryLanguage.Syntax.AggregationFunctionCall
- uid: TimeCockpit.Data.QueryLanguage.Syntax.AggregationFunctionCall.#ctor*
  commentId: Overload:TimeCockpit.Data.QueryLanguage.Syntax.AggregationFunctionCall.#ctor
  isExternal: false
  name: AggregationFunctionCall
  nameWithType: AggregationFunctionCall.AggregationFunctionCall
  fullName: TimeCockpit.Data.QueryLanguage.Syntax.AggregationFunctionCall.AggregationFunctionCall
- uid: TimeCockpit.Data.QueryLanguage.Syntax.AggregationFunctionCallType
  commentId: T:TimeCockpit.Data.QueryLanguage.Syntax.AggregationFunctionCallType
  parent: TimeCockpit.Data.QueryLanguage.Syntax
  isExternal: false
  name: AggregationFunctionCallType
  nameWithType: AggregationFunctionCallType
  fullName: TimeCockpit.Data.QueryLanguage.Syntax.AggregationFunctionCallType
- uid: TimeCockpit.Data.QueryLanguage.Syntax.AggregationFunctionCall.Type*
  commentId: Overload:TimeCockpit.Data.QueryLanguage.Syntax.AggregationFunctionCall.Type
  isExternal: false
  name: Type
  nameWithType: AggregationFunctionCall.Type
  fullName: TimeCockpit.Data.QueryLanguage.Syntax.AggregationFunctionCall.Type
- uid: TimeCockpit.Data.QueryLanguage.Syntax.AggregationFunctionCall.Parameter*
  commentId: Overload:TimeCockpit.Data.QueryLanguage.Syntax.AggregationFunctionCall.Parameter
  isExternal: false
  name: Parameter
  nameWithType: AggregationFunctionCall.Parameter
  fullName: TimeCockpit.Data.QueryLanguage.Syntax.AggregationFunctionCall.Parameter
- uid: TimeCockpit.Data.QueryLanguage.Syntax.Visitor.VisitQuery(TimeCockpit.Data.QueryLanguage.Syntax.Query)
  commentId: M:TimeCockpit.Data.QueryLanguage.Syntax.Visitor.VisitQuery(TimeCockpit.Data.QueryLanguage.Syntax.Query)
  parent: TimeCockpit.Data.QueryLanguage.Syntax.Visitor
  isExternal: false
  name: VisitQuery(Query)
  nameWithType: Visitor.VisitQuery(Query)
  fullName: TimeCockpit.Data.QueryLanguage.Syntax.Visitor.VisitQuery(TimeCockpit.Data.QueryLanguage.Syntax.Query)
  spec.csharp:
  - uid: TimeCockpit.Data.QueryLanguage.Syntax.Visitor.VisitQuery(TimeCockpit.Data.QueryLanguage.Syntax.Query)
    name: VisitQuery
    nameWithType: Visitor.VisitQuery
    fullName: TimeCockpit.Data.QueryLanguage.Syntax.Visitor.VisitQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: TimeCockpit.Data.QueryLanguage.Syntax.Query
    name: Query
    nameWithType: Query
    fullName: TimeCockpit.Data.QueryLanguage.Syntax.Query
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TimeCockpit.Data.QueryLanguage.Syntax.Visitor.VisitQuery(TimeCockpit.Data.QueryLanguage.Syntax.Query)
    name: VisitQuery
    nameWithType: Visitor.VisitQuery
    fullName: TimeCockpit.Data.QueryLanguage.Syntax.Visitor.VisitQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: TimeCockpit.Data.QueryLanguage.Syntax.Query
    name: Query
    nameWithType: Query
    fullName: TimeCockpit.Data.QueryLanguage.Syntax.Query
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.QueryLanguage.Syntax.Node.Accept(TimeCockpit.Data.QueryLanguage.Syntax.Visitor)
  commentId: M:TimeCockpit.Data.QueryLanguage.Syntax.Node.Accept(TimeCockpit.Data.QueryLanguage.Syntax.Visitor)
  parent: TimeCockpit.Data.QueryLanguage.Syntax.Node
  isExternal: false
  name: Accept(Visitor)
  nameWithType: Node.Accept(Visitor)
  fullName: TimeCockpit.Data.QueryLanguage.Syntax.Node.Accept(TimeCockpit.Data.QueryLanguage.Syntax.Visitor)
  spec.csharp:
  - uid: TimeCockpit.Data.QueryLanguage.Syntax.Node.Accept(TimeCockpit.Data.QueryLanguage.Syntax.Visitor)
    name: Accept
    nameWithType: Node.Accept
    fullName: TimeCockpit.Data.QueryLanguage.Syntax.Node.Accept
  - name: (
    nameWithType: (
    fullName: (
  - uid: TimeCockpit.Data.QueryLanguage.Syntax.Visitor
    name: Visitor
    nameWithType: Visitor
    fullName: TimeCockpit.Data.QueryLanguage.Syntax.Visitor
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TimeCockpit.Data.QueryLanguage.Syntax.Node.Accept(TimeCockpit.Data.QueryLanguage.Syntax.Visitor)
    name: Accept
    nameWithType: Node.Accept
    fullName: TimeCockpit.Data.QueryLanguage.Syntax.Node.Accept
  - name: (
    nameWithType: (
    fullName: (
  - uid: TimeCockpit.Data.QueryLanguage.Syntax.Visitor
    name: Visitor
    nameWithType: Visitor
    fullName: TimeCockpit.Data.QueryLanguage.Syntax.Visitor
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.QueryLanguage.Syntax.AggregationFunctionCall.Accept*
  commentId: Overload:TimeCockpit.Data.QueryLanguage.Syntax.AggregationFunctionCall.Accept
  isExternal: false
  name: Accept
  nameWithType: AggregationFunctionCall.Accept
  fullName: TimeCockpit.Data.QueryLanguage.Syntax.AggregationFunctionCall.Accept
- uid: TimeCockpit.Data.QueryLanguage.Syntax.Visitor
  commentId: T:TimeCockpit.Data.QueryLanguage.Syntax.Visitor
  parent: TimeCockpit.Data.QueryLanguage.Syntax
  isExternal: false
  name: Visitor
  nameWithType: Visitor
  fullName: TimeCockpit.Data.QueryLanguage.Syntax.Visitor
