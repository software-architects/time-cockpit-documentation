### YamlMime:ManagedReference
items:
- uid: TimeCockpit.Data.QueryLanguage.Syntax.EntitySource
  commentId: T:TimeCockpit.Data.QueryLanguage.Syntax.EntitySource
  id: EntitySource
  parent: TimeCockpit.Data.QueryLanguage.Syntax
  children:
  - TimeCockpit.Data.QueryLanguage.Syntax.EntitySource.#ctor(System.String,System.Collections.Generic.IEnumerable{TimeCockpit.Data.QueryLanguage.Syntax.EntitySourceInclude})
  - TimeCockpit.Data.QueryLanguage.Syntax.EntitySource.Accept(TimeCockpit.Data.QueryLanguage.Syntax.Visitor)
  - TimeCockpit.Data.QueryLanguage.Syntax.EntitySource.EntityName
  - TimeCockpit.Data.QueryLanguage.Syntax.EntitySource.Includes
  langs:
  - csharp
  - vb
  name: EntitySource
  nameWithType: EntitySource
  fullName: TimeCockpit.Data.QueryLanguage.Syntax.EntitySource
  type: Class
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.QueryLanguage.Syntax
  summary: "\nAST Node representing the source of a query to a concrete entity.\ne.g.:\nIn \n<pre><code>From X In Timesheet.Include(*) Select X</code></pre>\nTableName corresponds to &quot;Timesheet&quot;\nInclude corresponds to the &quot;.Include(*)&quot; (IncludeAll) node.\n"
  syntax:
    content: 'public class EntitySource : QuerySource'
    content.vb: >-
      Public Class EntitySource
          Inherits QuerySource
  inheritance:
  - System.Object
  - TimeCockpit.Data.QueryLanguage.Syntax.Node
  - TimeCockpit.Data.QueryLanguage.Syntax.QuerySource
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TimeCockpit.Data.QueryLanguage.Syntax.EntitySource.#ctor(System.String,System.Collections.Generic.IEnumerable{TimeCockpit.Data.QueryLanguage.Syntax.EntitySourceInclude})
  commentId: M:TimeCockpit.Data.QueryLanguage.Syntax.EntitySource.#ctor(System.String,System.Collections.Generic.IEnumerable{TimeCockpit.Data.QueryLanguage.Syntax.EntitySourceInclude})
  id: '#ctor(System.String,System.Collections.Generic.IEnumerable{TimeCockpit.Data.QueryLanguage.Syntax.EntitySourceInclude})'
  parent: TimeCockpit.Data.QueryLanguage.Syntax.EntitySource
  langs:
  - csharp
  - vb
  name: EntitySource(String, IEnumerable<EntitySourceInclude>)
  nameWithType: EntitySource.EntitySource(String, IEnumerable<EntitySourceInclude>)
  fullName: TimeCockpit.Data.QueryLanguage.Syntax.EntitySource.EntitySource(System.String, System.Collections.Generic.IEnumerable<TimeCockpit.Data.QueryLanguage.Syntax.EntitySourceInclude>)
  type: Constructor
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.QueryLanguage.Syntax
  summary: "\nInitializes a new instance of the <xref href=\"TimeCockpit.Data.QueryLanguage.Syntax.EntitySource\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  syntax:
    content: public EntitySource(string entityName, IEnumerable<EntitySourceInclude> includes = null)
    parameters:
    - id: entityName
      type: System.String
      description: The name of the entity to reference.
    - id: includes
      type: System.Collections.Generic.IEnumerable{TimeCockpit.Data.QueryLanguage.Syntax.EntitySourceInclude}
      description: The include statements.
    content.vb: Public Sub New(entityName As String, includes As IEnumerable(Of EntitySourceInclude) = Nothing)
  overload: TimeCockpit.Data.QueryLanguage.Syntax.EntitySource.#ctor*
  nameWithType.vb: EntitySource.EntitySource(String, IEnumerable(Of EntitySourceInclude))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TimeCockpit.Data.QueryLanguage.Syntax.EntitySource.EntitySource(System.String, System.Collections.Generic.IEnumerable(Of TimeCockpit.Data.QueryLanguage.Syntax.EntitySourceInclude))
  name.vb: EntitySource(String, IEnumerable(Of EntitySourceInclude))
- uid: TimeCockpit.Data.QueryLanguage.Syntax.EntitySource.Accept(TimeCockpit.Data.QueryLanguage.Syntax.Visitor)
  commentId: M:TimeCockpit.Data.QueryLanguage.Syntax.EntitySource.Accept(TimeCockpit.Data.QueryLanguage.Syntax.Visitor)
  id: Accept(TimeCockpit.Data.QueryLanguage.Syntax.Visitor)
  parent: TimeCockpit.Data.QueryLanguage.Syntax.EntitySource
  langs:
  - csharp
  - vb
  name: Accept(Visitor)
  nameWithType: EntitySource.Accept(Visitor)
  fullName: TimeCockpit.Data.QueryLanguage.Syntax.EntitySource.Accept(TimeCockpit.Data.QueryLanguage.Syntax.Visitor)
  type: Method
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.QueryLanguage.Syntax
  summary: "\nDispatches to the correct <xref href=\"TimeCockpit.Data.QueryLanguage.Syntax.Visitor.VisitQuery(TimeCockpit.Data.QueryLanguage.Syntax.Query)\" data-throw-if-not-resolved=\"false\"></xref> call.\n"
  syntax:
    content: public override Node Accept(Visitor visitor)
    parameters:
    - id: visitor
      type: TimeCockpit.Data.QueryLanguage.Syntax.Visitor
      description: The visitor to dispatch.
    return:
      type: TimeCockpit.Data.QueryLanguage.Syntax.Node
      description: Returns the value returned by the call to the <xref href="TimeCockpit.Data.QueryLanguage.Syntax.Visitor.VisitQuery(TimeCockpit.Data.QueryLanguage.Syntax.Query)" data-throw-if-not-resolved="false"></xref> call.
    content.vb: Public Overrides Function Accept(visitor As Visitor) As Node
  overridden: TimeCockpit.Data.QueryLanguage.Syntax.Node.Accept(TimeCockpit.Data.QueryLanguage.Syntax.Visitor)
  overload: TimeCockpit.Data.QueryLanguage.Syntax.EntitySource.Accept*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: TimeCockpit.Data.QueryLanguage.Syntax.EntitySource.EntityName
  commentId: P:TimeCockpit.Data.QueryLanguage.Syntax.EntitySource.EntityName
  id: EntityName
  parent: TimeCockpit.Data.QueryLanguage.Syntax.EntitySource
  langs:
  - csharp
  - vb
  name: EntityName
  nameWithType: EntitySource.EntityName
  fullName: TimeCockpit.Data.QueryLanguage.Syntax.EntitySource.EntityName
  type: Property
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.QueryLanguage.Syntax
  summary: "\nGets the name of the table.\n"
  syntax:
    content: public string EntityName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property EntityName As String
  overload: TimeCockpit.Data.QueryLanguage.Syntax.EntitySource.EntityName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TimeCockpit.Data.QueryLanguage.Syntax.EntitySource.Includes
  commentId: P:TimeCockpit.Data.QueryLanguage.Syntax.EntitySource.Includes
  id: Includes
  parent: TimeCockpit.Data.QueryLanguage.Syntax.EntitySource
  langs:
  - csharp
  - vb
  name: Includes
  nameWithType: EntitySource.Includes
  fullName: TimeCockpit.Data.QueryLanguage.Syntax.EntitySource.Includes
  type: Property
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.QueryLanguage.Syntax
  summary: "\nGets the include statements for the source.\n"
  syntax:
    content: public ReadOnlyCollection<EntitySourceInclude> Includes { get; }
    parameters: []
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{TimeCockpit.Data.QueryLanguage.Syntax.EntitySourceInclude}
    content.vb: Public ReadOnly Property Includes As ReadOnlyCollection(Of EntitySourceInclude)
  overload: TimeCockpit.Data.QueryLanguage.Syntax.EntitySource.Includes*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: TimeCockpit.Data.QueryLanguage.Syntax
  commentId: N:TimeCockpit.Data.QueryLanguage.Syntax
  isExternal: true
  name: TimeCockpit.Data.QueryLanguage.Syntax
  nameWithType: TimeCockpit.Data.QueryLanguage.Syntax
  fullName: TimeCockpit.Data.QueryLanguage.Syntax
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: TimeCockpit.Data.QueryLanguage.Syntax.Node
  commentId: T:TimeCockpit.Data.QueryLanguage.Syntax.Node
  parent: TimeCockpit.Data.QueryLanguage.Syntax
  isExternal: true
  name: Node
  nameWithType: Node
  fullName: TimeCockpit.Data.QueryLanguage.Syntax.Node
- uid: TimeCockpit.Data.QueryLanguage.Syntax.QuerySource
  commentId: T:TimeCockpit.Data.QueryLanguage.Syntax.QuerySource
  parent: TimeCockpit.Data.QueryLanguage.Syntax
  isExternal: true
  name: QuerySource
  nameWithType: QuerySource
  fullName: TimeCockpit.Data.QueryLanguage.Syntax.QuerySource
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TimeCockpit.Data.QueryLanguage.Syntax.EntitySource.#ctor*
  commentId: Overload:TimeCockpit.Data.QueryLanguage.Syntax.EntitySource.#ctor
  isExternal: true
  name: EntitySource
  nameWithType: EntitySource.EntitySource
  fullName: TimeCockpit.Data.QueryLanguage.Syntax.EntitySource.EntitySource
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IEnumerable{TimeCockpit.Data.QueryLanguage.Syntax.EntitySourceInclude}
  commentId: T:System.Collections.Generic.IEnumerable{TimeCockpit.Data.QueryLanguage.Syntax.EntitySourceInclude}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<EntitySourceInclude>
  nameWithType: IEnumerable<EntitySourceInclude>
  fullName: System.Collections.Generic.IEnumerable<TimeCockpit.Data.QueryLanguage.Syntax.EntitySourceInclude>
  nameWithType.vb: IEnumerable(Of EntitySourceInclude)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TimeCockpit.Data.QueryLanguage.Syntax.EntitySourceInclude)
  name.vb: IEnumerable(Of EntitySourceInclude)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TimeCockpit.Data.QueryLanguage.Syntax.EntitySourceInclude
    name: EntitySourceInclude
    nameWithType: EntitySourceInclude
    fullName: TimeCockpit.Data.QueryLanguage.Syntax.EntitySourceInclude
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TimeCockpit.Data.QueryLanguage.Syntax.EntitySourceInclude
    name: EntitySourceInclude
    nameWithType: EntitySourceInclude
    fullName: TimeCockpit.Data.QueryLanguage.Syntax.EntitySourceInclude
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: TimeCockpit.Data.QueryLanguage.Syntax.Node.Accept(TimeCockpit.Data.QueryLanguage.Syntax.Visitor)
  commentId: M:TimeCockpit.Data.QueryLanguage.Syntax.Node.Accept(TimeCockpit.Data.QueryLanguage.Syntax.Visitor)
  parent: TimeCockpit.Data.QueryLanguage.Syntax.Node
  isExternal: true
  name: Accept(Visitor)
  nameWithType: Node.Accept(Visitor)
  fullName: TimeCockpit.Data.QueryLanguage.Syntax.Node.Accept(TimeCockpit.Data.QueryLanguage.Syntax.Visitor)
  spec.csharp:
  - uid: TimeCockpit.Data.QueryLanguage.Syntax.Node.Accept(TimeCockpit.Data.QueryLanguage.Syntax.Visitor)
    name: Accept
    nameWithType: Node.Accept
    fullName: TimeCockpit.Data.QueryLanguage.Syntax.Node.Accept
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: TimeCockpit.Data.QueryLanguage.Syntax.Visitor
    name: Visitor
    nameWithType: Visitor
    fullName: TimeCockpit.Data.QueryLanguage.Syntax.Visitor
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TimeCockpit.Data.QueryLanguage.Syntax.Node.Accept(TimeCockpit.Data.QueryLanguage.Syntax.Visitor)
    name: Accept
    nameWithType: Node.Accept
    fullName: TimeCockpit.Data.QueryLanguage.Syntax.Node.Accept
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: TimeCockpit.Data.QueryLanguage.Syntax.Visitor
    name: Visitor
    nameWithType: Visitor
    fullName: TimeCockpit.Data.QueryLanguage.Syntax.Visitor
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.QueryLanguage.Syntax.EntitySource.Accept*
  commentId: Overload:TimeCockpit.Data.QueryLanguage.Syntax.EntitySource.Accept
  isExternal: true
  name: Accept
  nameWithType: EntitySource.Accept
  fullName: TimeCockpit.Data.QueryLanguage.Syntax.EntitySource.Accept
- uid: TimeCockpit.Data.QueryLanguage.Syntax.Visitor
  commentId: T:TimeCockpit.Data.QueryLanguage.Syntax.Visitor
  parent: TimeCockpit.Data.QueryLanguage.Syntax
  isExternal: true
  name: Visitor
  nameWithType: Visitor
  fullName: TimeCockpit.Data.QueryLanguage.Syntax.Visitor
- uid: TimeCockpit.Data.QueryLanguage.Syntax.EntitySource.EntityName*
  commentId: Overload:TimeCockpit.Data.QueryLanguage.Syntax.EntitySource.EntityName
  isExternal: true
  name: EntityName
  nameWithType: EntitySource.EntityName
  fullName: TimeCockpit.Data.QueryLanguage.Syntax.EntitySource.EntityName
- uid: TimeCockpit.Data.QueryLanguage.Syntax.EntitySource.Includes*
  commentId: Overload:TimeCockpit.Data.QueryLanguage.Syntax.EntitySource.Includes
  isExternal: true
  name: Includes
  nameWithType: EntitySource.Includes
  fullName: TimeCockpit.Data.QueryLanguage.Syntax.EntitySource.Includes
- uid: System.Collections.ObjectModel.ReadOnlyCollection{TimeCockpit.Data.QueryLanguage.Syntax.EntitySourceInclude}
  commentId: T:System.Collections.ObjectModel.ReadOnlyCollection{TimeCockpit.Data.QueryLanguage.Syntax.EntitySourceInclude}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1
  name: ReadOnlyCollection<EntitySourceInclude>
  nameWithType: ReadOnlyCollection<EntitySourceInclude>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<TimeCockpit.Data.QueryLanguage.Syntax.EntitySourceInclude>
  nameWithType.vb: ReadOnlyCollection(Of EntitySourceInclude)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of TimeCockpit.Data.QueryLanguage.Syntax.EntitySourceInclude)
  name.vb: ReadOnlyCollection(Of EntitySourceInclude)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TimeCockpit.Data.QueryLanguage.Syntax.EntitySourceInclude
    name: EntitySourceInclude
    nameWithType: EntitySourceInclude
    fullName: TimeCockpit.Data.QueryLanguage.Syntax.EntitySourceInclude
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TimeCockpit.Data.QueryLanguage.Syntax.EntitySourceInclude
    name: EntitySourceInclude
    nameWithType: EntitySourceInclude
    fullName: TimeCockpit.Data.QueryLanguage.Syntax.EntitySourceInclude
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1
  commentId: T:System.Collections.ObjectModel.ReadOnlyCollection`1
  isExternal: true
  name: ReadOnlyCollection<T>
  nameWithType: ReadOnlyCollection<T>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>
  nameWithType.vb: ReadOnlyCollection(Of T)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T)
  name.vb: ReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel
  commentId: N:System.Collections.ObjectModel
  isExternal: true
  name: System.Collections.ObjectModel
  nameWithType: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
