### YamlMime:ManagedReference
items:
- uid: TimeCockpit.Data.Localization.NameLocalizer
  commentId: T:TimeCockpit.Data.Localization.NameLocalizer
  id: NameLocalizer
  parent: TimeCockpit.Data.Localization
  children:
  - TimeCockpit.Data.Localization.NameLocalizer.#ctor
  - TimeCockpit.Data.Localization.NameLocalizer.GetLocalizedBackReferenceFriendlyName(TimeCockpit.Data.DataModel.Relation,System.Globalization.CultureInfo)
  - TimeCockpit.Data.Localization.NameLocalizer.GetLocalizedFriendlyName(TimeCockpit.Data.DataModel.ModelElement,System.Globalization.CultureInfo)
  - TimeCockpit.Data.Localization.NameLocalizer.GetLocalizedMemberNullMessage(TimeCockpit.Data.DataModel.ModelElement,TimeCockpit.Data.DataModel.ModelEntityBase)
  - TimeCockpit.Data.Localization.NameLocalizer.GetLocalizedMessage(TimeCockpit.Data.DataModel.ValidationRule,System.Globalization.CultureInfo)
  - TimeCockpit.Data.Localization.NameLocalizer.GetLocalizedMessage(TimeCockpit.Data.Security.Permission,System.Globalization.CultureInfo)
  - TimeCockpit.Data.Localization.NameLocalizer.GetLocalizedText(System.String,System.Globalization.CultureInfo,System.String)
  - TimeCockpit.Data.Localization.NameLocalizer.PrepareLocalizations(TimeCockpit.Data.IDataContext)
  - TimeCockpit.Data.Localization.NameLocalizer.PrepareLocalizationsAsync(TimeCockpit.Data.IDataContext)
  - TimeCockpit.Data.Localization.NameLocalizer.Resources
  langs:
  - csharp
  - vb
  name: NameLocalizer
  nameWithType: NameLocalizer
  fullName: TimeCockpit.Data.Localization.NameLocalizer
  type: Class
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Localization
  summary: "\nA calls providing methods for the translation process of the <xref href=\"TimeCockpit.Data.DataModel.Model\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public class NameLocalizer
    content.vb: Public Class NameLocalizer
  inheritance:
  - System.Object
  derivedClasses:
  - TimeCockpit.Data.Localization.Default.DefaultLocalizationManager
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TimeCockpit.Data.Localization.NameLocalizer.#ctor
  commentId: M:TimeCockpit.Data.Localization.NameLocalizer.#ctor
  id: '#ctor'
  parent: TimeCockpit.Data.Localization.NameLocalizer
  langs:
  - csharp
  - vb
  name: NameLocalizer()
  nameWithType: NameLocalizer.NameLocalizer()
  fullName: TimeCockpit.Data.Localization.NameLocalizer.NameLocalizer()
  type: Constructor
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Localization
  summary: "\nInitializes a new instance of the NameLocalizer class.\n"
  syntax:
    content: public NameLocalizer()
    content.vb: Public Sub New
  overload: TimeCockpit.Data.Localization.NameLocalizer.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Localization.NameLocalizer.GetLocalizedFriendlyName(TimeCockpit.Data.DataModel.ModelElement,System.Globalization.CultureInfo)
  commentId: M:TimeCockpit.Data.Localization.NameLocalizer.GetLocalizedFriendlyName(TimeCockpit.Data.DataModel.ModelElement,System.Globalization.CultureInfo)
  id: GetLocalizedFriendlyName(TimeCockpit.Data.DataModel.ModelElement,System.Globalization.CultureInfo)
  parent: TimeCockpit.Data.Localization.NameLocalizer
  langs:
  - csharp
  - vb
  name: GetLocalizedFriendlyName(ModelElement, CultureInfo)
  nameWithType: NameLocalizer.GetLocalizedFriendlyName(ModelElement, CultureInfo)
  fullName: TimeCockpit.Data.Localization.NameLocalizer.GetLocalizedFriendlyName(TimeCockpit.Data.DataModel.ModelElement, System.Globalization.CultureInfo)
  type: Method
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Localization
  summary: "\nReturns the localized friendly name for the specified\nmodel element.\n"
  syntax:
    content: public virtual string GetLocalizedFriendlyName(ModelElement elementToTranslate, CultureInfo targetCulture)
    parameters:
    - id: elementToTranslate
      type: TimeCockpit.Data.DataModel.ModelElement
      description: Model entity for which a property has to be translated. It has to be a type derived from <xref href="TimeCockpit.Data.DataModel.ModelElement" data-throw-if-not-resolved="false"></xref>.
    - id: targetCulture
      type: System.Globalization.CultureInfo
      description: Target culture for which the implementer has to provide a localized name. The CoFX UI will pass the current UI culture into this parameter.
    return:
      type: System.String
      description: "Localized text that CoFX has to use. A return value of null indicates that the name has no translation. In this case CoFX will use the \n<xref href=\"TimeCockpit.Data.DataModel.ModelElement.InvariantFriendlyName\" data-throw-if-not-resolved=\"false\"></xref> of the model element repectively the <xref href=\"TimeCockpit.Data.DataModel.ValidationRule.Message\" data-throw-if-not-resolved=\"false\"></xref> of the validation rule."
    content.vb: Public Overridable Function GetLocalizedFriendlyName(elementToTranslate As ModelElement, targetCulture As CultureInfo) As String
  overload: TimeCockpit.Data.Localization.NameLocalizer.GetLocalizedFriendlyName*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: TimeCockpit.Data.Localization.NameLocalizer.GetLocalizedBackReferenceFriendlyName(TimeCockpit.Data.DataModel.Relation,System.Globalization.CultureInfo)
  commentId: M:TimeCockpit.Data.Localization.NameLocalizer.GetLocalizedBackReferenceFriendlyName(TimeCockpit.Data.DataModel.Relation,System.Globalization.CultureInfo)
  id: GetLocalizedBackReferenceFriendlyName(TimeCockpit.Data.DataModel.Relation,System.Globalization.CultureInfo)
  parent: TimeCockpit.Data.Localization.NameLocalizer
  langs:
  - csharp
  - vb
  name: GetLocalizedBackReferenceFriendlyName(Relation, CultureInfo)
  nameWithType: NameLocalizer.GetLocalizedBackReferenceFriendlyName(Relation, CultureInfo)
  fullName: TimeCockpit.Data.Localization.NameLocalizer.GetLocalizedBackReferenceFriendlyName(TimeCockpit.Data.DataModel.Relation, System.Globalization.CultureInfo)
  type: Method
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Localization
  summary: "\nReturns the localized back reference friendly name for the specified\nmodel element.\n"
  syntax:
    content: public virtual string GetLocalizedBackReferenceFriendlyName(Relation elementToTranslate, CultureInfo targetCulture)
    parameters:
    - id: elementToTranslate
      type: TimeCockpit.Data.DataModel.Relation
      description: Model entity for which a property has to be translated. It has to be a type derived from <xref href="TimeCockpit.Data.DataModel.ModelElement" data-throw-if-not-resolved="false"></xref>.
    - id: targetCulture
      type: System.Globalization.CultureInfo
      description: Target culture for which the implementer has to provide a localized name. The CoFX UI will pass the current UI culture into this parameter.
    return:
      type: System.String
      description: "Localized text that CoFX has to use. A return value of null indicates that the back reference name has no translation. In this case CoFX will use the \n<xref href=\"TimeCockpit.Data.DataModel.Relation.BackReferenceInvariantFriendlyName\" data-throw-if-not-resolved=\"false\"></xref> of the Relation."
    content.vb: Public Overridable Function GetLocalizedBackReferenceFriendlyName(elementToTranslate As Relation, targetCulture As CultureInfo) As String
  overload: TimeCockpit.Data.Localization.NameLocalizer.GetLocalizedBackReferenceFriendlyName*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: TimeCockpit.Data.Localization.NameLocalizer.GetLocalizedMessage(TimeCockpit.Data.DataModel.ValidationRule,System.Globalization.CultureInfo)
  commentId: M:TimeCockpit.Data.Localization.NameLocalizer.GetLocalizedMessage(TimeCockpit.Data.DataModel.ValidationRule,System.Globalization.CultureInfo)
  id: GetLocalizedMessage(TimeCockpit.Data.DataModel.ValidationRule,System.Globalization.CultureInfo)
  parent: TimeCockpit.Data.Localization.NameLocalizer
  langs:
  - csharp
  - vb
  name: GetLocalizedMessage(ValidationRule, CultureInfo)
  nameWithType: NameLocalizer.GetLocalizedMessage(ValidationRule, CultureInfo)
  fullName: TimeCockpit.Data.Localization.NameLocalizer.GetLocalizedMessage(TimeCockpit.Data.DataModel.ValidationRule, System.Globalization.CultureInfo)
  type: Method
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Localization
  summary: "\nReturns the localized validation rule message for the specified\nvalidation rule.\n"
  syntax:
    content: public virtual string GetLocalizedMessage(ValidationRule elementToTranslate, CultureInfo targetCulture)
    parameters:
    - id: elementToTranslate
      type: TimeCockpit.Data.DataModel.ValidationRule
      description: <xref href="TimeCockpit.Data.DataModel.ValidationRule" data-throw-if-not-resolved="false"></xref> for which the message has to be translated.
    - id: targetCulture
      type: System.Globalization.CultureInfo
      description: Target culture for which the implementer has to provide a localized name. The CoFX UI will pass the current UI culture into this parameter.
    return:
      type: System.String
      description: "Localized text that CoFX has to use. A return value of null indicates that the message has no translation. In this case CoFX will use the \n<xref href=\"TimeCockpit.Data.DataModel.ValidationRule.Message\" data-throw-if-not-resolved=\"false\"></xref> of the <xref href=\"TimeCockpit.Data.DataModel.ValidationRule\" data-throw-if-not-resolved=\"false\"></xref>."
    content.vb: Public Overridable Function GetLocalizedMessage(elementToTranslate As ValidationRule, targetCulture As CultureInfo) As String
  overload: TimeCockpit.Data.Localization.NameLocalizer.GetLocalizedMessage*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: TimeCockpit.Data.Localization.NameLocalizer.GetLocalizedMessage(TimeCockpit.Data.Security.Permission,System.Globalization.CultureInfo)
  commentId: M:TimeCockpit.Data.Localization.NameLocalizer.GetLocalizedMessage(TimeCockpit.Data.Security.Permission,System.Globalization.CultureInfo)
  id: GetLocalizedMessage(TimeCockpit.Data.Security.Permission,System.Globalization.CultureInfo)
  parent: TimeCockpit.Data.Localization.NameLocalizer
  langs:
  - csharp
  - vb
  name: GetLocalizedMessage(Permission, CultureInfo)
  nameWithType: NameLocalizer.GetLocalizedMessage(Permission, CultureInfo)
  fullName: TimeCockpit.Data.Localization.NameLocalizer.GetLocalizedMessage(TimeCockpit.Data.Security.Permission, System.Globalization.CultureInfo)
  type: Method
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Localization
  summary: "\nReturns the localized permission message for the specified\npermissions.\n"
  syntax:
    content: public virtual string GetLocalizedMessage(Permission elementToTranslate, CultureInfo targetCulture)
    parameters:
    - id: elementToTranslate
      type: TimeCockpit.Data.Security.Permission
      description: <xref href="TimeCockpit.Data.Security.Permission" data-throw-if-not-resolved="false"></xref> for which the message has to be translated.
    - id: targetCulture
      type: System.Globalization.CultureInfo
      description: Target culture for which the implementer has to provide a localized name. The CoFX UI will pass the current UI culture into this parameter.
    return:
      type: System.String
      description: "Localized text that CoFX has to use. A return value of null indicates that the message has no translation. In this case CoFX will use the \n<xref href=\"TimeCockpit.Data.Security.Permission.Message\" data-throw-if-not-resolved=\"false\"></xref> of the <xref href=\"TimeCockpit.Data.Security.Permission\" data-throw-if-not-resolved=\"false\"></xref>."
    content.vb: Public Overridable Function GetLocalizedMessage(elementToTranslate As Permission, targetCulture As CultureInfo) As String
  overload: TimeCockpit.Data.Localization.NameLocalizer.GetLocalizedMessage*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: TimeCockpit.Data.Localization.NameLocalizer.GetLocalizedText(System.String,System.Globalization.CultureInfo,System.String)
  commentId: M:TimeCockpit.Data.Localization.NameLocalizer.GetLocalizedText(System.String,System.Globalization.CultureInfo,System.String)
  id: GetLocalizedText(System.String,System.Globalization.CultureInfo,System.String)
  parent: TimeCockpit.Data.Localization.NameLocalizer
  langs:
  - csharp
  - vb
  name: GetLocalizedText(String, CultureInfo, String)
  nameWithType: NameLocalizer.GetLocalizedText(String, CultureInfo, String)
  fullName: TimeCockpit.Data.Localization.NameLocalizer.GetLocalizedText(System.String, System.Globalization.CultureInfo, System.String)
  type: Method
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Localization
  summary: "\nReturns the localized text for the specified text constant.\n"
  syntax:
    content: public virtual string GetLocalizedText(string textConstantIdentifier, CultureInfo targetCulture, string defaultText = null)
    parameters:
    - id: textConstantIdentifier
      type: System.String
      description: Identifier of the text constant that has to be translated.
    - id: targetCulture
      type: System.Globalization.CultureInfo
      description: Target culture for which the implementer has to provide a localized name. The CoFX UI will pass the current UI culture into this parameter.
    - id: defaultText
      type: System.String
      description: A default text if the lookup of the identifier did not return a result.
    return:
      type: System.String
      description: Localized text that CoFX has to use. A return value of null indicates that no translation was found for the text constant identfier.
    content.vb: Public Overridable Function GetLocalizedText(textConstantIdentifier As String, targetCulture As CultureInfo, defaultText As String = Nothing) As String
  overload: TimeCockpit.Data.Localization.NameLocalizer.GetLocalizedText*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: TimeCockpit.Data.Localization.NameLocalizer.GetLocalizedMemberNullMessage(TimeCockpit.Data.DataModel.ModelElement,TimeCockpit.Data.DataModel.ModelEntityBase)
  commentId: M:TimeCockpit.Data.Localization.NameLocalizer.GetLocalizedMemberNullMessage(TimeCockpit.Data.DataModel.ModelElement,TimeCockpit.Data.DataModel.ModelEntityBase)
  id: GetLocalizedMemberNullMessage(TimeCockpit.Data.DataModel.ModelElement,TimeCockpit.Data.DataModel.ModelEntityBase)
  parent: TimeCockpit.Data.Localization.NameLocalizer
  langs:
  - csharp
  - vb
  name: GetLocalizedMemberNullMessage(ModelElement, ModelEntityBase)
  nameWithType: NameLocalizer.GetLocalizedMemberNullMessage(ModelElement, ModelEntityBase)
  fullName: TimeCockpit.Data.Localization.NameLocalizer.GetLocalizedMemberNullMessage(TimeCockpit.Data.DataModel.ModelElement, TimeCockpit.Data.DataModel.ModelEntityBase)
  type: Method
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Localization
  summary: "\nReturns the localized message for members (relation, property) that are not nullable but are currently/setting null.\n"
  syntax:
    content: public virtual string GetLocalizedMemberNullMessage(ModelElement member = null, ModelEntityBase entity = null)
    parameters:
    - id: member
      type: TimeCockpit.Data.DataModel.ModelElement
      description: Member model element (relation, property).
    - id: entity
      type: TimeCockpit.Data.DataModel.ModelEntityBase
      description: Model entity.
    return:
      type: System.String
      description: Localized message.
    content.vb: Public Overridable Function GetLocalizedMemberNullMessage(member As ModelElement = Nothing, entity As ModelEntityBase = Nothing) As String
  overload: TimeCockpit.Data.Localization.NameLocalizer.GetLocalizedMemberNullMessage*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: TimeCockpit.Data.Localization.NameLocalizer.PrepareLocalizations(TimeCockpit.Data.IDataContext)
  commentId: M:TimeCockpit.Data.Localization.NameLocalizer.PrepareLocalizations(TimeCockpit.Data.IDataContext)
  id: PrepareLocalizations(TimeCockpit.Data.IDataContext)
  parent: TimeCockpit.Data.Localization.NameLocalizer
  langs:
  - csharp
  - vb
  name: PrepareLocalizations(IDataContext)
  nameWithType: NameLocalizer.PrepareLocalizations(IDataContext)
  fullName: TimeCockpit.Data.Localization.NameLocalizer.PrepareLocalizations(TimeCockpit.Data.IDataContext)
  type: Method
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Localization
  summary: "\nprepares the localizer to serve localizations specified.\n"
  syntax:
    content: public virtual void PrepareLocalizations(IDataContext dataContext)
    parameters:
    - id: dataContext
      type: TimeCockpit.Data.IDataContext
      description: the data context to query for culture information.
    content.vb: Public Overridable Sub PrepareLocalizations(dataContext As IDataContext)
  overload: TimeCockpit.Data.Localization.NameLocalizer.PrepareLocalizations*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: TimeCockpit.Data.Localization.NameLocalizer.PrepareLocalizationsAsync(TimeCockpit.Data.IDataContext)
  commentId: M:TimeCockpit.Data.Localization.NameLocalizer.PrepareLocalizationsAsync(TimeCockpit.Data.IDataContext)
  id: PrepareLocalizationsAsync(TimeCockpit.Data.IDataContext)
  parent: TimeCockpit.Data.Localization.NameLocalizer
  langs:
  - csharp
  - vb
  name: PrepareLocalizationsAsync(IDataContext)
  nameWithType: NameLocalizer.PrepareLocalizationsAsync(IDataContext)
  fullName: TimeCockpit.Data.Localization.NameLocalizer.PrepareLocalizationsAsync(TimeCockpit.Data.IDataContext)
  type: Method
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Localization
  summary: "\ncalled to update the localizer in silverlight.\n"
  syntax:
    content: public virtual Task PrepareLocalizationsAsync(IDataContext dataContext)
    parameters:
    - id: dataContext
      type: TimeCockpit.Data.IDataContext
      description: The datacontext to use for updating.
    return:
      type: System.Threading.Tasks.Task
      description: Returns an observable notifying when done.
    content.vb: Public Overridable Function PrepareLocalizationsAsync(dataContext As IDataContext) As Task
  overload: TimeCockpit.Data.Localization.NameLocalizer.PrepareLocalizationsAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: TimeCockpit.Data.Localization.NameLocalizer.Resources
  commentId: P:TimeCockpit.Data.Localization.NameLocalizer.Resources
  id: Resources
  parent: TimeCockpit.Data.Localization.NameLocalizer
  langs:
  - csharp
  - vb
  name: Resources
  nameWithType: NameLocalizer.Resources
  fullName: TimeCockpit.Data.Localization.NameLocalizer.Resources
  type: Property
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Localization
  summary: "\nGets or sets the localization resources.\n"
  syntax:
    content: public Resources Resources { get; set; }
    parameters: []
    return:
      type: TimeCockpit.Data.Localization.Resources
    content.vb: Public Property Resources As Resources
  overload: TimeCockpit.Data.Localization.NameLocalizer.Resources*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: TimeCockpit.Data.Localization
  commentId: N:TimeCockpit.Data.Localization
  isExternal: true
  name: TimeCockpit.Data.Localization
  nameWithType: TimeCockpit.Data.Localization
  fullName: TimeCockpit.Data.Localization
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TimeCockpit.Data.Localization.NameLocalizer.#ctor*
  commentId: Overload:TimeCockpit.Data.Localization.NameLocalizer.#ctor
  isExternal: true
  name: NameLocalizer
  nameWithType: NameLocalizer.NameLocalizer
  fullName: TimeCockpit.Data.Localization.NameLocalizer.NameLocalizer
- uid: TimeCockpit.Data.Localization.NameLocalizer.GetLocalizedFriendlyName*
  commentId: Overload:TimeCockpit.Data.Localization.NameLocalizer.GetLocalizedFriendlyName
  isExternal: true
  name: GetLocalizedFriendlyName
  nameWithType: NameLocalizer.GetLocalizedFriendlyName
  fullName: TimeCockpit.Data.Localization.NameLocalizer.GetLocalizedFriendlyName
- uid: TimeCockpit.Data.DataModel.ModelElement
  commentId: T:TimeCockpit.Data.DataModel.ModelElement
  parent: TimeCockpit.Data.DataModel
  isExternal: true
  name: ModelElement
  nameWithType: ModelElement
  fullName: TimeCockpit.Data.DataModel.ModelElement
- uid: System.Globalization.CultureInfo
  commentId: T:System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: TimeCockpit.Data.DataModel
  commentId: N:TimeCockpit.Data.DataModel
  isExternal: true
  name: TimeCockpit.Data.DataModel
  nameWithType: TimeCockpit.Data.DataModel
  fullName: TimeCockpit.Data.DataModel
- uid: System.Globalization
  commentId: N:System.Globalization
  isExternal: true
  name: System.Globalization
  nameWithType: System.Globalization
  fullName: System.Globalization
- uid: TimeCockpit.Data.Localization.NameLocalizer.GetLocalizedBackReferenceFriendlyName*
  commentId: Overload:TimeCockpit.Data.Localization.NameLocalizer.GetLocalizedBackReferenceFriendlyName
  isExternal: true
  name: GetLocalizedBackReferenceFriendlyName
  nameWithType: NameLocalizer.GetLocalizedBackReferenceFriendlyName
  fullName: TimeCockpit.Data.Localization.NameLocalizer.GetLocalizedBackReferenceFriendlyName
- uid: TimeCockpit.Data.DataModel.Relation
  commentId: T:TimeCockpit.Data.DataModel.Relation
  parent: TimeCockpit.Data.DataModel
  isExternal: true
  name: Relation
  nameWithType: Relation
  fullName: TimeCockpit.Data.DataModel.Relation
- uid: TimeCockpit.Data.Localization.NameLocalizer.GetLocalizedMessage*
  commentId: Overload:TimeCockpit.Data.Localization.NameLocalizer.GetLocalizedMessage
  isExternal: true
  name: GetLocalizedMessage
  nameWithType: NameLocalizer.GetLocalizedMessage
  fullName: TimeCockpit.Data.Localization.NameLocalizer.GetLocalizedMessage
- uid: TimeCockpit.Data.DataModel.ValidationRule
  commentId: T:TimeCockpit.Data.DataModel.ValidationRule
  parent: TimeCockpit.Data.DataModel
  isExternal: true
  name: ValidationRule
  nameWithType: ValidationRule
  fullName: TimeCockpit.Data.DataModel.ValidationRule
- uid: TimeCockpit.Data.Security.Permission
  commentId: T:TimeCockpit.Data.Security.Permission
  parent: TimeCockpit.Data.Security
  isExternal: true
  name: Permission
  nameWithType: Permission
  fullName: TimeCockpit.Data.Security.Permission
- uid: TimeCockpit.Data.Security
  commentId: N:TimeCockpit.Data.Security
  isExternal: true
  name: TimeCockpit.Data.Security
  nameWithType: TimeCockpit.Data.Security
  fullName: TimeCockpit.Data.Security
- uid: TimeCockpit.Data.Localization.NameLocalizer.GetLocalizedText*
  commentId: Overload:TimeCockpit.Data.Localization.NameLocalizer.GetLocalizedText
  isExternal: true
  name: GetLocalizedText
  nameWithType: NameLocalizer.GetLocalizedText
  fullName: TimeCockpit.Data.Localization.NameLocalizer.GetLocalizedText
- uid: TimeCockpit.Data.Localization.NameLocalizer.GetLocalizedMemberNullMessage*
  commentId: Overload:TimeCockpit.Data.Localization.NameLocalizer.GetLocalizedMemberNullMessage
  isExternal: true
  name: GetLocalizedMemberNullMessage
  nameWithType: NameLocalizer.GetLocalizedMemberNullMessage
  fullName: TimeCockpit.Data.Localization.NameLocalizer.GetLocalizedMemberNullMessage
- uid: TimeCockpit.Data.DataModel.ModelEntityBase
  commentId: T:TimeCockpit.Data.DataModel.ModelEntityBase
  parent: TimeCockpit.Data.DataModel
  isExternal: true
  name: ModelEntityBase
  nameWithType: ModelEntityBase
  fullName: TimeCockpit.Data.DataModel.ModelEntityBase
- uid: TimeCockpit.Data.Localization.NameLocalizer.PrepareLocalizations*
  commentId: Overload:TimeCockpit.Data.Localization.NameLocalizer.PrepareLocalizations
  isExternal: true
  name: PrepareLocalizations
  nameWithType: NameLocalizer.PrepareLocalizations
  fullName: TimeCockpit.Data.Localization.NameLocalizer.PrepareLocalizations
- uid: TimeCockpit.Data.IDataContext
  commentId: T:TimeCockpit.Data.IDataContext
  parent: TimeCockpit.Data
  isExternal: true
  name: IDataContext
  nameWithType: IDataContext
  fullName: TimeCockpit.Data.IDataContext
- uid: TimeCockpit.Data
  commentId: N:TimeCockpit.Data
  isExternal: true
  name: TimeCockpit.Data
  nameWithType: TimeCockpit.Data
  fullName: TimeCockpit.Data
- uid: TimeCockpit.Data.Localization.NameLocalizer.PrepareLocalizationsAsync*
  commentId: Overload:TimeCockpit.Data.Localization.NameLocalizer.PrepareLocalizationsAsync
  isExternal: true
  name: PrepareLocalizationsAsync
  nameWithType: NameLocalizer.PrepareLocalizationsAsync
  fullName: TimeCockpit.Data.Localization.NameLocalizer.PrepareLocalizationsAsync
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: TimeCockpit.Data.Localization.NameLocalizer.Resources*
  commentId: Overload:TimeCockpit.Data.Localization.NameLocalizer.Resources
  isExternal: true
  name: Resources
  nameWithType: NameLocalizer.Resources
  fullName: TimeCockpit.Data.Localization.NameLocalizer.Resources
- uid: TimeCockpit.Data.Localization.Resources
  commentId: T:TimeCockpit.Data.Localization.Resources
  parent: TimeCockpit.Data.Localization
  isExternal: true
  name: Resources
  nameWithType: Resources
  fullName: TimeCockpit.Data.Localization.Resources
