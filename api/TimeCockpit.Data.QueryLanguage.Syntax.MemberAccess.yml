### YamlMime:ManagedReference
items:
- uid: TimeCockpit.Data.QueryLanguage.Syntax.MemberAccess
  commentId: T:TimeCockpit.Data.QueryLanguage.Syntax.MemberAccess
  id: MemberAccess
  parent: TimeCockpit.Data.QueryLanguage.Syntax
  children:
  - TimeCockpit.Data.QueryLanguage.Syntax.MemberAccess.#ctor(System.Collections.Generic.IEnumerable{System.String},System.String)
  - TimeCockpit.Data.QueryLanguage.Syntax.MemberAccess.Accept(TimeCockpit.Data.QueryLanguage.Syntax.Visitor)
  - TimeCockpit.Data.QueryLanguage.Syntax.MemberAccess.Alias
  - TimeCockpit.Data.QueryLanguage.Syntax.MemberAccess.Segments
  langs:
  - csharp
  - vb
  name: MemberAccess
  nameWithType: MemberAccess
  fullName: TimeCockpit.Data.QueryLanguage.Syntax.MemberAccess
  type: Class
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.QueryLanguage.Syntax
  summary: "\nDescribes access to a member, e.g.:\nIn\n<pre><code>From X In Timesheet Where X.BeginTime &lt; #2012-10-10# Select X</code></pre>\n&quot;X.BeginTime&quot; is referred to as a MemberAccess with the segments being &apos;BeginTime&apos; and alias being X.\n<remarks>\nThe alias may be null (and is by default null). An Alias of null means that the Member access refers to \nthe table source of the parenting query. \nAs of 2012-11-09, this is not possible to achieve using the grammar, as it would require not specifying an alias.\nPseudocode:\n<pre><code>From Timesheet Where BeginTime > #2012-01-01# Select </code></pre>\nwould by a theoretical possibility for such a syntax.\n</remarks>\n"
  syntax:
    content: 'public class MemberAccess : Expression'
    content.vb: >-
      Public Class MemberAccess
          Inherits Expression
  inheritance:
  - System.Object
  - TimeCockpit.Data.QueryLanguage.Syntax.Node
  - TimeCockpit.Data.QueryLanguage.Syntax.Expression
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TimeCockpit.Data.QueryLanguage.Syntax.MemberAccess.#ctor(System.Collections.Generic.IEnumerable{System.String},System.String)
  commentId: M:TimeCockpit.Data.QueryLanguage.Syntax.MemberAccess.#ctor(System.Collections.Generic.IEnumerable{System.String},System.String)
  id: '#ctor(System.Collections.Generic.IEnumerable{System.String},System.String)'
  parent: TimeCockpit.Data.QueryLanguage.Syntax.MemberAccess
  langs:
  - csharp
  - vb
  name: MemberAccess(IEnumerable<String>, String)
  nameWithType: MemberAccess.MemberAccess(IEnumerable<String>, String)
  fullName: TimeCockpit.Data.QueryLanguage.Syntax.MemberAccess.MemberAccess(System.Collections.Generic.IEnumerable<System.String>, System.String)
  type: Constructor
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.QueryLanguage.Syntax
  summary: "\nInitializes a new instance of the <xref href=\"TimeCockpit.Data.QueryLanguage.Syntax.MemberAccess\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  syntax:
    content: public MemberAccess(IEnumerable<string> segments, string alias = null)
    parameters:
    - id: segments
      type: System.Collections.Generic.IEnumerable{System.String}
      description: The segments of the MemberAccess.
    - id: alias
      type: System.String
      description: the alias to refer to.
    content.vb: Public Sub New(segments As IEnumerable(Of String), alias As String = Nothing)
  overload: TimeCockpit.Data.QueryLanguage.Syntax.MemberAccess.#ctor*
  nameWithType.vb: MemberAccess.MemberAccess(IEnumerable(Of String), String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TimeCockpit.Data.QueryLanguage.Syntax.MemberAccess.MemberAccess(System.Collections.Generic.IEnumerable(Of System.String), System.String)
  name.vb: MemberAccess(IEnumerable(Of String), String)
- uid: TimeCockpit.Data.QueryLanguage.Syntax.MemberAccess.Accept(TimeCockpit.Data.QueryLanguage.Syntax.Visitor)
  commentId: M:TimeCockpit.Data.QueryLanguage.Syntax.MemberAccess.Accept(TimeCockpit.Data.QueryLanguage.Syntax.Visitor)
  id: Accept(TimeCockpit.Data.QueryLanguage.Syntax.Visitor)
  parent: TimeCockpit.Data.QueryLanguage.Syntax.MemberAccess
  langs:
  - csharp
  - vb
  name: Accept(Visitor)
  nameWithType: MemberAccess.Accept(Visitor)
  fullName: TimeCockpit.Data.QueryLanguage.Syntax.MemberAccess.Accept(TimeCockpit.Data.QueryLanguage.Syntax.Visitor)
  type: Method
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.QueryLanguage.Syntax
  summary: "\nDispatches to the correct <xref href=\"TimeCockpit.Data.QueryLanguage.Syntax.Visitor.VisitQuery(TimeCockpit.Data.QueryLanguage.Syntax.Query)\" data-throw-if-not-resolved=\"false\"></xref> call.\n"
  syntax:
    content: public override Node Accept(Visitor visitor)
    parameters:
    - id: visitor
      type: TimeCockpit.Data.QueryLanguage.Syntax.Visitor
      description: the visitor to dispatch.
    return:
      type: TimeCockpit.Data.QueryLanguage.Syntax.Node
      description: Returns the result of the <xref href="TimeCockpit.Data.QueryLanguage.Syntax.Visitor.VisitQuery(TimeCockpit.Data.QueryLanguage.Syntax.Query)" data-throw-if-not-resolved="false"></xref> call.
    content.vb: Public Overrides Function Accept(visitor As Visitor) As Node
  overridden: TimeCockpit.Data.QueryLanguage.Syntax.Node.Accept(TimeCockpit.Data.QueryLanguage.Syntax.Visitor)
  overload: TimeCockpit.Data.QueryLanguage.Syntax.MemberAccess.Accept*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: TimeCockpit.Data.QueryLanguage.Syntax.MemberAccess.Alias
  commentId: P:TimeCockpit.Data.QueryLanguage.Syntax.MemberAccess.Alias
  id: Alias
  parent: TimeCockpit.Data.QueryLanguage.Syntax.MemberAccess
  langs:
  - csharp
  - vb
  name: Alias
  nameWithType: MemberAccess.Alias
  fullName: TimeCockpit.Data.QueryLanguage.Syntax.MemberAccess.Alias
  type: Property
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.QueryLanguage.Syntax
  summary: "\nGets the alias. May be null in which case it is refering to the source of the parenting query.\n"
  syntax:
    content: public string Alias { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Alias As String
  overload: TimeCockpit.Data.QueryLanguage.Syntax.MemberAccess.Alias*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TimeCockpit.Data.QueryLanguage.Syntax.MemberAccess.Segments
  commentId: P:TimeCockpit.Data.QueryLanguage.Syntax.MemberAccess.Segments
  id: Segments
  parent: TimeCockpit.Data.QueryLanguage.Syntax.MemberAccess
  langs:
  - csharp
  - vb
  name: Segments
  nameWithType: MemberAccess.Segments
  fullName: TimeCockpit.Data.QueryLanguage.Syntax.MemberAccess.Segments
  type: Property
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.QueryLanguage.Syntax
  summary: "\nGets the segments of the member access path.\n"
  syntax:
    content: public ReadOnlyCollection<string> Segments { get; }
    parameters: []
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.String}
    content.vb: Public ReadOnly Property Segments As ReadOnlyCollection(Of String)
  overload: TimeCockpit.Data.QueryLanguage.Syntax.MemberAccess.Segments*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: TimeCockpit.Data.QueryLanguage.Syntax
  commentId: N:TimeCockpit.Data.QueryLanguage.Syntax
  isExternal: true
  name: TimeCockpit.Data.QueryLanguage.Syntax
  nameWithType: TimeCockpit.Data.QueryLanguage.Syntax
  fullName: TimeCockpit.Data.QueryLanguage.Syntax
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: TimeCockpit.Data.QueryLanguage.Syntax.Node
  commentId: T:TimeCockpit.Data.QueryLanguage.Syntax.Node
  parent: TimeCockpit.Data.QueryLanguage.Syntax
  isExternal: true
  name: Node
  nameWithType: Node
  fullName: TimeCockpit.Data.QueryLanguage.Syntax.Node
- uid: TimeCockpit.Data.QueryLanguage.Syntax.Expression
  commentId: T:TimeCockpit.Data.QueryLanguage.Syntax.Expression
  parent: TimeCockpit.Data.QueryLanguage.Syntax
  isExternal: true
  name: Expression
  nameWithType: Expression
  fullName: TimeCockpit.Data.QueryLanguage.Syntax.Expression
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TimeCockpit.Data.QueryLanguage.Syntax.MemberAccess.#ctor*
  commentId: Overload:TimeCockpit.Data.QueryLanguage.Syntax.MemberAccess.#ctor
  isExternal: true
  name: MemberAccess
  nameWithType: MemberAccess.MemberAccess
  fullName: TimeCockpit.Data.QueryLanguage.Syntax.MemberAccess.MemberAccess
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: TimeCockpit.Data.QueryLanguage.Syntax.Node.Accept(TimeCockpit.Data.QueryLanguage.Syntax.Visitor)
  commentId: M:TimeCockpit.Data.QueryLanguage.Syntax.Node.Accept(TimeCockpit.Data.QueryLanguage.Syntax.Visitor)
  parent: TimeCockpit.Data.QueryLanguage.Syntax.Node
  isExternal: true
  name: Accept(Visitor)
  nameWithType: Node.Accept(Visitor)
  fullName: TimeCockpit.Data.QueryLanguage.Syntax.Node.Accept(TimeCockpit.Data.QueryLanguage.Syntax.Visitor)
  spec.csharp:
  - uid: TimeCockpit.Data.QueryLanguage.Syntax.Node.Accept(TimeCockpit.Data.QueryLanguage.Syntax.Visitor)
    name: Accept
    nameWithType: Node.Accept
    fullName: TimeCockpit.Data.QueryLanguage.Syntax.Node.Accept
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: TimeCockpit.Data.QueryLanguage.Syntax.Visitor
    name: Visitor
    nameWithType: Visitor
    fullName: TimeCockpit.Data.QueryLanguage.Syntax.Visitor
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TimeCockpit.Data.QueryLanguage.Syntax.Node.Accept(TimeCockpit.Data.QueryLanguage.Syntax.Visitor)
    name: Accept
    nameWithType: Node.Accept
    fullName: TimeCockpit.Data.QueryLanguage.Syntax.Node.Accept
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: TimeCockpit.Data.QueryLanguage.Syntax.Visitor
    name: Visitor
    nameWithType: Visitor
    fullName: TimeCockpit.Data.QueryLanguage.Syntax.Visitor
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.QueryLanguage.Syntax.MemberAccess.Accept*
  commentId: Overload:TimeCockpit.Data.QueryLanguage.Syntax.MemberAccess.Accept
  isExternal: true
  name: Accept
  nameWithType: MemberAccess.Accept
  fullName: TimeCockpit.Data.QueryLanguage.Syntax.MemberAccess.Accept
- uid: TimeCockpit.Data.QueryLanguage.Syntax.Visitor
  commentId: T:TimeCockpit.Data.QueryLanguage.Syntax.Visitor
  parent: TimeCockpit.Data.QueryLanguage.Syntax
  isExternal: true
  name: Visitor
  nameWithType: Visitor
  fullName: TimeCockpit.Data.QueryLanguage.Syntax.Visitor
- uid: TimeCockpit.Data.QueryLanguage.Syntax.MemberAccess.Alias*
  commentId: Overload:TimeCockpit.Data.QueryLanguage.Syntax.MemberAccess.Alias
  isExternal: true
  name: Alias
  nameWithType: MemberAccess.Alias
  fullName: TimeCockpit.Data.QueryLanguage.Syntax.MemberAccess.Alias
- uid: TimeCockpit.Data.QueryLanguage.Syntax.MemberAccess.Segments*
  commentId: Overload:TimeCockpit.Data.QueryLanguage.Syntax.MemberAccess.Segments
  isExternal: true
  name: Segments
  nameWithType: MemberAccess.Segments
  fullName: TimeCockpit.Data.QueryLanguage.Syntax.MemberAccess.Segments
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.String}
  commentId: T:System.Collections.ObjectModel.ReadOnlyCollection{System.String}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1
  name: ReadOnlyCollection<String>
  nameWithType: ReadOnlyCollection<String>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.String>
  nameWithType.vb: ReadOnlyCollection(Of String)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of System.String)
  name.vb: ReadOnlyCollection(Of String)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1
  commentId: T:System.Collections.ObjectModel.ReadOnlyCollection`1
  isExternal: true
  name: ReadOnlyCollection<T>
  nameWithType: ReadOnlyCollection<T>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>
  nameWithType.vb: ReadOnlyCollection(Of T)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T)
  name.vb: ReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel
  commentId: N:System.Collections.ObjectModel
  isExternal: true
  name: System.Collections.ObjectModel
  nameWithType: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
