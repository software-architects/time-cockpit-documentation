### YamlMime:ManagedReference
items:
- uid: TimeCockpit.Data.JsonConverters.JsonListRequest
  commentId: T:TimeCockpit.Data.JsonConverters.JsonListRequest
  id: JsonListRequest
  parent: TimeCockpit.Data.JsonConverters
  children:
  - TimeCockpit.Data.JsonConverters.JsonListRequest.ListName
  - TimeCockpit.Data.JsonConverters.JsonListRequest.MethodName
  - TimeCockpit.Data.JsonConverters.JsonListRequest.Parameters
  - TimeCockpit.Data.JsonConverters.JsonListRequest.Read(Newtonsoft.Json.JsonReader,TimeCockpit.Data.DataModel.Model)
  - TimeCockpit.Data.JsonConverters.JsonListRequest.Write(Newtonsoft.Json.JsonWriter,TimeCockpit.Data.DataModel.Model,TimeCockpit.Data.JsonConverters.JsonListRequest)
  langs:
  - csharp
  - vb
  name: JsonListRequest
  nameWithType: JsonListRequest
  fullName: TimeCockpit.Data.JsonConverters.JsonListRequest
  type: Class
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/JsonConverters/JsonListRequest.cs
    id: JsonListRequest
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/JsonConverters/JsonListRequest.cs
    startLine: 16
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.JsonConverters
  summary: "\nRepresents a request that fetches the result of a python list\n"
  example: []
  syntax:
    content: public class JsonListRequest
    content.vb: Public Class JsonListRequest
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TimeCockpit.Data.JsonConverters.JsonListRequest.ListName
  commentId: P:TimeCockpit.Data.JsonConverters.JsonListRequest.ListName
  id: ListName
  parent: TimeCockpit.Data.JsonConverters.JsonListRequest
  langs:
  - csharp
  - vb
  name: ListName
  nameWithType: JsonListRequest.ListName
  fullName: TimeCockpit.Data.JsonConverters.JsonListRequest.ListName
  type: Property
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/JsonConverters/JsonListRequest.cs
    id: ListName
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/JsonConverters/JsonListRequest.cs
    startLine: 24
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.JsonConverters
  summary: "\nGets or sets the listname.\n"
  example: []
  syntax:
    content: public string ListName { get; set; }
    parameters: []
    return:
      type: System.String
      description: "\nThe listname.\n"
    content.vb: Public Property ListName As String
  overload: TimeCockpit.Data.JsonConverters.JsonListRequest.ListName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.JsonConverters.JsonListRequest.MethodName
  commentId: P:TimeCockpit.Data.JsonConverters.JsonListRequest.MethodName
  id: MethodName
  parent: TimeCockpit.Data.JsonConverters.JsonListRequest
  langs:
  - csharp
  - vb
  name: MethodName
  nameWithType: JsonListRequest.MethodName
  fullName: TimeCockpit.Data.JsonConverters.JsonListRequest.MethodName
  type: Property
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/JsonConverters/JsonListRequest.cs
    id: MethodName
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/JsonConverters/JsonListRequest.cs
    startLine: 32
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.JsonConverters
  summary: "\nGets or sets the methodname.\n"
  example: []
  syntax:
    content: public string MethodName { get; set; }
    parameters: []
    return:
      type: System.String
      description: "\nThe methodname.\n"
    content.vb: Public Property MethodName As String
  overload: TimeCockpit.Data.JsonConverters.JsonListRequest.MethodName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.JsonConverters.JsonListRequest.Parameters
  commentId: P:TimeCockpit.Data.JsonConverters.JsonListRequest.Parameters
  id: Parameters
  parent: TimeCockpit.Data.JsonConverters.JsonListRequest
  langs:
  - csharp
  - vb
  name: Parameters
  nameWithType: JsonListRequest.Parameters
  fullName: TimeCockpit.Data.JsonConverters.JsonListRequest.Parameters
  type: Property
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/JsonConverters/JsonListRequest.cs
    id: Parameters
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/JsonConverters/JsonListRequest.cs
    startLine: 40
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.JsonConverters
  summary: "\nGets or sets the parameters.\n"
  example: []
  syntax:
    content: public IEnumerable<QueryParameter> Parameters { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{TimeCockpit.Data.QueryLanguage.QueryParameter}
      description: "\nThe parameters.\n"
    content.vb: Public Property Parameters As IEnumerable(Of QueryParameter)
  overload: TimeCockpit.Data.JsonConverters.JsonListRequest.Parameters*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.JsonConverters.JsonListRequest.Read(Newtonsoft.Json.JsonReader,TimeCockpit.Data.DataModel.Model)
  commentId: M:TimeCockpit.Data.JsonConverters.JsonListRequest.Read(Newtonsoft.Json.JsonReader,TimeCockpit.Data.DataModel.Model)
  id: Read(Newtonsoft.Json.JsonReader,TimeCockpit.Data.DataModel.Model)
  parent: TimeCockpit.Data.JsonConverters.JsonListRequest
  langs:
  - csharp
  - vb
  name: Read(JsonReader, Model)
  nameWithType: JsonListRequest.Read(JsonReader, Model)
  fullName: TimeCockpit.Data.JsonConverters.JsonListRequest.Read(Newtonsoft.Json.JsonReader, TimeCockpit.Data.DataModel.Model)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/JsonConverters/JsonListRequest.cs
    id: Read
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/JsonConverters/JsonListRequest.cs
    startLine: 48
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.JsonConverters
  summary: "\nReads the specified reader.\n"
  example: []
  syntax:
    content: public static JsonListRequest Read(JsonReader reader, Model model)
    parameters:
    - id: reader
      type: Newtonsoft.Json.JsonReader
      description: The reader.
    - id: model
      type: TimeCockpit.Data.DataModel.Model
      description: The model.
    return:
      type: TimeCockpit.Data.JsonConverters.JsonListRequest
      description: An instance of <xref href="TimeCockpit.Data.JsonConverters.JsonListRequest" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Shared Function Read(reader As JsonReader, model As Model) As JsonListRequest
  overload: TimeCockpit.Data.JsonConverters.JsonListRequest.Read*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: TimeCockpit.Data.JsonConverters.JsonListRequest.Write(Newtonsoft.Json.JsonWriter,TimeCockpit.Data.DataModel.Model,TimeCockpit.Data.JsonConverters.JsonListRequest)
  commentId: M:TimeCockpit.Data.JsonConverters.JsonListRequest.Write(Newtonsoft.Json.JsonWriter,TimeCockpit.Data.DataModel.Model,TimeCockpit.Data.JsonConverters.JsonListRequest)
  id: Write(Newtonsoft.Json.JsonWriter,TimeCockpit.Data.DataModel.Model,TimeCockpit.Data.JsonConverters.JsonListRequest)
  parent: TimeCockpit.Data.JsonConverters.JsonListRequest
  langs:
  - csharp
  - vb
  name: Write(JsonWriter, Model, JsonListRequest)
  nameWithType: JsonListRequest.Write(JsonWriter, Model, JsonListRequest)
  fullName: TimeCockpit.Data.JsonConverters.JsonListRequest.Write(Newtonsoft.Json.JsonWriter, TimeCockpit.Data.DataModel.Model, TimeCockpit.Data.JsonConverters.JsonListRequest)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/JsonConverters/JsonListRequest.cs
    id: Write
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/JsonConverters/JsonListRequest.cs
    startLine: 95
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.JsonConverters
  summary: "\nWrites the json.\n"
  example: []
  syntax:
    content: public static void Write(JsonWriter writer, Model model, JsonListRequest listRequest)
    parameters:
    - id: writer
      type: Newtonsoft.Json.JsonWriter
      description: The writer.
    - id: model
      type: TimeCockpit.Data.DataModel.Model
      description: The model.
    - id: listRequest
      type: TimeCockpit.Data.JsonConverters.JsonListRequest
      description: The result of a REST query.
    content.vb: Public Shared Sub Write(writer As JsonWriter, model As Model, listRequest As JsonListRequest)
  overload: TimeCockpit.Data.JsonConverters.JsonListRequest.Write*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: TimeCockpit.Data.JsonConverters
  commentId: N:TimeCockpit.Data.JsonConverters
  isExternal: false
  name: TimeCockpit.Data.JsonConverters
  nameWithType: TimeCockpit.Data.JsonConverters
  fullName: TimeCockpit.Data.JsonConverters
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: TimeCockpit.Data.JsonConverters.JsonListRequest.ListName*
  commentId: Overload:TimeCockpit.Data.JsonConverters.JsonListRequest.ListName
  isExternal: false
  name: ListName
  nameWithType: JsonListRequest.ListName
  fullName: TimeCockpit.Data.JsonConverters.JsonListRequest.ListName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: TimeCockpit.Data.JsonConverters.JsonListRequest.MethodName*
  commentId: Overload:TimeCockpit.Data.JsonConverters.JsonListRequest.MethodName
  isExternal: false
  name: MethodName
  nameWithType: JsonListRequest.MethodName
  fullName: TimeCockpit.Data.JsonConverters.JsonListRequest.MethodName
- uid: TimeCockpit.Data.JsonConverters.JsonListRequest.Parameters*
  commentId: Overload:TimeCockpit.Data.JsonConverters.JsonListRequest.Parameters
  isExternal: false
  name: Parameters
  nameWithType: JsonListRequest.Parameters
  fullName: TimeCockpit.Data.JsonConverters.JsonListRequest.Parameters
- uid: System.Collections.Generic.IEnumerable{TimeCockpit.Data.QueryLanguage.QueryParameter}
  commentId: T:System.Collections.Generic.IEnumerable{TimeCockpit.Data.QueryLanguage.QueryParameter}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<QueryParameter>
  nameWithType: IEnumerable<QueryParameter>
  fullName: System.Collections.Generic.IEnumerable<TimeCockpit.Data.QueryLanguage.QueryParameter>
  nameWithType.vb: IEnumerable(Of QueryParameter)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TimeCockpit.Data.QueryLanguage.QueryParameter)
  name.vb: IEnumerable(Of QueryParameter)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TimeCockpit.Data.QueryLanguage.QueryParameter
    name: QueryParameter
    nameWithType: QueryParameter
    fullName: TimeCockpit.Data.QueryLanguage.QueryParameter
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TimeCockpit.Data.QueryLanguage.QueryParameter
    name: QueryParameter
    nameWithType: QueryParameter
    fullName: TimeCockpit.Data.QueryLanguage.QueryParameter
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: TimeCockpit.Data.JsonConverters.JsonListRequest
  commentId: T:TimeCockpit.Data.JsonConverters.JsonListRequest
  parent: TimeCockpit.Data.JsonConverters
  isExternal: false
  name: JsonListRequest
  nameWithType: JsonListRequest
  fullName: TimeCockpit.Data.JsonConverters.JsonListRequest
- uid: TimeCockpit.Data.JsonConverters.JsonListRequest.Read*
  commentId: Overload:TimeCockpit.Data.JsonConverters.JsonListRequest.Read
  isExternal: false
  name: Read
  nameWithType: JsonListRequest.Read
  fullName: TimeCockpit.Data.JsonConverters.JsonListRequest.Read
- uid: Newtonsoft.Json.JsonReader
  commentId: T:Newtonsoft.Json.JsonReader
  parent: Newtonsoft.Json
  isExternal: true
  name: JsonReader
  nameWithType: JsonReader
  fullName: Newtonsoft.Json.JsonReader
- uid: TimeCockpit.Data.DataModel.Model
  commentId: T:TimeCockpit.Data.DataModel.Model
  parent: TimeCockpit.Data.DataModel
  isExternal: false
  name: Model
  nameWithType: Model
  fullName: TimeCockpit.Data.DataModel.Model
- uid: Newtonsoft.Json
  commentId: N:Newtonsoft.Json
  isExternal: false
  name: Newtonsoft.Json
  nameWithType: Newtonsoft.Json
  fullName: Newtonsoft.Json
- uid: TimeCockpit.Data.DataModel
  commentId: N:TimeCockpit.Data.DataModel
  isExternal: false
  name: TimeCockpit.Data.DataModel
  nameWithType: TimeCockpit.Data.DataModel
  fullName: TimeCockpit.Data.DataModel
- uid: TimeCockpit.Data.JsonConverters.JsonListRequest.Write*
  commentId: Overload:TimeCockpit.Data.JsonConverters.JsonListRequest.Write
  isExternal: false
  name: Write
  nameWithType: JsonListRequest.Write
  fullName: TimeCockpit.Data.JsonConverters.JsonListRequest.Write
- uid: Newtonsoft.Json.JsonWriter
  commentId: T:Newtonsoft.Json.JsonWriter
  parent: Newtonsoft.Json
  isExternal: true
  name: JsonWriter
  nameWithType: JsonWriter
  fullName: Newtonsoft.Json.JsonWriter
