### YamlMime:ManagedReference
items:
- uid: TimeCockpit.Data.DataModel.CombinedModelCollectionView`3
  commentId: T:TimeCockpit.Data.DataModel.CombinedModelCollectionView`3
  id: CombinedModelCollectionView`3
  parent: TimeCockpit.Data.DataModel
  children:
  - TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.#ctor(TimeCockpit.Data.DataModel.ModelCollection{`1},TimeCockpit.Data.DataModel.ModelCollection{`2})
  - TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.Add(`0)
  - TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.Add(System.Object)
  - TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.Clear
  - TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.Contains(`0)
  - TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.Contains(System.String)
  - TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.CopyTo(`0[],System.Int32)
  - TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.CopyTo(System.Array,System.Int32)
  - TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.Count
  - TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.GetEnumerator
  - TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.IndexOf(`0)
  - TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.IndexOf(System.Object)
  - TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.Insert(System.Int32,`0)
  - TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.Insert(System.Int32,System.Object)
  - TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.IsFixedSize
  - TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.IsReadOnly
  - TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.IsSynchronized
  - TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.Item(System.String)
  - TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.Remove(`0)
  - TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.Remove(System.Object)
  - TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.RemoveAt(System.Int32)
  - TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.System#Collections#Generic#IList{TBase}#Item(System.Int32)
  - TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.System#Collections#ICollection#SyncRoot
  - TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.System#Collections#IEnumerable#GetEnumerator
  - TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.System#Collections#IList#Contains(System.Object)
  - TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.System#Collections#IList#Item(System.Int32)
  - TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.TryGetValue(System.String,`0@)
  langs:
  - csharp
  - vb
  name: CombinedModelCollectionView<TBase, TPrimary, TSecondary>
  nameWithType: CombinedModelCollectionView<TBase, TPrimary, TSecondary>
  fullName: TimeCockpit.Data.DataModel.CombinedModelCollectionView<TBase, TPrimary, TSecondary>
  type: Class
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/CombinedModelCollectionView.cs
    id: CombinedModelCollectionView
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/CombinedModelCollectionView.cs
    startLine: 19
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel
  summary: "\nCombined view on a set of model collections.\n"
  example: []
  syntax:
    content: 'public class CombinedModelCollectionView<TBase, TPrimary, TSecondary> : IList<TBase>, ICollection<TBase>, IEnumerable<TBase>, IList, ICollection, IEnumerable where TBase : NamedDynamicObject where TPrimary : TBase where TSecondary : TBase'
    typeParameters:
    - id: TBase
      description: Base type of encapsulated model collections.
    - id: TPrimary
      description: Primary collection element type.
    - id: TSecondary
      description: Secondary collection element type.
    content.vb: >-
      Public Class CombinedModelCollectionView(Of TBase As NamedDynamicObject, TPrimary As TBase, TSecondary As TBase)
          Implements IList(Of TBase), ICollection(Of TBase), IEnumerable(Of TBase), IList, ICollection, IEnumerable
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.IList{{TBase}}
  - System.Collections.Generic.ICollection{{TBase}}
  - System.Collections.Generic.IEnumerable{{TBase}}
  - System.Collections.IList
  - System.Collections.ICollection
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: CombinedModelCollectionView(Of TBase, TPrimary, TSecondary)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: TimeCockpit.Data.DataModel.CombinedModelCollectionView(Of TBase, TPrimary, TSecondary)
  name.vb: CombinedModelCollectionView(Of TBase, TPrimary, TSecondary)
- uid: TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.#ctor(TimeCockpit.Data.DataModel.ModelCollection{`1},TimeCockpit.Data.DataModel.ModelCollection{`2})
  commentId: M:TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.#ctor(TimeCockpit.Data.DataModel.ModelCollection{`1},TimeCockpit.Data.DataModel.ModelCollection{`2})
  id: '#ctor(TimeCockpit.Data.DataModel.ModelCollection{`1},TimeCockpit.Data.DataModel.ModelCollection{`2})'
  parent: TimeCockpit.Data.DataModel.CombinedModelCollectionView`3
  langs:
  - csharp
  - vb
  name: CombinedModelCollectionView(ModelCollection<TPrimary>, ModelCollection<TSecondary>)
  nameWithType: CombinedModelCollectionView<TBase, TPrimary, TSecondary>.CombinedModelCollectionView(ModelCollection<TPrimary>, ModelCollection<TSecondary>)
  fullName: TimeCockpit.Data.DataModel.CombinedModelCollectionView<TBase, TPrimary, TSecondary>.CombinedModelCollectionView(TimeCockpit.Data.DataModel.ModelCollection<TPrimary>, TimeCockpit.Data.DataModel.ModelCollection<TSecondary>)
  type: Constructor
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/CombinedModelCollectionView.cs
    id: .ctor
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/CombinedModelCollectionView.cs
    startLine: 29
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel
  summary: "\nInitializes a new instance of the CombinedModelCollectionView class.\n"
  example: []
  syntax:
    content: public CombinedModelCollectionView(ModelCollection<TPrimary> primary, ModelCollection<TSecondary> secondary)
    parameters:
    - id: primary
      type: TimeCockpit.Data.DataModel.ModelCollection{{TPrimary}}
      description: Primary collection.
    - id: secondary
      type: TimeCockpit.Data.DataModel.ModelCollection{{TSecondary}}
      description: Secondary collection.
    content.vb: Public Sub New(primary As ModelCollection(Of TPrimary), secondary As ModelCollection(Of TSecondary))
  overload: TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.#ctor*
  nameWithType.vb: CombinedModelCollectionView(Of TBase, TPrimary, TSecondary).CombinedModelCollectionView(ModelCollection(Of TPrimary), ModelCollection(Of TSecondary))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TimeCockpit.Data.DataModel.CombinedModelCollectionView(Of TBase, TPrimary, TSecondary).CombinedModelCollectionView(TimeCockpit.Data.DataModel.ModelCollection(Of TPrimary), TimeCockpit.Data.DataModel.ModelCollection(Of TSecondary))
  name.vb: CombinedModelCollectionView(ModelCollection(Of TPrimary), ModelCollection(Of TSecondary))
- uid: TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.Count
  commentId: P:TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.Count
  id: Count
  parent: TimeCockpit.Data.DataModel.CombinedModelCollectionView`3
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: CombinedModelCollectionView<TBase, TPrimary, TSecondary>.Count
  fullName: TimeCockpit.Data.DataModel.CombinedModelCollectionView<TBase, TPrimary, TSecondary>.Count
  type: Property
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/CombinedModelCollectionView.cs
    id: Count
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/CombinedModelCollectionView.cs
    startLine: 36
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel
  example: []
  syntax:
    content: public int Count { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Count As Integer
  overload: TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.Count*
  implements:
  - System.Collections.Generic.ICollection{{TBase}}.Count
  - System.Collections.ICollection.Count
  nameWithType.vb: CombinedModelCollectionView(Of TBase, TPrimary, TSecondary).Count
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: TimeCockpit.Data.DataModel.CombinedModelCollectionView(Of TBase, TPrimary, TSecondary).Count
- uid: TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.IsReadOnly
  commentId: P:TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.IsReadOnly
  id: IsReadOnly
  parent: TimeCockpit.Data.DataModel.CombinedModelCollectionView`3
  langs:
  - csharp
  - vb
  name: IsReadOnly
  nameWithType: CombinedModelCollectionView<TBase, TPrimary, TSecondary>.IsReadOnly
  fullName: TimeCockpit.Data.DataModel.CombinedModelCollectionView<TBase, TPrimary, TSecondary>.IsReadOnly
  type: Property
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/CombinedModelCollectionView.cs
    id: IsReadOnly
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/CombinedModelCollectionView.cs
    startLine: 45
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel
  example: []
  syntax:
    content: public bool IsReadOnly { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsReadOnly As Boolean
  overload: TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.IsReadOnly*
  implements:
  - System.Collections.Generic.ICollection{{TBase}}.IsReadOnly
  - System.Collections.IList.IsReadOnly
  nameWithType.vb: CombinedModelCollectionView(Of TBase, TPrimary, TSecondary).IsReadOnly
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: TimeCockpit.Data.DataModel.CombinedModelCollectionView(Of TBase, TPrimary, TSecondary).IsReadOnly
- uid: TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.IsSynchronized
  commentId: P:TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.IsSynchronized
  id: IsSynchronized
  parent: TimeCockpit.Data.DataModel.CombinedModelCollectionView`3
  langs:
  - csharp
  - vb
  name: IsSynchronized
  nameWithType: CombinedModelCollectionView<TBase, TPrimary, TSecondary>.IsSynchronized
  fullName: TimeCockpit.Data.DataModel.CombinedModelCollectionView<TBase, TPrimary, TSecondary>.IsSynchronized
  type: Property
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/CombinedModelCollectionView.cs
    id: IsSynchronized
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/CombinedModelCollectionView.cs
    startLine: 51
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel
  example: []
  syntax:
    content: public bool IsSynchronized { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsSynchronized As Boolean
  overload: TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.IsSynchronized*
  implements:
  - System.Collections.ICollection.IsSynchronized
  nameWithType.vb: CombinedModelCollectionView(Of TBase, TPrimary, TSecondary).IsSynchronized
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: TimeCockpit.Data.DataModel.CombinedModelCollectionView(Of TBase, TPrimary, TSecondary).IsSynchronized
- uid: TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.IsFixedSize
  commentId: P:TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.IsFixedSize
  id: IsFixedSize
  parent: TimeCockpit.Data.DataModel.CombinedModelCollectionView`3
  langs:
  - csharp
  - vb
  name: IsFixedSize
  nameWithType: CombinedModelCollectionView<TBase, TPrimary, TSecondary>.IsFixedSize
  fullName: TimeCockpit.Data.DataModel.CombinedModelCollectionView<TBase, TPrimary, TSecondary>.IsFixedSize
  type: Property
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/CombinedModelCollectionView.cs
    id: IsFixedSize
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/CombinedModelCollectionView.cs
    startLine: 57
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel
  example: []
  syntax:
    content: public bool IsFixedSize { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsFixedSize As Boolean
  overload: TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.IsFixedSize*
  implements:
  - System.Collections.IList.IsFixedSize
  nameWithType.vb: CombinedModelCollectionView(Of TBase, TPrimary, TSecondary).IsFixedSize
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: TimeCockpit.Data.DataModel.CombinedModelCollectionView(Of TBase, TPrimary, TSecondary).IsFixedSize
- uid: TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.System#Collections#ICollection#SyncRoot
  commentId: P:TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.System#Collections#ICollection#SyncRoot
  id: System#Collections#ICollection#SyncRoot
  isEii: true
  parent: TimeCockpit.Data.DataModel.CombinedModelCollectionView`3
  langs:
  - csharp
  - vb
  name: ICollection.SyncRoot
  nameWithType: CombinedModelCollectionView<TBase, TPrimary, TSecondary>.ICollection.SyncRoot
  fullName: TimeCockpit.Data.DataModel.CombinedModelCollectionView<TBase, TPrimary, TSecondary>.System.Collections.ICollection.SyncRoot
  type: Property
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/CombinedModelCollectionView.cs
    id: System.Collections.ICollection.SyncRoot
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/CombinedModelCollectionView.cs
    startLine: 63
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel
  example: []
  syntax:
    content: object ICollection.SyncRoot { get; }
    parameters: []
    return:
      type: System.Object
    content.vb: ReadOnly WriteOnly Property System.Collections.ICollection.SyncRoot As Object Implements ICollection.SyncRoot
  overload: TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.System#Collections#ICollection#SyncRoot*
  implements:
  - System.Collections.ICollection.SyncRoot
  nameWithType.vb: CombinedModelCollectionView(Of TBase, TPrimary, TSecondary).System.Collections.ICollection.SyncRoot
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  fullName.vb: TimeCockpit.Data.DataModel.CombinedModelCollectionView(Of TBase, TPrimary, TSecondary).System.Collections.ICollection.SyncRoot
  name.vb: System.Collections.ICollection.SyncRoot
- uid: TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.System#Collections#Generic#IList{TBase}#Item(System.Int32)
  commentId: P:TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.System#Collections#Generic#IList{TBase}#Item(System.Int32)
  id: System#Collections#Generic#IList{TBase}#Item(System.Int32)
  isEii: true
  parent: TimeCockpit.Data.DataModel.CombinedModelCollectionView`3
  langs:
  - csharp
  - vb
  name: IList<TBase>.Item[Int32]
  nameWithType: CombinedModelCollectionView<TBase, TPrimary, TSecondary>.IList<TBase>.Item[Int32]
  fullName: TimeCockpit.Data.DataModel.CombinedModelCollectionView<TBase, TPrimary, TSecondary>.System.Collections.Generic.IList<TBase>.Item[System.Int32]
  type: Property
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/CombinedModelCollectionView.cs
    id: System.Collections.Generic.IList<TBase>.this[]
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/CombinedModelCollectionView.cs
    startLine: 108
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel
  summary: "\nGets or sets the element at the specified index (CURRENTLY NOT IMPLEMENTED!)\n"
  remarks: "This method is currently not implemented and therefore it always throws \na <xref href=\"System.NotImplementedException\" data-throw-if-not-resolved=\"false\"></xref>."
  example: []
  syntax:
    content: TBase IList<TBase>.this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: The zero-based index of the element to get or set (CURRENTLY NOT USED!).
    return:
      type: '{TBase}'
      description: The element at the specified index.
    content.vb: ReadOnly WriteOnly Property System.Collections.Generic.IList<TBase>.Item(index As Integer) As TBase Implements IList(Of TBase).this
  overload: TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.System#Collections#Generic#IList{TBase}#Item*
  exceptions:
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: Always thrown because property is currently not implemented.
  implements:
  - System.Collections.Generic.IList{{TBase}}.Item(System.Int32)
  nameWithType.vb: CombinedModelCollectionView(Of TBase, TPrimary, TSecondary).System.Collections.Generic.IList<TBase>.Item(Int32)
  modifiers.csharp:
  - get
  - set
  fullName.vb: TimeCockpit.Data.DataModel.CombinedModelCollectionView(Of TBase, TPrimary, TSecondary).System.Collections.Generic.IList<TBase>.Item(System.Int32)
  name.vb: System.Collections.Generic.IList<TBase>.Item(Int32)
- uid: TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.System#Collections#IList#Item(System.Int32)
  commentId: P:TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.System#Collections#IList#Item(System.Int32)
  id: System#Collections#IList#Item(System.Int32)
  isEii: true
  parent: TimeCockpit.Data.DataModel.CombinedModelCollectionView`3
  langs:
  - csharp
  - vb
  name: IList.Item[Int32]
  nameWithType: CombinedModelCollectionView<TBase, TPrimary, TSecondary>.IList.Item[Int32]
  fullName: TimeCockpit.Data.DataModel.CombinedModelCollectionView<TBase, TPrimary, TSecondary>.System.Collections.IList.Item[System.Int32]
  type: Property
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/CombinedModelCollectionView.cs
    id: System.Collections.IList.this[]
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/CombinedModelCollectionView.cs
    startLine: 129
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel
  summary: "\nGets or sets the element at the specified index (CURRENTLY NOT IMPLEMENTED!)\n"
  remarks: "This method is currently not implemented and therefore it always throws \na <xref href=\"System.NotImplementedException\" data-throw-if-not-resolved=\"false\"></xref>."
  example: []
  syntax:
    content: object IList.this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: The zero-based index of the element to get or set (CURRENTLY NOT USED!).
    return:
      type: System.Object
      description: The element at the specified index.
    content.vb: ReadOnly WriteOnly Property System.Collections.IList.Item(index As Integer) As Object Implements IList.this
  overload: TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.System#Collections#IList#Item*
  exceptions:
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: Always thrown because property is currently not implemented.
  implements:
  - System.Collections.IList.Item(System.Int32)
  nameWithType.vb: CombinedModelCollectionView(Of TBase, TPrimary, TSecondary).System.Collections.IList.Item(Int32)
  modifiers.csharp:
  - get
  - set
  fullName.vb: TimeCockpit.Data.DataModel.CombinedModelCollectionView(Of TBase, TPrimary, TSecondary).System.Collections.IList.Item(System.Int32)
  name.vb: System.Collections.IList.Item(Int32)
- uid: TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.Item(System.String)
  commentId: P:TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.Item(System.String)
  id: Item(System.String)
  parent: TimeCockpit.Data.DataModel.CombinedModelCollectionView`3
  langs:
  - csharp
  - vb
  name: Item[String]
  nameWithType: CombinedModelCollectionView<TBase, TPrimary, TSecondary>.Item[String]
  fullName: TimeCockpit.Data.DataModel.CombinedModelCollectionView<TBase, TPrimary, TSecondary>.Item[System.String]
  type: Property
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/CombinedModelCollectionView.cs
    id: this[]
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/CombinedModelCollectionView.cs
    startLine: 147
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel
  summary: "\nGets or sets the element with the specified key via TryGetValue.\n"
  example: []
  syntax:
    content: public TBase this[string key] { get; }
    parameters:
    - id: key
      type: System.String
      description: The key of the element to get.
    return:
      type: '{TBase}'
      description: The element with the specified key.
    content.vb: Public ReadOnly Property Item(key As String) As TBase
  overload: TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.Item*
  nameWithType.vb: CombinedModelCollectionView(Of TBase, TPrimary, TSecondary).Item(String)
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: TimeCockpit.Data.DataModel.CombinedModelCollectionView(Of TBase, TPrimary, TSecondary).Item(System.String)
  name.vb: Item(String)
- uid: TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.IndexOf(`0)
  commentId: M:TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.IndexOf(`0)
  id: IndexOf(`0)
  parent: TimeCockpit.Data.DataModel.CombinedModelCollectionView`3
  langs:
  - csharp
  - vb
  name: IndexOf(TBase)
  nameWithType: CombinedModelCollectionView<TBase, TPrimary, TSecondary>.IndexOf(TBase)
  fullName: TimeCockpit.Data.DataModel.CombinedModelCollectionView<TBase, TPrimary, TSecondary>.IndexOf(TBase)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/CombinedModelCollectionView.cs
    id: IndexOf
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/CombinedModelCollectionView.cs
    startLine: 163
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel
  example: []
  syntax:
    content: public int IndexOf(TBase item)
    parameters:
    - id: item
      type: '{TBase}'
    return:
      type: System.Int32
    content.vb: Public Function IndexOf(item As TBase) As Integer
  overload: TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.IndexOf*
  implements:
  - System.Collections.Generic.IList{{TBase}}.IndexOf({TBase})
  nameWithType.vb: CombinedModelCollectionView(Of TBase, TPrimary, TSecondary).IndexOf(TBase)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TimeCockpit.Data.DataModel.CombinedModelCollectionView(Of TBase, TPrimary, TSecondary).IndexOf(TBase)
- uid: TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.Insert(System.Int32,`0)
  commentId: M:TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.Insert(System.Int32,`0)
  id: Insert(System.Int32,`0)
  parent: TimeCockpit.Data.DataModel.CombinedModelCollectionView`3
  langs:
  - csharp
  - vb
  name: Insert(Int32, TBase)
  nameWithType: CombinedModelCollectionView<TBase, TPrimary, TSecondary>.Insert(Int32, TBase)
  fullName: TimeCockpit.Data.DataModel.CombinedModelCollectionView<TBase, TPrimary, TSecondary>.Insert(System.Int32, TBase)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/CombinedModelCollectionView.cs
    id: Insert
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/CombinedModelCollectionView.cs
    startLine: 169
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel
  example: []
  syntax:
    content: public void Insert(int index, TBase item)
    parameters:
    - id: index
      type: System.Int32
    - id: item
      type: '{TBase}'
    content.vb: Public Sub Insert(index As Integer, item As TBase)
  overload: TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.Insert*
  implements:
  - System.Collections.Generic.IList{{TBase}}.Insert(System.Int32,{TBase})
  nameWithType.vb: CombinedModelCollectionView(Of TBase, TPrimary, TSecondary).Insert(Int32, TBase)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TimeCockpit.Data.DataModel.CombinedModelCollectionView(Of TBase, TPrimary, TSecondary).Insert(System.Int32, TBase)
- uid: TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.RemoveAt(System.Int32)
  commentId: M:TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: TimeCockpit.Data.DataModel.CombinedModelCollectionView`3
  langs:
  - csharp
  - vb
  name: RemoveAt(Int32)
  nameWithType: CombinedModelCollectionView<TBase, TPrimary, TSecondary>.RemoveAt(Int32)
  fullName: TimeCockpit.Data.DataModel.CombinedModelCollectionView<TBase, TPrimary, TSecondary>.RemoveAt(System.Int32)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/CombinedModelCollectionView.cs
    id: RemoveAt
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/CombinedModelCollectionView.cs
    startLine: 175
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel
  example: []
  syntax:
    content: public void RemoveAt(int index)
    parameters:
    - id: index
      type: System.Int32
    content.vb: Public Sub RemoveAt(index As Integer)
  overload: TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.RemoveAt*
  implements:
  - System.Collections.Generic.IList{{TBase}}.RemoveAt(System.Int32)
  - System.Collections.IList.RemoveAt(System.Int32)
  nameWithType.vb: CombinedModelCollectionView(Of TBase, TPrimary, TSecondary).RemoveAt(Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TimeCockpit.Data.DataModel.CombinedModelCollectionView(Of TBase, TPrimary, TSecondary).RemoveAt(System.Int32)
- uid: TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.Add(`0)
  commentId: M:TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.Add(`0)
  id: Add(`0)
  parent: TimeCockpit.Data.DataModel.CombinedModelCollectionView`3
  langs:
  - csharp
  - vb
  name: Add(TBase)
  nameWithType: CombinedModelCollectionView<TBase, TPrimary, TSecondary>.Add(TBase)
  fullName: TimeCockpit.Data.DataModel.CombinedModelCollectionView<TBase, TPrimary, TSecondary>.Add(TBase)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/CombinedModelCollectionView.cs
    id: Add
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/CombinedModelCollectionView.cs
    startLine: 181
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel
  example: []
  syntax:
    content: public void Add(TBase item)
    parameters:
    - id: item
      type: '{TBase}'
    content.vb: Public Sub Add(item As TBase)
  overload: TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.Add*
  implements:
  - System.Collections.Generic.ICollection{{TBase}}.Add({TBase})
  nameWithType.vb: CombinedModelCollectionView(Of TBase, TPrimary, TSecondary).Add(TBase)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TimeCockpit.Data.DataModel.CombinedModelCollectionView(Of TBase, TPrimary, TSecondary).Add(TBase)
- uid: TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.Clear
  commentId: M:TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.Clear
  id: Clear
  parent: TimeCockpit.Data.DataModel.CombinedModelCollectionView`3
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: CombinedModelCollectionView<TBase, TPrimary, TSecondary>.Clear()
  fullName: TimeCockpit.Data.DataModel.CombinedModelCollectionView<TBase, TPrimary, TSecondary>.Clear()
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/CombinedModelCollectionView.cs
    id: Clear
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/CombinedModelCollectionView.cs
    startLine: 198
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel
  example: []
  syntax:
    content: public void Clear()
    content.vb: Public Sub Clear
  overload: TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.Clear*
  implements:
  - System.Collections.Generic.ICollection{{TBase}}.Clear
  - System.Collections.IList.Clear
  nameWithType.vb: CombinedModelCollectionView(Of TBase, TPrimary, TSecondary).Clear()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TimeCockpit.Data.DataModel.CombinedModelCollectionView(Of TBase, TPrimary, TSecondary).Clear()
- uid: TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.Contains(`0)
  commentId: M:TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.Contains(`0)
  id: Contains(`0)
  parent: TimeCockpit.Data.DataModel.CombinedModelCollectionView`3
  langs:
  - csharp
  - vb
  name: Contains(TBase)
  nameWithType: CombinedModelCollectionView<TBase, TPrimary, TSecondary>.Contains(TBase)
  fullName: TimeCockpit.Data.DataModel.CombinedModelCollectionView<TBase, TPrimary, TSecondary>.Contains(TBase)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/CombinedModelCollectionView.cs
    id: Contains
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/CombinedModelCollectionView.cs
    startLine: 204
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel
  example: []
  syntax:
    content: public bool Contains(TBase item)
    parameters:
    - id: item
      type: '{TBase}'
    return:
      type: System.Boolean
    content.vb: Public Function Contains(item As TBase) As Boolean
  overload: TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.Contains*
  implements:
  - System.Collections.Generic.ICollection{{TBase}}.Contains({TBase})
  nameWithType.vb: CombinedModelCollectionView(Of TBase, TPrimary, TSecondary).Contains(TBase)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TimeCockpit.Data.DataModel.CombinedModelCollectionView(Of TBase, TPrimary, TSecondary).Contains(TBase)
- uid: TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.Contains(System.String)
  commentId: M:TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.Contains(System.String)
  id: Contains(System.String)
  parent: TimeCockpit.Data.DataModel.CombinedModelCollectionView`3
  langs:
  - csharp
  - vb
  name: Contains(String)
  nameWithType: CombinedModelCollectionView<TBase, TPrimary, TSecondary>.Contains(String)
  fullName: TimeCockpit.Data.DataModel.CombinedModelCollectionView<TBase, TPrimary, TSecondary>.Contains(System.String)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/CombinedModelCollectionView.cs
    id: Contains
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/CombinedModelCollectionView.cs
    startLine: 226
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel
  summary: "\nDetermines whether the primary or secondary <xref href=\"TimeCockpit.Data.DataModel.ModelCollection%601\" data-throw-if-not-resolved=\"false\"></xref> contain a specific value.\n"
  example: []
  syntax:
    content: public bool Contains(string item)
    parameters:
    - id: item
      type: System.String
      description: The name of the object to locate in the <xref href="TimeCockpit.Data.DataModel.ModelCollection%601" data-throw-if-not-resolved="false"></xref>s.
    return:
      type: System.Boolean
      description: True if the item is found in the <xref href="TimeCockpit.Data.DataModel.ModelCollection%601" data-throw-if-not-resolved="false"></xref>s, otherwise false.
    content.vb: Public Function Contains(item As String) As Boolean
  overload: TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.Contains*
  nameWithType.vb: CombinedModelCollectionView(Of TBase, TPrimary, TSecondary).Contains(String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TimeCockpit.Data.DataModel.CombinedModelCollectionView(Of TBase, TPrimary, TSecondary).Contains(System.String)
- uid: TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.CopyTo(`0[],System.Int32)
  commentId: M:TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.CopyTo(`0[],System.Int32)
  id: CopyTo(`0[],System.Int32)
  parent: TimeCockpit.Data.DataModel.CombinedModelCollectionView`3
  langs:
  - csharp
  - vb
  name: CopyTo(TBase[], Int32)
  nameWithType: CombinedModelCollectionView<TBase, TPrimary, TSecondary>.CopyTo(TBase[], Int32)
  fullName: TimeCockpit.Data.DataModel.CombinedModelCollectionView<TBase, TPrimary, TSecondary>.CopyTo(TBase[], System.Int32)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/CombinedModelCollectionView.cs
    id: CopyTo
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/CombinedModelCollectionView.cs
    startLine: 232
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel
  example: []
  syntax:
    content: public void CopyTo(TBase[] array, int arrayIndex)
    parameters:
    - id: array
      type: '{TBase}[]'
    - id: arrayIndex
      type: System.Int32
    content.vb: Public Sub CopyTo(array As TBase(), arrayIndex As Integer)
  overload: TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.CopyTo*
  implements:
  - System.Collections.Generic.ICollection{{TBase}}.CopyTo({TBase}[],System.Int32)
  nameWithType.vb: CombinedModelCollectionView(Of TBase, TPrimary, TSecondary).CopyTo(TBase(), Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TimeCockpit.Data.DataModel.CombinedModelCollectionView(Of TBase, TPrimary, TSecondary).CopyTo(TBase(), System.Int32)
  name.vb: CopyTo(TBase(), Int32)
- uid: TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.Remove(`0)
  commentId: M:TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.Remove(`0)
  id: Remove(`0)
  parent: TimeCockpit.Data.DataModel.CombinedModelCollectionView`3
  langs:
  - csharp
  - vb
  name: Remove(TBase)
  nameWithType: CombinedModelCollectionView<TBase, TPrimary, TSecondary>.Remove(TBase)
  fullName: TimeCockpit.Data.DataModel.CombinedModelCollectionView<TBase, TPrimary, TSecondary>.Remove(TBase)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/CombinedModelCollectionView.cs
    id: Remove
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/CombinedModelCollectionView.cs
    startLine: 238
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel
  example: []
  syntax:
    content: public bool Remove(TBase item)
    parameters:
    - id: item
      type: '{TBase}'
    return:
      type: System.Boolean
    content.vb: Public Function Remove(item As TBase) As Boolean
  overload: TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.Remove*
  implements:
  - System.Collections.Generic.ICollection{{TBase}}.Remove({TBase})
  nameWithType.vb: CombinedModelCollectionView(Of TBase, TPrimary, TSecondary).Remove(TBase)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TimeCockpit.Data.DataModel.CombinedModelCollectionView(Of TBase, TPrimary, TSecondary).Remove(TBase)
- uid: TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.GetEnumerator
  commentId: M:TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.GetEnumerator
  id: GetEnumerator
  parent: TimeCockpit.Data.DataModel.CombinedModelCollectionView`3
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: CombinedModelCollectionView<TBase, TPrimary, TSecondary>.GetEnumerator()
  fullName: TimeCockpit.Data.DataModel.CombinedModelCollectionView<TBase, TPrimary, TSecondary>.GetEnumerator()
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/CombinedModelCollectionView.cs
    id: GetEnumerator
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/CombinedModelCollectionView.cs
    startLine: 244
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel
  example: []
  syntax:
    content: public IEnumerator<TBase> GetEnumerator()
    return:
      type: System.Collections.Generic.IEnumerator{{TBase}}
    content.vb: Public Function GetEnumerator As IEnumerator(Of TBase)
  overload: TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.GetEnumerator*
  implements:
  - System.Collections.Generic.IEnumerable{{TBase}}.GetEnumerator
  nameWithType.vb: CombinedModelCollectionView(Of TBase, TPrimary, TSecondary).GetEnumerator()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TimeCockpit.Data.DataModel.CombinedModelCollectionView(Of TBase, TPrimary, TSecondary).GetEnumerator()
- uid: TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.System#Collections#IEnumerable#GetEnumerator
  commentId: M:TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: TimeCockpit.Data.DataModel.CombinedModelCollectionView`3
  langs:
  - csharp
  - vb
  name: IEnumerable.GetEnumerator()
  nameWithType: CombinedModelCollectionView<TBase, TPrimary, TSecondary>.IEnumerable.GetEnumerator()
  fullName: TimeCockpit.Data.DataModel.CombinedModelCollectionView<TBase, TPrimary, TSecondary>.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/CombinedModelCollectionView.cs
    id: System.Collections.IEnumerable.GetEnumerator
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/CombinedModelCollectionView.cs
    startLine: 250
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel
  example: []
  syntax:
    content: IEnumerator IEnumerable.GetEnumerator()
    return:
      type: System.Collections.IEnumerator
    content.vb: Function System.Collections.IEnumerable.GetEnumerator As IEnumerator Implements IEnumerable.GetEnumerator
  overload: TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.System#Collections#IEnumerable#GetEnumerator*
  implements:
  - System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: CombinedModelCollectionView(Of TBase, TPrimary, TSecondary).System.Collections.IEnumerable.GetEnumerator()
  fullName.vb: TimeCockpit.Data.DataModel.CombinedModelCollectionView(Of TBase, TPrimary, TSecondary).System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
- uid: TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.Add(System.Object)
  commentId: M:TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.Add(System.Object)
  id: Add(System.Object)
  parent: TimeCockpit.Data.DataModel.CombinedModelCollectionView`3
  langs:
  - csharp
  - vb
  name: Add(Object)
  nameWithType: CombinedModelCollectionView<TBase, TPrimary, TSecondary>.Add(Object)
  fullName: TimeCockpit.Data.DataModel.CombinedModelCollectionView<TBase, TPrimary, TSecondary>.Add(System.Object)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/CombinedModelCollectionView.cs
    id: Add
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/CombinedModelCollectionView.cs
    startLine: 256
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel
  example: []
  syntax:
    content: public int Add(object value)
    parameters:
    - id: value
      type: System.Object
    return:
      type: System.Int32
    content.vb: Public Function Add(value As Object) As Integer
  overload: TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.Add*
  implements:
  - System.Collections.IList.Add(System.Object)
  nameWithType.vb: CombinedModelCollectionView(Of TBase, TPrimary, TSecondary).Add(Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TimeCockpit.Data.DataModel.CombinedModelCollectionView(Of TBase, TPrimary, TSecondary).Add(System.Object)
- uid: TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.System#Collections#IList#Contains(System.Object)
  commentId: M:TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.System#Collections#IList#Contains(System.Object)
  id: System#Collections#IList#Contains(System.Object)
  isEii: true
  parent: TimeCockpit.Data.DataModel.CombinedModelCollectionView`3
  langs:
  - csharp
  - vb
  name: IList.Contains(Object)
  nameWithType: CombinedModelCollectionView<TBase, TPrimary, TSecondary>.IList.Contains(Object)
  fullName: TimeCockpit.Data.DataModel.CombinedModelCollectionView<TBase, TPrimary, TSecondary>.System.Collections.IList.Contains(System.Object)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/CombinedModelCollectionView.cs
    id: System.Collections.IList.Contains
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/CombinedModelCollectionView.cs
    startLine: 262
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel
  example: []
  syntax:
    content: bool IList.Contains(object value)
    parameters:
    - id: value
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Function System.Collections.IList.Contains(value As Object) As Boolean Implements IList.Contains
  overload: TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.System#Collections#IList#Contains*
  implements:
  - System.Collections.IList.Contains(System.Object)
  nameWithType.vb: CombinedModelCollectionView(Of TBase, TPrimary, TSecondary).System.Collections.IList.Contains(Object)
  fullName.vb: TimeCockpit.Data.DataModel.CombinedModelCollectionView(Of TBase, TPrimary, TSecondary).System.Collections.IList.Contains(System.Object)
  name.vb: System.Collections.IList.Contains(Object)
- uid: TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.IndexOf(System.Object)
  commentId: M:TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.IndexOf(System.Object)
  id: IndexOf(System.Object)
  parent: TimeCockpit.Data.DataModel.CombinedModelCollectionView`3
  langs:
  - csharp
  - vb
  name: IndexOf(Object)
  nameWithType: CombinedModelCollectionView<TBase, TPrimary, TSecondary>.IndexOf(Object)
  fullName: TimeCockpit.Data.DataModel.CombinedModelCollectionView<TBase, TPrimary, TSecondary>.IndexOf(System.Object)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/CombinedModelCollectionView.cs
    id: IndexOf
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/CombinedModelCollectionView.cs
    startLine: 268
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel
  example: []
  syntax:
    content: public int IndexOf(object value)
    parameters:
    - id: value
      type: System.Object
    return:
      type: System.Int32
    content.vb: Public Function IndexOf(value As Object) As Integer
  overload: TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.IndexOf*
  implements:
  - System.Collections.IList.IndexOf(System.Object)
  nameWithType.vb: CombinedModelCollectionView(Of TBase, TPrimary, TSecondary).IndexOf(Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TimeCockpit.Data.DataModel.CombinedModelCollectionView(Of TBase, TPrimary, TSecondary).IndexOf(System.Object)
- uid: TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.Insert(System.Int32,System.Object)
  commentId: M:TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.Insert(System.Int32,System.Object)
  id: Insert(System.Int32,System.Object)
  parent: TimeCockpit.Data.DataModel.CombinedModelCollectionView`3
  langs:
  - csharp
  - vb
  name: Insert(Int32, Object)
  nameWithType: CombinedModelCollectionView<TBase, TPrimary, TSecondary>.Insert(Int32, Object)
  fullName: TimeCockpit.Data.DataModel.CombinedModelCollectionView<TBase, TPrimary, TSecondary>.Insert(System.Int32, System.Object)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/CombinedModelCollectionView.cs
    id: Insert
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/CombinedModelCollectionView.cs
    startLine: 274
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel
  example: []
  syntax:
    content: public void Insert(int index, object value)
    parameters:
    - id: index
      type: System.Int32
    - id: value
      type: System.Object
    content.vb: Public Sub Insert(index As Integer, value As Object)
  overload: TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.Insert*
  implements:
  - System.Collections.IList.Insert(System.Int32,System.Object)
  nameWithType.vb: CombinedModelCollectionView(Of TBase, TPrimary, TSecondary).Insert(Int32, Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TimeCockpit.Data.DataModel.CombinedModelCollectionView(Of TBase, TPrimary, TSecondary).Insert(System.Int32, System.Object)
- uid: TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.Remove(System.Object)
  commentId: M:TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.Remove(System.Object)
  id: Remove(System.Object)
  parent: TimeCockpit.Data.DataModel.CombinedModelCollectionView`3
  langs:
  - csharp
  - vb
  name: Remove(Object)
  nameWithType: CombinedModelCollectionView<TBase, TPrimary, TSecondary>.Remove(Object)
  fullName: TimeCockpit.Data.DataModel.CombinedModelCollectionView<TBase, TPrimary, TSecondary>.Remove(System.Object)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/CombinedModelCollectionView.cs
    id: Remove
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/CombinedModelCollectionView.cs
    startLine: 280
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel
  example: []
  syntax:
    content: public void Remove(object value)
    parameters:
    - id: value
      type: System.Object
    content.vb: Public Sub Remove(value As Object)
  overload: TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.Remove*
  implements:
  - System.Collections.IList.Remove(System.Object)
  nameWithType.vb: CombinedModelCollectionView(Of TBase, TPrimary, TSecondary).Remove(Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TimeCockpit.Data.DataModel.CombinedModelCollectionView(Of TBase, TPrimary, TSecondary).Remove(System.Object)
- uid: TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.TryGetValue(System.String,`0@)
  commentId: M:TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.TryGetValue(System.String,`0@)
  id: TryGetValue(System.String,`0@)
  parent: TimeCockpit.Data.DataModel.CombinedModelCollectionView`3
  langs:
  - csharp
  - vb
  name: TryGetValue(String, out TBase)
  nameWithType: CombinedModelCollectionView<TBase, TPrimary, TSecondary>.TryGetValue(String, out TBase)
  fullName: TimeCockpit.Data.DataModel.CombinedModelCollectionView<TBase, TPrimary, TSecondary>.TryGetValue(System.String, out TBase)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/CombinedModelCollectionView.cs
    id: TryGetValue
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/CombinedModelCollectionView.cs
    startLine: 293
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel
  summary: "\nGets the value associated with the specified key.\nThis method performs the lookup in the SYS, APP, USR order. It checks the primary collection first and then the secondary if there was no primary match!\n"
  example: []
  syntax:
    content: public bool TryGetValue(string key, out TBase value)
    parameters:
    - id: key
      type: System.String
      description: The key whose value to get.
    - id: value
      type: '{TBase}'
      description: "When this method returns, the value associated with the specified key, if the key is found; otherwise, the default value for the type of the value parameter. \nThis parameter is passed uninitialized."
    return:
      type: System.Boolean
      description: true if the object that implements <xref href="System.Collections.Generic.IDictionary%602" data-throw-if-not-resolved="false"></xref> contains an element with the specified key; otherwise, false.
    content.vb: Public Function TryGetValue(key As String, ByRef value As TBase) As Boolean
  overload: TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.TryGetValue*
  nameWithType.vb: CombinedModelCollectionView(Of TBase, TPrimary, TSecondary).TryGetValue(String, ByRef TBase)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TimeCockpit.Data.DataModel.CombinedModelCollectionView(Of TBase, TPrimary, TSecondary).TryGetValue(System.String, ByRef TBase)
  name.vb: TryGetValue(String, ByRef TBase)
- uid: TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.CopyTo(System.Array,System.Int32)
  commentId: M:TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: TimeCockpit.Data.DataModel.CombinedModelCollectionView`3
  langs:
  - csharp
  - vb
  name: CopyTo(Array, Int32)
  nameWithType: CombinedModelCollectionView<TBase, TPrimary, TSecondary>.CopyTo(Array, Int32)
  fullName: TimeCockpit.Data.DataModel.CombinedModelCollectionView<TBase, TPrimary, TSecondary>.CopyTo(System.Array, System.Int32)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/CombinedModelCollectionView.cs
    id: CopyTo
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/CombinedModelCollectionView.cs
    startLine: 314
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel
  example: []
  syntax:
    content: public void CopyTo(Array array, int index)
    parameters:
    - id: array
      type: System.Array
    - id: index
      type: System.Int32
    content.vb: Public Sub CopyTo(array As Array, index As Integer)
  overload: TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.CopyTo*
  implements:
  - System.Collections.ICollection.CopyTo(System.Array,System.Int32)
  nameWithType.vb: CombinedModelCollectionView(Of TBase, TPrimary, TSecondary).CopyTo(Array, Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TimeCockpit.Data.DataModel.CombinedModelCollectionView(Of TBase, TPrimary, TSecondary).CopyTo(System.Array, System.Int32)
references:
- uid: TimeCockpit.Data.DataModel
  commentId: N:TimeCockpit.Data.DataModel
  isExternal: false
  name: TimeCockpit.Data.DataModel
  nameWithType: TimeCockpit.Data.DataModel
  fullName: TimeCockpit.Data.DataModel
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.Generic.IList{{TBase}}
  commentId: T:System.Collections.Generic.IList{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<TBase>
  nameWithType: IList<TBase>
  fullName: System.Collections.Generic.IList<TBase>
  nameWithType.vb: IList(Of TBase)
  fullName.vb: System.Collections.Generic.IList(Of TBase)
  name.vb: IList(Of TBase)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TBase
    nameWithType: TBase
    fullName: TBase
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TBase
    nameWithType: TBase
    fullName: TBase
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection{{TBase}}
  commentId: T:System.Collections.Generic.ICollection{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<TBase>
  nameWithType: ICollection<TBase>
  fullName: System.Collections.Generic.ICollection<TBase>
  nameWithType.vb: ICollection(Of TBase)
  fullName.vb: System.Collections.Generic.ICollection(Of TBase)
  name.vb: ICollection(Of TBase)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TBase
    nameWithType: TBase
    fullName: TBase
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TBase
    nameWithType: TBase
    fullName: TBase
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{{TBase}}
  commentId: T:System.Collections.Generic.IEnumerable{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<TBase>
  nameWithType: IEnumerable<TBase>
  fullName: System.Collections.Generic.IEnumerable<TBase>
  nameWithType.vb: IEnumerable(Of TBase)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TBase)
  name.vb: IEnumerable(Of TBase)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TBase
    nameWithType: TBase
    fullName: TBase
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TBase
    nameWithType: TBase
    fullName: TBase
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IList
  commentId: T:System.Collections.IList
  parent: System.Collections
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Collections.ICollection
  commentId: T:System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: false
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.#ctor*
  commentId: Overload:TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.#ctor
  isExternal: false
  name: CombinedModelCollectionView
  nameWithType: CombinedModelCollectionView<TBase, TPrimary, TSecondary>.CombinedModelCollectionView
  fullName: TimeCockpit.Data.DataModel.CombinedModelCollectionView<TBase, TPrimary, TSecondary>.CombinedModelCollectionView
  nameWithType.vb: CombinedModelCollectionView(Of TBase, TPrimary, TSecondary).CombinedModelCollectionView
  fullName.vb: TimeCockpit.Data.DataModel.CombinedModelCollectionView(Of TBase, TPrimary, TSecondary).CombinedModelCollectionView
- uid: TimeCockpit.Data.DataModel.ModelCollection{{TPrimary}}
  commentId: T:TimeCockpit.Data.DataModel.ModelCollection{`1}
  parent: TimeCockpit.Data.DataModel
  definition: TimeCockpit.Data.DataModel.ModelCollection`1
  name: ModelCollection<TPrimary>
  nameWithType: ModelCollection<TPrimary>
  fullName: TimeCockpit.Data.DataModel.ModelCollection<TPrimary>
  nameWithType.vb: ModelCollection(Of TPrimary)
  fullName.vb: TimeCockpit.Data.DataModel.ModelCollection(Of TPrimary)
  name.vb: ModelCollection(Of TPrimary)
  spec.csharp:
  - uid: TimeCockpit.Data.DataModel.ModelCollection`1
    name: ModelCollection
    nameWithType: ModelCollection
    fullName: TimeCockpit.Data.DataModel.ModelCollection
  - name: <
    nameWithType: <
    fullName: <
  - name: TPrimary
    nameWithType: TPrimary
    fullName: TPrimary
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: TimeCockpit.Data.DataModel.ModelCollection`1
    name: ModelCollection
    nameWithType: ModelCollection
    fullName: TimeCockpit.Data.DataModel.ModelCollection
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TPrimary
    nameWithType: TPrimary
    fullName: TPrimary
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.DataModel.ModelCollection{{TSecondary}}
  commentId: T:TimeCockpit.Data.DataModel.ModelCollection{`2}
  parent: TimeCockpit.Data.DataModel
  definition: TimeCockpit.Data.DataModel.ModelCollection`1
  name: ModelCollection<TSecondary>
  nameWithType: ModelCollection<TSecondary>
  fullName: TimeCockpit.Data.DataModel.ModelCollection<TSecondary>
  nameWithType.vb: ModelCollection(Of TSecondary)
  fullName.vb: TimeCockpit.Data.DataModel.ModelCollection(Of TSecondary)
  name.vb: ModelCollection(Of TSecondary)
  spec.csharp:
  - uid: TimeCockpit.Data.DataModel.ModelCollection`1
    name: ModelCollection
    nameWithType: ModelCollection
    fullName: TimeCockpit.Data.DataModel.ModelCollection
  - name: <
    nameWithType: <
    fullName: <
  - name: TSecondary
    nameWithType: TSecondary
    fullName: TSecondary
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: TimeCockpit.Data.DataModel.ModelCollection`1
    name: ModelCollection
    nameWithType: ModelCollection
    fullName: TimeCockpit.Data.DataModel.ModelCollection
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSecondary
    nameWithType: TSecondary
    fullName: TSecondary
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.DataModel.ModelCollection`1
  commentId: T:TimeCockpit.Data.DataModel.ModelCollection`1
  isExternal: false
  name: ModelCollection<T>
  nameWithType: ModelCollection<T>
  fullName: TimeCockpit.Data.DataModel.ModelCollection<T>
  nameWithType.vb: ModelCollection(Of T)
  fullName.vb: TimeCockpit.Data.DataModel.ModelCollection(Of T)
  name.vb: ModelCollection(Of T)
  spec.csharp:
  - uid: TimeCockpit.Data.DataModel.ModelCollection`1
    name: ModelCollection
    nameWithType: ModelCollection
    fullName: TimeCockpit.Data.DataModel.ModelCollection
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: TimeCockpit.Data.DataModel.ModelCollection`1
    name: ModelCollection
    nameWithType: ModelCollection
    fullName: TimeCockpit.Data.DataModel.ModelCollection
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.Count*
  commentId: Overload:TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.Count
  isExternal: false
  name: Count
  nameWithType: CombinedModelCollectionView<TBase, TPrimary, TSecondary>.Count
  fullName: TimeCockpit.Data.DataModel.CombinedModelCollectionView<TBase, TPrimary, TSecondary>.Count
  nameWithType.vb: CombinedModelCollectionView(Of TBase, TPrimary, TSecondary).Count
  fullName.vb: TimeCockpit.Data.DataModel.CombinedModelCollectionView(Of TBase, TPrimary, TSecondary).Count
- uid: System.Collections.Generic.ICollection{{TBase}}.Count
  commentId: P:System.Collections.Generic.ICollection{`0}.Count
  parent: System.Collections.Generic.ICollection{{TBase}}
  definition: System.Collections.Generic.ICollection`1.Count
  name: Count
  nameWithType: ICollection<TBase>.Count
  fullName: System.Collections.Generic.ICollection<TBase>.Count
  nameWithType.vb: ICollection(Of TBase).Count
  fullName.vb: System.Collections.Generic.ICollection(Of TBase).Count
- uid: System.Collections.ICollection.Count
  commentId: P:System.Collections.ICollection.Count
  parent: System.Collections.ICollection
  isExternal: true
  name: Count
  nameWithType: ICollection.Count
  fullName: System.Collections.ICollection.Count
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Generic.ICollection`1.Count
  commentId: P:System.Collections.Generic.ICollection`1.Count
  isExternal: true
  name: Count
  nameWithType: ICollection<T>.Count
  fullName: System.Collections.Generic.ICollection<T>.Count
  nameWithType.vb: ICollection(Of T).Count
  fullName.vb: System.Collections.Generic.ICollection(Of T).Count
- uid: TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.IsReadOnly*
  commentId: Overload:TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.IsReadOnly
  isExternal: false
  name: IsReadOnly
  nameWithType: CombinedModelCollectionView<TBase, TPrimary, TSecondary>.IsReadOnly
  fullName: TimeCockpit.Data.DataModel.CombinedModelCollectionView<TBase, TPrimary, TSecondary>.IsReadOnly
  nameWithType.vb: CombinedModelCollectionView(Of TBase, TPrimary, TSecondary).IsReadOnly
  fullName.vb: TimeCockpit.Data.DataModel.CombinedModelCollectionView(Of TBase, TPrimary, TSecondary).IsReadOnly
- uid: System.Collections.Generic.ICollection{{TBase}}.IsReadOnly
  commentId: P:System.Collections.Generic.ICollection{`0}.IsReadOnly
  parent: System.Collections.Generic.ICollection{{TBase}}
  definition: System.Collections.Generic.ICollection`1.IsReadOnly
  name: IsReadOnly
  nameWithType: ICollection<TBase>.IsReadOnly
  fullName: System.Collections.Generic.ICollection<TBase>.IsReadOnly
  nameWithType.vb: ICollection(Of TBase).IsReadOnly
  fullName.vb: System.Collections.Generic.ICollection(Of TBase).IsReadOnly
- uid: System.Collections.IList.IsReadOnly
  commentId: P:System.Collections.IList.IsReadOnly
  parent: System.Collections.IList
  isExternal: true
  name: IsReadOnly
  nameWithType: IList.IsReadOnly
  fullName: System.Collections.IList.IsReadOnly
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.ICollection`1.IsReadOnly
  commentId: P:System.Collections.Generic.ICollection`1.IsReadOnly
  isExternal: true
  name: IsReadOnly
  nameWithType: ICollection<T>.IsReadOnly
  fullName: System.Collections.Generic.ICollection<T>.IsReadOnly
  nameWithType.vb: ICollection(Of T).IsReadOnly
  fullName.vb: System.Collections.Generic.ICollection(Of T).IsReadOnly
- uid: TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.IsSynchronized*
  commentId: Overload:TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.IsSynchronized
  isExternal: false
  name: IsSynchronized
  nameWithType: CombinedModelCollectionView<TBase, TPrimary, TSecondary>.IsSynchronized
  fullName: TimeCockpit.Data.DataModel.CombinedModelCollectionView<TBase, TPrimary, TSecondary>.IsSynchronized
  nameWithType.vb: CombinedModelCollectionView(Of TBase, TPrimary, TSecondary).IsSynchronized
  fullName.vb: TimeCockpit.Data.DataModel.CombinedModelCollectionView(Of TBase, TPrimary, TSecondary).IsSynchronized
- uid: System.Collections.ICollection.IsSynchronized
  commentId: P:System.Collections.ICollection.IsSynchronized
  parent: System.Collections.ICollection
  isExternal: true
  name: IsSynchronized
  nameWithType: ICollection.IsSynchronized
  fullName: System.Collections.ICollection.IsSynchronized
- uid: TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.IsFixedSize*
  commentId: Overload:TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.IsFixedSize
  isExternal: false
  name: IsFixedSize
  nameWithType: CombinedModelCollectionView<TBase, TPrimary, TSecondary>.IsFixedSize
  fullName: TimeCockpit.Data.DataModel.CombinedModelCollectionView<TBase, TPrimary, TSecondary>.IsFixedSize
  nameWithType.vb: CombinedModelCollectionView(Of TBase, TPrimary, TSecondary).IsFixedSize
  fullName.vb: TimeCockpit.Data.DataModel.CombinedModelCollectionView(Of TBase, TPrimary, TSecondary).IsFixedSize
- uid: System.Collections.IList.IsFixedSize
  commentId: P:System.Collections.IList.IsFixedSize
  parent: System.Collections.IList
  isExternal: true
  name: IsFixedSize
  nameWithType: IList.IsFixedSize
  fullName: System.Collections.IList.IsFixedSize
- uid: TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.System#Collections#ICollection#SyncRoot*
  commentId: Overload:TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.System#Collections#ICollection#SyncRoot
  isExternal: false
  name: ICollection.SyncRoot
  nameWithType: CombinedModelCollectionView<TBase, TPrimary, TSecondary>.ICollection.SyncRoot
  fullName: TimeCockpit.Data.DataModel.CombinedModelCollectionView<TBase, TPrimary, TSecondary>.System.Collections.ICollection.SyncRoot
  nameWithType.vb: CombinedModelCollectionView(Of TBase, TPrimary, TSecondary).System.Collections.ICollection.SyncRoot
  fullName.vb: TimeCockpit.Data.DataModel.CombinedModelCollectionView(Of TBase, TPrimary, TSecondary).System.Collections.ICollection.SyncRoot
  name.vb: System.Collections.ICollection.SyncRoot
- uid: System.Collections.ICollection.SyncRoot
  commentId: P:System.Collections.ICollection.SyncRoot
  parent: System.Collections.ICollection
  isExternal: true
  name: SyncRoot
  nameWithType: ICollection.SyncRoot
  fullName: System.Collections.ICollection.SyncRoot
- uid: System.NotImplementedException
  commentId: T:System.NotImplementedException
- uid: TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.System#Collections#Generic#IList{TBase}#Item*
  commentId: Overload:TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.System#Collections#Generic#IList{TBase}#Item
  isExternal: false
  name: IList<TBase>.Item
  nameWithType: CombinedModelCollectionView<TBase, TPrimary, TSecondary>.IList<TBase>.Item
  fullName: TimeCockpit.Data.DataModel.CombinedModelCollectionView<TBase, TPrimary, TSecondary>.System.Collections.Generic.IList<TBase>.Item
  nameWithType.vb: CombinedModelCollectionView(Of TBase, TPrimary, TSecondary).System.Collections.Generic.IList<TBase>.Item
  fullName.vb: TimeCockpit.Data.DataModel.CombinedModelCollectionView(Of TBase, TPrimary, TSecondary).System.Collections.Generic.IList<TBase>.Item
  name.vb: System.Collections.Generic.IList<TBase>.Item
- uid: System.Collections.Generic.IList{{TBase}}.Item(System.Int32)
  commentId: P:System.Collections.Generic.IList{`0}.Item(System.Int32)
  parent: System.Collections.Generic.IList{{TBase}}
  definition: System.Collections.Generic.IList`1.Item(System.Int32)
  name: Item[Int32]
  nameWithType: IList<TBase>.Item[Int32]
  fullName: System.Collections.Generic.IList<TBase>.Item[System.Int32]
  nameWithType.vb: IList(Of TBase).Item(Int32)
  fullName.vb: System.Collections.Generic.IList(Of TBase).Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.Item(System.Int32)
    name: Item
    nameWithType: IList<TBase>.Item
    fullName: System.Collections.Generic.IList<TBase>.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.Generic.IList`1.Item(System.Int32)
    name: Item
    nameWithType: IList(Of TBase).Item
    fullName: System.Collections.Generic.IList(Of TBase).Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: '{TBase}'
  commentId: '!:TBase'
  definition: TBase
  name: TBase
  nameWithType: TBase
  fullName: TBase
- uid: System.Collections.Generic.IList`1.Item(System.Int32)
  commentId: P:System.Collections.Generic.IList`1.Item(System.Int32)
  isExternal: true
  name: Item[Int32]
  nameWithType: IList<T>.Item[Int32]
  fullName: System.Collections.Generic.IList<T>.Item[System.Int32]
  nameWithType.vb: IList(Of T).Item(Int32)
  fullName.vb: System.Collections.Generic.IList(Of T).Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.Item(System.Int32)
    name: Item
    nameWithType: IList<T>.Item
    fullName: System.Collections.Generic.IList<T>.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.Generic.IList`1.Item(System.Int32)
    name: Item
    nameWithType: IList(Of T).Item
    fullName: System.Collections.Generic.IList(Of T).Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TBase
  isExternal: false
  name: TBase
  nameWithType: TBase
  fullName: TBase
- uid: TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.System#Collections#IList#Item*
  commentId: Overload:TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.System#Collections#IList#Item
  isExternal: false
  name: IList.Item
  nameWithType: CombinedModelCollectionView<TBase, TPrimary, TSecondary>.IList.Item
  fullName: TimeCockpit.Data.DataModel.CombinedModelCollectionView<TBase, TPrimary, TSecondary>.System.Collections.IList.Item
  nameWithType.vb: CombinedModelCollectionView(Of TBase, TPrimary, TSecondary).System.Collections.IList.Item
  fullName.vb: TimeCockpit.Data.DataModel.CombinedModelCollectionView(Of TBase, TPrimary, TSecondary).System.Collections.IList.Item
  name.vb: System.Collections.IList.Item
- uid: System.Collections.IList.Item(System.Int32)
  commentId: P:System.Collections.IList.Item(System.Int32)
  parent: System.Collections.IList
  isExternal: true
  name: Item[Int32]
  nameWithType: IList.Item[Int32]
  fullName: System.Collections.IList.Item[System.Int32]
  nameWithType.vb: IList.Item(Int32)
  fullName.vb: System.Collections.IList.Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: System.Collections.IList.Item(System.Int32)
    name: Item
    nameWithType: IList.Item
    fullName: System.Collections.IList.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.IList.Item(System.Int32)
    name: Item
    nameWithType: IList.Item
    fullName: System.Collections.IList.Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.Item*
  commentId: Overload:TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.Item
  isExternal: false
  name: Item
  nameWithType: CombinedModelCollectionView<TBase, TPrimary, TSecondary>.Item
  fullName: TimeCockpit.Data.DataModel.CombinedModelCollectionView<TBase, TPrimary, TSecondary>.Item
  nameWithType.vb: CombinedModelCollectionView(Of TBase, TPrimary, TSecondary).Item
  fullName.vb: TimeCockpit.Data.DataModel.CombinedModelCollectionView(Of TBase, TPrimary, TSecondary).Item
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.IndexOf*
  commentId: Overload:TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.IndexOf
  isExternal: false
  name: IndexOf
  nameWithType: CombinedModelCollectionView<TBase, TPrimary, TSecondary>.IndexOf
  fullName: TimeCockpit.Data.DataModel.CombinedModelCollectionView<TBase, TPrimary, TSecondary>.IndexOf
  nameWithType.vb: CombinedModelCollectionView(Of TBase, TPrimary, TSecondary).IndexOf
  fullName.vb: TimeCockpit.Data.DataModel.CombinedModelCollectionView(Of TBase, TPrimary, TSecondary).IndexOf
- uid: System.Collections.Generic.IList{{TBase}}.IndexOf({TBase})
  commentId: M:System.Collections.Generic.IList{`0}.IndexOf(`0)
  parent: System.Collections.Generic.IList{{TBase}}
  definition: System.Collections.Generic.IList`1.IndexOf(`0)
  name: IndexOf(TBase)
  nameWithType: IList<TBase>.IndexOf(TBase)
  fullName: System.Collections.Generic.IList<TBase>.IndexOf(TBase)
  nameWithType.vb: IList(Of TBase).IndexOf(TBase)
  fullName.vb: System.Collections.Generic.IList(Of TBase).IndexOf(TBase)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.IndexOf(`0)
    name: IndexOf
    nameWithType: IList<TBase>.IndexOf
    fullName: System.Collections.Generic.IList<TBase>.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TBase
    nameWithType: TBase
    fullName: TBase
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IList`1.IndexOf(`0)
    name: IndexOf
    nameWithType: IList(Of TBase).IndexOf
    fullName: System.Collections.Generic.IList(Of TBase).IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TBase
    nameWithType: TBase
    fullName: TBase
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1.IndexOf(`0)
  commentId: M:System.Collections.Generic.IList`1.IndexOf(`0)
  isExternal: true
  name: IndexOf(T)
  nameWithType: IList<T>.IndexOf(T)
  fullName: System.Collections.Generic.IList<T>.IndexOf(T)
  nameWithType.vb: IList(Of T).IndexOf(T)
  fullName.vb: System.Collections.Generic.IList(Of T).IndexOf(T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.IndexOf(`0)
    name: IndexOf
    nameWithType: IList<T>.IndexOf
    fullName: System.Collections.Generic.IList<T>.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IList`1.IndexOf(`0)
    name: IndexOf
    nameWithType: IList(Of T).IndexOf
    fullName: System.Collections.Generic.IList(Of T).IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.Insert*
  commentId: Overload:TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.Insert
  isExternal: false
  name: Insert
  nameWithType: CombinedModelCollectionView<TBase, TPrimary, TSecondary>.Insert
  fullName: TimeCockpit.Data.DataModel.CombinedModelCollectionView<TBase, TPrimary, TSecondary>.Insert
  nameWithType.vb: CombinedModelCollectionView(Of TBase, TPrimary, TSecondary).Insert
  fullName.vb: TimeCockpit.Data.DataModel.CombinedModelCollectionView(Of TBase, TPrimary, TSecondary).Insert
- uid: System.Collections.Generic.IList{{TBase}}.Insert(System.Int32,{TBase})
  commentId: M:System.Collections.Generic.IList{`0}.Insert(System.Int32,`0)
  parent: System.Collections.Generic.IList{{TBase}}
  definition: System.Collections.Generic.IList`1.Insert(System.Int32,`0)
  name: Insert(Int32, TBase)
  nameWithType: IList<TBase>.Insert(Int32, TBase)
  fullName: System.Collections.Generic.IList<TBase>.Insert(System.Int32, TBase)
  nameWithType.vb: IList(Of TBase).Insert(Int32, TBase)
  fullName.vb: System.Collections.Generic.IList(Of TBase).Insert(System.Int32, TBase)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: IList<TBase>.Insert
    fullName: System.Collections.Generic.IList<TBase>.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TBase
    nameWithType: TBase
    fullName: TBase
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IList`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: IList(Of TBase).Insert
    fullName: System.Collections.Generic.IList(Of TBase).Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TBase
    nameWithType: TBase
    fullName: TBase
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1.Insert(System.Int32,`0)
  commentId: M:System.Collections.Generic.IList`1.Insert(System.Int32,`0)
  isExternal: true
  name: Insert(Int32, T)
  nameWithType: IList<T>.Insert(Int32, T)
  fullName: System.Collections.Generic.IList<T>.Insert(System.Int32, T)
  nameWithType.vb: IList(Of T).Insert(Int32, T)
  fullName.vb: System.Collections.Generic.IList(Of T).Insert(System.Int32, T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: IList<T>.Insert
    fullName: System.Collections.Generic.IList<T>.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IList`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: IList(Of T).Insert
    fullName: System.Collections.Generic.IList(Of T).Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.RemoveAt*
  commentId: Overload:TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.RemoveAt
  isExternal: false
  name: RemoveAt
  nameWithType: CombinedModelCollectionView<TBase, TPrimary, TSecondary>.RemoveAt
  fullName: TimeCockpit.Data.DataModel.CombinedModelCollectionView<TBase, TPrimary, TSecondary>.RemoveAt
  nameWithType.vb: CombinedModelCollectionView(Of TBase, TPrimary, TSecondary).RemoveAt
  fullName.vb: TimeCockpit.Data.DataModel.CombinedModelCollectionView(Of TBase, TPrimary, TSecondary).RemoveAt
- uid: System.Collections.Generic.IList{{TBase}}.RemoveAt(System.Int32)
  commentId: M:System.Collections.Generic.IList{`0}.RemoveAt(System.Int32)
  parent: System.Collections.Generic.IList{{TBase}}
  definition: System.Collections.Generic.IList`1.RemoveAt(System.Int32)
  name: RemoveAt(Int32)
  nameWithType: IList<TBase>.RemoveAt(Int32)
  fullName: System.Collections.Generic.IList<TBase>.RemoveAt(System.Int32)
  nameWithType.vb: IList(Of TBase).RemoveAt(Int32)
  fullName.vb: System.Collections.Generic.IList(Of TBase).RemoveAt(System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: IList<TBase>.RemoveAt
    fullName: System.Collections.Generic.IList<TBase>.RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IList`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: IList(Of TBase).RemoveAt
    fullName: System.Collections.Generic.IList(Of TBase).RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IList.RemoveAt(System.Int32)
  commentId: M:System.Collections.IList.RemoveAt(System.Int32)
  parent: System.Collections.IList
  isExternal: true
  name: RemoveAt(Int32)
  nameWithType: IList.RemoveAt(Int32)
  fullName: System.Collections.IList.RemoveAt(System.Int32)
  spec.csharp:
  - uid: System.Collections.IList.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: IList.RemoveAt
    fullName: System.Collections.IList.RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IList.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: IList.RemoveAt
    fullName: System.Collections.IList.RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1.RemoveAt(System.Int32)
  commentId: M:System.Collections.Generic.IList`1.RemoveAt(System.Int32)
  isExternal: true
  name: RemoveAt(Int32)
  nameWithType: IList<T>.RemoveAt(Int32)
  fullName: System.Collections.Generic.IList<T>.RemoveAt(System.Int32)
  nameWithType.vb: IList(Of T).RemoveAt(Int32)
  fullName.vb: System.Collections.Generic.IList(Of T).RemoveAt(System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: IList<T>.RemoveAt
    fullName: System.Collections.Generic.IList<T>.RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IList`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: IList(Of T).RemoveAt
    fullName: System.Collections.Generic.IList(Of T).RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.Add*
  commentId: Overload:TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.Add
  isExternal: false
  name: Add
  nameWithType: CombinedModelCollectionView<TBase, TPrimary, TSecondary>.Add
  fullName: TimeCockpit.Data.DataModel.CombinedModelCollectionView<TBase, TPrimary, TSecondary>.Add
  nameWithType.vb: CombinedModelCollectionView(Of TBase, TPrimary, TSecondary).Add
  fullName.vb: TimeCockpit.Data.DataModel.CombinedModelCollectionView(Of TBase, TPrimary, TSecondary).Add
- uid: System.Collections.Generic.ICollection{{TBase}}.Add({TBase})
  commentId: M:System.Collections.Generic.ICollection{`0}.Add(`0)
  parent: System.Collections.Generic.ICollection{{TBase}}
  definition: System.Collections.Generic.ICollection`1.Add(`0)
  name: Add(TBase)
  nameWithType: ICollection<TBase>.Add(TBase)
  fullName: System.Collections.Generic.ICollection<TBase>.Add(TBase)
  nameWithType.vb: ICollection(Of TBase).Add(TBase)
  fullName.vb: System.Collections.Generic.ICollection(Of TBase).Add(TBase)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    nameWithType: ICollection<TBase>.Add
    fullName: System.Collections.Generic.ICollection<TBase>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TBase
    nameWithType: TBase
    fullName: TBase
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    nameWithType: ICollection(Of TBase).Add
    fullName: System.Collections.Generic.ICollection(Of TBase).Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TBase
    nameWithType: TBase
    fullName: TBase
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1.Add(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Add(`0)
  isExternal: true
  name: Add(T)
  nameWithType: ICollection<T>.Add(T)
  fullName: System.Collections.Generic.ICollection<T>.Add(T)
  nameWithType.vb: ICollection(Of T).Add(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Add(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    nameWithType: ICollection<T>.Add
    fullName: System.Collections.Generic.ICollection<T>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    nameWithType: ICollection(Of T).Add
    fullName: System.Collections.Generic.ICollection(Of T).Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.Clear*
  commentId: Overload:TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.Clear
  isExternal: false
  name: Clear
  nameWithType: CombinedModelCollectionView<TBase, TPrimary, TSecondary>.Clear
  fullName: TimeCockpit.Data.DataModel.CombinedModelCollectionView<TBase, TPrimary, TSecondary>.Clear
  nameWithType.vb: CombinedModelCollectionView(Of TBase, TPrimary, TSecondary).Clear
  fullName.vb: TimeCockpit.Data.DataModel.CombinedModelCollectionView(Of TBase, TPrimary, TSecondary).Clear
- uid: System.Collections.Generic.ICollection{{TBase}}.Clear
  commentId: M:System.Collections.Generic.ICollection{`0}.Clear
  parent: System.Collections.Generic.ICollection{{TBase}}
  definition: System.Collections.Generic.ICollection`1.Clear
  name: Clear()
  nameWithType: ICollection<TBase>.Clear()
  fullName: System.Collections.Generic.ICollection<TBase>.Clear()
  nameWithType.vb: ICollection(Of TBase).Clear()
  fullName.vb: System.Collections.Generic.ICollection(Of TBase).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    nameWithType: ICollection<TBase>.Clear
    fullName: System.Collections.Generic.ICollection<TBase>.Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    nameWithType: ICollection(Of TBase).Clear
    fullName: System.Collections.Generic.ICollection(Of TBase).Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IList.Clear
  commentId: M:System.Collections.IList.Clear
  parent: System.Collections.IList
  isExternal: true
  name: Clear()
  nameWithType: IList.Clear()
  fullName: System.Collections.IList.Clear()
  spec.csharp:
  - uid: System.Collections.IList.Clear
    name: Clear
    nameWithType: IList.Clear
    fullName: System.Collections.IList.Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IList.Clear
    name: Clear
    nameWithType: IList.Clear
    fullName: System.Collections.IList.Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1.Clear
  commentId: M:System.Collections.Generic.ICollection`1.Clear
  isExternal: true
  name: Clear()
  nameWithType: ICollection<T>.Clear()
  fullName: System.Collections.Generic.ICollection<T>.Clear()
  nameWithType.vb: ICollection(Of T).Clear()
  fullName.vb: System.Collections.Generic.ICollection(Of T).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    nameWithType: ICollection<T>.Clear
    fullName: System.Collections.Generic.ICollection<T>.Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    nameWithType: ICollection(Of T).Clear
    fullName: System.Collections.Generic.ICollection(Of T).Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.Contains*
  commentId: Overload:TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.Contains
  isExternal: false
  name: Contains
  nameWithType: CombinedModelCollectionView<TBase, TPrimary, TSecondary>.Contains
  fullName: TimeCockpit.Data.DataModel.CombinedModelCollectionView<TBase, TPrimary, TSecondary>.Contains
  nameWithType.vb: CombinedModelCollectionView(Of TBase, TPrimary, TSecondary).Contains
  fullName.vb: TimeCockpit.Data.DataModel.CombinedModelCollectionView(Of TBase, TPrimary, TSecondary).Contains
- uid: System.Collections.Generic.ICollection{{TBase}}.Contains({TBase})
  commentId: M:System.Collections.Generic.ICollection{`0}.Contains(`0)
  parent: System.Collections.Generic.ICollection{{TBase}}
  definition: System.Collections.Generic.ICollection`1.Contains(`0)
  name: Contains(TBase)
  nameWithType: ICollection<TBase>.Contains(TBase)
  fullName: System.Collections.Generic.ICollection<TBase>.Contains(TBase)
  nameWithType.vb: ICollection(Of TBase).Contains(TBase)
  fullName.vb: System.Collections.Generic.ICollection(Of TBase).Contains(TBase)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    nameWithType: ICollection<TBase>.Contains
    fullName: System.Collections.Generic.ICollection<TBase>.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TBase
    nameWithType: TBase
    fullName: TBase
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    nameWithType: ICollection(Of TBase).Contains
    fullName: System.Collections.Generic.ICollection(Of TBase).Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TBase
    nameWithType: TBase
    fullName: TBase
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1.Contains(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Contains(`0)
  isExternal: true
  name: Contains(T)
  nameWithType: ICollection<T>.Contains(T)
  fullName: System.Collections.Generic.ICollection<T>.Contains(T)
  nameWithType.vb: ICollection(Of T).Contains(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Contains(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    nameWithType: ICollection<T>.Contains
    fullName: System.Collections.Generic.ICollection<T>.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    nameWithType: ICollection(Of T).Contains
    fullName: System.Collections.Generic.ICollection(Of T).Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.CopyTo*
  commentId: Overload:TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.CopyTo
  isExternal: false
  name: CopyTo
  nameWithType: CombinedModelCollectionView<TBase, TPrimary, TSecondary>.CopyTo
  fullName: TimeCockpit.Data.DataModel.CombinedModelCollectionView<TBase, TPrimary, TSecondary>.CopyTo
  nameWithType.vb: CombinedModelCollectionView(Of TBase, TPrimary, TSecondary).CopyTo
  fullName.vb: TimeCockpit.Data.DataModel.CombinedModelCollectionView(Of TBase, TPrimary, TSecondary).CopyTo
- uid: System.Collections.Generic.ICollection{{TBase}}.CopyTo({TBase}[],System.Int32)
  commentId: M:System.Collections.Generic.ICollection{`0}.CopyTo(`0[],System.Int32)
  parent: System.Collections.Generic.ICollection{{TBase}}
  definition: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  name: CopyTo(TBase[], Int32)
  nameWithType: ICollection<TBase>.CopyTo(TBase[], Int32)
  fullName: System.Collections.Generic.ICollection<TBase>.CopyTo(TBase[], System.Int32)
  nameWithType.vb: ICollection(Of TBase).CopyTo(TBase(), Int32)
  fullName.vb: System.Collections.Generic.ICollection(Of TBase).CopyTo(TBase(), System.Int32)
  name.vb: CopyTo(TBase(), Int32)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: ICollection<TBase>.CopyTo
    fullName: System.Collections.Generic.ICollection<TBase>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TBase
    nameWithType: TBase
    fullName: TBase
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: ICollection(Of TBase).CopyTo
    fullName: System.Collections.Generic.ICollection(Of TBase).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TBase
    nameWithType: TBase
    fullName: TBase
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: '{TBase}[]'
  name: TBase[]
  nameWithType: TBase[]
  fullName: TBase[]
  nameWithType.vb: TBase()
  fullName.vb: TBase()
  name.vb: TBase()
  spec.csharp:
  - name: TBase
    nameWithType: TBase
    fullName: TBase
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - name: TBase
    nameWithType: TBase
    fullName: TBase
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  commentId: M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  isExternal: true
  name: CopyTo(T[], Int32)
  nameWithType: ICollection<T>.CopyTo(T[], Int32)
  fullName: System.Collections.Generic.ICollection<T>.CopyTo(T[], System.Int32)
  nameWithType.vb: ICollection(Of T).CopyTo(T(), Int32)
  fullName.vb: System.Collections.Generic.ICollection(Of T).CopyTo(T(), System.Int32)
  name.vb: CopyTo(T(), Int32)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: ICollection<T>.CopyTo
    fullName: System.Collections.Generic.ICollection<T>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: ICollection(Of T).CopyTo
    fullName: System.Collections.Generic.ICollection(Of T).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.Remove*
  commentId: Overload:TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.Remove
  isExternal: false
  name: Remove
  nameWithType: CombinedModelCollectionView<TBase, TPrimary, TSecondary>.Remove
  fullName: TimeCockpit.Data.DataModel.CombinedModelCollectionView<TBase, TPrimary, TSecondary>.Remove
  nameWithType.vb: CombinedModelCollectionView(Of TBase, TPrimary, TSecondary).Remove
  fullName.vb: TimeCockpit.Data.DataModel.CombinedModelCollectionView(Of TBase, TPrimary, TSecondary).Remove
- uid: System.Collections.Generic.ICollection{{TBase}}.Remove({TBase})
  commentId: M:System.Collections.Generic.ICollection{`0}.Remove(`0)
  parent: System.Collections.Generic.ICollection{{TBase}}
  definition: System.Collections.Generic.ICollection`1.Remove(`0)
  name: Remove(TBase)
  nameWithType: ICollection<TBase>.Remove(TBase)
  fullName: System.Collections.Generic.ICollection<TBase>.Remove(TBase)
  nameWithType.vb: ICollection(Of TBase).Remove(TBase)
  fullName.vb: System.Collections.Generic.ICollection(Of TBase).Remove(TBase)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    nameWithType: ICollection<TBase>.Remove
    fullName: System.Collections.Generic.ICollection<TBase>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TBase
    nameWithType: TBase
    fullName: TBase
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    nameWithType: ICollection(Of TBase).Remove
    fullName: System.Collections.Generic.ICollection(Of TBase).Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TBase
    nameWithType: TBase
    fullName: TBase
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1.Remove(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Remove(`0)
  isExternal: true
  name: Remove(T)
  nameWithType: ICollection<T>.Remove(T)
  fullName: System.Collections.Generic.ICollection<T>.Remove(T)
  nameWithType.vb: ICollection(Of T).Remove(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Remove(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    nameWithType: ICollection<T>.Remove
    fullName: System.Collections.Generic.ICollection<T>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    nameWithType: ICollection(Of T).Remove
    fullName: System.Collections.Generic.ICollection(Of T).Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.GetEnumerator*
  commentId: Overload:TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.GetEnumerator
  isExternal: false
  name: GetEnumerator
  nameWithType: CombinedModelCollectionView<TBase, TPrimary, TSecondary>.GetEnumerator
  fullName: TimeCockpit.Data.DataModel.CombinedModelCollectionView<TBase, TPrimary, TSecondary>.GetEnumerator
  nameWithType.vb: CombinedModelCollectionView(Of TBase, TPrimary, TSecondary).GetEnumerator
  fullName.vb: TimeCockpit.Data.DataModel.CombinedModelCollectionView(Of TBase, TPrimary, TSecondary).GetEnumerator
- uid: System.Collections.Generic.IEnumerable{{TBase}}.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable{`0}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{{TBase}}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<TBase>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<TBase>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of TBase).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of TBase).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<TBase>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<TBase>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of TBase).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of TBase).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator{{TBase}}
  commentId: T:System.Collections.Generic.IEnumerator{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  name: IEnumerator<TBase>
  nameWithType: IEnumerator<TBase>
  fullName: System.Collections.Generic.IEnumerator<TBase>
  nameWithType.vb: IEnumerator(Of TBase)
  fullName.vb: System.Collections.Generic.IEnumerator(Of TBase)
  name.vb: IEnumerator(Of TBase)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TBase
    nameWithType: TBase
    fullName: TBase
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TBase
    nameWithType: TBase
    fullName: TBase
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of T).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.System#Collections#IEnumerable#GetEnumerator*
  commentId: Overload:TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.System#Collections#IEnumerable#GetEnumerator
  isExternal: false
  name: IEnumerable.GetEnumerator
  nameWithType: CombinedModelCollectionView<TBase, TPrimary, TSecondary>.IEnumerable.GetEnumerator
  fullName: TimeCockpit.Data.DataModel.CombinedModelCollectionView<TBase, TPrimary, TSecondary>.System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: CombinedModelCollectionView(Of TBase, TPrimary, TSecondary).System.Collections.IEnumerable.GetEnumerator
  fullName.vb: TimeCockpit.Data.DataModel.CombinedModelCollectionView(Of TBase, TPrimary, TSecondary).System.Collections.IEnumerable.GetEnumerator
  name.vb: System.Collections.IEnumerable.GetEnumerator
- uid: System.Collections.IEnumerable.GetEnumerator
  commentId: M:System.Collections.IEnumerable.GetEnumerator
  parent: System.Collections.IEnumerable
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable.GetEnumerator()
  fullName: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerator
  commentId: T:System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Collections.IList.Add(System.Object)
  commentId: M:System.Collections.IList.Add(System.Object)
  parent: System.Collections.IList
  isExternal: true
  name: Add(Object)
  nameWithType: IList.Add(Object)
  fullName: System.Collections.IList.Add(System.Object)
  spec.csharp:
  - uid: System.Collections.IList.Add(System.Object)
    name: Add
    nameWithType: IList.Add
    fullName: System.Collections.IList.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IList.Add(System.Object)
    name: Add
    nameWithType: IList.Add
    fullName: System.Collections.IList.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.System#Collections#IList#Contains*
  commentId: Overload:TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.System#Collections#IList#Contains
  isExternal: false
  name: IList.Contains
  nameWithType: CombinedModelCollectionView<TBase, TPrimary, TSecondary>.IList.Contains
  fullName: TimeCockpit.Data.DataModel.CombinedModelCollectionView<TBase, TPrimary, TSecondary>.System.Collections.IList.Contains
  nameWithType.vb: CombinedModelCollectionView(Of TBase, TPrimary, TSecondary).System.Collections.IList.Contains
  fullName.vb: TimeCockpit.Data.DataModel.CombinedModelCollectionView(Of TBase, TPrimary, TSecondary).System.Collections.IList.Contains
  name.vb: System.Collections.IList.Contains
- uid: System.Collections.IList.Contains(System.Object)
  commentId: M:System.Collections.IList.Contains(System.Object)
  parent: System.Collections.IList
  isExternal: true
  name: Contains(Object)
  nameWithType: IList.Contains(Object)
  fullName: System.Collections.IList.Contains(System.Object)
  spec.csharp:
  - uid: System.Collections.IList.Contains(System.Object)
    name: Contains
    nameWithType: IList.Contains
    fullName: System.Collections.IList.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IList.Contains(System.Object)
    name: Contains
    nameWithType: IList.Contains
    fullName: System.Collections.IList.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IList.IndexOf(System.Object)
  commentId: M:System.Collections.IList.IndexOf(System.Object)
  parent: System.Collections.IList
  isExternal: true
  name: IndexOf(Object)
  nameWithType: IList.IndexOf(Object)
  fullName: System.Collections.IList.IndexOf(System.Object)
  spec.csharp:
  - uid: System.Collections.IList.IndexOf(System.Object)
    name: IndexOf
    nameWithType: IList.IndexOf
    fullName: System.Collections.IList.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IList.IndexOf(System.Object)
    name: IndexOf
    nameWithType: IList.IndexOf
    fullName: System.Collections.IList.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IList.Insert(System.Int32,System.Object)
  commentId: M:System.Collections.IList.Insert(System.Int32,System.Object)
  parent: System.Collections.IList
  isExternal: true
  name: Insert(Int32, Object)
  nameWithType: IList.Insert(Int32, Object)
  fullName: System.Collections.IList.Insert(System.Int32, System.Object)
  spec.csharp:
  - uid: System.Collections.IList.Insert(System.Int32,System.Object)
    name: Insert
    nameWithType: IList.Insert
    fullName: System.Collections.IList.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IList.Insert(System.Int32,System.Object)
    name: Insert
    nameWithType: IList.Insert
    fullName: System.Collections.IList.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IList.Remove(System.Object)
  commentId: M:System.Collections.IList.Remove(System.Object)
  parent: System.Collections.IList
  isExternal: true
  name: Remove(Object)
  nameWithType: IList.Remove(Object)
  fullName: System.Collections.IList.Remove(System.Object)
  spec.csharp:
  - uid: System.Collections.IList.Remove(System.Object)
    name: Remove
    nameWithType: IList.Remove
    fullName: System.Collections.IList.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IList.Remove(System.Object)
    name: Remove
    nameWithType: IList.Remove
    fullName: System.Collections.IList.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.TryGetValue*
  commentId: Overload:TimeCockpit.Data.DataModel.CombinedModelCollectionView`3.TryGetValue
  isExternal: false
  name: TryGetValue
  nameWithType: CombinedModelCollectionView<TBase, TPrimary, TSecondary>.TryGetValue
  fullName: TimeCockpit.Data.DataModel.CombinedModelCollectionView<TBase, TPrimary, TSecondary>.TryGetValue
  nameWithType.vb: CombinedModelCollectionView(Of TBase, TPrimary, TSecondary).TryGetValue
  fullName.vb: TimeCockpit.Data.DataModel.CombinedModelCollectionView(Of TBase, TPrimary, TSecondary).TryGetValue
- uid: System.Collections.ICollection.CopyTo(System.Array,System.Int32)
  commentId: M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)
  parent: System.Collections.ICollection
  isExternal: true
  name: CopyTo(Array, Int32)
  nameWithType: ICollection.CopyTo(Array, Int32)
  fullName: System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  spec.csharp:
  - uid: System.Collections.ICollection.CopyTo(System.Array,System.Int32)
    name: CopyTo
    nameWithType: ICollection.CopyTo
    fullName: System.Collections.ICollection.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ICollection.CopyTo(System.Array,System.Int32)
    name: CopyTo
    nameWithType: ICollection.CopyTo
    fullName: System.Collections.ICollection.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Array
  commentId: T:System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
