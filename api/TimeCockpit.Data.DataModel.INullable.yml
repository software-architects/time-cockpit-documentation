### YamlMime:ManagedReference
items:
- uid: TimeCockpit.Data.DataModel.INullable
  commentId: T:TimeCockpit.Data.DataModel.INullable
  id: INullable
  parent: TimeCockpit.Data.DataModel
  children:
  - TimeCockpit.Data.DataModel.INullable.IsNullable
  langs:
  - csharp
  - vb
  name: INullable
  nameWithType: INullable
  fullName: TimeCockpit.Data.DataModel.INullable
  type: Interface
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel
  summary: "\nThe INullable interface is used to determine whether or not an instance of an <xref href=\"TimeCockpit.Data.EntityObject\" data-throw-if-not-resolved=\"false\"></xref> allows having a NULL value.\n"
  remarks: "\nSome <xref href=\"TimeCockpit.Data.DataModel.ModelElement\" data-throw-if-not-resolved=\"false\"></xref>s (e.g. <xref href=\"TimeCockpit.Data.DataModel.ModelProperty\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"TimeCockpit.Data.DataModel.Relation\" data-throw-if-not-resolved=\"false\"></xref>) can be marked as nullable. The metainformation \nabout if a <xref href=\"TimeCockpit.Data.DataModel.Relation\" data-throw-if-not-resolved=\"false\"></xref> or a <xref href=\"TimeCockpit.Data.DataModel.ModelProperty\" data-throw-if-not-resolved=\"false\"></xref> can be null determines if a relation or property on an <xref href=\"TimeCockpit.Data.EntityObject\" data-throw-if-not-resolved=\"false\"></xref>\ncan be null or not. The information if a property or relation can be null is also persisted in the metainformation of the underlying database.\n"
  syntax:
    content: public interface INullable
    content.vb: Public Interface INullable
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: TimeCockpit.Data.DataModel.INullable.IsNullable
  commentId: P:TimeCockpit.Data.DataModel.INullable.IsNullable
  id: IsNullable
  parent: TimeCockpit.Data.DataModel.INullable
  langs:
  - csharp
  - vb
  name: IsNullable
  nameWithType: INullable.IsNullable
  fullName: TimeCockpit.Data.DataModel.INullable.IsNullable
  type: Property
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel
  summary: "\nGets or sets a value indicating whether either <xref href=\"TimeCockpit.Data.DataModel.Relation\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"TimeCockpit.Data.DataModel.ModelProperty\" data-throw-if-not-resolved=\"false\"></xref> can be null or not.\n"
  syntax:
    content: bool IsNullable { get; set; }
    parameters: []
    return:
      type: System.Boolean
      description: "\n<code>true</code> if a <xref href=\"TimeCockpit.Data.DataModel.Relation\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"TimeCockpit.Data.DataModel.ModelProperty\" data-throw-if-not-resolved=\"false\"></xref> can be null; otherwise, <code>false</code>.\n"
    content.vb: Property IsNullable As Boolean
  overload: TimeCockpit.Data.DataModel.INullable.IsNullable*
  modifiers.csharp:
  - get
  - set
references:
- uid: TimeCockpit.Data.DataModel
  commentId: N:TimeCockpit.Data.DataModel
  isExternal: true
  name: TimeCockpit.Data.DataModel
  nameWithType: TimeCockpit.Data.DataModel
  fullName: TimeCockpit.Data.DataModel
- uid: TimeCockpit.Data.DataModel.INullable.IsNullable*
  commentId: Overload:TimeCockpit.Data.DataModel.INullable.IsNullable
  isExternal: true
  name: IsNullable
  nameWithType: INullable.IsNullable
  fullName: TimeCockpit.Data.DataModel.INullable.IsNullable
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
