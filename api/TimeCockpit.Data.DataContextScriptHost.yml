### YamlMime:ManagedReference
items:
- uid: TimeCockpit.Data.DataContextScriptHost
  commentId: T:TimeCockpit.Data.DataContextScriptHost
  id: DataContextScriptHost
  parent: TimeCockpit.Data
  children:
  - TimeCockpit.Data.DataContextScriptHost.#ctor
  - TimeCockpit.Data.DataContextScriptHost.CreateScope
  - TimeCockpit.Data.DataContextScriptHost.ExecuteScript(TimeCockpit.Data.DataContext,System.String,System.Boolean,Microsoft.Scripting.Hosting.ScriptScope,System.IO.Stream)
  - TimeCockpit.Data.DataContextScriptHost.ExecuteScript(TimeCockpit.Data.DataContext,System.String,System.Boolean,System.IO.Stream)
  - TimeCockpit.Data.DataContextScriptHost.ExecuteScript(TimeCockpit.Data.DataContext,System.String,System.IO.Stream)
  - TimeCockpit.Data.DataContextScriptHost.ExecuteScriptFromResource(TimeCockpit.Data.DataContext,System.Reflection.Assembly,System.String,System.IO.Stream)
  - TimeCockpit.Data.DataContextScriptHost.GetFunctionScriptResult``1(TimeCockpit.Data.DataContext,System.String,System.String,System.Object[],Microsoft.Scripting.Hosting.ScriptScope,System.IO.Stream)
  - TimeCockpit.Data.DataContextScriptHost.GetScriptResult(TimeCockpit.Data.DataContext,System.String,Microsoft.Scripting.Hosting.ScriptScope,System.IO.Stream)
  langs:
  - csharp
  - vb
  name: DataContextScriptHost
  nameWithType: DataContextScriptHost
  fullName: TimeCockpit.Data.DataContextScriptHost
  type: Class
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataContextScriptHost.cs
    id: DataContextScriptHost
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataContextScriptHost.cs
    startLine: 33
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data
  summary: "\nclass used for executing time cockpit python scripts.\n"
  example: []
  syntax:
    content: public class DataContextScriptHost
    content.vb: Public Class DataContextScriptHost
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TimeCockpit.Data.DataContextScriptHost.#ctor
  commentId: M:TimeCockpit.Data.DataContextScriptHost.#ctor
  id: '#ctor'
  parent: TimeCockpit.Data.DataContextScriptHost
  langs:
  - csharp
  - vb
  name: DataContextScriptHost()
  nameWithType: DataContextScriptHost.DataContextScriptHost()
  fullName: TimeCockpit.Data.DataContextScriptHost.DataContextScriptHost()
  type: Constructor
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataContextScriptHost.cs
    id: .ctor
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataContextScriptHost.cs
    startLine: 53
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data
  summary: "\nInitializes a new instance of the DataContextScriptHost class.\n"
  example: []
  syntax:
    content: public DataContextScriptHost()
    content.vb: Public Sub New
  overload: TimeCockpit.Data.DataContextScriptHost.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.DataContextScriptHost.CreateScope
  commentId: M:TimeCockpit.Data.DataContextScriptHost.CreateScope
  id: CreateScope
  parent: TimeCockpit.Data.DataContextScriptHost
  langs:
  - csharp
  - vb
  name: CreateScope()
  nameWithType: DataContextScriptHost.CreateScope()
  fullName: TimeCockpit.Data.DataContextScriptHost.CreateScope()
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataContextScriptHost.cs
    id: CreateScope
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataContextScriptHost.cs
    startLine: 134
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data
  summary: "\nInitializes a new script scope.\n"
  example: []
  syntax:
    content: public ScriptScope CreateScope()
    return:
      type: Microsoft.Scripting.Hosting.ScriptScope
      description: returns the script scope.
    content.vb: Public Function CreateScope As ScriptScope
  overload: TimeCockpit.Data.DataContextScriptHost.CreateScope*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.DataContextScriptHost.ExecuteScript(TimeCockpit.Data.DataContext,System.String,System.IO.Stream)
  commentId: M:TimeCockpit.Data.DataContextScriptHost.ExecuteScript(TimeCockpit.Data.DataContext,System.String,System.IO.Stream)
  id: ExecuteScript(TimeCockpit.Data.DataContext,System.String,System.IO.Stream)
  parent: TimeCockpit.Data.DataContextScriptHost
  langs:
  - csharp
  - vb
  name: ExecuteScript(DataContext, String, Stream)
  nameWithType: DataContextScriptHost.ExecuteScript(DataContext, String, Stream)
  fullName: TimeCockpit.Data.DataContextScriptHost.ExecuteScript(TimeCockpit.Data.DataContext, System.String, System.IO.Stream)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataContextScriptHost.cs
    id: ExecuteScript
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataContextScriptHost.cs
    startLine: 147
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data
  summary: "\nExecutes a dlr script.\n"
  example: []
  syntax:
    content: public void ExecuteScript(DataContext dataContext, string script, Stream outputStream)
    parameters:
    - id: dataContext
      type: TimeCockpit.Data.DataContext
      description: dataContext to execute script against.
    - id: script
      type: System.String
      description: The script to execute.
    - id: outputStream
      type: System.IO.Stream
      description: stream accepting output.
    content.vb: Public Sub ExecuteScript(dataContext As DataContext, script As String, outputStream As Stream)
  overload: TimeCockpit.Data.DataContextScriptHost.ExecuteScript*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.DataContextScriptHost.GetFunctionScriptResult``1(TimeCockpit.Data.DataContext,System.String,System.String,System.Object[],Microsoft.Scripting.Hosting.ScriptScope,System.IO.Stream)
  commentId: M:TimeCockpit.Data.DataContextScriptHost.GetFunctionScriptResult``1(TimeCockpit.Data.DataContext,System.String,System.String,System.Object[],Microsoft.Scripting.Hosting.ScriptScope,System.IO.Stream)
  id: GetFunctionScriptResult``1(TimeCockpit.Data.DataContext,System.String,System.String,System.Object[],Microsoft.Scripting.Hosting.ScriptScope,System.IO.Stream)
  parent: TimeCockpit.Data.DataContextScriptHost
  langs:
  - csharp
  - vb
  name: GetFunctionScriptResult<T>(DataContext, String, String, Object[], ScriptScope, Stream)
  nameWithType: DataContextScriptHost.GetFunctionScriptResult<T>(DataContext, String, String, Object[], ScriptScope, Stream)
  fullName: TimeCockpit.Data.DataContextScriptHost.GetFunctionScriptResult<T>(TimeCockpit.Data.DataContext, System.String, System.String, System.Object[], Microsoft.Scripting.Hosting.ScriptScope, System.IO.Stream)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataContextScriptHost.cs
    id: GetFunctionScriptResult
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataContextScriptHost.cs
    startLine: 163
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data
  summary: "\nExecutes a dlr script and returns an instance of <xref href=\"TimeCockpit.Data.ScriptResult\" data-throw-if-not-resolved=\"false\"></xref>. \n"
  example: []
  syntax:
    content: 'public T GetFunctionScriptResult<T>(DataContext dataContext, string script, string functionName, object[] parameters, ScriptScope scope, Stream outputStream)where T : class'
    parameters:
    - id: dataContext
      type: TimeCockpit.Data.DataContext
      description: datacontext to work against.
    - id: script
      type: System.String
      description: The script to execute.
    - id: functionName
      type: System.String
      description: The name of the function to execute.
    - id: parameters
      type: System.Object[]
      description: A list of parameters for the function.
    - id: scope
      type: Microsoft.Scripting.Hosting.ScriptScope
      description: The scope to use.
    - id: outputStream
      type: System.IO.Stream
      description: stream accepting output.
    typeParameters:
    - id: T
      description: Type of the result
    return:
      type: '{T}'
      description: An instance of <xref href="TimeCockpit.Data.ScriptResult" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Function GetFunctionScriptResult(Of T As Class)(dataContext As DataContext, script As String, functionName As String, parameters As Object(), scope As ScriptScope, outputStream As Stream) As T
  overload: TimeCockpit.Data.DataContextScriptHost.GetFunctionScriptResult*
  nameWithType.vb: DataContextScriptHost.GetFunctionScriptResult(Of T)(DataContext, String, String, Object(), ScriptScope, Stream)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TimeCockpit.Data.DataContextScriptHost.GetFunctionScriptResult(Of T)(TimeCockpit.Data.DataContext, System.String, System.String, System.Object(), Microsoft.Scripting.Hosting.ScriptScope, System.IO.Stream)
  name.vb: GetFunctionScriptResult(Of T)(DataContext, String, String, Object(), ScriptScope, Stream)
- uid: TimeCockpit.Data.DataContextScriptHost.GetScriptResult(TimeCockpit.Data.DataContext,System.String,Microsoft.Scripting.Hosting.ScriptScope,System.IO.Stream)
  commentId: M:TimeCockpit.Data.DataContextScriptHost.GetScriptResult(TimeCockpit.Data.DataContext,System.String,Microsoft.Scripting.Hosting.ScriptScope,System.IO.Stream)
  id: GetScriptResult(TimeCockpit.Data.DataContext,System.String,Microsoft.Scripting.Hosting.ScriptScope,System.IO.Stream)
  parent: TimeCockpit.Data.DataContextScriptHost
  langs:
  - csharp
  - vb
  name: GetScriptResult(DataContext, String, ScriptScope, Stream)
  nameWithType: DataContextScriptHost.GetScriptResult(DataContext, String, ScriptScope, Stream)
  fullName: TimeCockpit.Data.DataContextScriptHost.GetScriptResult(TimeCockpit.Data.DataContext, System.String, Microsoft.Scripting.Hosting.ScriptScope, System.IO.Stream)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataContextScriptHost.cs
    id: GetScriptResult
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataContextScriptHost.cs
    startLine: 187
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data
  summary: "\nExecutes a dlr script and returns an instance of <xref href=\"TimeCockpit.Data.ScriptResult\" data-throw-if-not-resolved=\"false\"></xref>. \n"
  remarks: "\nATTENTION: Per convetion the result of the script is only returned if it is assigned to a variable that starts with &quot;result&quot;.\nUp to now, this method can only return a list of <xref href=\"TimeCockpit.Data.EntityObject\" data-throw-if-not-resolved=\"false\"></xref>s as result. Even if the actual result\nof the dynamic language script would be a single instance of <xref href=\"TimeCockpit.Data.EntityObject\" data-throw-if-not-resolved=\"false\"></xref>, the object is added to \na list of <xref href=\"TimeCockpit.Data.EntityObject\" data-throw-if-not-resolved=\"false\"></xref> with the object being the only item in the list.\n"
  example:
  - "\n<pre><code>result = Context.SelectSingle(&quot;From P In Project Select P&quot;)</code></pre>\n"
  syntax:
    content: public ScriptResult GetScriptResult(DataContext dataContext, string script, ScriptScope scope, Stream outputStream)
    parameters:
    - id: dataContext
      type: TimeCockpit.Data.DataContext
      description: datacontext to work against.
    - id: script
      type: System.String
      description: The script to execute.
    - id: scope
      type: Microsoft.Scripting.Hosting.ScriptScope
      description: The scope to use.
    - id: outputStream
      type: System.IO.Stream
      description: stream accepting output.
    return:
      type: TimeCockpit.Data.ScriptResult
      description: An instance of <xref href="TimeCockpit.Data.ScriptResult" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Function GetScriptResult(dataContext As DataContext, script As String, scope As ScriptScope, outputStream As Stream) As ScriptResult
  overload: TimeCockpit.Data.DataContextScriptHost.GetScriptResult*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.DataContextScriptHost.ExecuteScriptFromResource(TimeCockpit.Data.DataContext,System.Reflection.Assembly,System.String,System.IO.Stream)
  commentId: M:TimeCockpit.Data.DataContextScriptHost.ExecuteScriptFromResource(TimeCockpit.Data.DataContext,System.Reflection.Assembly,System.String,System.IO.Stream)
  id: ExecuteScriptFromResource(TimeCockpit.Data.DataContext,System.Reflection.Assembly,System.String,System.IO.Stream)
  parent: TimeCockpit.Data.DataContextScriptHost
  langs:
  - csharp
  - vb
  name: ExecuteScriptFromResource(DataContext, Assembly, String, Stream)
  nameWithType: DataContextScriptHost.ExecuteScriptFromResource(DataContext, Assembly, String, Stream)
  fullName: TimeCockpit.Data.DataContextScriptHost.ExecuteScriptFromResource(TimeCockpit.Data.DataContext, System.Reflection.Assembly, System.String, System.IO.Stream)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataContextScriptHost.cs
    id: ExecuteScriptFromResource
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataContextScriptHost.cs
    startLine: 225
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data
  summary: "\nExecutes a dlr script, that is saved as embedded resource.\n"
  example: []
  syntax:
    content: public void ExecuteScriptFromResource(DataContext dataContext, Assembly assembly, string resourceName, Stream outputStream)
    parameters:
    - id: dataContext
      type: TimeCockpit.Data.DataContext
      description: dataContext to pass to script for execution.
    - id: assembly
      type: System.Reflection.Assembly
      description: The assembly, that contains the embedded resource.
    - id: resourceName
      type: System.String
      description: The name of the embedded resource.
    - id: outputStream
      type: System.IO.Stream
      description: stream accepting output.
    content.vb: Public Sub ExecuteScriptFromResource(dataContext As DataContext, assembly As Assembly, resourceName As String, outputStream As Stream)
  overload: TimeCockpit.Data.DataContextScriptHost.ExecuteScriptFromResource*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nThrown if the resource cannot be loaded from the assembly.\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.DataContextScriptHost.ExecuteScript(TimeCockpit.Data.DataContext,System.String,System.Boolean,System.IO.Stream)
  commentId: M:TimeCockpit.Data.DataContextScriptHost.ExecuteScript(TimeCockpit.Data.DataContext,System.String,System.Boolean,System.IO.Stream)
  id: ExecuteScript(TimeCockpit.Data.DataContext,System.String,System.Boolean,System.IO.Stream)
  parent: TimeCockpit.Data.DataContextScriptHost
  langs:
  - csharp
  - vb
  name: ExecuteScript(DataContext, String, Boolean, Stream)
  nameWithType: DataContextScriptHost.ExecuteScript(DataContext, String, Boolean, Stream)
  fullName: TimeCockpit.Data.DataContextScriptHost.ExecuteScript(TimeCockpit.Data.DataContext, System.String, System.Boolean, System.IO.Stream)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataContextScriptHost.cs
    id: ExecuteScript
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataContextScriptHost.cs
    startLine: 259
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data
  summary: "\nExecutes a dlr script.\n"
  example: []
  syntax:
    content: public void ExecuteScript(DataContext dataContext, string script, bool inModelActionContext, Stream outputStream)
    parameters:
    - id: dataContext
      type: TimeCockpit.Data.DataContext
      description: dataContext to execute script against.
    - id: script
      type: System.String
      description: The script to execute.
    - id: inModelActionContext
      type: System.Boolean
      description: Indicates whether the script is called from a <xref href="TimeCockpit.Data.DataModel.Actions.ModelAction" data-throw-if-not-resolved="false"></xref>.
    - id: outputStream
      type: System.IO.Stream
      description: stream accepting output.
    content.vb: Public Sub ExecuteScript(dataContext As DataContext, script As String, inModelActionContext As Boolean, outputStream As Stream)
  overload: TimeCockpit.Data.DataContextScriptHost.ExecuteScript*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.DataContextScriptHost.ExecuteScript(TimeCockpit.Data.DataContext,System.String,System.Boolean,Microsoft.Scripting.Hosting.ScriptScope,System.IO.Stream)
  commentId: M:TimeCockpit.Data.DataContextScriptHost.ExecuteScript(TimeCockpit.Data.DataContext,System.String,System.Boolean,Microsoft.Scripting.Hosting.ScriptScope,System.IO.Stream)
  id: ExecuteScript(TimeCockpit.Data.DataContext,System.String,System.Boolean,Microsoft.Scripting.Hosting.ScriptScope,System.IO.Stream)
  parent: TimeCockpit.Data.DataContextScriptHost
  langs:
  - csharp
  - vb
  name: ExecuteScript(DataContext, String, Boolean, ScriptScope, Stream)
  nameWithType: DataContextScriptHost.ExecuteScript(DataContext, String, Boolean, ScriptScope, Stream)
  fullName: TimeCockpit.Data.DataContextScriptHost.ExecuteScript(TimeCockpit.Data.DataContext, System.String, System.Boolean, Microsoft.Scripting.Hosting.ScriptScope, System.IO.Stream)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataContextScriptHost.cs
    id: ExecuteScript
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataContextScriptHost.cs
    startLine: 273
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data
  summary: "\nExecutes a dlr script.\n"
  example: []
  syntax:
    content: public void ExecuteScript(DataContext dataContext, string script, bool inModelActionContext, ScriptScope scriptScope, Stream outputStream)
    parameters:
    - id: dataContext
      type: TimeCockpit.Data.DataContext
      description: dataContext to execute script against.
    - id: script
      type: System.String
      description: The script to execute.
    - id: inModelActionContext
      type: System.Boolean
      description: Indicates whether the script is called from a <xref href="TimeCockpit.Data.DataModel.Actions.ModelAction" data-throw-if-not-resolved="false"></xref>.
    - id: scriptScope
      type: Microsoft.Scripting.Hosting.ScriptScope
      description: ScriptScope to use.
    - id: outputStream
      type: System.IO.Stream
      description: stream accepting output.
    content.vb: Public Sub ExecuteScript(dataContext As DataContext, script As String, inModelActionContext As Boolean, scriptScope As ScriptScope, outputStream As Stream)
  overload: TimeCockpit.Data.DataContextScriptHost.ExecuteScript*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: TimeCockpit.Data
  commentId: N:TimeCockpit.Data
  isExternal: false
  name: TimeCockpit.Data
  nameWithType: TimeCockpit.Data
  fullName: TimeCockpit.Data
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: TimeCockpit.Data.DataContextScriptHost.#ctor*
  commentId: Overload:TimeCockpit.Data.DataContextScriptHost.#ctor
  isExternal: false
  name: DataContextScriptHost
  nameWithType: DataContextScriptHost.DataContextScriptHost
  fullName: TimeCockpit.Data.DataContextScriptHost.DataContextScriptHost
- uid: TimeCockpit.Data.DataContextScriptHost.CreateScope*
  commentId: Overload:TimeCockpit.Data.DataContextScriptHost.CreateScope
  isExternal: false
  name: CreateScope
  nameWithType: DataContextScriptHost.CreateScope
  fullName: TimeCockpit.Data.DataContextScriptHost.CreateScope
- uid: Microsoft.Scripting.Hosting.ScriptScope
  commentId: T:Microsoft.Scripting.Hosting.ScriptScope
  parent: Microsoft.Scripting.Hosting
  isExternal: true
  name: ScriptScope
  nameWithType: ScriptScope
  fullName: Microsoft.Scripting.Hosting.ScriptScope
- uid: Microsoft.Scripting.Hosting
  commentId: N:Microsoft.Scripting.Hosting
  isExternal: false
  name: Microsoft.Scripting.Hosting
  nameWithType: Microsoft.Scripting.Hosting
  fullName: Microsoft.Scripting.Hosting
- uid: TimeCockpit.Data.DataContextScriptHost.ExecuteScript*
  commentId: Overload:TimeCockpit.Data.DataContextScriptHost.ExecuteScript
  isExternal: false
  name: ExecuteScript
  nameWithType: DataContextScriptHost.ExecuteScript
  fullName: TimeCockpit.Data.DataContextScriptHost.ExecuteScript
- uid: TimeCockpit.Data.DataContext
  commentId: T:TimeCockpit.Data.DataContext
  parent: TimeCockpit.Data
  isExternal: false
  name: DataContext
  nameWithType: DataContext
  fullName: TimeCockpit.Data.DataContext
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.IO
  commentId: N:System.IO
  isExternal: false
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: TimeCockpit.Data.ScriptResult
  commentId: T:TimeCockpit.Data.ScriptResult
  parent: TimeCockpit.Data
  isExternal: false
  name: ScriptResult
  nameWithType: ScriptResult
  fullName: TimeCockpit.Data.ScriptResult
- uid: TimeCockpit.Data.DataContextScriptHost.GetFunctionScriptResult*
  commentId: Overload:TimeCockpit.Data.DataContextScriptHost.GetFunctionScriptResult
  isExternal: false
  name: GetFunctionScriptResult
  nameWithType: DataContextScriptHost.GetFunctionScriptResult
  fullName: TimeCockpit.Data.DataContextScriptHost.GetFunctionScriptResult
- uid: System.Object[]
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  nameWithType.vb: Object()
  fullName.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  isExternal: false
  name: T
  nameWithType: T
  fullName: T
- uid: TimeCockpit.Data.EntityObject
  commentId: T:TimeCockpit.Data.EntityObject
  parent: TimeCockpit.Data
  isExternal: false
  name: EntityObject
  nameWithType: EntityObject
  fullName: TimeCockpit.Data.EntityObject
- uid: TimeCockpit.Data.DataContextScriptHost.GetScriptResult*
  commentId: Overload:TimeCockpit.Data.DataContextScriptHost.GetScriptResult
  isExternal: false
  name: GetScriptResult
  nameWithType: DataContextScriptHost.GetScriptResult
  fullName: TimeCockpit.Data.DataContextScriptHost.GetScriptResult
- uid: TimeCockpit.Data.DataContextScriptHost.ExecuteScriptFromResource*
  commentId: Overload:TimeCockpit.Data.DataContextScriptHost.ExecuteScriptFromResource
  isExternal: false
  name: ExecuteScriptFromResource
  nameWithType: DataContextScriptHost.ExecuteScriptFromResource
  fullName: TimeCockpit.Data.DataContextScriptHost.ExecuteScriptFromResource
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
- uid: System.Reflection.Assembly
  commentId: T:System.Reflection.Assembly
  parent: System.Reflection
  isExternal: true
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.Reflection
  commentId: N:System.Reflection
  isExternal: false
  name: System.Reflection
  nameWithType: System.Reflection
  fullName: System.Reflection
- uid: TimeCockpit.Data.DataModel.Actions.ModelAction
  commentId: T:TimeCockpit.Data.DataModel.Actions.ModelAction
  parent: TimeCockpit.Data.DataModel.Actions
  isExternal: false
  name: ModelAction
  nameWithType: ModelAction
  fullName: TimeCockpit.Data.DataModel.Actions.ModelAction
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: TimeCockpit.Data.DataModel.Actions
  commentId: N:TimeCockpit.Data.DataModel.Actions
  isExternal: false
  name: TimeCockpit.Data.DataModel.Actions
  nameWithType: TimeCockpit.Data.DataModel.Actions
  fullName: TimeCockpit.Data.DataModel.Actions
