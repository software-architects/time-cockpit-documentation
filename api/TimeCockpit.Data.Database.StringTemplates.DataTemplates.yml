### YamlMime:ManagedReference
items:
- uid: TimeCockpit.Data.Database.StringTemplates.DataTemplates
  commentId: T:TimeCockpit.Data.Database.StringTemplates.DataTemplates
  id: DataTemplates
  parent: TimeCockpit.Data.Database.StringTemplates
  children:
  - TimeCockpit.Data.Database.StringTemplates.DataTemplates.#ctor(System.Text.StringBuilder,TimeCockpit.Data.Database.StringTemplates.SqlDialect)
  - TimeCockpit.Data.Database.StringTemplates.DataTemplates.#ctor(TimeCockpit.Data.Database.StringTemplates.SqlDialect)
  - TimeCockpit.Data.Database.StringTemplates.DataTemplates.AddBlobsOfObjectsToGarbageCollection(System.String,TimeCockpit.Data.DataModel.ModelEntityBase,TimeCockpit.Data.DataModel.BinaryProperty)
  - TimeCockpit.Data.Database.StringTemplates.DataTemplates.AddBlobsToGarbageCollection(System.String,TimeCockpit.Data.DataModel.ModelEntityBase,TimeCockpit.Data.DataModel.BinaryProperty,System.Object)
  - TimeCockpit.Data.Database.StringTemplates.DataTemplates.AddBlobToFetchQueueCommand(System.String)
  - TimeCockpit.Data.Database.StringTemplates.DataTemplates.AddInstalledBatch(System.String)
  - TimeCockpit.Data.Database.StringTemplates.DataTemplates.AddInstalledFeature(System.String)
  - TimeCockpit.Data.Database.StringTemplates.DataTemplates.AttachClient(System.String)
  - TimeCockpit.Data.Database.StringTemplates.DataTemplates.CheckInstallBatchTableInstalled(System.String)
  - TimeCockpit.Data.Database.StringTemplates.DataTemplates.CleanupGraveyard(System.String,System.Boolean)
  - TimeCockpit.Data.Database.StringTemplates.DataTemplates.Delete(System.String,TimeCockpit.Data.DataModel.ModelEntityBase,System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.Relation}})
  - TimeCockpit.Data.Database.StringTemplates.DataTemplates.DeleteMultiple(System.String,TimeCockpit.Data.DataModel.ModelEntityBase)
  - TimeCockpit.Data.Database.StringTemplates.DataTemplates.DependencyHierarchy(System.String,TimeCockpit.Data.DataModel.DependencyHierarchy)
  - TimeCockpit.Data.Database.StringTemplates.DataTemplates.DetachClient(System.String)
  - TimeCockpit.Data.Database.StringTemplates.DataTemplates.ExecuteDatabaseCommandOnServer(System.String,System.String,System.Boolean,System.Boolean)
  - TimeCockpit.Data.Database.StringTemplates.DataTemplates.GetActiveSyncClient(System.String)
  - TimeCockpit.Data.Database.StringTemplates.DataTemplates.GetBlobsFromFetchQueueCommand(System.String)
  - TimeCockpit.Data.Database.StringTemplates.DataTemplates.GetCurrentVersion(System.String)
  - TimeCockpit.Data.Database.StringTemplates.DataTemplates.GetDeprecatedSyncClient(System.String)
  - TimeCockpit.Data.Database.StringTemplates.DataTemplates.GetGarbageBlobs(System.String)
  - TimeCockpit.Data.Database.StringTemplates.DataTemplates.GetLastReceivedAnchor(System.String)
  - TimeCockpit.Data.Database.StringTemplates.DataTemplates.GetLastSentAnchor(System.String)
  - TimeCockpit.Data.Database.StringTemplates.DataTemplates.GetLatestSuccessfulSyncDateOverAllClients(System.String)
  - TimeCockpit.Data.Database.StringTemplates.DataTemplates.GetSyncPeriodInfo(System.String)
  - TimeCockpit.Data.Database.StringTemplates.DataTemplates.GetVersionInfo(System.String,TimeCockpit.Data.DataModel.ModelEntityBase)
  - TimeCockpit.Data.Database.StringTemplates.DataTemplates.GetVersionInfoOfDead(System.String)
  - TimeCockpit.Data.Database.StringTemplates.DataTemplates.Insert(System.String,TimeCockpit.Data.DataModel.ModelEntityBase,TimeCockpit.Data.DataModel.StorageColumn[])
  - TimeCockpit.Data.Database.StringTemplates.DataTemplates.InsertDeletionDate
  - TimeCockpit.Data.Database.StringTemplates.DataTemplates.InsertSyncDate
  - TimeCockpit.Data.Database.StringTemplates.DataTemplates.InstalledBatches(System.String)
  - TimeCockpit.Data.Database.StringTemplates.DataTemplates.InstalledFeatures(System.String)
  - TimeCockpit.Data.Database.StringTemplates.DataTemplates.IsInSchema(System.String)
  - TimeCockpit.Data.Database.StringTemplates.DataTemplates.ReadLocalizedTextValues(System.String,TimeCockpit.Data.EntityObject,TimeCockpit.Data.DataModel.Culture[])
  - TimeCockpit.Data.Database.StringTemplates.DataTemplates.RemoveBlobsFromFetchQueueCommand(System.String)
  - TimeCockpit.Data.Database.StringTemplates.DataTemplates.RemoveInstalledBatch(System.String)
  - TimeCockpit.Data.Database.StringTemplates.DataTemplates.RemoveInstalledFeature(System.String)
  - TimeCockpit.Data.Database.StringTemplates.DataTemplates.SetCurrentVersion(System.String)
  - TimeCockpit.Data.Database.StringTemplates.DataTemplates.SetLastReceivedAnchor(System.String)
  - TimeCockpit.Data.Database.StringTemplates.DataTemplates.SetLastSentAnchor(System.String)
  - TimeCockpit.Data.Database.StringTemplates.DataTemplates.SetServerReplicaId(System.String)
  - TimeCockpit.Data.Database.StringTemplates.DataTemplates.StoreLocalizedTextValues(System.String,TimeCockpit.Data.EntityObject)
  - TimeCockpit.Data.Database.StringTemplates.DataTemplates.SystemTables(System.String)
  - TimeCockpit.Data.Database.StringTemplates.DataTemplates.TenantDatabaseVersion(System.String)
  - TimeCockpit.Data.Database.StringTemplates.DataTemplates.TransformText
  - TimeCockpit.Data.Database.StringTemplates.DataTemplates.Update(System.String,TimeCockpit.Data.DataModel.ModelEntityBase,TimeCockpit.Data.DataModel.StorageColumn[])
  - TimeCockpit.Data.Database.StringTemplates.DataTemplates.UpdateSyncClientSuccessful(System.String)
  - TimeCockpit.Data.Database.StringTemplates.DataTemplates.UpdateSyncClientUnSuccessful(System.String)
  - TimeCockpit.Data.Database.StringTemplates.DataTemplates.UserTables(System.String)
  langs:
  - csharp
  - vb
  name: DataTemplates
  nameWithType: DataTemplates
  fullName: TimeCockpit.Data.Database.StringTemplates.DataTemplates
  type: Class
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/DataTemplates.cs
    id: DataTemplates
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/DataTemplates.cs
    startLine: 25
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Database.StringTemplates
  summary: "\nClass to produce the template output\n"
  example: []
  syntax:
    content: 'public class DataTemplates : SqlTransformBase'
    content.vb: >-
      Public Class DataTemplates
          Inherits SqlTransformBase
  inheritance:
  - System.Object
  - TimeCockpit.Data.Database.StringTemplates.SqlTransformBase
  inheritedMembers:
  - TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.Dialect
  - TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.PrimaryCulture
  - TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.GenerationEnvironment
  - TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.ToStringHelper
  - TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.Write(System.String)
  - TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.WriteLine
  - TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.SchemaTemplate(System.String)
  - TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.SchemaTemplateWithEquals(System.String)
  - TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.GO
  - TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.DataType(TimeCockpit.Data.DataModel.StorageColumn)
  - TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.TableName(TimeCockpit.Data.DataModel.ModelElement)
  - TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.DatabaseName(TimeCockpit.Data.DataModel.ModelElement)
  - TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.RelationName(TimeCockpit.Data.DataModel.RelationBase)
  - TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.ColumnName(TimeCockpit.Data.DataModel.StorageColumn)
  - TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.ColumnNameWithCulture(TimeCockpit.Data.DataModel.StorageColumn,TimeCockpit.Data.DataModel.Culture)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TimeCockpit.Data.Database.StringTemplates.DataTemplates.TransformText
  commentId: M:TimeCockpit.Data.Database.StringTemplates.DataTemplates.TransformText
  id: TransformText
  parent: TimeCockpit.Data.Database.StringTemplates.DataTemplates
  langs:
  - csharp
  - vb
  name: TransformText()
  nameWithType: DataTemplates.TransformText()
  fullName: TimeCockpit.Data.Database.StringTemplates.DataTemplates.TransformText()
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/DataTemplates.cs
    id: TransformText
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/DataTemplates.cs
    startLine: 32
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Database.StringTemplates
  summary: "\nCreate the template output\n"
  example: []
  syntax:
    content: public override string TransformText()
    return:
      type: System.String
    content.vb: Public Overrides Function TransformText As String
  overridden: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.TransformText
  overload: TimeCockpit.Data.Database.StringTemplates.DataTemplates.TransformText*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: TimeCockpit.Data.Database.StringTemplates.DataTemplates.#ctor(TimeCockpit.Data.Database.StringTemplates.SqlDialect)
  commentId: M:TimeCockpit.Data.Database.StringTemplates.DataTemplates.#ctor(TimeCockpit.Data.Database.StringTemplates.SqlDialect)
  id: '#ctor(TimeCockpit.Data.Database.StringTemplates.SqlDialect)'
  parent: TimeCockpit.Data.Database.StringTemplates.DataTemplates
  langs:
  - csharp
  - vb
  name: DataTemplates(SqlDialect)
  nameWithType: DataTemplates.DataTemplates(SqlDialect)
  fullName: TimeCockpit.Data.Database.StringTemplates.DataTemplates.DataTemplates(TimeCockpit.Data.Database.StringTemplates.SqlDialect)
  type: Constructor
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/DataTemplates.cs
    id: .ctor
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/DataTemplates.cs
    startLine: 43
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Database.StringTemplates
  summary: "\nInitializes a new instnace of the DataTemplates class.\n"
  example: []
  syntax:
    content: public DataTemplates(SqlDialect dialect)
    parameters:
    - id: dialect
      type: TimeCockpit.Data.Database.StringTemplates.SqlDialect
      description: the SQL dialect this data template is for.
    content.vb: Public Sub New(dialect As SqlDialect)
  overload: TimeCockpit.Data.Database.StringTemplates.DataTemplates.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Database.StringTemplates.DataTemplates.#ctor(System.Text.StringBuilder,TimeCockpit.Data.Database.StringTemplates.SqlDialect)
  commentId: M:TimeCockpit.Data.Database.StringTemplates.DataTemplates.#ctor(System.Text.StringBuilder,TimeCockpit.Data.Database.StringTemplates.SqlDialect)
  id: '#ctor(System.Text.StringBuilder,TimeCockpit.Data.Database.StringTemplates.SqlDialect)'
  parent: TimeCockpit.Data.Database.StringTemplates.DataTemplates
  langs:
  - csharp
  - vb
  name: DataTemplates(StringBuilder, SqlDialect)
  nameWithType: DataTemplates.DataTemplates(StringBuilder, SqlDialect)
  fullName: TimeCockpit.Data.Database.StringTemplates.DataTemplates.DataTemplates(System.Text.StringBuilder, TimeCockpit.Data.Database.StringTemplates.SqlDialect)
  type: Constructor
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/DataTemplates.cs
    id: .ctor
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/DataTemplates.cs
    startLine: 53
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Database.StringTemplates
  summary: "\nInitializes a new instance of the DataTemplates class.\n"
  example: []
  syntax:
    content: public DataTemplates(StringBuilder generationEnvironment, SqlDialect dialect)
    parameters:
    - id: generationEnvironment
      type: System.Text.StringBuilder
      description: the target stringbuilder to write to.
    - id: dialect
      type: TimeCockpit.Data.Database.StringTemplates.SqlDialect
      description: the SQL dialect.
    content.vb: Public Sub New(generationEnvironment As StringBuilder, dialect As SqlDialect)
  overload: TimeCockpit.Data.Database.StringTemplates.DataTemplates.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Database.StringTemplates.DataTemplates.Insert(System.String,TimeCockpit.Data.DataModel.ModelEntityBase,TimeCockpit.Data.DataModel.StorageColumn[])
  commentId: M:TimeCockpit.Data.Database.StringTemplates.DataTemplates.Insert(System.String,TimeCockpit.Data.DataModel.ModelEntityBase,TimeCockpit.Data.DataModel.StorageColumn[])
  id: Insert(System.String,TimeCockpit.Data.DataModel.ModelEntityBase,TimeCockpit.Data.DataModel.StorageColumn[])
  parent: TimeCockpit.Data.Database.StringTemplates.DataTemplates
  langs:
  - csharp
  - vb
  name: Insert(String, ModelEntityBase, StorageColumn[])
  nameWithType: DataTemplates.Insert(String, ModelEntityBase, StorageColumn[])
  fullName: TimeCockpit.Data.Database.StringTemplates.DataTemplates.Insert(System.String, TimeCockpit.Data.DataModel.ModelEntityBase, TimeCockpit.Data.DataModel.StorageColumn[])
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/DataTemplates.cs
    id: Insert
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/DataTemplates.cs
    startLine: 64
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Database.StringTemplates
  summary: "\nWrites an insert statement to the generation environment.\n"
  example: []
  syntax:
    content: public void Insert(string schema, ModelEntityBase entity, StorageColumn[] columns)
    parameters:
    - id: schema
      type: System.String
      description: the schema to write.
    - id: entity
      type: TimeCockpit.Data.DataModel.ModelEntityBase
      description: the target entity.
    - id: columns
      type: TimeCockpit.Data.DataModel.StorageColumn[]
      description: the storage columns.
    content.vb: Public Sub Insert(schema As String, entity As ModelEntityBase, columns As StorageColumn())
  overload: TimeCockpit.Data.Database.StringTemplates.DataTemplates.Insert*
  nameWithType.vb: DataTemplates.Insert(String, ModelEntityBase, StorageColumn())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TimeCockpit.Data.Database.StringTemplates.DataTemplates.Insert(System.String, TimeCockpit.Data.DataModel.ModelEntityBase, TimeCockpit.Data.DataModel.StorageColumn())
  name.vb: Insert(String, ModelEntityBase, StorageColumn())
- uid: TimeCockpit.Data.Database.StringTemplates.DataTemplates.Update(System.String,TimeCockpit.Data.DataModel.ModelEntityBase,TimeCockpit.Data.DataModel.StorageColumn[])
  commentId: M:TimeCockpit.Data.Database.StringTemplates.DataTemplates.Update(System.String,TimeCockpit.Data.DataModel.ModelEntityBase,TimeCockpit.Data.DataModel.StorageColumn[])
  id: Update(System.String,TimeCockpit.Data.DataModel.ModelEntityBase,TimeCockpit.Data.DataModel.StorageColumn[])
  parent: TimeCockpit.Data.Database.StringTemplates.DataTemplates
  langs:
  - csharp
  - vb
  name: Update(String, ModelEntityBase, StorageColumn[])
  nameWithType: DataTemplates.Update(String, ModelEntityBase, StorageColumn[])
  fullName: TimeCockpit.Data.Database.StringTemplates.DataTemplates.Update(System.String, TimeCockpit.Data.DataModel.ModelEntityBase, TimeCockpit.Data.DataModel.StorageColumn[])
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/DataTemplates.cs
    id: Update
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/DataTemplates.cs
    startLine: 294
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Database.StringTemplates
  summary: "\nWrites an update statement to the generation environment.\n"
  example: []
  syntax:
    content: public void Update(string schema, ModelEntityBase entity, StorageColumn[] columns)
    parameters:
    - id: schema
      type: System.String
      description: the schema to use.
    - id: entity
      type: TimeCockpit.Data.DataModel.ModelEntityBase
      description: the target entity.
    - id: columns
      type: TimeCockpit.Data.DataModel.StorageColumn[]
      description: the storage columns.
    content.vb: Public Sub Update(schema As String, entity As ModelEntityBase, columns As StorageColumn())
  overload: TimeCockpit.Data.Database.StringTemplates.DataTemplates.Update*
  nameWithType.vb: DataTemplates.Update(String, ModelEntityBase, StorageColumn())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TimeCockpit.Data.Database.StringTemplates.DataTemplates.Update(System.String, TimeCockpit.Data.DataModel.ModelEntityBase, TimeCockpit.Data.DataModel.StorageColumn())
  name.vb: Update(String, ModelEntityBase, StorageColumn())
- uid: TimeCockpit.Data.Database.StringTemplates.DataTemplates.Delete(System.String,TimeCockpit.Data.DataModel.ModelEntityBase,System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.Relation}})
  commentId: M:TimeCockpit.Data.Database.StringTemplates.DataTemplates.Delete(System.String,TimeCockpit.Data.DataModel.ModelEntityBase,System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.Relation}})
  id: Delete(System.String,TimeCockpit.Data.DataModel.ModelEntityBase,System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.Relation}})
  parent: TimeCockpit.Data.Database.StringTemplates.DataTemplates
  langs:
  - csharp
  - vb
  name: Delete(String, ModelEntityBase, IEnumerable<IEnumerable<Relation>>)
  nameWithType: DataTemplates.Delete(String, ModelEntityBase, IEnumerable<IEnumerable<Relation>>)
  fullName: TimeCockpit.Data.Database.StringTemplates.DataTemplates.Delete(System.String, TimeCockpit.Data.DataModel.ModelEntityBase, System.Collections.Generic.IEnumerable<System.Collections.Generic.IEnumerable<TimeCockpit.Data.DataModel.Relation>>)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/DataTemplates.cs
    id: Delete
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/DataTemplates.cs
    startLine: 467
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Database.StringTemplates
  summary: "\nWrites a delete statement to the generation environment.\n"
  example: []
  syntax:
    content: public void Delete(string schema, ModelEntityBase entity, IEnumerable<IEnumerable<Relation>> relationDependencyPath)
    parameters:
    - id: schema
      type: System.String
      description: the schema to use.
    - id: entity
      type: TimeCockpit.Data.DataModel.ModelEntityBase
      description: the target entity.
    - id: relationDependencyPath
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.Relation}}
      description: the relation dependency paths (used for on delete cascade).
    content.vb: Public Sub Delete(schema As String, entity As ModelEntityBase, relationDependencyPath As IEnumerable(Of IEnumerable(Of Relation)))
  overload: TimeCockpit.Data.Database.StringTemplates.DataTemplates.Delete*
  nameWithType.vb: DataTemplates.Delete(String, ModelEntityBase, IEnumerable(Of IEnumerable(Of Relation)))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TimeCockpit.Data.Database.StringTemplates.DataTemplates.Delete(System.String, TimeCockpit.Data.DataModel.ModelEntityBase, System.Collections.Generic.IEnumerable(Of System.Collections.Generic.IEnumerable(Of TimeCockpit.Data.DataModel.Relation)))
  name.vb: Delete(String, ModelEntityBase, IEnumerable(Of IEnumerable(Of Relation)))
- uid: TimeCockpit.Data.Database.StringTemplates.DataTemplates.DeleteMultiple(System.String,TimeCockpit.Data.DataModel.ModelEntityBase)
  commentId: M:TimeCockpit.Data.Database.StringTemplates.DataTemplates.DeleteMultiple(System.String,TimeCockpit.Data.DataModel.ModelEntityBase)
  id: DeleteMultiple(System.String,TimeCockpit.Data.DataModel.ModelEntityBase)
  parent: TimeCockpit.Data.Database.StringTemplates.DataTemplates
  langs:
  - csharp
  - vb
  name: DeleteMultiple(String, ModelEntityBase)
  nameWithType: DataTemplates.DeleteMultiple(String, ModelEntityBase)
  fullName: TimeCockpit.Data.Database.StringTemplates.DataTemplates.DeleteMultiple(System.String, TimeCockpit.Data.DataModel.ModelEntityBase)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/DataTemplates.cs
    id: DeleteMultiple
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/DataTemplates.cs
    startLine: 1274
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Database.StringTemplates
  summary: "\nwrites a delete multiple statement to the generation environment.\n"
  example: []
  syntax:
    content: public void DeleteMultiple(string schema, ModelEntityBase entity)
    parameters:
    - id: schema
      type: System.String
      description: the schema to use.
    - id: entity
      type: TimeCockpit.Data.DataModel.ModelEntityBase
      description: the model entity to use.
    content.vb: Public Sub DeleteMultiple(schema As String, entity As ModelEntityBase)
  overload: TimeCockpit.Data.Database.StringTemplates.DataTemplates.DeleteMultiple*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Database.StringTemplates.DataTemplates.DependencyHierarchy(System.String,TimeCockpit.Data.DataModel.DependencyHierarchy)
  commentId: M:TimeCockpit.Data.Database.StringTemplates.DataTemplates.DependencyHierarchy(System.String,TimeCockpit.Data.DataModel.DependencyHierarchy)
  id: DependencyHierarchy(System.String,TimeCockpit.Data.DataModel.DependencyHierarchy)
  parent: TimeCockpit.Data.Database.StringTemplates.DataTemplates
  langs:
  - csharp
  - vb
  name: DependencyHierarchy(String, DependencyHierarchy)
  nameWithType: DataTemplates.DependencyHierarchy(String, DependencyHierarchy)
  fullName: TimeCockpit.Data.Database.StringTemplates.DataTemplates.DependencyHierarchy(System.String, TimeCockpit.Data.DataModel.DependencyHierarchy)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/DataTemplates.cs
    id: DependencyHierarchy
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/DataTemplates.cs
    startLine: 1451
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Database.StringTemplates
  summary: "\nJoin clause for included relations\nNote that this template must be applied to a list of RelationReference objects\n"
  example: []
  syntax:
    content: public void DependencyHierarchy(string schema, DependencyHierarchy it)
    parameters:
    - id: schema
      type: System.String
      description: the schema to use.
    - id: it
      type: TimeCockpit.Data.DataModel.DependencyHierarchy
      description: the dependency hierarchy.
    content.vb: Public Sub DependencyHierarchy(schema As String, it As DependencyHierarchy)
  overload: TimeCockpit.Data.Database.StringTemplates.DataTemplates.DependencyHierarchy*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Database.StringTemplates.DataTemplates.TenantDatabaseVersion(System.String)
  commentId: M:TimeCockpit.Data.Database.StringTemplates.DataTemplates.TenantDatabaseVersion(System.String)
  id: TenantDatabaseVersion(System.String)
  parent: TimeCockpit.Data.Database.StringTemplates.DataTemplates
  langs:
  - csharp
  - vb
  name: TenantDatabaseVersion(String)
  nameWithType: DataTemplates.TenantDatabaseVersion(String)
  fullName: TimeCockpit.Data.Database.StringTemplates.DataTemplates.TenantDatabaseVersion(System.String)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/DataTemplates.cs
    id: TenantDatabaseVersion
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/DataTemplates.cs
    startLine: 1566
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Database.StringTemplates
  summary: "\nproduces a select statement returning the tenant database version.\n"
  example: []
  syntax:
    content: public void TenantDatabaseVersion(string schema)
    parameters:
    - id: schema
      type: System.String
      description: the schema to use.
    content.vb: Public Sub TenantDatabaseVersion(schema As String)
  overload: TimeCockpit.Data.Database.StringTemplates.DataTemplates.TenantDatabaseVersion*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Database.StringTemplates.DataTemplates.UserTables(System.String)
  commentId: M:TimeCockpit.Data.Database.StringTemplates.DataTemplates.UserTables(System.String)
  id: UserTables(System.String)
  parent: TimeCockpit.Data.Database.StringTemplates.DataTemplates
  langs:
  - csharp
  - vb
  name: UserTables(String)
  nameWithType: DataTemplates.UserTables(String)
  fullName: TimeCockpit.Data.Database.StringTemplates.DataTemplates.UserTables(System.String)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/DataTemplates.cs
    id: UserTables
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/DataTemplates.cs
    startLine: 1602
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Database.StringTemplates
  summary: "\nCreates a select statement returning the entities which have a User Ownership.\n"
  example: []
  syntax:
    content: public void UserTables(string schema)
    parameters:
    - id: schema
      type: System.String
      description: the schema to use.
    content.vb: Public Sub UserTables(schema As String)
  overload: TimeCockpit.Data.Database.StringTemplates.DataTemplates.UserTables*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Database.StringTemplates.DataTemplates.SystemTables(System.String)
  commentId: M:TimeCockpit.Data.Database.StringTemplates.DataTemplates.SystemTables(System.String)
  id: SystemTables(System.String)
  parent: TimeCockpit.Data.Database.StringTemplates.DataTemplates
  langs:
  - csharp
  - vb
  name: SystemTables(String)
  nameWithType: DataTemplates.SystemTables(String)
  fullName: TimeCockpit.Data.Database.StringTemplates.DataTemplates.SystemTables(System.String)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/DataTemplates.cs
    id: SystemTables
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/DataTemplates.cs
    startLine: 1637
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Database.StringTemplates
  summary: "\nCreates a select statement returning the entities which have a System Ownership.\n"
  example: []
  syntax:
    content: public void SystemTables(string schema)
    parameters:
    - id: schema
      type: System.String
      description: the schema to use.
    content.vb: Public Sub SystemTables(schema As String)
  overload: TimeCockpit.Data.Database.StringTemplates.DataTemplates.SystemTables*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Database.StringTemplates.DataTemplates.GetCurrentVersion(System.String)
  commentId: M:TimeCockpit.Data.Database.StringTemplates.DataTemplates.GetCurrentVersion(System.String)
  id: GetCurrentVersion(System.String)
  parent: TimeCockpit.Data.Database.StringTemplates.DataTemplates
  langs:
  - csharp
  - vb
  name: GetCurrentVersion(String)
  nameWithType: DataTemplates.GetCurrentVersion(String)
  fullName: TimeCockpit.Data.Database.StringTemplates.DataTemplates.GetCurrentVersion(System.String)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/DataTemplates.cs
    id: GetCurrentVersion
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/DataTemplates.cs
    startLine: 1672
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Database.StringTemplates
  summary: "\nWrites a select statement to get the current version.\n"
  example: []
  syntax:
    content: public void GetCurrentVersion(string schema)
    parameters:
    - id: schema
      type: System.String
      description: the schema to use.
    content.vb: Public Sub GetCurrentVersion(schema As String)
  overload: TimeCockpit.Data.Database.StringTemplates.DataTemplates.GetCurrentVersion*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Database.StringTemplates.DataTemplates.SetCurrentVersion(System.String)
  commentId: M:TimeCockpit.Data.Database.StringTemplates.DataTemplates.SetCurrentVersion(System.String)
  id: SetCurrentVersion(System.String)
  parent: TimeCockpit.Data.Database.StringTemplates.DataTemplates
  langs:
  - csharp
  - vb
  name: SetCurrentVersion(String)
  nameWithType: DataTemplates.SetCurrentVersion(String)
  fullName: TimeCockpit.Data.Database.StringTemplates.DataTemplates.SetCurrentVersion(System.String)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/DataTemplates.cs
    id: SetCurrentVersion
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/DataTemplates.cs
    startLine: 1707
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Database.StringTemplates
  summary: "\nwrites an update statement to set the current version.\n"
  example: []
  syntax:
    content: public void SetCurrentVersion(string schema)
    parameters:
    - id: schema
      type: System.String
      description: the schema to use.
    content.vb: Public Sub SetCurrentVersion(schema As String)
  overload: TimeCockpit.Data.Database.StringTemplates.DataTemplates.SetCurrentVersion*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Database.StringTemplates.DataTemplates.SetServerReplicaId(System.String)
  commentId: M:TimeCockpit.Data.Database.StringTemplates.DataTemplates.SetServerReplicaId(System.String)
  id: SetServerReplicaId(System.String)
  parent: TimeCockpit.Data.Database.StringTemplates.DataTemplates
  langs:
  - csharp
  - vb
  name: SetServerReplicaId(String)
  nameWithType: DataTemplates.SetServerReplicaId(String)
  fullName: TimeCockpit.Data.Database.StringTemplates.DataTemplates.SetServerReplicaId(System.String)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/DataTemplates.cs
    id: SetServerReplicaId
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/DataTemplates.cs
    startLine: 1742
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Database.StringTemplates
  summary: "\nwrites an update statement to set the replica id.\n"
  example: []
  syntax:
    content: public void SetServerReplicaId(string schema)
    parameters:
    - id: schema
      type: System.String
      description: the schema to use.
    content.vb: Public Sub SetServerReplicaId(schema As String)
  overload: TimeCockpit.Data.Database.StringTemplates.DataTemplates.SetServerReplicaId*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Database.StringTemplates.DataTemplates.SetLastSentAnchor(System.String)
  commentId: M:TimeCockpit.Data.Database.StringTemplates.DataTemplates.SetLastSentAnchor(System.String)
  id: SetLastSentAnchor(System.String)
  parent: TimeCockpit.Data.Database.StringTemplates.DataTemplates
  langs:
  - csharp
  - vb
  name: SetLastSentAnchor(String)
  nameWithType: DataTemplates.SetLastSentAnchor(String)
  fullName: TimeCockpit.Data.Database.StringTemplates.DataTemplates.SetLastSentAnchor(System.String)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/DataTemplates.cs
    id: SetLastSentAnchor
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/DataTemplates.cs
    startLine: 1777
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Database.StringTemplates
  summary: "\nWrites an update statement to update the LastSentAnchor.\n"
  example: []
  syntax:
    content: public void SetLastSentAnchor(string schema)
    parameters:
    - id: schema
      type: System.String
      description: the schema to use.
    content.vb: Public Sub SetLastSentAnchor(schema As String)
  overload: TimeCockpit.Data.Database.StringTemplates.DataTemplates.SetLastSentAnchor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Database.StringTemplates.DataTemplates.SetLastReceivedAnchor(System.String)
  commentId: M:TimeCockpit.Data.Database.StringTemplates.DataTemplates.SetLastReceivedAnchor(System.String)
  id: SetLastReceivedAnchor(System.String)
  parent: TimeCockpit.Data.Database.StringTemplates.DataTemplates
  langs:
  - csharp
  - vb
  name: SetLastReceivedAnchor(String)
  nameWithType: DataTemplates.SetLastReceivedAnchor(String)
  fullName: TimeCockpit.Data.Database.StringTemplates.DataTemplates.SetLastReceivedAnchor(System.String)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/DataTemplates.cs
    id: SetLastReceivedAnchor
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/DataTemplates.cs
    startLine: 1813
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Database.StringTemplates
  summary: "\nWrites an update statement to set the LastReceivedAnchor.\n"
  example: []
  syntax:
    content: public void SetLastReceivedAnchor(string schema)
    parameters:
    - id: schema
      type: System.String
      description: the schema to use.
    content.vb: Public Sub SetLastReceivedAnchor(schema As String)
  overload: TimeCockpit.Data.Database.StringTemplates.DataTemplates.SetLastReceivedAnchor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Database.StringTemplates.DataTemplates.GetLastSentAnchor(System.String)
  commentId: M:TimeCockpit.Data.Database.StringTemplates.DataTemplates.GetLastSentAnchor(System.String)
  id: GetLastSentAnchor(System.String)
  parent: TimeCockpit.Data.Database.StringTemplates.DataTemplates
  langs:
  - csharp
  - vb
  name: GetLastSentAnchor(String)
  nameWithType: DataTemplates.GetLastSentAnchor(String)
  fullName: TimeCockpit.Data.Database.StringTemplates.DataTemplates.GetLastSentAnchor(System.String)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/DataTemplates.cs
    id: GetLastSentAnchor
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/DataTemplates.cs
    startLine: 1849
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Database.StringTemplates
  summary: "\nWrites a select statement to Get the LastSentAnchor.\n"
  example: []
  syntax:
    content: public void GetLastSentAnchor(string schema)
    parameters:
    - id: schema
      type: System.String
      description: the schema to use.
    content.vb: Public Sub GetLastSentAnchor(schema As String)
  overload: TimeCockpit.Data.Database.StringTemplates.DataTemplates.GetLastSentAnchor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Database.StringTemplates.DataTemplates.GetLastReceivedAnchor(System.String)
  commentId: M:TimeCockpit.Data.Database.StringTemplates.DataTemplates.GetLastReceivedAnchor(System.String)
  id: GetLastReceivedAnchor(System.String)
  parent: TimeCockpit.Data.Database.StringTemplates.DataTemplates
  langs:
  - csharp
  - vb
  name: GetLastReceivedAnchor(String)
  nameWithType: DataTemplates.GetLastReceivedAnchor(String)
  fullName: TimeCockpit.Data.Database.StringTemplates.DataTemplates.GetLastReceivedAnchor(System.String)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/DataTemplates.cs
    id: GetLastReceivedAnchor
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/DataTemplates.cs
    startLine: 1884
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Database.StringTemplates
  summary: "\nWrites a select statement to get the LastReceived anchor.\n"
  example: []
  syntax:
    content: public void GetLastReceivedAnchor(string schema)
    parameters:
    - id: schema
      type: System.String
      description: the schema to use.
    content.vb: Public Sub GetLastReceivedAnchor(schema As String)
  overload: TimeCockpit.Data.Database.StringTemplates.DataTemplates.GetLastReceivedAnchor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Database.StringTemplates.DataTemplates.InstalledBatches(System.String)
  commentId: M:TimeCockpit.Data.Database.StringTemplates.DataTemplates.InstalledBatches(System.String)
  id: InstalledBatches(System.String)
  parent: TimeCockpit.Data.Database.StringTemplates.DataTemplates
  langs:
  - csharp
  - vb
  name: InstalledBatches(String)
  nameWithType: DataTemplates.InstalledBatches(String)
  fullName: TimeCockpit.Data.Database.StringTemplates.DataTemplates.InstalledBatches(System.String)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/DataTemplates.cs
    id: InstalledBatches
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/DataTemplates.cs
    startLine: 1919
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Database.StringTemplates
  summary: "\nWrites a select statement to get the installed batches.\n"
  example: []
  syntax:
    content: public void InstalledBatches(string schema)
    parameters:
    - id: schema
      type: System.String
      description: the schema to use.
    content.vb: Public Sub InstalledBatches(schema As String)
  overload: TimeCockpit.Data.Database.StringTemplates.DataTemplates.InstalledBatches*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Database.StringTemplates.DataTemplates.AddInstalledBatch(System.String)
  commentId: M:TimeCockpit.Data.Database.StringTemplates.DataTemplates.AddInstalledBatch(System.String)
  id: AddInstalledBatch(System.String)
  parent: TimeCockpit.Data.Database.StringTemplates.DataTemplates
  langs:
  - csharp
  - vb
  name: AddInstalledBatch(String)
  nameWithType: DataTemplates.AddInstalledBatch(String)
  fullName: TimeCockpit.Data.Database.StringTemplates.DataTemplates.AddInstalledBatch(System.String)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/DataTemplates.cs
    id: AddInstalledBatch
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/DataTemplates.cs
    startLine: 1954
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Database.StringTemplates
  summary: "\nWrites an insert statement to add a new installed batch.\n"
  example: []
  syntax:
    content: public void AddInstalledBatch(string schema)
    parameters:
    - id: schema
      type: System.String
      description: the schema to use.
    content.vb: Public Sub AddInstalledBatch(schema As String)
  overload: TimeCockpit.Data.Database.StringTemplates.DataTemplates.AddInstalledBatch*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Database.StringTemplates.DataTemplates.RemoveInstalledBatch(System.String)
  commentId: M:TimeCockpit.Data.Database.StringTemplates.DataTemplates.RemoveInstalledBatch(System.String)
  id: RemoveInstalledBatch(System.String)
  parent: TimeCockpit.Data.Database.StringTemplates.DataTemplates
  langs:
  - csharp
  - vb
  name: RemoveInstalledBatch(String)
  nameWithType: DataTemplates.RemoveInstalledBatch(String)
  fullName: TimeCockpit.Data.Database.StringTemplates.DataTemplates.RemoveInstalledBatch(System.String)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/DataTemplates.cs
    id: RemoveInstalledBatch
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/DataTemplates.cs
    startLine: 1990
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Database.StringTemplates
  summary: "\nWrite the delete statement to remove an installed batch.\n"
  example: []
  syntax:
    content: public void RemoveInstalledBatch(string schema)
    parameters:
    - id: schema
      type: System.String
      description: the schema to use.
    content.vb: Public Sub RemoveInstalledBatch(schema As String)
  overload: TimeCockpit.Data.Database.StringTemplates.DataTemplates.RemoveInstalledBatch*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Database.StringTemplates.DataTemplates.CheckInstallBatchTableInstalled(System.String)
  commentId: M:TimeCockpit.Data.Database.StringTemplates.DataTemplates.CheckInstallBatchTableInstalled(System.String)
  id: CheckInstallBatchTableInstalled(System.String)
  parent: TimeCockpit.Data.Database.StringTemplates.DataTemplates
  langs:
  - csharp
  - vb
  name: CheckInstallBatchTableInstalled(String)
  nameWithType: DataTemplates.CheckInstallBatchTableInstalled(String)
  fullName: TimeCockpit.Data.Database.StringTemplates.DataTemplates.CheckInstallBatchTableInstalled(System.String)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/DataTemplates.cs
    id: CheckInstallBatchTableInstalled
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/DataTemplates.cs
    startLine: 2025
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Database.StringTemplates
  summary: "\nWrites a select statement to check whether the table &apos;SYS_InstalledBatch&apos; is available.\n"
  example: []
  syntax:
    content: public void CheckInstallBatchTableInstalled(string schema)
    parameters:
    - id: schema
      type: System.String
      description: the schema to use.
    content.vb: Public Sub CheckInstallBatchTableInstalled(schema As String)
  overload: TimeCockpit.Data.Database.StringTemplates.DataTemplates.CheckInstallBatchTableInstalled*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Database.StringTemplates.DataTemplates.InstalledFeatures(System.String)
  commentId: M:TimeCockpit.Data.Database.StringTemplates.DataTemplates.InstalledFeatures(System.String)
  id: InstalledFeatures(System.String)
  parent: TimeCockpit.Data.Database.StringTemplates.DataTemplates
  langs:
  - csharp
  - vb
  name: InstalledFeatures(String)
  nameWithType: DataTemplates.InstalledFeatures(String)
  fullName: TimeCockpit.Data.Database.StringTemplates.DataTemplates.InstalledFeatures(System.String)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/DataTemplates.cs
    id: InstalledFeatures
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/DataTemplates.cs
    startLine: 2054
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Database.StringTemplates
  summary: "\nWrites a select statement to get all installed feature uuids.\n"
  example: []
  syntax:
    content: public void InstalledFeatures(string schema)
    parameters:
    - id: schema
      type: System.String
      description: the schema to use.
    content.vb: Public Sub InstalledFeatures(schema As String)
  overload: TimeCockpit.Data.Database.StringTemplates.DataTemplates.InstalledFeatures*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Database.StringTemplates.DataTemplates.AddInstalledFeature(System.String)
  commentId: M:TimeCockpit.Data.Database.StringTemplates.DataTemplates.AddInstalledFeature(System.String)
  id: AddInstalledFeature(System.String)
  parent: TimeCockpit.Data.Database.StringTemplates.DataTemplates
  langs:
  - csharp
  - vb
  name: AddInstalledFeature(String)
  nameWithType: DataTemplates.AddInstalledFeature(String)
  fullName: TimeCockpit.Data.Database.StringTemplates.DataTemplates.AddInstalledFeature(System.String)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/DataTemplates.cs
    id: AddInstalledFeature
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/DataTemplates.cs
    startLine: 2089
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Database.StringTemplates
  summary: "\nwrites an insert statement to add an installed feature.\n"
  example: []
  syntax:
    content: public void AddInstalledFeature(string schema)
    parameters:
    - id: schema
      type: System.String
      description: the schema to use.
    content.vb: Public Sub AddInstalledFeature(schema As String)
  overload: TimeCockpit.Data.Database.StringTemplates.DataTemplates.AddInstalledFeature*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Database.StringTemplates.DataTemplates.RemoveInstalledFeature(System.String)
  commentId: M:TimeCockpit.Data.Database.StringTemplates.DataTemplates.RemoveInstalledFeature(System.String)
  id: RemoveInstalledFeature(System.String)
  parent: TimeCockpit.Data.Database.StringTemplates.DataTemplates
  langs:
  - csharp
  - vb
  name: RemoveInstalledFeature(String)
  nameWithType: DataTemplates.RemoveInstalledFeature(String)
  fullName: TimeCockpit.Data.Database.StringTemplates.DataTemplates.RemoveInstalledFeature(System.String)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/DataTemplates.cs
    id: RemoveInstalledFeature
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/DataTemplates.cs
    startLine: 2124
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Database.StringTemplates
  summary: "\nwrites a delete statement to remove an installed feature.\n"
  example: []
  syntax:
    content: public void RemoveInstalledFeature(string schema)
    parameters:
    - id: schema
      type: System.String
      description: the schema to use.
    content.vb: Public Sub RemoveInstalledFeature(schema As String)
  overload: TimeCockpit.Data.Database.StringTemplates.DataTemplates.RemoveInstalledFeature*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Database.StringTemplates.DataTemplates.ExecuteDatabaseCommandOnServer(System.String,System.String,System.Boolean,System.Boolean)
  commentId: M:TimeCockpit.Data.Database.StringTemplates.DataTemplates.ExecuteDatabaseCommandOnServer(System.String,System.String,System.Boolean,System.Boolean)
  id: ExecuteDatabaseCommandOnServer(System.String,System.String,System.Boolean,System.Boolean)
  parent: TimeCockpit.Data.Database.StringTemplates.DataTemplates
  langs:
  - csharp
  - vb
  name: ExecuteDatabaseCommandOnServer(String, String, Boolean, Boolean)
  nameWithType: DataTemplates.ExecuteDatabaseCommandOnServer(String, String, Boolean, Boolean)
  fullName: TimeCockpit.Data.Database.StringTemplates.DataTemplates.ExecuteDatabaseCommandOnServer(System.String, System.String, System.Boolean, System.Boolean)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/DataTemplates.cs
    id: ExecuteDatabaseCommandOnServer
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/DataTemplates.cs
    startLine: 2162
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Database.StringTemplates
  summary: "\nWrites an sql statement to execute another common on the server with a transaction.\n"
  example: []
  syntax:
    content: public void ExecuteDatabaseCommandOnServer(string schema, string command, bool isSynced, bool transactionActive)
    parameters:
    - id: schema
      type: System.String
      description: the schema to use.
    - id: command
      type: System.String
      description: the command to execute.
    - id: isSynced
      type: System.Boolean
      description: if synced, the current version is increased by one with an update lock.
    - id: transactionActive
      type: System.Boolean
      description: Indicates whether the datalayer assumes an active transaction.
    content.vb: Public Sub ExecuteDatabaseCommandOnServer(schema As String, command As String, isSynced As Boolean, transactionActive As Boolean)
  overload: TimeCockpit.Data.Database.StringTemplates.DataTemplates.ExecuteDatabaseCommandOnServer*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Database.StringTemplates.DataTemplates.AddBlobsToGarbageCollection(System.String,TimeCockpit.Data.DataModel.ModelEntityBase,TimeCockpit.Data.DataModel.BinaryProperty,System.Object)
  commentId: M:TimeCockpit.Data.Database.StringTemplates.DataTemplates.AddBlobsToGarbageCollection(System.String,TimeCockpit.Data.DataModel.ModelEntityBase,TimeCockpit.Data.DataModel.BinaryProperty,System.Object)
  id: AddBlobsToGarbageCollection(System.String,TimeCockpit.Data.DataModel.ModelEntityBase,TimeCockpit.Data.DataModel.BinaryProperty,System.Object)
  parent: TimeCockpit.Data.Database.StringTemplates.DataTemplates
  langs:
  - csharp
  - vb
  name: AddBlobsToGarbageCollection(String, ModelEntityBase, BinaryProperty, Object)
  nameWithType: DataTemplates.AddBlobsToGarbageCollection(String, ModelEntityBase, BinaryProperty, Object)
  fullName: TimeCockpit.Data.Database.StringTemplates.DataTemplates.AddBlobsToGarbageCollection(System.String, TimeCockpit.Data.DataModel.ModelEntityBase, TimeCockpit.Data.DataModel.BinaryProperty, System.Object)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/DataTemplates.cs
    id: AddBlobsToGarbageCollection
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/DataTemplates.cs
    startLine: 2346
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Database.StringTemplates
  summary: "\nwrites a command to add blobs to garbage collection.\n"
  example: []
  syntax:
    content: public void AddBlobsToGarbageCollection(string schema, ModelEntityBase entity, BinaryProperty blobProperty, object newBlobGuid)
    parameters:
    - id: schema
      type: System.String
      description: the schema to use.
    - id: entity
      type: TimeCockpit.Data.DataModel.ModelEntityBase
      description: 'the target model entity '
    - id: blobProperty
      type: TimeCockpit.Data.DataModel.BinaryProperty
      description: the propert to write for.
    - id: newBlobGuid
      type: System.Object
      description: a guid of the new blob (optional).
    content.vb: Public Sub AddBlobsToGarbageCollection(schema As String, entity As ModelEntityBase, blobProperty As BinaryProperty, newBlobGuid As Object)
  overload: TimeCockpit.Data.Database.StringTemplates.DataTemplates.AddBlobsToGarbageCollection*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Database.StringTemplates.DataTemplates.AddBlobsOfObjectsToGarbageCollection(System.String,TimeCockpit.Data.DataModel.ModelEntityBase,TimeCockpit.Data.DataModel.BinaryProperty)
  commentId: M:TimeCockpit.Data.Database.StringTemplates.DataTemplates.AddBlobsOfObjectsToGarbageCollection(System.String,TimeCockpit.Data.DataModel.ModelEntityBase,TimeCockpit.Data.DataModel.BinaryProperty)
  id: AddBlobsOfObjectsToGarbageCollection(System.String,TimeCockpit.Data.DataModel.ModelEntityBase,TimeCockpit.Data.DataModel.BinaryProperty)
  parent: TimeCockpit.Data.Database.StringTemplates.DataTemplates
  langs:
  - csharp
  - vb
  name: AddBlobsOfObjectsToGarbageCollection(String, ModelEntityBase, BinaryProperty)
  nameWithType: DataTemplates.AddBlobsOfObjectsToGarbageCollection(String, ModelEntityBase, BinaryProperty)
  fullName: TimeCockpit.Data.Database.StringTemplates.DataTemplates.AddBlobsOfObjectsToGarbageCollection(System.String, TimeCockpit.Data.DataModel.ModelEntityBase, TimeCockpit.Data.DataModel.BinaryProperty)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/DataTemplates.cs
    id: AddBlobsOfObjectsToGarbageCollection
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/DataTemplates.cs
    startLine: 2538
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Database.StringTemplates
  summary: "\nwrites an insert statement to adds blobs from objects to garbage collection.\n"
  example: []
  syntax:
    content: public void AddBlobsOfObjectsToGarbageCollection(string schema, ModelEntityBase entity, BinaryProperty blobProperty)
    parameters:
    - id: schema
      type: System.String
      description: the schema to use.
    - id: entity
      type: TimeCockpit.Data.DataModel.ModelEntityBase
      description: the target entity
    - id: blobProperty
      type: TimeCockpit.Data.DataModel.BinaryProperty
      description: the blob property to collect for.
    content.vb: Public Sub AddBlobsOfObjectsToGarbageCollection(schema As String, entity As ModelEntityBase, blobProperty As BinaryProperty)
  overload: TimeCockpit.Data.Database.StringTemplates.DataTemplates.AddBlobsOfObjectsToGarbageCollection*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Database.StringTemplates.DataTemplates.GetGarbageBlobs(System.String)
  commentId: M:TimeCockpit.Data.Database.StringTemplates.DataTemplates.GetGarbageBlobs(System.String)
  id: GetGarbageBlobs(System.String)
  parent: TimeCockpit.Data.Database.StringTemplates.DataTemplates
  langs:
  - csharp
  - vb
  name: GetGarbageBlobs(String)
  nameWithType: DataTemplates.GetGarbageBlobs(String)
  fullName: TimeCockpit.Data.Database.StringTemplates.DataTemplates.GetGarbageBlobs(System.String)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/DataTemplates.cs
    id: GetGarbageBlobs
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/DataTemplates.cs
    startLine: 2670
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Database.StringTemplates
  summary: "\nwrites a select statement to get the top 100 next garbage blobs.\n"
  example: []
  syntax:
    content: public void GetGarbageBlobs(string schema)
    parameters:
    - id: schema
      type: System.String
      description: the schema to use.
    content.vb: Public Sub GetGarbageBlobs(schema As String)
  overload: TimeCockpit.Data.Database.StringTemplates.DataTemplates.GetGarbageBlobs*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Database.StringTemplates.DataTemplates.AddBlobToFetchQueueCommand(System.String)
  commentId: M:TimeCockpit.Data.Database.StringTemplates.DataTemplates.AddBlobToFetchQueueCommand(System.String)
  id: AddBlobToFetchQueueCommand(System.String)
  parent: TimeCockpit.Data.Database.StringTemplates.DataTemplates
  langs:
  - csharp
  - vb
  name: AddBlobToFetchQueueCommand(String)
  nameWithType: DataTemplates.AddBlobToFetchQueueCommand(String)
  fullName: TimeCockpit.Data.Database.StringTemplates.DataTemplates.AddBlobToFetchQueueCommand(System.String)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/DataTemplates.cs
    id: AddBlobToFetchQueueCommand
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/DataTemplates.cs
    startLine: 2705
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Database.StringTemplates
  summary: "\nwrites an insert statement to add a blob to the chunk fetch queue.\n"
  example: []
  syntax:
    content: public void AddBlobToFetchQueueCommand(string schema)
    parameters:
    - id: schema
      type: System.String
      description: the schema to use.
    content.vb: Public Sub AddBlobToFetchQueueCommand(schema As String)
  overload: TimeCockpit.Data.Database.StringTemplates.DataTemplates.AddBlobToFetchQueueCommand*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Database.StringTemplates.DataTemplates.GetVersionInfo(System.String,TimeCockpit.Data.DataModel.ModelEntityBase)
  commentId: M:TimeCockpit.Data.Database.StringTemplates.DataTemplates.GetVersionInfo(System.String,TimeCockpit.Data.DataModel.ModelEntityBase)
  id: GetVersionInfo(System.String,TimeCockpit.Data.DataModel.ModelEntityBase)
  parent: TimeCockpit.Data.Database.StringTemplates.DataTemplates
  langs:
  - csharp
  - vb
  name: GetVersionInfo(String, ModelEntityBase)
  nameWithType: DataTemplates.GetVersionInfo(String, ModelEntityBase)
  fullName: TimeCockpit.Data.Database.StringTemplates.DataTemplates.GetVersionInfo(System.String, TimeCockpit.Data.DataModel.ModelEntityBase)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/DataTemplates.cs
    id: GetVersionInfo
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/DataTemplates.cs
    startLine: 2757
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Database.StringTemplates
  summary: "\nwrites a select statement to get the version information of a specific entity.\n"
  example: []
  syntax:
    content: public void GetVersionInfo(string schema, ModelEntityBase entity)
    parameters:
    - id: schema
      type: System.String
      description: the schema to use.
    - id: entity
      type: TimeCockpit.Data.DataModel.ModelEntityBase
      description: the target entity
    content.vb: Public Sub GetVersionInfo(schema As String, entity As ModelEntityBase)
  overload: TimeCockpit.Data.Database.StringTemplates.DataTemplates.GetVersionInfo*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Database.StringTemplates.DataTemplates.GetVersionInfoOfDead(System.String)
  commentId: M:TimeCockpit.Data.Database.StringTemplates.DataTemplates.GetVersionInfoOfDead(System.String)
  id: GetVersionInfoOfDead(System.String)
  parent: TimeCockpit.Data.Database.StringTemplates.DataTemplates
  langs:
  - csharp
  - vb
  name: GetVersionInfoOfDead(String)
  nameWithType: DataTemplates.GetVersionInfoOfDead(String)
  fullName: TimeCockpit.Data.Database.StringTemplates.DataTemplates.GetVersionInfoOfDead(System.String)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/DataTemplates.cs
    id: GetVersionInfoOfDead
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/DataTemplates.cs
    startLine: 2835
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Database.StringTemplates
  summary: "\nwrites a select statement to get the version information of a specific dead entity.\n"
  example: []
  syntax:
    content: public void GetVersionInfoOfDead(string schema)
    parameters:
    - id: schema
      type: System.String
      description: the schema to use.
    content.vb: Public Sub GetVersionInfoOfDead(schema As String)
  overload: TimeCockpit.Data.Database.StringTemplates.DataTemplates.GetVersionInfoOfDead*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Database.StringTemplates.DataTemplates.GetBlobsFromFetchQueueCommand(System.String)
  commentId: M:TimeCockpit.Data.Database.StringTemplates.DataTemplates.GetBlobsFromFetchQueueCommand(System.String)
  id: GetBlobsFromFetchQueueCommand(System.String)
  parent: TimeCockpit.Data.Database.StringTemplates.DataTemplates
  langs:
  - csharp
  - vb
  name: GetBlobsFromFetchQueueCommand(String)
  nameWithType: DataTemplates.GetBlobsFromFetchQueueCommand(String)
  fullName: TimeCockpit.Data.Database.StringTemplates.DataTemplates.GetBlobsFromFetchQueueCommand(System.String)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/DataTemplates.cs
    id: GetBlobsFromFetchQueueCommand
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/DataTemplates.cs
    startLine: 2961
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Database.StringTemplates
  summary: "\nwrties a select statement to fetch the blobs from the chunk fetch queue.\n"
  example: []
  syntax:
    content: public void GetBlobsFromFetchQueueCommand(string schema)
    parameters:
    - id: schema
      type: System.String
      description: the schema to use.
    content.vb: Public Sub GetBlobsFromFetchQueueCommand(schema As String)
  overload: TimeCockpit.Data.Database.StringTemplates.DataTemplates.GetBlobsFromFetchQueueCommand*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Database.StringTemplates.DataTemplates.RemoveBlobsFromFetchQueueCommand(System.String)
  commentId: M:TimeCockpit.Data.Database.StringTemplates.DataTemplates.RemoveBlobsFromFetchQueueCommand(System.String)
  id: RemoveBlobsFromFetchQueueCommand(System.String)
  parent: TimeCockpit.Data.Database.StringTemplates.DataTemplates
  langs:
  - csharp
  - vb
  name: RemoveBlobsFromFetchQueueCommand(String)
  nameWithType: DataTemplates.RemoveBlobsFromFetchQueueCommand(String)
  fullName: TimeCockpit.Data.Database.StringTemplates.DataTemplates.RemoveBlobsFromFetchQueueCommand(System.String)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/DataTemplates.cs
    id: RemoveBlobsFromFetchQueueCommand
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/DataTemplates.cs
    startLine: 2996
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Database.StringTemplates
  summary: "\nwrties a delete statement to remove a specific blob uuid from the chunk fetch queue.\n"
  example: []
  syntax:
    content: public void RemoveBlobsFromFetchQueueCommand(string schema)
    parameters:
    - id: schema
      type: System.String
      description: the schema to use.
    content.vb: Public Sub RemoveBlobsFromFetchQueueCommand(schema As String)
  overload: TimeCockpit.Data.Database.StringTemplates.DataTemplates.RemoveBlobsFromFetchQueueCommand*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Database.StringTemplates.DataTemplates.AttachClient(System.String)
  commentId: M:TimeCockpit.Data.Database.StringTemplates.DataTemplates.AttachClient(System.String)
  id: AttachClient(System.String)
  parent: TimeCockpit.Data.Database.StringTemplates.DataTemplates
  langs:
  - csharp
  - vb
  name: AttachClient(String)
  nameWithType: DataTemplates.AttachClient(String)
  fullName: TimeCockpit.Data.Database.StringTemplates.DataTemplates.AttachClient(System.String)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/DataTemplates.cs
    id: AttachClient
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/DataTemplates.cs
    startLine: 3032
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Database.StringTemplates
  summary: "\nwrites an insert statement to add a new client to the SYS_SyncClient table.\n"
  example: []
  syntax:
    content: public void AttachClient(string schema)
    parameters:
    - id: schema
      type: System.String
      description: the schema to use.
    content.vb: Public Sub AttachClient(schema As String)
  overload: TimeCockpit.Data.Database.StringTemplates.DataTemplates.AttachClient*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Database.StringTemplates.DataTemplates.DetachClient(System.String)
  commentId: M:TimeCockpit.Data.Database.StringTemplates.DataTemplates.DetachClient(System.String)
  id: DetachClient(System.String)
  parent: TimeCockpit.Data.Database.StringTemplates.DataTemplates
  langs:
  - csharp
  - vb
  name: DetachClient(String)
  nameWithType: DataTemplates.DetachClient(String)
  fullName: TimeCockpit.Data.Database.StringTemplates.DataTemplates.DetachClient(System.String)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/DataTemplates.cs
    id: DetachClient
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/DataTemplates.cs
    startLine: 3082
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Database.StringTemplates
  summary: "\nwrites an update statement to remove a sync client.\n"
  example: []
  syntax:
    content: public void DetachClient(string schema)
    parameters:
    - id: schema
      type: System.String
      description: the schema to use.
    content.vb: Public Sub DetachClient(schema As String)
  overload: TimeCockpit.Data.Database.StringTemplates.DataTemplates.DetachClient*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Database.StringTemplates.DataTemplates.UpdateSyncClientSuccessful(System.String)
  commentId: M:TimeCockpit.Data.Database.StringTemplates.DataTemplates.UpdateSyncClientSuccessful(System.String)
  id: UpdateSyncClientSuccessful(System.String)
  parent: TimeCockpit.Data.Database.StringTemplates.DataTemplates
  langs:
  - csharp
  - vb
  name: UpdateSyncClientSuccessful(String)
  nameWithType: DataTemplates.UpdateSyncClientSuccessful(String)
  fullName: TimeCockpit.Data.Database.StringTemplates.DataTemplates.UpdateSyncClientSuccessful(System.String)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/DataTemplates.cs
    id: UpdateSyncClientSuccessful
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/DataTemplates.cs
    startLine: 3117
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Database.StringTemplates
  summary: "\nwrites an update statement to update the last successful sync of a sync client.\n"
  example: []
  syntax:
    content: public void UpdateSyncClientSuccessful(string schema)
    parameters:
    - id: schema
      type: System.String
      description: the schema to use.
    content.vb: Public Sub UpdateSyncClientSuccessful(schema As String)
  overload: TimeCockpit.Data.Database.StringTemplates.DataTemplates.UpdateSyncClientSuccessful*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Database.StringTemplates.DataTemplates.UpdateSyncClientUnSuccessful(System.String)
  commentId: M:TimeCockpit.Data.Database.StringTemplates.DataTemplates.UpdateSyncClientUnSuccessful(System.String)
  id: UpdateSyncClientUnSuccessful(System.String)
  parent: TimeCockpit.Data.Database.StringTemplates.DataTemplates
  langs:
  - csharp
  - vb
  name: UpdateSyncClientUnSuccessful(String)
  nameWithType: DataTemplates.UpdateSyncClientUnSuccessful(String)
  fullName: TimeCockpit.Data.Database.StringTemplates.DataTemplates.UpdateSyncClientUnSuccessful(System.String)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/DataTemplates.cs
    id: UpdateSyncClientUnSuccessful
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/DataTemplates.cs
    startLine: 3167
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Database.StringTemplates
  summary: "\nwrites an update statement to update the last unsuccessful sync of a sync client.\n"
  example: []
  syntax:
    content: public void UpdateSyncClientUnSuccessful(string schema)
    parameters:
    - id: schema
      type: System.String
      description: the schema to use.
    content.vb: Public Sub UpdateSyncClientUnSuccessful(schema As String)
  overload: TimeCockpit.Data.Database.StringTemplates.DataTemplates.UpdateSyncClientUnSuccessful*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Database.StringTemplates.DataTemplates.InsertSyncDate
  commentId: M:TimeCockpit.Data.Database.StringTemplates.DataTemplates.InsertSyncDate
  id: InsertSyncDate
  parent: TimeCockpit.Data.Database.StringTemplates.DataTemplates
  langs:
  - csharp
  - vb
  name: InsertSyncDate()
  nameWithType: DataTemplates.InsertSyncDate()
  fullName: TimeCockpit.Data.Database.StringTemplates.DataTemplates.InsertSyncDate()
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/DataTemplates.cs
    id: InsertSyncDate
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/DataTemplates.cs
    startLine: 3215
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Database.StringTemplates
  summary: "\nwrites the sync date.\n"
  example: []
  syntax:
    content: public void InsertSyncDate()
    content.vb: Public Sub InsertSyncDate
  overload: TimeCockpit.Data.Database.StringTemplates.DataTemplates.InsertSyncDate*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Database.StringTemplates.DataTemplates.InsertDeletionDate
  commentId: M:TimeCockpit.Data.Database.StringTemplates.DataTemplates.InsertDeletionDate
  id: InsertDeletionDate
  parent: TimeCockpit.Data.Database.StringTemplates.DataTemplates
  langs:
  - csharp
  - vb
  name: InsertDeletionDate()
  nameWithType: DataTemplates.InsertDeletionDate()
  fullName: TimeCockpit.Data.Database.StringTemplates.DataTemplates.InsertDeletionDate()
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/DataTemplates.cs
    id: InsertDeletionDate
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/DataTemplates.cs
    startLine: 3225
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Database.StringTemplates
  summary: "\nwrites the sync date.\n"
  example: []
  syntax:
    content: public void InsertDeletionDate()
    content.vb: Public Sub InsertDeletionDate
  overload: TimeCockpit.Data.Database.StringTemplates.DataTemplates.InsertDeletionDate*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Database.StringTemplates.DataTemplates.GetActiveSyncClient(System.String)
  commentId: M:TimeCockpit.Data.Database.StringTemplates.DataTemplates.GetActiveSyncClient(System.String)
  id: GetActiveSyncClient(System.String)
  parent: TimeCockpit.Data.Database.StringTemplates.DataTemplates
  langs:
  - csharp
  - vb
  name: GetActiveSyncClient(String)
  nameWithType: DataTemplates.GetActiveSyncClient(String)
  fullName: TimeCockpit.Data.Database.StringTemplates.DataTemplates.GetActiveSyncClient(System.String)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/DataTemplates.cs
    id: GetActiveSyncClient
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/DataTemplates.cs
    startLine: 3236
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Database.StringTemplates
  summary: "\nwrites a select statement to get the active sync client.\n"
  example: []
  syntax:
    content: public void GetActiveSyncClient(string schema)
    parameters:
    - id: schema
      type: System.String
      description: the schema to use.
    content.vb: Public Sub GetActiveSyncClient(schema As String)
  overload: TimeCockpit.Data.Database.StringTemplates.DataTemplates.GetActiveSyncClient*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Database.StringTemplates.DataTemplates.GetDeprecatedSyncClient(System.String)
  commentId: M:TimeCockpit.Data.Database.StringTemplates.DataTemplates.GetDeprecatedSyncClient(System.String)
  id: GetDeprecatedSyncClient(System.String)
  parent: TimeCockpit.Data.Database.StringTemplates.DataTemplates
  langs:
  - csharp
  - vb
  name: GetDeprecatedSyncClient(String)
  nameWithType: DataTemplates.GetDeprecatedSyncClient(String)
  fullName: TimeCockpit.Data.Database.StringTemplates.DataTemplates.GetDeprecatedSyncClient(System.String)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/DataTemplates.cs
    id: GetDeprecatedSyncClient
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/DataTemplates.cs
    startLine: 3272
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Database.StringTemplates
  summary: "\nwrites a select statement to get the deprecated sync clients.\n"
  example: []
  syntax:
    content: public void GetDeprecatedSyncClient(string schema)
    parameters:
    - id: schema
      type: System.String
      description: the schema to use.
    content.vb: Public Sub GetDeprecatedSyncClient(schema As String)
  overload: TimeCockpit.Data.Database.StringTemplates.DataTemplates.GetDeprecatedSyncClient*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Database.StringTemplates.DataTemplates.GetSyncPeriodInfo(System.String)
  commentId: M:TimeCockpit.Data.Database.StringTemplates.DataTemplates.GetSyncPeriodInfo(System.String)
  id: GetSyncPeriodInfo(System.String)
  parent: TimeCockpit.Data.Database.StringTemplates.DataTemplates
  langs:
  - csharp
  - vb
  name: GetSyncPeriodInfo(String)
  nameWithType: DataTemplates.GetSyncPeriodInfo(String)
  fullName: TimeCockpit.Data.Database.StringTemplates.DataTemplates.GetSyncPeriodInfo(System.String)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/DataTemplates.cs
    id: GetSyncPeriodInfo
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/DataTemplates.cs
    startLine: 3309
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Database.StringTemplates
  summary: "\nwrites a select statement to get the sync period information.\n"
  example: []
  syntax:
    content: public void GetSyncPeriodInfo(string schema)
    parameters:
    - id: schema
      type: System.String
      description: the schema to use.
    content.vb: Public Sub GetSyncPeriodInfo(schema As String)
  overload: TimeCockpit.Data.Database.StringTemplates.DataTemplates.GetSyncPeriodInfo*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Database.StringTemplates.DataTemplates.GetLatestSuccessfulSyncDateOverAllClients(System.String)
  commentId: M:TimeCockpit.Data.Database.StringTemplates.DataTemplates.GetLatestSuccessfulSyncDateOverAllClients(System.String)
  id: GetLatestSuccessfulSyncDateOverAllClients(System.String)
  parent: TimeCockpit.Data.Database.StringTemplates.DataTemplates
  langs:
  - csharp
  - vb
  name: GetLatestSuccessfulSyncDateOverAllClients(String)
  nameWithType: DataTemplates.GetLatestSuccessfulSyncDateOverAllClients(String)
  fullName: TimeCockpit.Data.Database.StringTemplates.DataTemplates.GetLatestSuccessfulSyncDateOverAllClients(System.String)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/DataTemplates.cs
    id: GetLatestSuccessfulSyncDateOverAllClients
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/DataTemplates.cs
    startLine: 3359
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Database.StringTemplates
  summary: "\nwrites a select statement to get the latest successful sync client of all clients.\n"
  example: []
  syntax:
    content: public void GetLatestSuccessfulSyncDateOverAllClients(string schema)
    parameters:
    - id: schema
      type: System.String
      description: the schema to use.
    content.vb: Public Sub GetLatestSuccessfulSyncDateOverAllClients(schema As String)
  overload: TimeCockpit.Data.Database.StringTemplates.DataTemplates.GetLatestSuccessfulSyncDateOverAllClients*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Database.StringTemplates.DataTemplates.CleanupGraveyard(System.String,System.Boolean)
  commentId: M:TimeCockpit.Data.Database.StringTemplates.DataTemplates.CleanupGraveyard(System.String,System.Boolean)
  id: CleanupGraveyard(System.String,System.Boolean)
  parent: TimeCockpit.Data.Database.StringTemplates.DataTemplates
  langs:
  - csharp
  - vb
  name: CleanupGraveyard(String, Boolean)
  nameWithType: DataTemplates.CleanupGraveyard(String, Boolean)
  fullName: TimeCockpit.Data.Database.StringTemplates.DataTemplates.CleanupGraveyard(System.String, System.Boolean)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/DataTemplates.cs
    id: CleanupGraveyard
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/DataTemplates.cs
    startLine: 3394
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Database.StringTemplates
  summary: "\nwrites a delete from statement to do a graveyard cleanup\n"
  example: []
  syntax:
    content: public void CleanupGraveyard(string schema, bool serverGeneratedTime)
    parameters:
    - id: schema
      type: System.String
      description: the schema to create the sql for.
    - id: serverGeneratedTime
      type: System.Boolean
    content.vb: Public Sub CleanupGraveyard(schema As String, serverGeneratedTime As Boolean)
  overload: TimeCockpit.Data.Database.StringTemplates.DataTemplates.CleanupGraveyard*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Database.StringTemplates.DataTemplates.IsInSchema(System.String)
  commentId: M:TimeCockpit.Data.Database.StringTemplates.DataTemplates.IsInSchema(System.String)
  id: IsInSchema(System.String)
  parent: TimeCockpit.Data.Database.StringTemplates.DataTemplates
  langs:
  - csharp
  - vb
  name: IsInSchema(String)
  nameWithType: DataTemplates.IsInSchema(String)
  fullName: TimeCockpit.Data.Database.StringTemplates.DataTemplates.IsInSchema(System.String)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/DataTemplates.cs
    id: IsInSchema
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/DataTemplates.cs
    startLine: 3462
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Database.StringTemplates
  summary: "\nwrites a IsInSchema check\n"
  example: []
  syntax:
    content: public void IsInSchema(string schema)
    parameters:
    - id: schema
      type: System.String
      description: the schema to create the sql for.
    content.vb: Public Sub IsInSchema(schema As String)
  overload: TimeCockpit.Data.Database.StringTemplates.DataTemplates.IsInSchema*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Database.StringTemplates.DataTemplates.ReadLocalizedTextValues(System.String,TimeCockpit.Data.EntityObject,TimeCockpit.Data.DataModel.Culture[])
  commentId: M:TimeCockpit.Data.Database.StringTemplates.DataTemplates.ReadLocalizedTextValues(System.String,TimeCockpit.Data.EntityObject,TimeCockpit.Data.DataModel.Culture[])
  id: ReadLocalizedTextValues(System.String,TimeCockpit.Data.EntityObject,TimeCockpit.Data.DataModel.Culture[])
  parent: TimeCockpit.Data.Database.StringTemplates.DataTemplates
  langs:
  - csharp
  - vb
  name: ReadLocalizedTextValues(String, EntityObject, Culture[])
  nameWithType: DataTemplates.ReadLocalizedTextValues(String, EntityObject, Culture[])
  fullName: TimeCockpit.Data.Database.StringTemplates.DataTemplates.ReadLocalizedTextValues(System.String, TimeCockpit.Data.EntityObject, TimeCockpit.Data.DataModel.Culture[])
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/DataTemplates.cs
    id: ReadLocalizedTextValues
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/DataTemplates.cs
    startLine: 3475
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Database.StringTemplates
  summary: "\nread localized text values\n"
  example: []
  syntax:
    content: public void ReadLocalizedTextValues(string schema, EntityObject entityObject, Culture[] cultures)
    parameters:
    - id: schema
      type: System.String
      description: the schema to create the sql for.
    - id: entityObject
      type: TimeCockpit.Data.EntityObject
      description: the entityobject to load the localizations for.
    - id: cultures
      type: TimeCockpit.Data.DataModel.Culture[]
      description: the cultures to load for the entityobject.
    content.vb: Public Sub ReadLocalizedTextValues(schema As String, entityObject As EntityObject, cultures As Culture())
  overload: TimeCockpit.Data.Database.StringTemplates.DataTemplates.ReadLocalizedTextValues*
  nameWithType.vb: DataTemplates.ReadLocalizedTextValues(String, EntityObject, Culture())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TimeCockpit.Data.Database.StringTemplates.DataTemplates.ReadLocalizedTextValues(System.String, TimeCockpit.Data.EntityObject, TimeCockpit.Data.DataModel.Culture())
  name.vb: ReadLocalizedTextValues(String, EntityObject, Culture())
- uid: TimeCockpit.Data.Database.StringTemplates.DataTemplates.StoreLocalizedTextValues(System.String,TimeCockpit.Data.EntityObject)
  commentId: M:TimeCockpit.Data.Database.StringTemplates.DataTemplates.StoreLocalizedTextValues(System.String,TimeCockpit.Data.EntityObject)
  id: StoreLocalizedTextValues(System.String,TimeCockpit.Data.EntityObject)
  parent: TimeCockpit.Data.Database.StringTemplates.DataTemplates
  langs:
  - csharp
  - vb
  name: StoreLocalizedTextValues(String, EntityObject)
  nameWithType: DataTemplates.StoreLocalizedTextValues(String, EntityObject)
  fullName: TimeCockpit.Data.Database.StringTemplates.DataTemplates.StoreLocalizedTextValues(System.String, TimeCockpit.Data.EntityObject)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/DataTemplates.cs
    id: StoreLocalizedTextValues
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/DataTemplates.cs
    startLine: 3645
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Database.StringTemplates
  summary: "\nstore localized text values\n"
  example: []
  syntax:
    content: public void StoreLocalizedTextValues(string schema, EntityObject entityObject)
    parameters:
    - id: schema
      type: System.String
      description: the schema to create the sql for.
    - id: entityObject
      type: TimeCockpit.Data.EntityObject
      description: the entityobject to load the localizations for.
    content.vb: Public Sub StoreLocalizedTextValues(schema As String, entityObject As EntityObject)
  overload: TimeCockpit.Data.Database.StringTemplates.DataTemplates.StoreLocalizedTextValues*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: TimeCockpit.Data.Database.StringTemplates
  commentId: N:TimeCockpit.Data.Database.StringTemplates
  isExternal: false
  name: TimeCockpit.Data.Database.StringTemplates
  nameWithType: TimeCockpit.Data.Database.StringTemplates
  fullName: TimeCockpit.Data.Database.StringTemplates
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase
  commentId: T:TimeCockpit.Data.Database.StringTemplates.SqlTransformBase
  parent: TimeCockpit.Data.Database.StringTemplates
  isExternal: false
  name: SqlTransformBase
  nameWithType: SqlTransformBase
  fullName: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase
- uid: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.Dialect
  commentId: P:TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.Dialect
  parent: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase
  isExternal: false
  name: Dialect
  nameWithType: SqlTransformBase.Dialect
  fullName: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.Dialect
- uid: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.PrimaryCulture
  commentId: P:TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.PrimaryCulture
  parent: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase
  isExternal: false
  name: PrimaryCulture
  nameWithType: SqlTransformBase.PrimaryCulture
  fullName: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.PrimaryCulture
- uid: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.GenerationEnvironment
  commentId: P:TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.GenerationEnvironment
  parent: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase
  isExternal: false
  name: GenerationEnvironment
  nameWithType: SqlTransformBase.GenerationEnvironment
  fullName: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.GenerationEnvironment
- uid: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.ToStringHelper
  commentId: P:TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.ToStringHelper
  parent: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase
  isExternal: false
  name: ToStringHelper
  nameWithType: SqlTransformBase.ToStringHelper
  fullName: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.ToStringHelper
- uid: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.Write(System.String)
  commentId: M:TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.Write(System.String)
  parent: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase
  isExternal: true
  name: Write(String)
  nameWithType: SqlTransformBase.Write(String)
  fullName: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.Write(System.String)
  spec.csharp:
  - uid: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.Write(System.String)
    name: Write
    nameWithType: SqlTransformBase.Write
    fullName: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.Write
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.Write(System.String)
    name: Write
    nameWithType: SqlTransformBase.Write
    fullName: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.Write
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.WriteLine
  commentId: M:TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.WriteLine
  parent: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase
  isExternal: false
  name: WriteLine()
  nameWithType: SqlTransformBase.WriteLine()
  fullName: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.WriteLine()
  spec.csharp:
  - uid: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.WriteLine
    name: WriteLine
    nameWithType: SqlTransformBase.WriteLine
    fullName: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.WriteLine
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.WriteLine
    name: WriteLine
    nameWithType: SqlTransformBase.WriteLine
    fullName: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.WriteLine
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.SchemaTemplate(System.String)
  commentId: M:TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.SchemaTemplate(System.String)
  parent: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase
  isExternal: true
  name: SchemaTemplate(String)
  nameWithType: SqlTransformBase.SchemaTemplate(String)
  fullName: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.SchemaTemplate(System.String)
  spec.csharp:
  - uid: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.SchemaTemplate(System.String)
    name: SchemaTemplate
    nameWithType: SqlTransformBase.SchemaTemplate
    fullName: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.SchemaTemplate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.SchemaTemplate(System.String)
    name: SchemaTemplate
    nameWithType: SqlTransformBase.SchemaTemplate
    fullName: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.SchemaTemplate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.SchemaTemplateWithEquals(System.String)
  commentId: M:TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.SchemaTemplateWithEquals(System.String)
  parent: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase
  isExternal: true
  name: SchemaTemplateWithEquals(String)
  nameWithType: SqlTransformBase.SchemaTemplateWithEquals(String)
  fullName: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.SchemaTemplateWithEquals(System.String)
  spec.csharp:
  - uid: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.SchemaTemplateWithEquals(System.String)
    name: SchemaTemplateWithEquals
    nameWithType: SqlTransformBase.SchemaTemplateWithEquals
    fullName: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.SchemaTemplateWithEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.SchemaTemplateWithEquals(System.String)
    name: SchemaTemplateWithEquals
    nameWithType: SqlTransformBase.SchemaTemplateWithEquals
    fullName: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.SchemaTemplateWithEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.GO
  commentId: M:TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.GO
  parent: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase
  isExternal: false
  name: GO()
  nameWithType: SqlTransformBase.GO()
  fullName: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.GO()
  spec.csharp:
  - uid: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.GO
    name: GO
    nameWithType: SqlTransformBase.GO
    fullName: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.GO
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.GO
    name: GO
    nameWithType: SqlTransformBase.GO
    fullName: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.GO
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.DataType(TimeCockpit.Data.DataModel.StorageColumn)
  commentId: M:TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.DataType(TimeCockpit.Data.DataModel.StorageColumn)
  parent: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase
  isExternal: false
  name: DataType(StorageColumn)
  nameWithType: SqlTransformBase.DataType(StorageColumn)
  fullName: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.DataType(TimeCockpit.Data.DataModel.StorageColumn)
  spec.csharp:
  - uid: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.DataType(TimeCockpit.Data.DataModel.StorageColumn)
    name: DataType
    nameWithType: SqlTransformBase.DataType
    fullName: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.DataType
  - name: (
    nameWithType: (
    fullName: (
  - uid: TimeCockpit.Data.DataModel.StorageColumn
    name: StorageColumn
    nameWithType: StorageColumn
    fullName: TimeCockpit.Data.DataModel.StorageColumn
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.DataType(TimeCockpit.Data.DataModel.StorageColumn)
    name: DataType
    nameWithType: SqlTransformBase.DataType
    fullName: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.DataType
  - name: (
    nameWithType: (
    fullName: (
  - uid: TimeCockpit.Data.DataModel.StorageColumn
    name: StorageColumn
    nameWithType: StorageColumn
    fullName: TimeCockpit.Data.DataModel.StorageColumn
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.TableName(TimeCockpit.Data.DataModel.ModelElement)
  commentId: M:TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.TableName(TimeCockpit.Data.DataModel.ModelElement)
  parent: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase
  isExternal: false
  name: TableName(ModelElement)
  nameWithType: SqlTransformBase.TableName(ModelElement)
  fullName: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.TableName(TimeCockpit.Data.DataModel.ModelElement)
  spec.csharp:
  - uid: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.TableName(TimeCockpit.Data.DataModel.ModelElement)
    name: TableName
    nameWithType: SqlTransformBase.TableName
    fullName: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.TableName
  - name: (
    nameWithType: (
    fullName: (
  - uid: TimeCockpit.Data.DataModel.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: TimeCockpit.Data.DataModel.ModelElement
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.TableName(TimeCockpit.Data.DataModel.ModelElement)
    name: TableName
    nameWithType: SqlTransformBase.TableName
    fullName: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.TableName
  - name: (
    nameWithType: (
    fullName: (
  - uid: TimeCockpit.Data.DataModel.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: TimeCockpit.Data.DataModel.ModelElement
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.DatabaseName(TimeCockpit.Data.DataModel.ModelElement)
  commentId: M:TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.DatabaseName(TimeCockpit.Data.DataModel.ModelElement)
  parent: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase
  isExternal: false
  name: DatabaseName(ModelElement)
  nameWithType: SqlTransformBase.DatabaseName(ModelElement)
  fullName: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.DatabaseName(TimeCockpit.Data.DataModel.ModelElement)
  spec.csharp:
  - uid: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.DatabaseName(TimeCockpit.Data.DataModel.ModelElement)
    name: DatabaseName
    nameWithType: SqlTransformBase.DatabaseName
    fullName: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.DatabaseName
  - name: (
    nameWithType: (
    fullName: (
  - uid: TimeCockpit.Data.DataModel.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: TimeCockpit.Data.DataModel.ModelElement
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.DatabaseName(TimeCockpit.Data.DataModel.ModelElement)
    name: DatabaseName
    nameWithType: SqlTransformBase.DatabaseName
    fullName: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.DatabaseName
  - name: (
    nameWithType: (
    fullName: (
  - uid: TimeCockpit.Data.DataModel.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: TimeCockpit.Data.DataModel.ModelElement
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.RelationName(TimeCockpit.Data.DataModel.RelationBase)
  commentId: M:TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.RelationName(TimeCockpit.Data.DataModel.RelationBase)
  parent: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase
  isExternal: false
  name: RelationName(RelationBase)
  nameWithType: SqlTransformBase.RelationName(RelationBase)
  fullName: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.RelationName(TimeCockpit.Data.DataModel.RelationBase)
  spec.csharp:
  - uid: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.RelationName(TimeCockpit.Data.DataModel.RelationBase)
    name: RelationName
    nameWithType: SqlTransformBase.RelationName
    fullName: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.RelationName
  - name: (
    nameWithType: (
    fullName: (
  - uid: TimeCockpit.Data.DataModel.RelationBase
    name: RelationBase
    nameWithType: RelationBase
    fullName: TimeCockpit.Data.DataModel.RelationBase
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.RelationName(TimeCockpit.Data.DataModel.RelationBase)
    name: RelationName
    nameWithType: SqlTransformBase.RelationName
    fullName: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.RelationName
  - name: (
    nameWithType: (
    fullName: (
  - uid: TimeCockpit.Data.DataModel.RelationBase
    name: RelationBase
    nameWithType: RelationBase
    fullName: TimeCockpit.Data.DataModel.RelationBase
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.ColumnName(TimeCockpit.Data.DataModel.StorageColumn)
  commentId: M:TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.ColumnName(TimeCockpit.Data.DataModel.StorageColumn)
  parent: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase
  isExternal: false
  name: ColumnName(StorageColumn)
  nameWithType: SqlTransformBase.ColumnName(StorageColumn)
  fullName: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.ColumnName(TimeCockpit.Data.DataModel.StorageColumn)
  spec.csharp:
  - uid: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.ColumnName(TimeCockpit.Data.DataModel.StorageColumn)
    name: ColumnName
    nameWithType: SqlTransformBase.ColumnName
    fullName: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.ColumnName
  - name: (
    nameWithType: (
    fullName: (
  - uid: TimeCockpit.Data.DataModel.StorageColumn
    name: StorageColumn
    nameWithType: StorageColumn
    fullName: TimeCockpit.Data.DataModel.StorageColumn
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.ColumnName(TimeCockpit.Data.DataModel.StorageColumn)
    name: ColumnName
    nameWithType: SqlTransformBase.ColumnName
    fullName: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.ColumnName
  - name: (
    nameWithType: (
    fullName: (
  - uid: TimeCockpit.Data.DataModel.StorageColumn
    name: StorageColumn
    nameWithType: StorageColumn
    fullName: TimeCockpit.Data.DataModel.StorageColumn
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.ColumnNameWithCulture(TimeCockpit.Data.DataModel.StorageColumn,TimeCockpit.Data.DataModel.Culture)
  commentId: M:TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.ColumnNameWithCulture(TimeCockpit.Data.DataModel.StorageColumn,TimeCockpit.Data.DataModel.Culture)
  parent: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase
  isExternal: false
  name: ColumnNameWithCulture(StorageColumn, Culture)
  nameWithType: SqlTransformBase.ColumnNameWithCulture(StorageColumn, Culture)
  fullName: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.ColumnNameWithCulture(TimeCockpit.Data.DataModel.StorageColumn, TimeCockpit.Data.DataModel.Culture)
  spec.csharp:
  - uid: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.ColumnNameWithCulture(TimeCockpit.Data.DataModel.StorageColumn,TimeCockpit.Data.DataModel.Culture)
    name: ColumnNameWithCulture
    nameWithType: SqlTransformBase.ColumnNameWithCulture
    fullName: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.ColumnNameWithCulture
  - name: (
    nameWithType: (
    fullName: (
  - uid: TimeCockpit.Data.DataModel.StorageColumn
    name: StorageColumn
    nameWithType: StorageColumn
    fullName: TimeCockpit.Data.DataModel.StorageColumn
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TimeCockpit.Data.DataModel.Culture
    name: Culture
    nameWithType: Culture
    fullName: TimeCockpit.Data.DataModel.Culture
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.ColumnNameWithCulture(TimeCockpit.Data.DataModel.StorageColumn,TimeCockpit.Data.DataModel.Culture)
    name: ColumnNameWithCulture
    nameWithType: SqlTransformBase.ColumnNameWithCulture
    fullName: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.ColumnNameWithCulture
  - name: (
    nameWithType: (
    fullName: (
  - uid: TimeCockpit.Data.DataModel.StorageColumn
    name: StorageColumn
    nameWithType: StorageColumn
    fullName: TimeCockpit.Data.DataModel.StorageColumn
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TimeCockpit.Data.DataModel.Culture
    name: Culture
    nameWithType: Culture
    fullName: TimeCockpit.Data.DataModel.Culture
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.TransformText
  commentId: M:TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.TransformText
  parent: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase
  isExternal: false
  name: TransformText()
  nameWithType: SqlTransformBase.TransformText()
  fullName: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.TransformText()
  spec.csharp:
  - uid: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.TransformText
    name: TransformText
    nameWithType: SqlTransformBase.TransformText
    fullName: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.TransformText
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.TransformText
    name: TransformText
    nameWithType: SqlTransformBase.TransformText
    fullName: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.TransformText
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.Database.StringTemplates.DataTemplates.TransformText*
  commentId: Overload:TimeCockpit.Data.Database.StringTemplates.DataTemplates.TransformText
  isExternal: false
  name: TransformText
  nameWithType: DataTemplates.TransformText
  fullName: TimeCockpit.Data.Database.StringTemplates.DataTemplates.TransformText
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: TimeCockpit.Data.Database.StringTemplates.DataTemplates.#ctor*
  commentId: Overload:TimeCockpit.Data.Database.StringTemplates.DataTemplates.#ctor
  isExternal: false
  name: DataTemplates
  nameWithType: DataTemplates.DataTemplates
  fullName: TimeCockpit.Data.Database.StringTemplates.DataTemplates.DataTemplates
- uid: TimeCockpit.Data.Database.StringTemplates.SqlDialect
  commentId: T:TimeCockpit.Data.Database.StringTemplates.SqlDialect
  parent: TimeCockpit.Data.Database.StringTemplates
  isExternal: false
  name: SqlDialect
  nameWithType: SqlDialect
  fullName: TimeCockpit.Data.Database.StringTemplates.SqlDialect
- uid: System.Text.StringBuilder
  commentId: T:System.Text.StringBuilder
  parent: System.Text
  isExternal: true
  name: StringBuilder
  nameWithType: StringBuilder
  fullName: System.Text.StringBuilder
- uid: System.Text
  commentId: N:System.Text
  isExternal: false
  name: System.Text
  nameWithType: System.Text
  fullName: System.Text
- uid: TimeCockpit.Data.Database.StringTemplates.DataTemplates.Insert*
  commentId: Overload:TimeCockpit.Data.Database.StringTemplates.DataTemplates.Insert
  isExternal: false
  name: Insert
  nameWithType: DataTemplates.Insert
  fullName: TimeCockpit.Data.Database.StringTemplates.DataTemplates.Insert
- uid: TimeCockpit.Data.DataModel.ModelEntityBase
  commentId: T:TimeCockpit.Data.DataModel.ModelEntityBase
  parent: TimeCockpit.Data.DataModel
  isExternal: false
  name: ModelEntityBase
  nameWithType: ModelEntityBase
  fullName: TimeCockpit.Data.DataModel.ModelEntityBase
- uid: TimeCockpit.Data.DataModel.StorageColumn[]
  name: StorageColumn[]
  nameWithType: StorageColumn[]
  fullName: TimeCockpit.Data.DataModel.StorageColumn[]
  nameWithType.vb: StorageColumn()
  fullName.vb: TimeCockpit.Data.DataModel.StorageColumn()
  name.vb: StorageColumn()
  spec.csharp:
  - uid: TimeCockpit.Data.DataModel.StorageColumn
    name: StorageColumn
    nameWithType: StorageColumn
    fullName: TimeCockpit.Data.DataModel.StorageColumn
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: TimeCockpit.Data.DataModel.StorageColumn
    name: StorageColumn
    nameWithType: StorageColumn
    fullName: TimeCockpit.Data.DataModel.StorageColumn
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: TimeCockpit.Data.DataModel
  commentId: N:TimeCockpit.Data.DataModel
  isExternal: false
  name: TimeCockpit.Data.DataModel
  nameWithType: TimeCockpit.Data.DataModel
  fullName: TimeCockpit.Data.DataModel
- uid: TimeCockpit.Data.Database.StringTemplates.DataTemplates.Update*
  commentId: Overload:TimeCockpit.Data.Database.StringTemplates.DataTemplates.Update
  isExternal: false
  name: Update
  nameWithType: DataTemplates.Update
  fullName: TimeCockpit.Data.Database.StringTemplates.DataTemplates.Update
- uid: TimeCockpit.Data.Database.StringTemplates.DataTemplates.Delete*
  commentId: Overload:TimeCockpit.Data.Database.StringTemplates.DataTemplates.Delete
  isExternal: false
  name: Delete
  nameWithType: DataTemplates.Delete
  fullName: TimeCockpit.Data.Database.StringTemplates.DataTemplates.Delete
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.Relation}}
  commentId: T:System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.Relation}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IEnumerable<Relation>>
  nameWithType: IEnumerable<IEnumerable<Relation>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.IEnumerable<TimeCockpit.Data.DataModel.Relation>>
  nameWithType.vb: IEnumerable(Of IEnumerable(Of Relation))
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.IEnumerable(Of TimeCockpit.Data.DataModel.Relation))
  name.vb: IEnumerable(Of IEnumerable(Of Relation))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TimeCockpit.Data.DataModel.Relation
    name: Relation
    nameWithType: Relation
    fullName: TimeCockpit.Data.DataModel.Relation
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TimeCockpit.Data.DataModel.Relation
    name: Relation
    nameWithType: Relation
    fullName: TimeCockpit.Data.DataModel.Relation
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: TimeCockpit.Data.Database.StringTemplates.DataTemplates.DeleteMultiple*
  commentId: Overload:TimeCockpit.Data.Database.StringTemplates.DataTemplates.DeleteMultiple
  isExternal: false
  name: DeleteMultiple
  nameWithType: DataTemplates.DeleteMultiple
  fullName: TimeCockpit.Data.Database.StringTemplates.DataTemplates.DeleteMultiple
- uid: TimeCockpit.Data.Database.StringTemplates.DataTemplates.DependencyHierarchy*
  commentId: Overload:TimeCockpit.Data.Database.StringTemplates.DataTemplates.DependencyHierarchy
  isExternal: false
  name: DependencyHierarchy
  nameWithType: DataTemplates.DependencyHierarchy
  fullName: TimeCockpit.Data.Database.StringTemplates.DataTemplates.DependencyHierarchy
- uid: TimeCockpit.Data.DataModel.DependencyHierarchy
  commentId: T:TimeCockpit.Data.DataModel.DependencyHierarchy
  parent: TimeCockpit.Data.DataModel
  isExternal: false
  name: DependencyHierarchy
  nameWithType: DependencyHierarchy
  fullName: TimeCockpit.Data.DataModel.DependencyHierarchy
- uid: TimeCockpit.Data.Database.StringTemplates.DataTemplates.TenantDatabaseVersion*
  commentId: Overload:TimeCockpit.Data.Database.StringTemplates.DataTemplates.TenantDatabaseVersion
  isExternal: false
  name: TenantDatabaseVersion
  nameWithType: DataTemplates.TenantDatabaseVersion
  fullName: TimeCockpit.Data.Database.StringTemplates.DataTemplates.TenantDatabaseVersion
- uid: TimeCockpit.Data.Database.StringTemplates.DataTemplates.UserTables*
  commentId: Overload:TimeCockpit.Data.Database.StringTemplates.DataTemplates.UserTables
  isExternal: false
  name: UserTables
  nameWithType: DataTemplates.UserTables
  fullName: TimeCockpit.Data.Database.StringTemplates.DataTemplates.UserTables
- uid: TimeCockpit.Data.Database.StringTemplates.DataTemplates.SystemTables*
  commentId: Overload:TimeCockpit.Data.Database.StringTemplates.DataTemplates.SystemTables
  isExternal: false
  name: SystemTables
  nameWithType: DataTemplates.SystemTables
  fullName: TimeCockpit.Data.Database.StringTemplates.DataTemplates.SystemTables
- uid: TimeCockpit.Data.Database.StringTemplates.DataTemplates.GetCurrentVersion*
  commentId: Overload:TimeCockpit.Data.Database.StringTemplates.DataTemplates.GetCurrentVersion
  isExternal: false
  name: GetCurrentVersion
  nameWithType: DataTemplates.GetCurrentVersion
  fullName: TimeCockpit.Data.Database.StringTemplates.DataTemplates.GetCurrentVersion
- uid: TimeCockpit.Data.Database.StringTemplates.DataTemplates.SetCurrentVersion*
  commentId: Overload:TimeCockpit.Data.Database.StringTemplates.DataTemplates.SetCurrentVersion
  isExternal: false
  name: SetCurrentVersion
  nameWithType: DataTemplates.SetCurrentVersion
  fullName: TimeCockpit.Data.Database.StringTemplates.DataTemplates.SetCurrentVersion
- uid: TimeCockpit.Data.Database.StringTemplates.DataTemplates.SetServerReplicaId*
  commentId: Overload:TimeCockpit.Data.Database.StringTemplates.DataTemplates.SetServerReplicaId
  isExternal: false
  name: SetServerReplicaId
  nameWithType: DataTemplates.SetServerReplicaId
  fullName: TimeCockpit.Data.Database.StringTemplates.DataTemplates.SetServerReplicaId
- uid: TimeCockpit.Data.Database.StringTemplates.DataTemplates.SetLastSentAnchor*
  commentId: Overload:TimeCockpit.Data.Database.StringTemplates.DataTemplates.SetLastSentAnchor
  isExternal: false
  name: SetLastSentAnchor
  nameWithType: DataTemplates.SetLastSentAnchor
  fullName: TimeCockpit.Data.Database.StringTemplates.DataTemplates.SetLastSentAnchor
- uid: TimeCockpit.Data.Database.StringTemplates.DataTemplates.SetLastReceivedAnchor*
  commentId: Overload:TimeCockpit.Data.Database.StringTemplates.DataTemplates.SetLastReceivedAnchor
  isExternal: false
  name: SetLastReceivedAnchor
  nameWithType: DataTemplates.SetLastReceivedAnchor
  fullName: TimeCockpit.Data.Database.StringTemplates.DataTemplates.SetLastReceivedAnchor
- uid: TimeCockpit.Data.Database.StringTemplates.DataTemplates.GetLastSentAnchor*
  commentId: Overload:TimeCockpit.Data.Database.StringTemplates.DataTemplates.GetLastSentAnchor
  isExternal: false
  name: GetLastSentAnchor
  nameWithType: DataTemplates.GetLastSentAnchor
  fullName: TimeCockpit.Data.Database.StringTemplates.DataTemplates.GetLastSentAnchor
- uid: TimeCockpit.Data.Database.StringTemplates.DataTemplates.GetLastReceivedAnchor*
  commentId: Overload:TimeCockpit.Data.Database.StringTemplates.DataTemplates.GetLastReceivedAnchor
  isExternal: false
  name: GetLastReceivedAnchor
  nameWithType: DataTemplates.GetLastReceivedAnchor
  fullName: TimeCockpit.Data.Database.StringTemplates.DataTemplates.GetLastReceivedAnchor
- uid: TimeCockpit.Data.Database.StringTemplates.DataTemplates.InstalledBatches*
  commentId: Overload:TimeCockpit.Data.Database.StringTemplates.DataTemplates.InstalledBatches
  isExternal: false
  name: InstalledBatches
  nameWithType: DataTemplates.InstalledBatches
  fullName: TimeCockpit.Data.Database.StringTemplates.DataTemplates.InstalledBatches
- uid: TimeCockpit.Data.Database.StringTemplates.DataTemplates.AddInstalledBatch*
  commentId: Overload:TimeCockpit.Data.Database.StringTemplates.DataTemplates.AddInstalledBatch
  isExternal: false
  name: AddInstalledBatch
  nameWithType: DataTemplates.AddInstalledBatch
  fullName: TimeCockpit.Data.Database.StringTemplates.DataTemplates.AddInstalledBatch
- uid: TimeCockpit.Data.Database.StringTemplates.DataTemplates.RemoveInstalledBatch*
  commentId: Overload:TimeCockpit.Data.Database.StringTemplates.DataTemplates.RemoveInstalledBatch
  isExternal: false
  name: RemoveInstalledBatch
  nameWithType: DataTemplates.RemoveInstalledBatch
  fullName: TimeCockpit.Data.Database.StringTemplates.DataTemplates.RemoveInstalledBatch
- uid: TimeCockpit.Data.Database.StringTemplates.DataTemplates.CheckInstallBatchTableInstalled*
  commentId: Overload:TimeCockpit.Data.Database.StringTemplates.DataTemplates.CheckInstallBatchTableInstalled
  isExternal: false
  name: CheckInstallBatchTableInstalled
  nameWithType: DataTemplates.CheckInstallBatchTableInstalled
  fullName: TimeCockpit.Data.Database.StringTemplates.DataTemplates.CheckInstallBatchTableInstalled
- uid: TimeCockpit.Data.Database.StringTemplates.DataTemplates.InstalledFeatures*
  commentId: Overload:TimeCockpit.Data.Database.StringTemplates.DataTemplates.InstalledFeatures
  isExternal: false
  name: InstalledFeatures
  nameWithType: DataTemplates.InstalledFeatures
  fullName: TimeCockpit.Data.Database.StringTemplates.DataTemplates.InstalledFeatures
- uid: TimeCockpit.Data.Database.StringTemplates.DataTemplates.AddInstalledFeature*
  commentId: Overload:TimeCockpit.Data.Database.StringTemplates.DataTemplates.AddInstalledFeature
  isExternal: false
  name: AddInstalledFeature
  nameWithType: DataTemplates.AddInstalledFeature
  fullName: TimeCockpit.Data.Database.StringTemplates.DataTemplates.AddInstalledFeature
- uid: TimeCockpit.Data.Database.StringTemplates.DataTemplates.RemoveInstalledFeature*
  commentId: Overload:TimeCockpit.Data.Database.StringTemplates.DataTemplates.RemoveInstalledFeature
  isExternal: false
  name: RemoveInstalledFeature
  nameWithType: DataTemplates.RemoveInstalledFeature
  fullName: TimeCockpit.Data.Database.StringTemplates.DataTemplates.RemoveInstalledFeature
- uid: TimeCockpit.Data.Database.StringTemplates.DataTemplates.ExecuteDatabaseCommandOnServer*
  commentId: Overload:TimeCockpit.Data.Database.StringTemplates.DataTemplates.ExecuteDatabaseCommandOnServer
  isExternal: false
  name: ExecuteDatabaseCommandOnServer
  nameWithType: DataTemplates.ExecuteDatabaseCommandOnServer
  fullName: TimeCockpit.Data.Database.StringTemplates.DataTemplates.ExecuteDatabaseCommandOnServer
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: TimeCockpit.Data.Database.StringTemplates.DataTemplates.AddBlobsToGarbageCollection*
  commentId: Overload:TimeCockpit.Data.Database.StringTemplates.DataTemplates.AddBlobsToGarbageCollection
  isExternal: false
  name: AddBlobsToGarbageCollection
  nameWithType: DataTemplates.AddBlobsToGarbageCollection
  fullName: TimeCockpit.Data.Database.StringTemplates.DataTemplates.AddBlobsToGarbageCollection
- uid: TimeCockpit.Data.DataModel.BinaryProperty
  commentId: T:TimeCockpit.Data.DataModel.BinaryProperty
  parent: TimeCockpit.Data.DataModel
  isExternal: false
  name: BinaryProperty
  nameWithType: BinaryProperty
  fullName: TimeCockpit.Data.DataModel.BinaryProperty
- uid: TimeCockpit.Data.Database.StringTemplates.DataTemplates.AddBlobsOfObjectsToGarbageCollection*
  commentId: Overload:TimeCockpit.Data.Database.StringTemplates.DataTemplates.AddBlobsOfObjectsToGarbageCollection
  isExternal: false
  name: AddBlobsOfObjectsToGarbageCollection
  nameWithType: DataTemplates.AddBlobsOfObjectsToGarbageCollection
  fullName: TimeCockpit.Data.Database.StringTemplates.DataTemplates.AddBlobsOfObjectsToGarbageCollection
- uid: TimeCockpit.Data.Database.StringTemplates.DataTemplates.GetGarbageBlobs*
  commentId: Overload:TimeCockpit.Data.Database.StringTemplates.DataTemplates.GetGarbageBlobs
  isExternal: false
  name: GetGarbageBlobs
  nameWithType: DataTemplates.GetGarbageBlobs
  fullName: TimeCockpit.Data.Database.StringTemplates.DataTemplates.GetGarbageBlobs
- uid: TimeCockpit.Data.Database.StringTemplates.DataTemplates.AddBlobToFetchQueueCommand*
  commentId: Overload:TimeCockpit.Data.Database.StringTemplates.DataTemplates.AddBlobToFetchQueueCommand
  isExternal: false
  name: AddBlobToFetchQueueCommand
  nameWithType: DataTemplates.AddBlobToFetchQueueCommand
  fullName: TimeCockpit.Data.Database.StringTemplates.DataTemplates.AddBlobToFetchQueueCommand
- uid: TimeCockpit.Data.Database.StringTemplates.DataTemplates.GetVersionInfo*
  commentId: Overload:TimeCockpit.Data.Database.StringTemplates.DataTemplates.GetVersionInfo
  isExternal: false
  name: GetVersionInfo
  nameWithType: DataTemplates.GetVersionInfo
  fullName: TimeCockpit.Data.Database.StringTemplates.DataTemplates.GetVersionInfo
- uid: TimeCockpit.Data.Database.StringTemplates.DataTemplates.GetVersionInfoOfDead*
  commentId: Overload:TimeCockpit.Data.Database.StringTemplates.DataTemplates.GetVersionInfoOfDead
  isExternal: false
  name: GetVersionInfoOfDead
  nameWithType: DataTemplates.GetVersionInfoOfDead
  fullName: TimeCockpit.Data.Database.StringTemplates.DataTemplates.GetVersionInfoOfDead
- uid: TimeCockpit.Data.Database.StringTemplates.DataTemplates.GetBlobsFromFetchQueueCommand*
  commentId: Overload:TimeCockpit.Data.Database.StringTemplates.DataTemplates.GetBlobsFromFetchQueueCommand
  isExternal: false
  name: GetBlobsFromFetchQueueCommand
  nameWithType: DataTemplates.GetBlobsFromFetchQueueCommand
  fullName: TimeCockpit.Data.Database.StringTemplates.DataTemplates.GetBlobsFromFetchQueueCommand
- uid: TimeCockpit.Data.Database.StringTemplates.DataTemplates.RemoveBlobsFromFetchQueueCommand*
  commentId: Overload:TimeCockpit.Data.Database.StringTemplates.DataTemplates.RemoveBlobsFromFetchQueueCommand
  isExternal: false
  name: RemoveBlobsFromFetchQueueCommand
  nameWithType: DataTemplates.RemoveBlobsFromFetchQueueCommand
  fullName: TimeCockpit.Data.Database.StringTemplates.DataTemplates.RemoveBlobsFromFetchQueueCommand
- uid: TimeCockpit.Data.Database.StringTemplates.DataTemplates.AttachClient*
  commentId: Overload:TimeCockpit.Data.Database.StringTemplates.DataTemplates.AttachClient
  isExternal: false
  name: AttachClient
  nameWithType: DataTemplates.AttachClient
  fullName: TimeCockpit.Data.Database.StringTemplates.DataTemplates.AttachClient
- uid: TimeCockpit.Data.Database.StringTemplates.DataTemplates.DetachClient*
  commentId: Overload:TimeCockpit.Data.Database.StringTemplates.DataTemplates.DetachClient
  isExternal: false
  name: DetachClient
  nameWithType: DataTemplates.DetachClient
  fullName: TimeCockpit.Data.Database.StringTemplates.DataTemplates.DetachClient
- uid: TimeCockpit.Data.Database.StringTemplates.DataTemplates.UpdateSyncClientSuccessful*
  commentId: Overload:TimeCockpit.Data.Database.StringTemplates.DataTemplates.UpdateSyncClientSuccessful
  isExternal: false
  name: UpdateSyncClientSuccessful
  nameWithType: DataTemplates.UpdateSyncClientSuccessful
  fullName: TimeCockpit.Data.Database.StringTemplates.DataTemplates.UpdateSyncClientSuccessful
- uid: TimeCockpit.Data.Database.StringTemplates.DataTemplates.UpdateSyncClientUnSuccessful*
  commentId: Overload:TimeCockpit.Data.Database.StringTemplates.DataTemplates.UpdateSyncClientUnSuccessful
  isExternal: false
  name: UpdateSyncClientUnSuccessful
  nameWithType: DataTemplates.UpdateSyncClientUnSuccessful
  fullName: TimeCockpit.Data.Database.StringTemplates.DataTemplates.UpdateSyncClientUnSuccessful
- uid: TimeCockpit.Data.Database.StringTemplates.DataTemplates.InsertSyncDate*
  commentId: Overload:TimeCockpit.Data.Database.StringTemplates.DataTemplates.InsertSyncDate
  isExternal: false
  name: InsertSyncDate
  nameWithType: DataTemplates.InsertSyncDate
  fullName: TimeCockpit.Data.Database.StringTemplates.DataTemplates.InsertSyncDate
- uid: TimeCockpit.Data.Database.StringTemplates.DataTemplates.InsertDeletionDate*
  commentId: Overload:TimeCockpit.Data.Database.StringTemplates.DataTemplates.InsertDeletionDate
  isExternal: false
  name: InsertDeletionDate
  nameWithType: DataTemplates.InsertDeletionDate
  fullName: TimeCockpit.Data.Database.StringTemplates.DataTemplates.InsertDeletionDate
- uid: TimeCockpit.Data.Database.StringTemplates.DataTemplates.GetActiveSyncClient*
  commentId: Overload:TimeCockpit.Data.Database.StringTemplates.DataTemplates.GetActiveSyncClient
  isExternal: false
  name: GetActiveSyncClient
  nameWithType: DataTemplates.GetActiveSyncClient
  fullName: TimeCockpit.Data.Database.StringTemplates.DataTemplates.GetActiveSyncClient
- uid: TimeCockpit.Data.Database.StringTemplates.DataTemplates.GetDeprecatedSyncClient*
  commentId: Overload:TimeCockpit.Data.Database.StringTemplates.DataTemplates.GetDeprecatedSyncClient
  isExternal: false
  name: GetDeprecatedSyncClient
  nameWithType: DataTemplates.GetDeprecatedSyncClient
  fullName: TimeCockpit.Data.Database.StringTemplates.DataTemplates.GetDeprecatedSyncClient
- uid: TimeCockpit.Data.Database.StringTemplates.DataTemplates.GetSyncPeriodInfo*
  commentId: Overload:TimeCockpit.Data.Database.StringTemplates.DataTemplates.GetSyncPeriodInfo
  isExternal: false
  name: GetSyncPeriodInfo
  nameWithType: DataTemplates.GetSyncPeriodInfo
  fullName: TimeCockpit.Data.Database.StringTemplates.DataTemplates.GetSyncPeriodInfo
- uid: TimeCockpit.Data.Database.StringTemplates.DataTemplates.GetLatestSuccessfulSyncDateOverAllClients*
  commentId: Overload:TimeCockpit.Data.Database.StringTemplates.DataTemplates.GetLatestSuccessfulSyncDateOverAllClients
  isExternal: false
  name: GetLatestSuccessfulSyncDateOverAllClients
  nameWithType: DataTemplates.GetLatestSuccessfulSyncDateOverAllClients
  fullName: TimeCockpit.Data.Database.StringTemplates.DataTemplates.GetLatestSuccessfulSyncDateOverAllClients
- uid: TimeCockpit.Data.Database.StringTemplates.DataTemplates.CleanupGraveyard*
  commentId: Overload:TimeCockpit.Data.Database.StringTemplates.DataTemplates.CleanupGraveyard
  isExternal: false
  name: CleanupGraveyard
  nameWithType: DataTemplates.CleanupGraveyard
  fullName: TimeCockpit.Data.Database.StringTemplates.DataTemplates.CleanupGraveyard
- uid: TimeCockpit.Data.Database.StringTemplates.DataTemplates.IsInSchema*
  commentId: Overload:TimeCockpit.Data.Database.StringTemplates.DataTemplates.IsInSchema
  isExternal: false
  name: IsInSchema
  nameWithType: DataTemplates.IsInSchema
  fullName: TimeCockpit.Data.Database.StringTemplates.DataTemplates.IsInSchema
- uid: TimeCockpit.Data.Database.StringTemplates.DataTemplates.ReadLocalizedTextValues*
  commentId: Overload:TimeCockpit.Data.Database.StringTemplates.DataTemplates.ReadLocalizedTextValues
  isExternal: false
  name: ReadLocalizedTextValues
  nameWithType: DataTemplates.ReadLocalizedTextValues
  fullName: TimeCockpit.Data.Database.StringTemplates.DataTemplates.ReadLocalizedTextValues
- uid: TimeCockpit.Data.EntityObject
  commentId: T:TimeCockpit.Data.EntityObject
  parent: TimeCockpit.Data
  isExternal: false
  name: EntityObject
  nameWithType: EntityObject
  fullName: TimeCockpit.Data.EntityObject
- uid: TimeCockpit.Data.DataModel.Culture[]
  name: Culture[]
  nameWithType: Culture[]
  fullName: TimeCockpit.Data.DataModel.Culture[]
  nameWithType.vb: Culture()
  fullName.vb: TimeCockpit.Data.DataModel.Culture()
  name.vb: Culture()
  spec.csharp:
  - uid: TimeCockpit.Data.DataModel.Culture
    name: Culture
    nameWithType: Culture
    fullName: TimeCockpit.Data.DataModel.Culture
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: TimeCockpit.Data.DataModel.Culture
    name: Culture
    nameWithType: Culture
    fullName: TimeCockpit.Data.DataModel.Culture
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: TimeCockpit.Data
  commentId: N:TimeCockpit.Data
  isExternal: false
  name: TimeCockpit.Data
  nameWithType: TimeCockpit.Data
  fullName: TimeCockpit.Data
- uid: TimeCockpit.Data.Database.StringTemplates.DataTemplates.StoreLocalizedTextValues*
  commentId: Overload:TimeCockpit.Data.Database.StringTemplates.DataTemplates.StoreLocalizedTextValues
  isExternal: false
  name: StoreLocalizedTextValues
  nameWithType: DataTemplates.StoreLocalizedTextValues
  fullName: TimeCockpit.Data.Database.StringTemplates.DataTemplates.StoreLocalizedTextValues
