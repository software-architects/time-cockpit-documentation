### YamlMime:ManagedReference
items:
- uid: TimeCockpit.Data.DataModel.Actions.ModelEntityTypeCondition
  commentId: T:TimeCockpit.Data.DataModel.Actions.ModelEntityTypeCondition
  id: ModelEntityTypeCondition
  parent: TimeCockpit.Data.DataModel.Actions
  children:
  - TimeCockpit.Data.DataModel.Actions.ModelEntityTypeCondition.#ctor
  - TimeCockpit.Data.DataModel.Actions.ModelEntityTypeCondition.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Object,System.Object}})
  - TimeCockpit.Data.DataModel.Actions.ModelEntityTypeCondition.Clone
  - TimeCockpit.Data.DataModel.Actions.ModelEntityTypeCondition.GetStatus(TimeCockpit.Data.DataModel.Actions.ModelActionContext)
  - TimeCockpit.Data.DataModel.Actions.ModelEntityTypeCondition.MinimumInputSetSize
  - TimeCockpit.Data.DataModel.Actions.ModelEntityTypeCondition.ModelEntity
  - TimeCockpit.Data.DataModel.Actions.ModelEntityTypeCondition.ModelEntityName
  langs:
  - csharp
  - vb
  name: ModelEntityTypeCondition
  nameWithType: ModelEntityTypeCondition
  fullName: TimeCockpit.Data.DataModel.Actions.ModelEntityTypeCondition
  type: Class
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/Actions/ModelEntityTypeCondition.cs
    id: ModelEntityTypeCondition
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/Actions/ModelEntityTypeCondition.cs
    startLine: 28
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel.Actions
  summary: "\nEncapsulates information about a condition which determines if the code of a <xref href=\"TimeCockpit.Data.DataModel.Actions.ModelAction.Binding\" data-throw-if-not-resolved=\"false\"></xref> is executable.\n"
  remarks: "\n<p>\nThe <xref href=\"TimeCockpit.Data.DataModel.Actions.ModelEntityTypeCondition\" data-throw-if-not-resolved=\"false\"></xref> is the only <xref href=\"TimeCockpit.Data.DataModel.Condition\" data-throw-if-not-resolved=\"false\"></xref> that is currently supported!\n</p>\n<p>\nIn order to create a valid instance of <xref href=\"TimeCockpit.Data.DataModel.Actions.ModelEntityTypeCondition\" data-throw-if-not-resolved=\"false\"></xref>, the <xref href=\"TimeCockpit.Data.DataModel.Actions.ModelEntityTypeCondition.ModelEntity\" data-throw-if-not-resolved=\"false\"></xref> property needs to be set.\nIt does not suffice to only set the <xref href=\"TimeCockpit.Data.DataModel.Actions.ModelEntityTypeCondition.ModelEntityName\" data-throw-if-not-resolved=\"false\"></xref>. The latter property is only used for serialilzation purposes.\n</p>\n"
  example: []
  syntax:
    content: >-
      [DataContract]

      [JsonObject(MemberSerialization.OptIn)]

      public class ModelEntityTypeCondition : Condition, IDynamicMetaObjectProvider, INotifyPropertyChanged
    content.vb: >-
      <DataContract>

      <JsonObject(MemberSerialization.OptIn)>

      Public Class ModelEntityTypeCondition
          Inherits Condition
          Implements IDynamicMetaObjectProvider, INotifyPropertyChanged
  inheritance:
  - System.Object
  - TimeCockpit.Data.DynamicObject
  - TimeCockpit.Data.DataModel.NamedDynamicObject
  - TimeCockpit.Data.DataModel.Condition
  implements:
  - System.Dynamic.IDynamicMetaObjectProvider
  - System.ComponentModel.INotifyPropertyChanged
  inheritedMembers:
  - TimeCockpit.Data.DataModel.NamedDynamicObject.PropertyChanged
  - TimeCockpit.Data.DataModel.NamedDynamicObject.Name
  - TimeCockpit.Data.DataModel.NamedDynamicObject.OnPropertyChanged(System.String)
  - TimeCockpit.Data.DynamicObject.GetMember(System.String)
  - TimeCockpit.Data.DynamicObject.SetMember(System.String,System.Object)
  - TimeCockpit.Data.DynamicObject.GetMetaObject(System.Linq.Expressions.Expression)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
  - type: Newtonsoft.Json.JsonObjectAttribute
    ctor: Newtonsoft.Json.JsonObjectAttribute.#ctor(Newtonsoft.Json.MemberSerialization)
    arguments:
    - type: Newtonsoft.Json.MemberSerialization
      value: 1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TimeCockpit.Data.DataModel.Actions.ModelEntityTypeCondition.#ctor
  commentId: M:TimeCockpit.Data.DataModel.Actions.ModelEntityTypeCondition.#ctor
  id: '#ctor'
  parent: TimeCockpit.Data.DataModel.Actions.ModelEntityTypeCondition
  langs:
  - csharp
  - vb
  name: ModelEntityTypeCondition()
  nameWithType: ModelEntityTypeCondition.ModelEntityTypeCondition()
  fullName: TimeCockpit.Data.DataModel.Actions.ModelEntityTypeCondition.ModelEntityTypeCondition()
  type: Constructor
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/Actions/ModelEntityTypeCondition.cs
    id: .ctor
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/Actions/ModelEntityTypeCondition.cs
    startLine: 59
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel.Actions
  summary: "\nInitializes a new instance of the ModelEntityTypeCondition class\n"
  example: []
  syntax:
    content: public ModelEntityTypeCondition()
    content.vb: Public Sub New
  overload: TimeCockpit.Data.DataModel.Actions.ModelEntityTypeCondition.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.DataModel.Actions.ModelEntityTypeCondition.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Object,System.Object}})
  commentId: M:TimeCockpit.Data.DataModel.Actions.ModelEntityTypeCondition.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Object,System.Object}})
  id: '#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Object,System.Object}})'
  parent: TimeCockpit.Data.DataModel.Actions.ModelEntityTypeCondition
  langs:
  - csharp
  - vb
  name: ModelEntityTypeCondition(IEnumerable<KeyValuePair<Object, Object>>)
  nameWithType: ModelEntityTypeCondition.ModelEntityTypeCondition(IEnumerable<KeyValuePair<Object, Object>>)
  fullName: TimeCockpit.Data.DataModel.Actions.ModelEntityTypeCondition.ModelEntityTypeCondition(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.Object, System.Object>>)
  type: Constructor
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/Actions/ModelEntityTypeCondition.cs
    id: .ctor
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/Actions/ModelEntityTypeCondition.cs
    startLine: 68
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel.Actions
  summary: "\nInitializes a new instance of the ModelEntityTypeCondition class.\n"
  example: []
  syntax:
    content: public ModelEntityTypeCondition(IEnumerable<KeyValuePair<object, object>> properties)
    parameters:
    - id: properties
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Object,System.Object}}
      description: Collection of properties.
    content.vb: Public Sub New(properties As IEnumerable(Of KeyValuePair(Of Object, Object)))
  overload: TimeCockpit.Data.DataModel.Actions.ModelEntityTypeCondition.#ctor*
  nameWithType.vb: ModelEntityTypeCondition.ModelEntityTypeCondition(IEnumerable(Of KeyValuePair(Of Object, Object)))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TimeCockpit.Data.DataModel.Actions.ModelEntityTypeCondition.ModelEntityTypeCondition(System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.Object, System.Object)))
  name.vb: ModelEntityTypeCondition(IEnumerable(Of KeyValuePair(Of Object, Object)))
- uid: TimeCockpit.Data.DataModel.Actions.ModelEntityTypeCondition.ModelEntityName
  commentId: P:TimeCockpit.Data.DataModel.Actions.ModelEntityTypeCondition.ModelEntityName
  id: ModelEntityName
  parent: TimeCockpit.Data.DataModel.Actions.ModelEntityTypeCondition
  langs:
  - csharp
  - vb
  name: ModelEntityName
  nameWithType: ModelEntityTypeCondition.ModelEntityName
  fullName: TimeCockpit.Data.DataModel.Actions.ModelEntityTypeCondition.ModelEntityName
  type: Property
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/Actions/ModelEntityTypeCondition.cs
    id: ModelEntityName
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/Actions/ModelEntityTypeCondition.cs
    startLine: 84
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel.Actions
  summary: "\nGets or sets the name of the <xref href=\"TimeCockpit.Data.DataModel.Actions.ModelEntityTypeCondition.ModelEntity\" data-throw-if-not-resolved=\"false\"></xref> of the current <xref href=\"TimeCockpit.Data.DataModel.Actions.ModelEntityTypeCondition\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\nThis property should not be set. It is only used for deferred loading (deserialization) of <xref href=\"TimeCockpit.Data.DataModel.Actions.ModelEntityTypeCondition\" data-throw-if-not-resolved=\"false\"></xref>s in the data layer.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      [JsonProperty]

      public string ModelEntityName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <DataMember>

      <JsonProperty>

      Public Property ModelEntityName As String
  overload: TimeCockpit.Data.DataModel.Actions.ModelEntityTypeCondition.ModelEntityName*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.DataModel.Actions.ModelEntityTypeCondition.ModelEntity
  commentId: P:TimeCockpit.Data.DataModel.Actions.ModelEntityTypeCondition.ModelEntity
  id: ModelEntity
  parent: TimeCockpit.Data.DataModel.Actions.ModelEntityTypeCondition
  langs:
  - csharp
  - vb
  name: ModelEntity
  nameWithType: ModelEntityTypeCondition.ModelEntity
  fullName: TimeCockpit.Data.DataModel.Actions.ModelEntityTypeCondition.ModelEntity
  type: Property
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/Actions/ModelEntityTypeCondition.cs
    id: ModelEntity
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/Actions/ModelEntityTypeCondition.cs
    startLine: 111
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel.Actions
  summary: "\nGets or sets a model entity that a <xref href=\"TimeCockpit.Data.DataModel.Actions.ModelAction\" data-throw-if-not-resolved=\"false\"></xref> may be applied to.\n"
  remarks: "\nDuring the validation process of a <xref href=\"TimeCockpit.Data.DataModel.Actions.ModelAction\" data-throw-if-not-resolved=\"false\"></xref>, it is checked that the <xref href=\"TimeCockpit.Data.DataModel.ModelEntityBase\" data-throw-if-not-resolved=\"false\"></xref>\nrepresented by this property is attached to the same <xref href=\"TimeCockpit.Data.DataModel.Model\" data-throw-if-not-resolved=\"false\"></xref> as the <xref href=\"TimeCockpit.Data.DataModel.Actions.ModelAction\" data-throw-if-not-resolved=\"false\"></xref> it belongs\nto.\n"
  example: []
  syntax:
    content: >-
      [JsonIgnore]

      public ModelEntityBase ModelEntity { get; set; }
    parameters: []
    return:
      type: TimeCockpit.Data.DataModel.ModelEntityBase
    content.vb: >-
      <JsonIgnore>

      Public Property ModelEntity As ModelEntityBase
  overload: TimeCockpit.Data.DataModel.Actions.ModelEntityTypeCondition.ModelEntity*
  attributes:
  - type: Newtonsoft.Json.JsonIgnoreAttribute
    ctor: Newtonsoft.Json.JsonIgnoreAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.DataModel.Actions.ModelEntityTypeCondition.MinimumInputSetSize
  commentId: P:TimeCockpit.Data.DataModel.Actions.ModelEntityTypeCondition.MinimumInputSetSize
  id: MinimumInputSetSize
  parent: TimeCockpit.Data.DataModel.Actions.ModelEntityTypeCondition
  langs:
  - csharp
  - vb
  name: MinimumInputSetSize
  nameWithType: ModelEntityTypeCondition.MinimumInputSetSize
  fullName: TimeCockpit.Data.DataModel.Actions.ModelEntityTypeCondition.MinimumInputSetSize
  type: Property
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/Actions/ModelEntityTypeCondition.cs
    id: MinimumInputSetSize
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/Actions/ModelEntityTypeCondition.cs
    startLine: 135
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel.Actions
  summary: "\nGets or sets the minimum number of <xref href=\"TimeCockpit.Data.EntityObject\" data-throw-if-not-resolved=\"false\"></xref>s in <xref href=\"TimeCockpit.Data.DataModel.Actions.ExecutionContext.InputSet\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      [JsonProperty]

      public int MinimumInputSetSize { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <DataMember>

      <JsonProperty>

      Public Property MinimumInputSetSize As Integer
  overload: TimeCockpit.Data.DataModel.Actions.ModelEntityTypeCondition.MinimumInputSetSize*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.DataModel.Actions.ModelEntityTypeCondition.Clone
  commentId: M:TimeCockpit.Data.DataModel.Actions.ModelEntityTypeCondition.Clone
  id: Clone
  parent: TimeCockpit.Data.DataModel.Actions.ModelEntityTypeCondition
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: ModelEntityTypeCondition.Clone()
  fullName: TimeCockpit.Data.DataModel.Actions.ModelEntityTypeCondition.Clone()
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/Actions/ModelEntityTypeCondition.cs
    id: Clone
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/Actions/ModelEntityTypeCondition.cs
    startLine: 159
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel.Actions
  summary: "\nCreates a deep copy of the condition.\n"
  example: []
  syntax:
    content: public override Condition Clone()
    return:
      type: TimeCockpit.Data.DataModel.Condition
      description: Create a deep copy of the condition.
    content.vb: Public Overrides Function Clone As Condition
  overridden: TimeCockpit.Data.DataModel.Condition.Clone
  overload: TimeCockpit.Data.DataModel.Actions.ModelEntityTypeCondition.Clone*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: TimeCockpit.Data.DataModel.Actions.ModelEntityTypeCondition.GetStatus(TimeCockpit.Data.DataModel.Actions.ModelActionContext)
  commentId: M:TimeCockpit.Data.DataModel.Actions.ModelEntityTypeCondition.GetStatus(TimeCockpit.Data.DataModel.Actions.ModelActionContext)
  id: GetStatus(TimeCockpit.Data.DataModel.Actions.ModelActionContext)
  parent: TimeCockpit.Data.DataModel.Actions.ModelEntityTypeCondition
  langs:
  - csharp
  - vb
  name: GetStatus(ModelActionContext)
  nameWithType: ModelEntityTypeCondition.GetStatus(ModelActionContext)
  fullName: TimeCockpit.Data.DataModel.Actions.ModelEntityTypeCondition.GetStatus(TimeCockpit.Data.DataModel.Actions.ModelActionContext)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/Actions/ModelEntityTypeCondition.cs
    id: GetStatus
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/Actions/ModelEntityTypeCondition.cs
    startLine: 171
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel.Actions
  summary: "\nChecks the status a <xref href=\"TimeCockpit.Data.DataModel.Condition\" data-throw-if-not-resolved=\"false\"></xref> has in respect to a <xref href=\"TimeCockpit.Data.DataModel.Actions.ModelActionContext\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: protected override Status GetStatus(ModelActionContext context)
    parameters:
    - id: context
      type: TimeCockpit.Data.DataModel.Actions.ModelActionContext
      description: The <xref href="TimeCockpit.Data.DataModel.Actions.ModelActionContext" data-throw-if-not-resolved="false"></xref> the <xref href="TimeCockpit.Data.DataModel.Actions.ModelAction" data-throw-if-not-resolved="false"></xref> is to be executed in.
    return:
      type: TimeCockpit.Data.DataModel.Actions.Status
      description: "\nThe status the <xref href=\"TimeCockpit.Data.DataModel.Condition\" data-throw-if-not-resolved=\"false\"></xref> has in respect to the given <xref href=\"TimeCockpit.Data.DataModel.Actions.ModelActionContext\" data-throw-if-not-resolved=\"false\"></xref>. See <xref href=\"TimeCockpit.Data.DataModel.Actions.Status\" data-throw-if-not-resolved=\"false\"></xref>.\n"
    content.vb: Protected Overrides Function GetStatus(context As ModelActionContext) As Status
  overridden: TimeCockpit.Data.DataModel.Condition.GetStatus(TimeCockpit.Data.DataModel.Actions.ModelActionContext)
  overload: TimeCockpit.Data.DataModel.Actions.ModelEntityTypeCondition.GetStatus*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: TimeCockpit.Data.DataModel.Actions.ModelAction.Binding
  commentId: P:TimeCockpit.Data.DataModel.Actions.ModelAction.Binding
- uid: TimeCockpit.Data.DataModel.Actions.ModelEntityTypeCondition
  commentId: T:TimeCockpit.Data.DataModel.Actions.ModelEntityTypeCondition
  parent: TimeCockpit.Data.DataModel.Actions
  isExternal: false
  name: ModelEntityTypeCondition
  nameWithType: ModelEntityTypeCondition
  fullName: TimeCockpit.Data.DataModel.Actions.ModelEntityTypeCondition
- uid: TimeCockpit.Data.DataModel.Condition
  commentId: T:TimeCockpit.Data.DataModel.Condition
  parent: TimeCockpit.Data.DataModel
  isExternal: false
  name: Condition
  nameWithType: Condition
  fullName: TimeCockpit.Data.DataModel.Condition
- uid: TimeCockpit.Data.DataModel.Actions.ModelEntityTypeCondition.ModelEntity
  commentId: P:TimeCockpit.Data.DataModel.Actions.ModelEntityTypeCondition.ModelEntity
- uid: TimeCockpit.Data.DataModel.Actions.ModelEntityTypeCondition.ModelEntityName
  commentId: P:TimeCockpit.Data.DataModel.Actions.ModelEntityTypeCondition.ModelEntityName
- uid: TimeCockpit.Data.DataModel.Actions
  commentId: N:TimeCockpit.Data.DataModel.Actions
  isExternal: false
  name: TimeCockpit.Data.DataModel.Actions
  nameWithType: TimeCockpit.Data.DataModel.Actions
  fullName: TimeCockpit.Data.DataModel.Actions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: TimeCockpit.Data.DynamicObject
  commentId: T:TimeCockpit.Data.DynamicObject
  parent: TimeCockpit.Data
  isExternal: false
  name: DynamicObject
  nameWithType: DynamicObject
  fullName: TimeCockpit.Data.DynamicObject
- uid: TimeCockpit.Data.DataModel.NamedDynamicObject
  commentId: T:TimeCockpit.Data.DataModel.NamedDynamicObject
  parent: TimeCockpit.Data.DataModel
  isExternal: false
  name: NamedDynamicObject
  nameWithType: NamedDynamicObject
  fullName: TimeCockpit.Data.DataModel.NamedDynamicObject
- uid: System.Dynamic.IDynamicMetaObjectProvider
  commentId: T:System.Dynamic.IDynamicMetaObjectProvider
  parent: System.Dynamic
  isExternal: true
  name: IDynamicMetaObjectProvider
  nameWithType: IDynamicMetaObjectProvider
  fullName: System.Dynamic.IDynamicMetaObjectProvider
- uid: System.ComponentModel.INotifyPropertyChanged
  commentId: T:System.ComponentModel.INotifyPropertyChanged
  parent: System.ComponentModel
  isExternal: true
  name: INotifyPropertyChanged
  nameWithType: INotifyPropertyChanged
  fullName: System.ComponentModel.INotifyPropertyChanged
- uid: TimeCockpit.Data.DataModel.NamedDynamicObject.PropertyChanged
  commentId: E:TimeCockpit.Data.DataModel.NamedDynamicObject.PropertyChanged
  parent: TimeCockpit.Data.DataModel.NamedDynamicObject
  isExternal: false
  name: PropertyChanged
  nameWithType: NamedDynamicObject.PropertyChanged
  fullName: TimeCockpit.Data.DataModel.NamedDynamicObject.PropertyChanged
- uid: TimeCockpit.Data.DataModel.NamedDynamicObject.Name
  commentId: P:TimeCockpit.Data.DataModel.NamedDynamicObject.Name
  parent: TimeCockpit.Data.DataModel.NamedDynamicObject
  isExternal: false
  name: Name
  nameWithType: NamedDynamicObject.Name
  fullName: TimeCockpit.Data.DataModel.NamedDynamicObject.Name
- uid: TimeCockpit.Data.DataModel.NamedDynamicObject.OnPropertyChanged(System.String)
  commentId: M:TimeCockpit.Data.DataModel.NamedDynamicObject.OnPropertyChanged(System.String)
  parent: TimeCockpit.Data.DataModel.NamedDynamicObject
  isExternal: true
  name: OnPropertyChanged(String)
  nameWithType: NamedDynamicObject.OnPropertyChanged(String)
  fullName: TimeCockpit.Data.DataModel.NamedDynamicObject.OnPropertyChanged(System.String)
  spec.csharp:
  - uid: TimeCockpit.Data.DataModel.NamedDynamicObject.OnPropertyChanged(System.String)
    name: OnPropertyChanged
    nameWithType: NamedDynamicObject.OnPropertyChanged
    fullName: TimeCockpit.Data.DataModel.NamedDynamicObject.OnPropertyChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TimeCockpit.Data.DataModel.NamedDynamicObject.OnPropertyChanged(System.String)
    name: OnPropertyChanged
    nameWithType: NamedDynamicObject.OnPropertyChanged
    fullName: TimeCockpit.Data.DataModel.NamedDynamicObject.OnPropertyChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.DynamicObject.GetMember(System.String)
  commentId: M:TimeCockpit.Data.DynamicObject.GetMember(System.String)
  parent: TimeCockpit.Data.DynamicObject
  isExternal: true
  name: GetMember(String)
  nameWithType: DynamicObject.GetMember(String)
  fullName: TimeCockpit.Data.DynamicObject.GetMember(System.String)
  spec.csharp:
  - uid: TimeCockpit.Data.DynamicObject.GetMember(System.String)
    name: GetMember
    nameWithType: DynamicObject.GetMember
    fullName: TimeCockpit.Data.DynamicObject.GetMember
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TimeCockpit.Data.DynamicObject.GetMember(System.String)
    name: GetMember
    nameWithType: DynamicObject.GetMember
    fullName: TimeCockpit.Data.DynamicObject.GetMember
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.DynamicObject.SetMember(System.String,System.Object)
  commentId: M:TimeCockpit.Data.DynamicObject.SetMember(System.String,System.Object)
  parent: TimeCockpit.Data.DynamicObject
  isExternal: true
  name: SetMember(String, Object)
  nameWithType: DynamicObject.SetMember(String, Object)
  fullName: TimeCockpit.Data.DynamicObject.SetMember(System.String, System.Object)
  spec.csharp:
  - uid: TimeCockpit.Data.DynamicObject.SetMember(System.String,System.Object)
    name: SetMember
    nameWithType: DynamicObject.SetMember
    fullName: TimeCockpit.Data.DynamicObject.SetMember
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TimeCockpit.Data.DynamicObject.SetMember(System.String,System.Object)
    name: SetMember
    nameWithType: DynamicObject.SetMember
    fullName: TimeCockpit.Data.DynamicObject.SetMember
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.DynamicObject.GetMetaObject(System.Linq.Expressions.Expression)
  commentId: M:TimeCockpit.Data.DynamicObject.GetMetaObject(System.Linq.Expressions.Expression)
  parent: TimeCockpit.Data.DynamicObject
  isExternal: true
  name: GetMetaObject(Expression)
  nameWithType: DynamicObject.GetMetaObject(Expression)
  fullName: TimeCockpit.Data.DynamicObject.GetMetaObject(System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: TimeCockpit.Data.DynamicObject.GetMetaObject(System.Linq.Expressions.Expression)
    name: GetMetaObject
    nameWithType: DynamicObject.GetMetaObject
    fullName: TimeCockpit.Data.DynamicObject.GetMetaObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TimeCockpit.Data.DynamicObject.GetMetaObject(System.Linq.Expressions.Expression)
    name: GetMetaObject
    nameWithType: DynamicObject.GetMetaObject
    fullName: TimeCockpit.Data.DynamicObject.GetMetaObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.DataModel
  commentId: N:TimeCockpit.Data.DataModel
  isExternal: false
  name: TimeCockpit.Data.DataModel
  nameWithType: TimeCockpit.Data.DataModel
  fullName: TimeCockpit.Data.DataModel
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: TimeCockpit.Data
  commentId: N:TimeCockpit.Data
  isExternal: false
  name: TimeCockpit.Data
  nameWithType: TimeCockpit.Data
  fullName: TimeCockpit.Data
- uid: System.Dynamic
  commentId: N:System.Dynamic
  isExternal: false
  name: System.Dynamic
  nameWithType: System.Dynamic
  fullName: System.Dynamic
- uid: System.ComponentModel
  commentId: N:System.ComponentModel
  isExternal: false
  name: System.ComponentModel
  nameWithType: System.ComponentModel
  fullName: System.ComponentModel
- uid: TimeCockpit.Data.DataModel.Actions.ModelEntityTypeCondition.#ctor*
  commentId: Overload:TimeCockpit.Data.DataModel.Actions.ModelEntityTypeCondition.#ctor
  isExternal: false
  name: ModelEntityTypeCondition
  nameWithType: ModelEntityTypeCondition.ModelEntityTypeCondition
  fullName: TimeCockpit.Data.DataModel.Actions.ModelEntityTypeCondition.ModelEntityTypeCondition
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Object,System.Object}}
  commentId: T:System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Object,System.Object}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<KeyValuePair<Object, Object>>
  nameWithType: IEnumerable<KeyValuePair<Object, Object>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.Object, System.Object>>
  nameWithType.vb: IEnumerable(Of KeyValuePair(Of Object, Object))
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.Object, System.Object))
  name.vb: IEnumerable(Of KeyValuePair(Of Object, Object))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: TimeCockpit.Data.DataModel.Actions.ModelEntityTypeCondition.ModelEntityName*
  commentId: Overload:TimeCockpit.Data.DataModel.Actions.ModelEntityTypeCondition.ModelEntityName
  isExternal: false
  name: ModelEntityName
  nameWithType: ModelEntityTypeCondition.ModelEntityName
  fullName: TimeCockpit.Data.DataModel.Actions.ModelEntityTypeCondition.ModelEntityName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: TimeCockpit.Data.DataModel.Actions.ModelAction
  commentId: T:TimeCockpit.Data.DataModel.Actions.ModelAction
  parent: TimeCockpit.Data.DataModel.Actions
  isExternal: false
  name: ModelAction
  nameWithType: ModelAction
  fullName: TimeCockpit.Data.DataModel.Actions.ModelAction
- uid: TimeCockpit.Data.DataModel.ModelEntityBase
  commentId: T:TimeCockpit.Data.DataModel.ModelEntityBase
  parent: TimeCockpit.Data.DataModel
  isExternal: false
  name: ModelEntityBase
  nameWithType: ModelEntityBase
  fullName: TimeCockpit.Data.DataModel.ModelEntityBase
- uid: TimeCockpit.Data.DataModel.Model
  commentId: T:TimeCockpit.Data.DataModel.Model
  parent: TimeCockpit.Data.DataModel
  isExternal: false
  name: Model
  nameWithType: Model
  fullName: TimeCockpit.Data.DataModel.Model
- uid: TimeCockpit.Data.DataModel.Actions.ModelEntityTypeCondition.ModelEntity*
  commentId: Overload:TimeCockpit.Data.DataModel.Actions.ModelEntityTypeCondition.ModelEntity
  isExternal: false
  name: ModelEntity
  nameWithType: ModelEntityTypeCondition.ModelEntity
  fullName: TimeCockpit.Data.DataModel.Actions.ModelEntityTypeCondition.ModelEntity
- uid: TimeCockpit.Data.EntityObject
  commentId: T:TimeCockpit.Data.EntityObject
  parent: TimeCockpit.Data
  isExternal: false
  name: EntityObject
  nameWithType: EntityObject
  fullName: TimeCockpit.Data.EntityObject
- uid: TimeCockpit.Data.DataModel.Actions.ExecutionContext.InputSet
  commentId: P:TimeCockpit.Data.DataModel.Actions.ExecutionContext.InputSet
- uid: TimeCockpit.Data.DataModel.Actions.ModelEntityTypeCondition.MinimumInputSetSize*
  commentId: Overload:TimeCockpit.Data.DataModel.Actions.ModelEntityTypeCondition.MinimumInputSetSize
  isExternal: false
  name: MinimumInputSetSize
  nameWithType: ModelEntityTypeCondition.MinimumInputSetSize
  fullName: TimeCockpit.Data.DataModel.Actions.ModelEntityTypeCondition.MinimumInputSetSize
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: TimeCockpit.Data.DataModel.Condition.Clone
  commentId: M:TimeCockpit.Data.DataModel.Condition.Clone
  parent: TimeCockpit.Data.DataModel.Condition
  isExternal: false
  name: Clone()
  nameWithType: Condition.Clone()
  fullName: TimeCockpit.Data.DataModel.Condition.Clone()
  spec.csharp:
  - uid: TimeCockpit.Data.DataModel.Condition.Clone
    name: Clone
    nameWithType: Condition.Clone
    fullName: TimeCockpit.Data.DataModel.Condition.Clone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TimeCockpit.Data.DataModel.Condition.Clone
    name: Clone
    nameWithType: Condition.Clone
    fullName: TimeCockpit.Data.DataModel.Condition.Clone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.DataModel.Actions.ModelEntityTypeCondition.Clone*
  commentId: Overload:TimeCockpit.Data.DataModel.Actions.ModelEntityTypeCondition.Clone
  isExternal: false
  name: Clone
  nameWithType: ModelEntityTypeCondition.Clone
  fullName: TimeCockpit.Data.DataModel.Actions.ModelEntityTypeCondition.Clone
- uid: TimeCockpit.Data.DataModel.Actions.ModelActionContext
  commentId: T:TimeCockpit.Data.DataModel.Actions.ModelActionContext
  parent: TimeCockpit.Data.DataModel.Actions
  isExternal: false
  name: ModelActionContext
  nameWithType: ModelActionContext
  fullName: TimeCockpit.Data.DataModel.Actions.ModelActionContext
- uid: TimeCockpit.Data.DataModel.Actions.Status
  commentId: T:TimeCockpit.Data.DataModel.Actions.Status
  parent: TimeCockpit.Data.DataModel.Actions
  isExternal: false
  name: Status
  nameWithType: Status
  fullName: TimeCockpit.Data.DataModel.Actions.Status
- uid: TimeCockpit.Data.DataModel.Condition.GetStatus(TimeCockpit.Data.DataModel.Actions.ModelActionContext)
  commentId: M:TimeCockpit.Data.DataModel.Condition.GetStatus(TimeCockpit.Data.DataModel.Actions.ModelActionContext)
  parent: TimeCockpit.Data.DataModel.Condition
  isExternal: false
  name: GetStatus(ModelActionContext)
  nameWithType: Condition.GetStatus(ModelActionContext)
  fullName: TimeCockpit.Data.DataModel.Condition.GetStatus(TimeCockpit.Data.DataModel.Actions.ModelActionContext)
  spec.csharp:
  - uid: TimeCockpit.Data.DataModel.Condition.GetStatus(TimeCockpit.Data.DataModel.Actions.ModelActionContext)
    name: GetStatus
    nameWithType: Condition.GetStatus
    fullName: TimeCockpit.Data.DataModel.Condition.GetStatus
  - name: (
    nameWithType: (
    fullName: (
  - uid: TimeCockpit.Data.DataModel.Actions.ModelActionContext
    name: ModelActionContext
    nameWithType: ModelActionContext
    fullName: TimeCockpit.Data.DataModel.Actions.ModelActionContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TimeCockpit.Data.DataModel.Condition.GetStatus(TimeCockpit.Data.DataModel.Actions.ModelActionContext)
    name: GetStatus
    nameWithType: Condition.GetStatus
    fullName: TimeCockpit.Data.DataModel.Condition.GetStatus
  - name: (
    nameWithType: (
    fullName: (
  - uid: TimeCockpit.Data.DataModel.Actions.ModelActionContext
    name: ModelActionContext
    nameWithType: ModelActionContext
    fullName: TimeCockpit.Data.DataModel.Actions.ModelActionContext
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.DataModel.Actions.ModelEntityTypeCondition.GetStatus*
  commentId: Overload:TimeCockpit.Data.DataModel.Actions.ModelEntityTypeCondition.GetStatus
  isExternal: false
  name: GetStatus
  nameWithType: ModelEntityTypeCondition.GetStatus
  fullName: TimeCockpit.Data.DataModel.Actions.ModelEntityTypeCondition.GetStatus
