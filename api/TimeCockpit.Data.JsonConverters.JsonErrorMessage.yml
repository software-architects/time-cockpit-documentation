### YamlMime:ManagedReference
items:
- uid: TimeCockpit.Data.JsonConverters.JsonErrorMessage
  commentId: T:TimeCockpit.Data.JsonConverters.JsonErrorMessage
  id: JsonErrorMessage
  parent: TimeCockpit.Data.JsonConverters
  children:
  - TimeCockpit.Data.JsonConverters.JsonErrorMessage.ExceptionType
  - TimeCockpit.Data.JsonConverters.JsonErrorMessage.Message
  - TimeCockpit.Data.JsonConverters.JsonErrorMessage.Read(Newtonsoft.Json.JsonReader)
  - TimeCockpit.Data.JsonConverters.JsonErrorMessage.StackTrace
  - TimeCockpit.Data.JsonConverters.JsonErrorMessage.Write(Newtonsoft.Json.JsonWriter,TimeCockpit.Data.JsonConverters.JsonErrorMessage)
  langs:
  - csharp
  - vb
  name: JsonErrorMessage
  nameWithType: JsonErrorMessage
  fullName: TimeCockpit.Data.JsonConverters.JsonErrorMessage
  type: Class
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/JsonConverters/JsonErrorMessage.cs
    id: JsonErrorMessage
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/JsonConverters/JsonErrorMessage.cs
    startLine: 18
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.JsonConverters
  summary: "\nRepresents the result of a rest query. \nThe class is serialized in json and is sent to the client.\nA REST query always returns a <xref href=\"TimeCockpit.Data.JsonConverters.JsonServiceOperationInfo\" data-throw-if-not-resolved=\"false\"></xref> or a \nderived class.\n"
  example: []
  syntax:
    content: public class JsonErrorMessage
    content.vb: Public Class JsonErrorMessage
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TimeCockpit.Data.JsonConverters.JsonErrorMessage.ExceptionType
  commentId: P:TimeCockpit.Data.JsonConverters.JsonErrorMessage.ExceptionType
  id: ExceptionType
  parent: TimeCockpit.Data.JsonConverters.JsonErrorMessage
  langs:
  - csharp
  - vb
  name: ExceptionType
  nameWithType: JsonErrorMessage.ExceptionType
  fullName: TimeCockpit.Data.JsonConverters.JsonErrorMessage.ExceptionType
  type: Property
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/JsonConverters/JsonErrorMessage.cs
    id: ExceptionType
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/JsonConverters/JsonErrorMessage.cs
    startLine: 26
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.JsonConverters
  summary: "\nGets or sets the type of the exception that \noccurred on the server.\n"
  example: []
  syntax:
    content: public string ExceptionType { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ExceptionType As String
  overload: TimeCockpit.Data.JsonConverters.JsonErrorMessage.ExceptionType*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.JsonConverters.JsonErrorMessage.Message
  commentId: P:TimeCockpit.Data.JsonConverters.JsonErrorMessage.Message
  id: Message
  parent: TimeCockpit.Data.JsonConverters.JsonErrorMessage
  langs:
  - csharp
  - vb
  name: Message
  nameWithType: JsonErrorMessage.Message
  fullName: TimeCockpit.Data.JsonConverters.JsonErrorMessage.Message
  type: Property
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/JsonConverters/JsonErrorMessage.cs
    id: Message
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/JsonConverters/JsonErrorMessage.cs
    startLine: 32
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.JsonConverters
  summary: "\nGets or sets the message of the \nexception that happened on the server.\n"
  example: []
  syntax:
    content: public string Message { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Message As String
  overload: TimeCockpit.Data.JsonConverters.JsonErrorMessage.Message*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.JsonConverters.JsonErrorMessage.StackTrace
  commentId: P:TimeCockpit.Data.JsonConverters.JsonErrorMessage.StackTrace
  id: StackTrace
  parent: TimeCockpit.Data.JsonConverters.JsonErrorMessage
  langs:
  - csharp
  - vb
  name: StackTrace
  nameWithType: JsonErrorMessage.StackTrace
  fullName: TimeCockpit.Data.JsonConverters.JsonErrorMessage.StackTrace
  type: Property
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/JsonConverters/JsonErrorMessage.cs
    id: StackTrace
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/JsonConverters/JsonErrorMessage.cs
    startLine: 38
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.JsonConverters
  summary: "\nGets or sets the stack trace of the\nexception that happened on the server.\n"
  example: []
  syntax:
    content: public string StackTrace { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property StackTrace As String
  overload: TimeCockpit.Data.JsonConverters.JsonErrorMessage.StackTrace*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.JsonConverters.JsonErrorMessage.Read(Newtonsoft.Json.JsonReader)
  commentId: M:TimeCockpit.Data.JsonConverters.JsonErrorMessage.Read(Newtonsoft.Json.JsonReader)
  id: Read(Newtonsoft.Json.JsonReader)
  parent: TimeCockpit.Data.JsonConverters.JsonErrorMessage
  langs:
  - csharp
  - vb
  name: Read(JsonReader)
  nameWithType: JsonErrorMessage.Read(JsonReader)
  fullName: TimeCockpit.Data.JsonConverters.JsonErrorMessage.Read(Newtonsoft.Json.JsonReader)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/JsonConverters/JsonErrorMessage.cs
    id: Read
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/JsonConverters/JsonErrorMessage.cs
    startLine: 49
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.JsonConverters
  summary: "\nReads an instance of <xref href=\"TimeCockpit.Data.JsonConverters.JsonErrorMessage\" data-throw-if-not-resolved=\"false\"></xref> that is serialized in Json\n"
  example: []
  syntax:
    content: public static JsonErrorMessage Read(JsonReader reader)
    parameters:
    - id: reader
      type: Newtonsoft.Json.JsonReader
      description: The reader that is used to read the Json string.
    return:
      type: TimeCockpit.Data.JsonConverters.JsonErrorMessage
      description: an instance of <xref href="TimeCockpit.Data.JsonConverters.JsonErrorMessage" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Shared Function Read(reader As JsonReader) As JsonErrorMessage
  overload: TimeCockpit.Data.JsonConverters.JsonErrorMessage.Read*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: TimeCockpit.Data.JsonConverters.JsonErrorMessage.Write(Newtonsoft.Json.JsonWriter,TimeCockpit.Data.JsonConverters.JsonErrorMessage)
  commentId: M:TimeCockpit.Data.JsonConverters.JsonErrorMessage.Write(Newtonsoft.Json.JsonWriter,TimeCockpit.Data.JsonConverters.JsonErrorMessage)
  id: Write(Newtonsoft.Json.JsonWriter,TimeCockpit.Data.JsonConverters.JsonErrorMessage)
  parent: TimeCockpit.Data.JsonConverters.JsonErrorMessage
  langs:
  - csharp
  - vb
  name: Write(JsonWriter, JsonErrorMessage)
  nameWithType: JsonErrorMessage.Write(JsonWriter, JsonErrorMessage)
  fullName: TimeCockpit.Data.JsonConverters.JsonErrorMessage.Write(Newtonsoft.Json.JsonWriter, TimeCockpit.Data.JsonConverters.JsonErrorMessage)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/JsonConverters/JsonErrorMessage.cs
    id: Write
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/JsonConverters/JsonErrorMessage.cs
    startLine: 100
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.JsonConverters
  summary: "\nWrites the json.\n"
  example: []
  syntax:
    content: public static void Write(JsonWriter writer, JsonErrorMessage jsonResult)
    parameters:
    - id: writer
      type: Newtonsoft.Json.JsonWriter
      description: The writer.
    - id: jsonResult
      type: TimeCockpit.Data.JsonConverters.JsonErrorMessage
      description: The result of a REST query.
    content.vb: Public Shared Sub Write(writer As JsonWriter, jsonResult As JsonErrorMessage)
  overload: TimeCockpit.Data.JsonConverters.JsonErrorMessage.Write*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: TimeCockpit.Data.JsonConverters.JsonServiceOperationInfo
  commentId: T:TimeCockpit.Data.JsonConverters.JsonServiceOperationInfo
  parent: TimeCockpit.Data.JsonConverters
  isExternal: false
  name: JsonServiceOperationInfo
  nameWithType: JsonServiceOperationInfo
  fullName: TimeCockpit.Data.JsonConverters.JsonServiceOperationInfo
- uid: TimeCockpit.Data.JsonConverters
  commentId: N:TimeCockpit.Data.JsonConverters
  isExternal: false
  name: TimeCockpit.Data.JsonConverters
  nameWithType: TimeCockpit.Data.JsonConverters
  fullName: TimeCockpit.Data.JsonConverters
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: TimeCockpit.Data.JsonConverters.JsonErrorMessage.ExceptionType*
  commentId: Overload:TimeCockpit.Data.JsonConverters.JsonErrorMessage.ExceptionType
  isExternal: false
  name: ExceptionType
  nameWithType: JsonErrorMessage.ExceptionType
  fullName: TimeCockpit.Data.JsonConverters.JsonErrorMessage.ExceptionType
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: TimeCockpit.Data.JsonConverters.JsonErrorMessage.Message*
  commentId: Overload:TimeCockpit.Data.JsonConverters.JsonErrorMessage.Message
  isExternal: false
  name: Message
  nameWithType: JsonErrorMessage.Message
  fullName: TimeCockpit.Data.JsonConverters.JsonErrorMessage.Message
- uid: TimeCockpit.Data.JsonConverters.JsonErrorMessage.StackTrace*
  commentId: Overload:TimeCockpit.Data.JsonConverters.JsonErrorMessage.StackTrace
  isExternal: false
  name: StackTrace
  nameWithType: JsonErrorMessage.StackTrace
  fullName: TimeCockpit.Data.JsonConverters.JsonErrorMessage.StackTrace
- uid: TimeCockpit.Data.JsonConverters.JsonErrorMessage
  commentId: T:TimeCockpit.Data.JsonConverters.JsonErrorMessage
  parent: TimeCockpit.Data.JsonConverters
  isExternal: false
  name: JsonErrorMessage
  nameWithType: JsonErrorMessage
  fullName: TimeCockpit.Data.JsonConverters.JsonErrorMessage
- uid: TimeCockpit.Data.JsonConverters.JsonErrorMessage.Read*
  commentId: Overload:TimeCockpit.Data.JsonConverters.JsonErrorMessage.Read
  isExternal: false
  name: Read
  nameWithType: JsonErrorMessage.Read
  fullName: TimeCockpit.Data.JsonConverters.JsonErrorMessage.Read
- uid: Newtonsoft.Json.JsonReader
  commentId: T:Newtonsoft.Json.JsonReader
  parent: Newtonsoft.Json
  isExternal: true
  name: JsonReader
  nameWithType: JsonReader
  fullName: Newtonsoft.Json.JsonReader
- uid: Newtonsoft.Json
  commentId: N:Newtonsoft.Json
  isExternal: false
  name: Newtonsoft.Json
  nameWithType: Newtonsoft.Json
  fullName: Newtonsoft.Json
- uid: TimeCockpit.Data.JsonConverters.JsonErrorMessage.Write*
  commentId: Overload:TimeCockpit.Data.JsonConverters.JsonErrorMessage.Write
  isExternal: false
  name: Write
  nameWithType: JsonErrorMessage.Write
  fullName: TimeCockpit.Data.JsonConverters.JsonErrorMessage.Write
- uid: Newtonsoft.Json.JsonWriter
  commentId: T:Newtonsoft.Json.JsonWriter
  parent: Newtonsoft.Json
  isExternal: true
  name: JsonWriter
  nameWithType: JsonWriter
  fullName: Newtonsoft.Json.JsonWriter
