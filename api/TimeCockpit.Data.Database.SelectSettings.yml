### YamlMime:ManagedReference
items:
- uid: TimeCockpit.Data.Database.SelectSettings
  commentId: T:TimeCockpit.Data.Database.SelectSettings
  id: SelectSettings
  parent: TimeCockpit.Data.Database
  children:
  - TimeCockpit.Data.Database.SelectSettings.#ctor
  - TimeCockpit.Data.Database.SelectSettings.BlobHandling
  - TimeCockpit.Data.Database.SelectSettings.Environment
  - TimeCockpit.Data.Database.SelectSettings.MaxRowCount
  langs:
  - csharp
  - vb
  name: SelectSettings
  nameWithType: SelectSettings
  fullName: TimeCockpit.Data.Database.SelectSettings
  type: Class
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Database
  summary: "\nRepresents the settings for a Select-operation\n"
  syntax:
    content: public sealed class SelectSettings
    content.vb: Public NotInheritable Class SelectSettings
  seealso:
  - linkId: TimeCockpit.Data.Database.DbClient.Select(System.String,TimeCockpit.Data.DataModel.Model,TimeCockpit.Data.Database.SelectSettings,System.Collections.Generic.IEnumerable{TimeCockpit.Data.QueryLanguage.QueryParameter},TimeCockpit.Data.Database.SelectCache)
    commentId: M:TimeCockpit.Data.Database.DbClient.Select(System.String,TimeCockpit.Data.DataModel.Model,TimeCockpit.Data.Database.SelectSettings,System.Collections.Generic.IEnumerable{TimeCockpit.Data.QueryLanguage.QueryParameter},TimeCockpit.Data.Database.SelectCache)
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: TimeCockpit.Data.Database.SelectSettings.#ctor
  commentId: M:TimeCockpit.Data.Database.SelectSettings.#ctor
  id: '#ctor'
  parent: TimeCockpit.Data.Database.SelectSettings
  langs:
  - csharp
  - vb
  name: SelectSettings()
  nameWithType: SelectSettings.SelectSettings()
  fullName: TimeCockpit.Data.Database.SelectSettings.SelectSettings()
  type: Constructor
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Database
  summary: "\nInitializes a new instance of the SelectSettings class\n"
  syntax:
    content: public SelectSettings()
    content.vb: Public Sub New
  overload: TimeCockpit.Data.Database.SelectSettings.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Database.SelectSettings.MaxRowCount
  commentId: P:TimeCockpit.Data.Database.SelectSettings.MaxRowCount
  id: MaxRowCount
  parent: TimeCockpit.Data.Database.SelectSettings
  langs:
  - csharp
  - vb
  name: MaxRowCount
  nameWithType: SelectSettings.MaxRowCount
  fullName: TimeCockpit.Data.Database.SelectSettings.MaxRowCount
  type: Property
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Database
  summary: "\nGets or sets the maximum number of rows to fetch\n"
  remarks: "\nThe default value for this property is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> (i.e. fetch\nall available rows.\n"
  syntax:
    content: public long? MaxRowCount { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int64}
    content.vb: Public Property MaxRowCount As Long?
  overload: TimeCockpit.Data.Database.SelectSettings.MaxRowCount*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Database.SelectSettings.Environment
  commentId: P:TimeCockpit.Data.Database.SelectSettings.Environment
  id: Environment
  parent: TimeCockpit.Data.Database.SelectSettings
  langs:
  - csharp
  - vb
  name: Environment
  nameWithType: SelectSettings.Environment
  fullName: TimeCockpit.Data.Database.SelectSettings.Environment
  type: Property
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Database
  summary: "\nGets or sets the instance of <xref href=\"TimeCockpit.Data.Database.SelectSettings.Environment\" data-throw-if-not-resolved=\"false\"></xref> that provides access to certain global values like the current user.\n"
  syntax:
    content: public Environment Environment { get; set; }
    parameters: []
    return:
      type: TimeCockpit.Data.Environment
    content.vb: Public Property Environment As Environment
  overload: TimeCockpit.Data.Database.SelectSettings.Environment*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Database.SelectSettings.BlobHandling
  commentId: P:TimeCockpit.Data.Database.SelectSettings.BlobHandling
  id: BlobHandling
  parent: TimeCockpit.Data.Database.SelectSettings
  langs:
  - csharp
  - vb
  name: BlobHandling
  nameWithType: SelectSettings.BlobHandling
  fullName: TimeCockpit.Data.Database.SelectSettings.BlobHandling
  type: Property
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Database
  summary: "\nGets or sets a value that specifies how binary properties stored in blob store are handled.\n"
  remarks: "\n<p>\n  If the property is set to <xref href=\"TimeCockpit.Data.Database.BlobHandling.DoNotReadBlobs\" data-throw-if-not-resolved=\"false\"></xref> blobs stored in blob\n  storage are not read from blob storage. Instead the value of the blob property in \n<xref href=\"TimeCockpit.Data.EntityObject\" data-throw-if-not-resolved=\"false\"></xref> is the GUID and not the binary value of the blob.\n</p>\n"
  syntax:
    content: public BlobHandling BlobHandling { get; set; }
    parameters: []
    return:
      type: TimeCockpit.Data.Database.BlobHandling
    content.vb: Public Property BlobHandling As BlobHandling
  overload: TimeCockpit.Data.Database.SelectSettings.BlobHandling*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: TimeCockpit.Data.Database
  commentId: N:TimeCockpit.Data.Database
  isExternal: true
  name: TimeCockpit.Data.Database
  nameWithType: TimeCockpit.Data.Database
  fullName: TimeCockpit.Data.Database
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.Database.DbClient.Select(System.String,TimeCockpit.Data.DataModel.Model,TimeCockpit.Data.Database.SelectSettings,System.Collections.Generic.IEnumerable{TimeCockpit.Data.QueryLanguage.QueryParameter},TimeCockpit.Data.Database.SelectCache)
  commentId: M:TimeCockpit.Data.Database.DbClient.Select(System.String,TimeCockpit.Data.DataModel.Model,TimeCockpit.Data.Database.SelectSettings,System.Collections.Generic.IEnumerable{TimeCockpit.Data.QueryLanguage.QueryParameter},TimeCockpit.Data.Database.SelectCache)
  isExternal: true
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TimeCockpit.Data.Database.SelectSettings.#ctor*
  commentId: Overload:TimeCockpit.Data.Database.SelectSettings.#ctor
  isExternal: true
  name: SelectSettings
  nameWithType: SelectSettings.SelectSettings
  fullName: TimeCockpit.Data.Database.SelectSettings.SelectSettings
- uid: TimeCockpit.Data.Database.SelectSettings.MaxRowCount*
  commentId: Overload:TimeCockpit.Data.Database.SelectSettings.MaxRowCount
  isExternal: true
  name: MaxRowCount
  nameWithType: SelectSettings.MaxRowCount
  fullName: TimeCockpit.Data.Database.SelectSettings.MaxRowCount
- uid: System.Nullable{System.Int64}
  commentId: T:System.Nullable{System.Int64}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int64>
  nameWithType: Nullable<Int64>
  fullName: System.Nullable<System.Int64>
  nameWithType.vb: Nullable(Of Int64)
  fullName.vb: System.Nullable(Of System.Int64)
  name.vb: Nullable(Of Int64)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.Database.SelectSettings.Environment*
  commentId: Overload:TimeCockpit.Data.Database.SelectSettings.Environment
  isExternal: true
  name: Environment
  nameWithType: SelectSettings.Environment
  fullName: TimeCockpit.Data.Database.SelectSettings.Environment
- uid: TimeCockpit.Data.Environment
  commentId: T:TimeCockpit.Data.Environment
  parent: TimeCockpit.Data
  isExternal: true
  name: Environment
  nameWithType: Environment
  fullName: TimeCockpit.Data.Environment
- uid: TimeCockpit.Data
  commentId: N:TimeCockpit.Data
  isExternal: true
  name: TimeCockpit.Data
  nameWithType: TimeCockpit.Data
  fullName: TimeCockpit.Data
- uid: TimeCockpit.Data.Database.SelectSettings.BlobHandling*
  commentId: Overload:TimeCockpit.Data.Database.SelectSettings.BlobHandling
  isExternal: true
  name: BlobHandling
  nameWithType: SelectSettings.BlobHandling
  fullName: TimeCockpit.Data.Database.SelectSettings.BlobHandling
- uid: TimeCockpit.Data.Database.BlobHandling
  commentId: T:TimeCockpit.Data.Database.BlobHandling
  parent: TimeCockpit.Data.Database
  isExternal: true
  name: BlobHandling
  nameWithType: BlobHandling
  fullName: TimeCockpit.Data.Database.BlobHandling
