### YamlMime:ManagedReference
items:
- uid: TimeCockpit.Data.Import.ImportDefinitionBuilder
  commentId: T:TimeCockpit.Data.Import.ImportDefinitionBuilder
  id: ImportDefinitionBuilder
  parent: TimeCockpit.Data.Import
  children:
  - TimeCockpit.Data.Import.ImportDefinitionBuilder.#ctor
  - TimeCockpit.Data.Import.ImportDefinitionBuilder.BuildColumnMappings(System.String[],TimeCockpit.Data.DataModel.ModelEntityBase,TimeCockpit.Data.Localization.NameLocalizer)
  - TimeCockpit.Data.Import.ImportDefinitionBuilder.BuildDefinition(TimeCockpit.Data.Import.PreviewWorkbook,TimeCockpit.Data.DataModel.Model,TimeCockpit.Data.Localization.NameLocalizer)
  - TimeCockpit.Data.Import.ImportDefinitionBuilder.BuildDefinitionAndTemplateForEntity(TimeCockpit.Data.DataModel.ModelEntityBase[],TimeCockpit.Data.Localization.NameLocalizer,TimeCockpit.Data.Import.ImportBookDefinition@,TimeCockpit.Data.Import.PreviewWorkbook@)
  - TimeCockpit.Data.Import.ImportDefinitionBuilder.FindPotentialPropertyMatches(System.String[],TimeCockpit.Data.DataModel.Model)
  - TimeCockpit.Data.Import.ImportDefinitionBuilder.OrderByRelations(TimeCockpit.Data.DataModel.ModelEntityBase[])
  - TimeCockpit.Data.Import.ImportDefinitionBuilder.SanitizeWorksheetName(System.String)
  - TimeCockpit.Data.Import.ImportDefinitionBuilder.TryFindMatchingEntity(System.String,System.String[],TimeCockpit.Data.DataModel.Model,TimeCockpit.Data.Localization.NameLocalizer,TimeCockpit.Data.DataModel.ModelEntityBase@)
  - TimeCockpit.Data.Import.ImportDefinitionBuilder.TryFindMatchingPropertyOrRelation(System.String,TimeCockpit.Data.DataModel.ModelEntityBase,TimeCockpit.Data.Localization.NameLocalizer,TimeCockpit.Data.Import.ImportColumnDefinition@)
  langs:
  - csharp
  - vb
  name: ImportDefinitionBuilder
  nameWithType: ImportDefinitionBuilder
  fullName: TimeCockpit.Data.Import.ImportDefinitionBuilder
  type: Class
  source:
    path: TimeCockpit.Data.Import
    isExternal: true
  assemblies:
  - TimeCockpit.Data.Import
  namespace: TimeCockpit.Data.Import
  syntax:
    content: public class ImportDefinitionBuilder
    content.vb: Public Class ImportDefinitionBuilder
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TimeCockpit.Data.Import.ImportDefinitionBuilder.BuildDefinition(TimeCockpit.Data.Import.PreviewWorkbook,TimeCockpit.Data.DataModel.Model,TimeCockpit.Data.Localization.NameLocalizer)
  commentId: M:TimeCockpit.Data.Import.ImportDefinitionBuilder.BuildDefinition(TimeCockpit.Data.Import.PreviewWorkbook,TimeCockpit.Data.DataModel.Model,TimeCockpit.Data.Localization.NameLocalizer)
  id: BuildDefinition(TimeCockpit.Data.Import.PreviewWorkbook,TimeCockpit.Data.DataModel.Model,TimeCockpit.Data.Localization.NameLocalizer)
  parent: TimeCockpit.Data.Import.ImportDefinitionBuilder
  langs:
  - csharp
  - vb
  name: BuildDefinition(PreviewWorkbook, Model, NameLocalizer)
  nameWithType: ImportDefinitionBuilder.BuildDefinition(PreviewWorkbook, Model, NameLocalizer)
  fullName: TimeCockpit.Data.Import.ImportDefinitionBuilder.BuildDefinition(TimeCockpit.Data.Import.PreviewWorkbook, TimeCockpit.Data.DataModel.Model, TimeCockpit.Data.Localization.NameLocalizer)
  type: Method
  source:
    path: TimeCockpit.Data.Import
    isExternal: true
  assemblies:
  - TimeCockpit.Data.Import
  namespace: TimeCockpit.Data.Import
  syntax:
    content: public static ImportBookDefinition BuildDefinition(PreviewWorkbook workbook, Model model, NameLocalizer localizer)
    parameters:
    - id: workbook
      type: TimeCockpit.Data.Import.PreviewWorkbook
    - id: model
      type: TimeCockpit.Data.DataModel.Model
    - id: localizer
      type: TimeCockpit.Data.Localization.NameLocalizer
    return:
      type: TimeCockpit.Data.Import.ImportBookDefinition
    content.vb: Public Shared Function BuildDefinition(workbook As PreviewWorkbook, model As Model, localizer As NameLocalizer) As ImportBookDefinition
  overload: TimeCockpit.Data.Import.ImportDefinitionBuilder.BuildDefinition*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: TimeCockpit.Data.Import.ImportDefinitionBuilder.TryFindMatchingEntity(System.String,System.String[],TimeCockpit.Data.DataModel.Model,TimeCockpit.Data.Localization.NameLocalizer,TimeCockpit.Data.DataModel.ModelEntityBase@)
  commentId: M:TimeCockpit.Data.Import.ImportDefinitionBuilder.TryFindMatchingEntity(System.String,System.String[],TimeCockpit.Data.DataModel.Model,TimeCockpit.Data.Localization.NameLocalizer,TimeCockpit.Data.DataModel.ModelEntityBase@)
  id: TryFindMatchingEntity(System.String,System.String[],TimeCockpit.Data.DataModel.Model,TimeCockpit.Data.Localization.NameLocalizer,TimeCockpit.Data.DataModel.ModelEntityBase@)
  parent: TimeCockpit.Data.Import.ImportDefinitionBuilder
  langs:
  - csharp
  - vb
  name: TryFindMatchingEntity(String, String[], Model, NameLocalizer, out ModelEntityBase)
  nameWithType: ImportDefinitionBuilder.TryFindMatchingEntity(String, String[], Model, NameLocalizer, out ModelEntityBase)
  fullName: TimeCockpit.Data.Import.ImportDefinitionBuilder.TryFindMatchingEntity(System.String, System.String[], TimeCockpit.Data.DataModel.Model, TimeCockpit.Data.Localization.NameLocalizer, out TimeCockpit.Data.DataModel.ModelEntityBase)
  type: Method
  source:
    path: TimeCockpit.Data.Import
    isExternal: true
  assemblies:
  - TimeCockpit.Data.Import
  namespace: TimeCockpit.Data.Import
  syntax:
    content: public static bool TryFindMatchingEntity(string worksheetName, string[] columnNames, Model model, NameLocalizer localizer, out ModelEntityBase matchingEntity)
    parameters:
    - id: worksheetName
      type: System.String
    - id: columnNames
      type: System.String[]
    - id: model
      type: TimeCockpit.Data.DataModel.Model
    - id: localizer
      type: TimeCockpit.Data.Localization.NameLocalizer
    - id: matchingEntity
      type: TimeCockpit.Data.DataModel.ModelEntityBase
    return:
      type: System.Boolean
    content.vb: Public Shared Function TryFindMatchingEntity(worksheetName As String, columnNames As String(), model As Model, localizer As NameLocalizer, ByRef matchingEntity As ModelEntityBase) As Boolean
  overload: TimeCockpit.Data.Import.ImportDefinitionBuilder.TryFindMatchingEntity*
  nameWithType.vb: ImportDefinitionBuilder.TryFindMatchingEntity(String, String(), Model, NameLocalizer, ByRef ModelEntityBase)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TimeCockpit.Data.Import.ImportDefinitionBuilder.TryFindMatchingEntity(System.String, System.String(), TimeCockpit.Data.DataModel.Model, TimeCockpit.Data.Localization.NameLocalizer, ByRef TimeCockpit.Data.DataModel.ModelEntityBase)
  name.vb: TryFindMatchingEntity(String, String(), Model, NameLocalizer, ByRef ModelEntityBase)
- uid: TimeCockpit.Data.Import.ImportDefinitionBuilder.FindPotentialPropertyMatches(System.String[],TimeCockpit.Data.DataModel.Model)
  commentId: M:TimeCockpit.Data.Import.ImportDefinitionBuilder.FindPotentialPropertyMatches(System.String[],TimeCockpit.Data.DataModel.Model)
  id: FindPotentialPropertyMatches(System.String[],TimeCockpit.Data.DataModel.Model)
  parent: TimeCockpit.Data.Import.ImportDefinitionBuilder
  langs:
  - csharp
  - vb
  name: FindPotentialPropertyMatches(String[], Model)
  nameWithType: ImportDefinitionBuilder.FindPotentialPropertyMatches(String[], Model)
  fullName: TimeCockpit.Data.Import.ImportDefinitionBuilder.FindPotentialPropertyMatches(System.String[], TimeCockpit.Data.DataModel.Model)
  type: Method
  source:
    path: TimeCockpit.Data.Import
    isExternal: true
  assemblies:
  - TimeCockpit.Data.Import
  namespace: TimeCockpit.Data.Import
  syntax:
    content: public static ModelEntityBase[] FindPotentialPropertyMatches(string[] columnNames, Model model)
    parameters:
    - id: columnNames
      type: System.String[]
    - id: model
      type: TimeCockpit.Data.DataModel.Model
    return:
      type: TimeCockpit.Data.DataModel.ModelEntityBase[]
    content.vb: Public Shared Function FindPotentialPropertyMatches(columnNames As String(), model As Model) As ModelEntityBase()
  overload: TimeCockpit.Data.Import.ImportDefinitionBuilder.FindPotentialPropertyMatches*
  nameWithType.vb: ImportDefinitionBuilder.FindPotentialPropertyMatches(String(), Model)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TimeCockpit.Data.Import.ImportDefinitionBuilder.FindPotentialPropertyMatches(System.String(), TimeCockpit.Data.DataModel.Model)
  name.vb: FindPotentialPropertyMatches(String(), Model)
- uid: TimeCockpit.Data.Import.ImportDefinitionBuilder.BuildColumnMappings(System.String[],TimeCockpit.Data.DataModel.ModelEntityBase,TimeCockpit.Data.Localization.NameLocalizer)
  commentId: M:TimeCockpit.Data.Import.ImportDefinitionBuilder.BuildColumnMappings(System.String[],TimeCockpit.Data.DataModel.ModelEntityBase,TimeCockpit.Data.Localization.NameLocalizer)
  id: BuildColumnMappings(System.String[],TimeCockpit.Data.DataModel.ModelEntityBase,TimeCockpit.Data.Localization.NameLocalizer)
  parent: TimeCockpit.Data.Import.ImportDefinitionBuilder
  langs:
  - csharp
  - vb
  name: BuildColumnMappings(String[], ModelEntityBase, NameLocalizer)
  nameWithType: ImportDefinitionBuilder.BuildColumnMappings(String[], ModelEntityBase, NameLocalizer)
  fullName: TimeCockpit.Data.Import.ImportDefinitionBuilder.BuildColumnMappings(System.String[], TimeCockpit.Data.DataModel.ModelEntityBase, TimeCockpit.Data.Localization.NameLocalizer)
  type: Method
  source:
    path: TimeCockpit.Data.Import
    isExternal: true
  assemblies:
  - TimeCockpit.Data.Import
  namespace: TimeCockpit.Data.Import
  syntax:
    content: public static ImportColumnDefinition[] BuildColumnMappings(string[] sourceColumnNames, ModelEntityBase targetModelEntity, NameLocalizer localizer)
    parameters:
    - id: sourceColumnNames
      type: System.String[]
    - id: targetModelEntity
      type: TimeCockpit.Data.DataModel.ModelEntityBase
    - id: localizer
      type: TimeCockpit.Data.Localization.NameLocalizer
    return:
      type: TimeCockpit.Data.Import.ImportColumnDefinition[]
    content.vb: Public Shared Function BuildColumnMappings(sourceColumnNames As String(), targetModelEntity As ModelEntityBase, localizer As NameLocalizer) As ImportColumnDefinition()
  overload: TimeCockpit.Data.Import.ImportDefinitionBuilder.BuildColumnMappings*
  nameWithType.vb: ImportDefinitionBuilder.BuildColumnMappings(String(), ModelEntityBase, NameLocalizer)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TimeCockpit.Data.Import.ImportDefinitionBuilder.BuildColumnMappings(System.String(), TimeCockpit.Data.DataModel.ModelEntityBase, TimeCockpit.Data.Localization.NameLocalizer)
  name.vb: BuildColumnMappings(String(), ModelEntityBase, NameLocalizer)
- uid: TimeCockpit.Data.Import.ImportDefinitionBuilder.TryFindMatchingPropertyOrRelation(System.String,TimeCockpit.Data.DataModel.ModelEntityBase,TimeCockpit.Data.Localization.NameLocalizer,TimeCockpit.Data.Import.ImportColumnDefinition@)
  commentId: M:TimeCockpit.Data.Import.ImportDefinitionBuilder.TryFindMatchingPropertyOrRelation(System.String,TimeCockpit.Data.DataModel.ModelEntityBase,TimeCockpit.Data.Localization.NameLocalizer,TimeCockpit.Data.Import.ImportColumnDefinition@)
  id: TryFindMatchingPropertyOrRelation(System.String,TimeCockpit.Data.DataModel.ModelEntityBase,TimeCockpit.Data.Localization.NameLocalizer,TimeCockpit.Data.Import.ImportColumnDefinition@)
  parent: TimeCockpit.Data.Import.ImportDefinitionBuilder
  langs:
  - csharp
  - vb
  name: TryFindMatchingPropertyOrRelation(String, ModelEntityBase, NameLocalizer, out ImportColumnDefinition)
  nameWithType: ImportDefinitionBuilder.TryFindMatchingPropertyOrRelation(String, ModelEntityBase, NameLocalizer, out ImportColumnDefinition)
  fullName: TimeCockpit.Data.Import.ImportDefinitionBuilder.TryFindMatchingPropertyOrRelation(System.String, TimeCockpit.Data.DataModel.ModelEntityBase, TimeCockpit.Data.Localization.NameLocalizer, out TimeCockpit.Data.Import.ImportColumnDefinition)
  type: Method
  source:
    path: TimeCockpit.Data.Import
    isExternal: true
  assemblies:
  - TimeCockpit.Data.Import
  namespace: TimeCockpit.Data.Import
  syntax:
    content: public static bool TryFindMatchingPropertyOrRelation(string sourceName, ModelEntityBase targetModelEntity, NameLocalizer localizer, out ImportColumnDefinition matchingColumn)
    parameters:
    - id: sourceName
      type: System.String
    - id: targetModelEntity
      type: TimeCockpit.Data.DataModel.ModelEntityBase
    - id: localizer
      type: TimeCockpit.Data.Localization.NameLocalizer
    - id: matchingColumn
      type: TimeCockpit.Data.Import.ImportColumnDefinition
    return:
      type: System.Boolean
    content.vb: Public Shared Function TryFindMatchingPropertyOrRelation(sourceName As String, targetModelEntity As ModelEntityBase, localizer As NameLocalizer, ByRef matchingColumn As ImportColumnDefinition) As Boolean
  overload: TimeCockpit.Data.Import.ImportDefinitionBuilder.TryFindMatchingPropertyOrRelation*
  nameWithType.vb: ImportDefinitionBuilder.TryFindMatchingPropertyOrRelation(String, ModelEntityBase, NameLocalizer, ByRef ImportColumnDefinition)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TimeCockpit.Data.Import.ImportDefinitionBuilder.TryFindMatchingPropertyOrRelation(System.String, TimeCockpit.Data.DataModel.ModelEntityBase, TimeCockpit.Data.Localization.NameLocalizer, ByRef TimeCockpit.Data.Import.ImportColumnDefinition)
  name.vb: TryFindMatchingPropertyOrRelation(String, ModelEntityBase, NameLocalizer, ByRef ImportColumnDefinition)
- uid: TimeCockpit.Data.Import.ImportDefinitionBuilder.BuildDefinitionAndTemplateForEntity(TimeCockpit.Data.DataModel.ModelEntityBase[],TimeCockpit.Data.Localization.NameLocalizer,TimeCockpit.Data.Import.ImportBookDefinition@,TimeCockpit.Data.Import.PreviewWorkbook@)
  commentId: M:TimeCockpit.Data.Import.ImportDefinitionBuilder.BuildDefinitionAndTemplateForEntity(TimeCockpit.Data.DataModel.ModelEntityBase[],TimeCockpit.Data.Localization.NameLocalizer,TimeCockpit.Data.Import.ImportBookDefinition@,TimeCockpit.Data.Import.PreviewWorkbook@)
  id: BuildDefinitionAndTemplateForEntity(TimeCockpit.Data.DataModel.ModelEntityBase[],TimeCockpit.Data.Localization.NameLocalizer,TimeCockpit.Data.Import.ImportBookDefinition@,TimeCockpit.Data.Import.PreviewWorkbook@)
  parent: TimeCockpit.Data.Import.ImportDefinitionBuilder
  langs:
  - csharp
  - vb
  name: BuildDefinitionAndTemplateForEntity(ModelEntityBase[], NameLocalizer, out ImportBookDefinition, out PreviewWorkbook)
  nameWithType: ImportDefinitionBuilder.BuildDefinitionAndTemplateForEntity(ModelEntityBase[], NameLocalizer, out ImportBookDefinition, out PreviewWorkbook)
  fullName: TimeCockpit.Data.Import.ImportDefinitionBuilder.BuildDefinitionAndTemplateForEntity(TimeCockpit.Data.DataModel.ModelEntityBase[], TimeCockpit.Data.Localization.NameLocalizer, out TimeCockpit.Data.Import.ImportBookDefinition, out TimeCockpit.Data.Import.PreviewWorkbook)
  type: Method
  source:
    path: TimeCockpit.Data.Import
    isExternal: true
  assemblies:
  - TimeCockpit.Data.Import
  namespace: TimeCockpit.Data.Import
  syntax:
    content: public static void BuildDefinitionAndTemplateForEntity(ModelEntityBase[] targetEntities, NameLocalizer localizer, out ImportBookDefinition definition, out PreviewWorkbook previewWorkbook)
    parameters:
    - id: targetEntities
      type: TimeCockpit.Data.DataModel.ModelEntityBase[]
    - id: localizer
      type: TimeCockpit.Data.Localization.NameLocalizer
    - id: definition
      type: TimeCockpit.Data.Import.ImportBookDefinition
    - id: previewWorkbook
      type: TimeCockpit.Data.Import.PreviewWorkbook
    content.vb: Public Shared Sub BuildDefinitionAndTemplateForEntity(targetEntities As ModelEntityBase(), localizer As NameLocalizer, ByRef definition As ImportBookDefinition, ByRef previewWorkbook As PreviewWorkbook)
  overload: TimeCockpit.Data.Import.ImportDefinitionBuilder.BuildDefinitionAndTemplateForEntity*
  nameWithType.vb: ImportDefinitionBuilder.BuildDefinitionAndTemplateForEntity(ModelEntityBase(), NameLocalizer, ByRef ImportBookDefinition, ByRef PreviewWorkbook)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TimeCockpit.Data.Import.ImportDefinitionBuilder.BuildDefinitionAndTemplateForEntity(TimeCockpit.Data.DataModel.ModelEntityBase(), TimeCockpit.Data.Localization.NameLocalizer, ByRef TimeCockpit.Data.Import.ImportBookDefinition, ByRef TimeCockpit.Data.Import.PreviewWorkbook)
  name.vb: BuildDefinitionAndTemplateForEntity(ModelEntityBase(), NameLocalizer, ByRef ImportBookDefinition, ByRef PreviewWorkbook)
- uid: TimeCockpit.Data.Import.ImportDefinitionBuilder.OrderByRelations(TimeCockpit.Data.DataModel.ModelEntityBase[])
  commentId: M:TimeCockpit.Data.Import.ImportDefinitionBuilder.OrderByRelations(TimeCockpit.Data.DataModel.ModelEntityBase[])
  id: OrderByRelations(TimeCockpit.Data.DataModel.ModelEntityBase[])
  parent: TimeCockpit.Data.Import.ImportDefinitionBuilder
  langs:
  - csharp
  - vb
  name: OrderByRelations(ModelEntityBase[])
  nameWithType: ImportDefinitionBuilder.OrderByRelations(ModelEntityBase[])
  fullName: TimeCockpit.Data.Import.ImportDefinitionBuilder.OrderByRelations(TimeCockpit.Data.DataModel.ModelEntityBase[])
  type: Method
  source:
    path: TimeCockpit.Data.Import
    isExternal: true
  assemblies:
  - TimeCockpit.Data.Import
  namespace: TimeCockpit.Data.Import
  syntax:
    content: public static ModelEntityBase[] OrderByRelations(ModelEntityBase[] sourceEntities)
    parameters:
    - id: sourceEntities
      type: TimeCockpit.Data.DataModel.ModelEntityBase[]
    return:
      type: TimeCockpit.Data.DataModel.ModelEntityBase[]
    content.vb: Public Shared Function OrderByRelations(sourceEntities As ModelEntityBase()) As ModelEntityBase()
  overload: TimeCockpit.Data.Import.ImportDefinitionBuilder.OrderByRelations*
  nameWithType.vb: ImportDefinitionBuilder.OrderByRelations(ModelEntityBase())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TimeCockpit.Data.Import.ImportDefinitionBuilder.OrderByRelations(TimeCockpit.Data.DataModel.ModelEntityBase())
  name.vb: OrderByRelations(ModelEntityBase())
- uid: TimeCockpit.Data.Import.ImportDefinitionBuilder.SanitizeWorksheetName(System.String)
  commentId: M:TimeCockpit.Data.Import.ImportDefinitionBuilder.SanitizeWorksheetName(System.String)
  id: SanitizeWorksheetName(System.String)
  parent: TimeCockpit.Data.Import.ImportDefinitionBuilder
  langs:
  - csharp
  - vb
  name: SanitizeWorksheetName(String)
  nameWithType: ImportDefinitionBuilder.SanitizeWorksheetName(String)
  fullName: TimeCockpit.Data.Import.ImportDefinitionBuilder.SanitizeWorksheetName(System.String)
  type: Method
  source:
    path: TimeCockpit.Data.Import
    isExternal: true
  assemblies:
  - TimeCockpit.Data.Import
  namespace: TimeCockpit.Data.Import
  syntax:
    content: public static string SanitizeWorksheetName(string sourceName)
    parameters:
    - id: sourceName
      type: System.String
    return:
      type: System.String
    content.vb: Public Shared Function SanitizeWorksheetName(sourceName As String) As String
  overload: TimeCockpit.Data.Import.ImportDefinitionBuilder.SanitizeWorksheetName*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: TimeCockpit.Data.Import.ImportDefinitionBuilder.#ctor
  commentId: M:TimeCockpit.Data.Import.ImportDefinitionBuilder.#ctor
  id: '#ctor'
  parent: TimeCockpit.Data.Import.ImportDefinitionBuilder
  langs:
  - csharp
  - vb
  name: ImportDefinitionBuilder()
  nameWithType: ImportDefinitionBuilder.ImportDefinitionBuilder()
  fullName: TimeCockpit.Data.Import.ImportDefinitionBuilder.ImportDefinitionBuilder()
  type: Constructor
  source:
    path: TimeCockpit.Data.Import
    isExternal: true
  assemblies:
  - TimeCockpit.Data.Import
  namespace: TimeCockpit.Data.Import
  syntax:
    content: public ImportDefinitionBuilder()
    content.vb: Public Sub New
  overload: TimeCockpit.Data.Import.ImportDefinitionBuilder.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: TimeCockpit.Data.Import
  commentId: N:TimeCockpit.Data.Import
  isExternal: true
  name: TimeCockpit.Data.Import
  nameWithType: TimeCockpit.Data.Import
  fullName: TimeCockpit.Data.Import
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TimeCockpit.Data.Import.ImportDefinitionBuilder.BuildDefinition*
  commentId: Overload:TimeCockpit.Data.Import.ImportDefinitionBuilder.BuildDefinition
  isExternal: true
  name: BuildDefinition
  nameWithType: ImportDefinitionBuilder.BuildDefinition
  fullName: TimeCockpit.Data.Import.ImportDefinitionBuilder.BuildDefinition
- uid: TimeCockpit.Data.Import.PreviewWorkbook
  commentId: T:TimeCockpit.Data.Import.PreviewWorkbook
  parent: TimeCockpit.Data.Import
  isExternal: true
  name: PreviewWorkbook
  nameWithType: PreviewWorkbook
  fullName: TimeCockpit.Data.Import.PreviewWorkbook
- uid: TimeCockpit.Data.DataModel.Model
  commentId: T:TimeCockpit.Data.DataModel.Model
  parent: TimeCockpit.Data.DataModel
  isExternal: true
  name: Model
  nameWithType: Model
  fullName: TimeCockpit.Data.DataModel.Model
- uid: TimeCockpit.Data.Localization.NameLocalizer
  commentId: T:TimeCockpit.Data.Localization.NameLocalizer
  parent: TimeCockpit.Data.Localization
  isExternal: true
  name: NameLocalizer
  nameWithType: NameLocalizer
  fullName: TimeCockpit.Data.Localization.NameLocalizer
- uid: TimeCockpit.Data.Import.ImportBookDefinition
  commentId: T:TimeCockpit.Data.Import.ImportBookDefinition
  parent: TimeCockpit.Data.Import
  isExternal: true
  name: ImportBookDefinition
  nameWithType: ImportBookDefinition
  fullName: TimeCockpit.Data.Import.ImportBookDefinition
- uid: TimeCockpit.Data.DataModel
  commentId: N:TimeCockpit.Data.DataModel
  isExternal: true
  name: TimeCockpit.Data.DataModel
  nameWithType: TimeCockpit.Data.DataModel
  fullName: TimeCockpit.Data.DataModel
- uid: TimeCockpit.Data.Localization
  commentId: N:TimeCockpit.Data.Localization
  isExternal: true
  name: TimeCockpit.Data.Localization
  nameWithType: TimeCockpit.Data.Localization
  fullName: TimeCockpit.Data.Localization
- uid: TimeCockpit.Data.Import.ImportDefinitionBuilder.TryFindMatchingEntity*
  commentId: Overload:TimeCockpit.Data.Import.ImportDefinitionBuilder.TryFindMatchingEntity
  isExternal: true
  name: TryFindMatchingEntity
  nameWithType: ImportDefinitionBuilder.TryFindMatchingEntity
  fullName: TimeCockpit.Data.Import.ImportDefinitionBuilder.TryFindMatchingEntity
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: TimeCockpit.Data.DataModel.ModelEntityBase
  commentId: T:TimeCockpit.Data.DataModel.ModelEntityBase
  parent: TimeCockpit.Data.DataModel
  isExternal: true
  name: ModelEntityBase
  nameWithType: ModelEntityBase
  fullName: TimeCockpit.Data.DataModel.ModelEntityBase
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: TimeCockpit.Data.Import.ImportDefinitionBuilder.FindPotentialPropertyMatches*
  commentId: Overload:TimeCockpit.Data.Import.ImportDefinitionBuilder.FindPotentialPropertyMatches
  isExternal: true
  name: FindPotentialPropertyMatches
  nameWithType: ImportDefinitionBuilder.FindPotentialPropertyMatches
  fullName: TimeCockpit.Data.Import.ImportDefinitionBuilder.FindPotentialPropertyMatches
- uid: TimeCockpit.Data.DataModel.ModelEntityBase[]
  isExternal: true
  name: ModelEntityBase[]
  nameWithType: ModelEntityBase[]
  fullName: TimeCockpit.Data.DataModel.ModelEntityBase[]
  nameWithType.vb: ModelEntityBase()
  fullName.vb: TimeCockpit.Data.DataModel.ModelEntityBase()
  name.vb: ModelEntityBase()
  spec.csharp:
  - uid: TimeCockpit.Data.DataModel.ModelEntityBase
    name: ModelEntityBase
    nameWithType: ModelEntityBase
    fullName: TimeCockpit.Data.DataModel.ModelEntityBase
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: TimeCockpit.Data.DataModel.ModelEntityBase
    name: ModelEntityBase
    nameWithType: ModelEntityBase
    fullName: TimeCockpit.Data.DataModel.ModelEntityBase
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: TimeCockpit.Data.Import.ImportDefinitionBuilder.BuildColumnMappings*
  commentId: Overload:TimeCockpit.Data.Import.ImportDefinitionBuilder.BuildColumnMappings
  isExternal: true
  name: BuildColumnMappings
  nameWithType: ImportDefinitionBuilder.BuildColumnMappings
  fullName: TimeCockpit.Data.Import.ImportDefinitionBuilder.BuildColumnMappings
- uid: TimeCockpit.Data.Import.ImportColumnDefinition[]
  isExternal: true
  name: ImportColumnDefinition[]
  nameWithType: ImportColumnDefinition[]
  fullName: TimeCockpit.Data.Import.ImportColumnDefinition[]
  nameWithType.vb: ImportColumnDefinition()
  fullName.vb: TimeCockpit.Data.Import.ImportColumnDefinition()
  name.vb: ImportColumnDefinition()
  spec.csharp:
  - uid: TimeCockpit.Data.Import.ImportColumnDefinition
    name: ImportColumnDefinition
    nameWithType: ImportColumnDefinition
    fullName: TimeCockpit.Data.Import.ImportColumnDefinition
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: TimeCockpit.Data.Import.ImportColumnDefinition
    name: ImportColumnDefinition
    nameWithType: ImportColumnDefinition
    fullName: TimeCockpit.Data.Import.ImportColumnDefinition
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: TimeCockpit.Data.Import.ImportDefinitionBuilder.TryFindMatchingPropertyOrRelation*
  commentId: Overload:TimeCockpit.Data.Import.ImportDefinitionBuilder.TryFindMatchingPropertyOrRelation
  isExternal: true
  name: TryFindMatchingPropertyOrRelation
  nameWithType: ImportDefinitionBuilder.TryFindMatchingPropertyOrRelation
  fullName: TimeCockpit.Data.Import.ImportDefinitionBuilder.TryFindMatchingPropertyOrRelation
- uid: TimeCockpit.Data.Import.ImportColumnDefinition
  commentId: T:TimeCockpit.Data.Import.ImportColumnDefinition
  parent: TimeCockpit.Data.Import
  isExternal: true
  name: ImportColumnDefinition
  nameWithType: ImportColumnDefinition
  fullName: TimeCockpit.Data.Import.ImportColumnDefinition
- uid: TimeCockpit.Data.Import.ImportDefinitionBuilder.BuildDefinitionAndTemplateForEntity*
  commentId: Overload:TimeCockpit.Data.Import.ImportDefinitionBuilder.BuildDefinitionAndTemplateForEntity
  isExternal: true
  name: BuildDefinitionAndTemplateForEntity
  nameWithType: ImportDefinitionBuilder.BuildDefinitionAndTemplateForEntity
  fullName: TimeCockpit.Data.Import.ImportDefinitionBuilder.BuildDefinitionAndTemplateForEntity
- uid: TimeCockpit.Data.Import.ImportDefinitionBuilder.OrderByRelations*
  commentId: Overload:TimeCockpit.Data.Import.ImportDefinitionBuilder.OrderByRelations
  isExternal: true
  name: OrderByRelations
  nameWithType: ImportDefinitionBuilder.OrderByRelations
  fullName: TimeCockpit.Data.Import.ImportDefinitionBuilder.OrderByRelations
- uid: TimeCockpit.Data.Import.ImportDefinitionBuilder.SanitizeWorksheetName*
  commentId: Overload:TimeCockpit.Data.Import.ImportDefinitionBuilder.SanitizeWorksheetName
  isExternal: true
  name: SanitizeWorksheetName
  nameWithType: ImportDefinitionBuilder.SanitizeWorksheetName
  fullName: TimeCockpit.Data.Import.ImportDefinitionBuilder.SanitizeWorksheetName
- uid: TimeCockpit.Data.Import.ImportDefinitionBuilder.#ctor*
  commentId: Overload:TimeCockpit.Data.Import.ImportDefinitionBuilder.#ctor
  isExternal: true
  name: ImportDefinitionBuilder
  nameWithType: ImportDefinitionBuilder.ImportDefinitionBuilder
  fullName: TimeCockpit.Data.Import.ImportDefinitionBuilder.ImportDefinitionBuilder
