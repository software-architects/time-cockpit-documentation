### YamlMime:ManagedReference
items:
- uid: TimeCockpit.UI.Common.Version.FeatureProviderHelper
  commentId: T:TimeCockpit.UI.Common.Version.FeatureProviderHelper
  id: FeatureProviderHelper
  parent: TimeCockpit.UI.Common.Version
  children:
  - TimeCockpit.UI.Common.Version.FeatureProviderHelper.CreateFeatureFromType(System.Type,TimeCockpit.UI.Common.Version.BatchDelegate[])
  - TimeCockpit.UI.Common.Version.FeatureProviderHelper.FixFeatureDependencies(System.Collections.Generic.List{TimeCockpit.Data.Install.Feature},System.Guid)
  langs:
  - csharp
  - vb
  name: FeatureProviderHelper
  nameWithType: FeatureProviderHelper
  fullName: TimeCockpit.UI.Common.Version.FeatureProviderHelper
  type: Class
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.UI.Common.Version
  summary: "\nHelper for feature provider.\n"
  syntax:
    content: public static class FeatureProviderHelper
    content.vb: Public Module FeatureProviderHelper
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: TimeCockpit.UI.Common.Version.FeatureProviderHelper.FixFeatureDependencies(System.Collections.Generic.List{TimeCockpit.Data.Install.Feature},System.Guid)
  commentId: M:TimeCockpit.UI.Common.Version.FeatureProviderHelper.FixFeatureDependencies(System.Collections.Generic.List{TimeCockpit.Data.Install.Feature},System.Guid)
  id: FixFeatureDependencies(System.Collections.Generic.List{TimeCockpit.Data.Install.Feature},System.Guid)
  parent: TimeCockpit.UI.Common.Version.FeatureProviderHelper
  langs:
  - csharp
  - vb
  name: FixFeatureDependencies(List<Feature>, Guid)
  nameWithType: FeatureProviderHelper.FixFeatureDependencies(List<Feature>, Guid)
  fullName: TimeCockpit.UI.Common.Version.FeatureProviderHelper.FixFeatureDependencies(System.Collections.Generic.List<TimeCockpit.Data.Install.Feature>, System.Guid)
  type: Method
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.UI.Common.Version
  summary: "\nAdds the feature prerequisites \n"
  syntax:
    content: public static void FixFeatureDependencies(List<Feature> features, Guid lastXamlFeatureGuid)
    parameters:
    - id: features
      type: System.Collections.Generic.List{TimeCockpit.Data.Install.Feature}
      description: The features to batch up in a dependency chain.
    - id: lastXamlFeatureGuid
      type: System.Guid
      description: the last guid to set as prerequisite to the first feature.
    content.vb: Public Shared Sub FixFeatureDependencies(features As List(Of Feature), lastXamlFeatureGuid As Guid)
  overload: TimeCockpit.UI.Common.Version.FeatureProviderHelper.FixFeatureDependencies*
  nameWithType.vb: FeatureProviderHelper.FixFeatureDependencies(List(Of Feature), Guid)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TimeCockpit.UI.Common.Version.FeatureProviderHelper.FixFeatureDependencies(System.Collections.Generic.List(Of TimeCockpit.Data.Install.Feature), System.Guid)
  name.vb: FixFeatureDependencies(List(Of Feature), Guid)
- uid: TimeCockpit.UI.Common.Version.FeatureProviderHelper.CreateFeatureFromType(System.Type,TimeCockpit.UI.Common.Version.BatchDelegate[])
  commentId: M:TimeCockpit.UI.Common.Version.FeatureProviderHelper.CreateFeatureFromType(System.Type,TimeCockpit.UI.Common.Version.BatchDelegate[])
  id: CreateFeatureFromType(System.Type,TimeCockpit.UI.Common.Version.BatchDelegate[])
  parent: TimeCockpit.UI.Common.Version.FeatureProviderHelper
  langs:
  - csharp
  - vb
  name: CreateFeatureFromType(Type, BatchDelegate[])
  nameWithType: FeatureProviderHelper.CreateFeatureFromType(Type, BatchDelegate[])
  fullName: TimeCockpit.UI.Common.Version.FeatureProviderHelper.CreateFeatureFromType(System.Type, TimeCockpit.UI.Common.Version.BatchDelegate[])
  type: Method
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.UI.Common.Version
  summary: "\nCreates a feature from a set of batches.\n"
  syntax:
    content: public static Feature CreateFeatureFromType(Type featureType, BatchDelegate[] batches)
    parameters:
    - id: featureType
      type: System.Type
      description: The type describing the feature.
    - id: batches
      type: TimeCockpit.UI.Common.Version.BatchDelegate[]
      description: The batch delegates.
    return:
      type: TimeCockpit.Data.Install.Feature
      description: Returns a feature.
    content.vb: Public Shared Function CreateFeatureFromType(featureType As Type, batches As BatchDelegate()) As Feature
  overload: TimeCockpit.UI.Common.Version.FeatureProviderHelper.CreateFeatureFromType*
  nameWithType.vb: FeatureProviderHelper.CreateFeatureFromType(Type, BatchDelegate())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TimeCockpit.UI.Common.Version.FeatureProviderHelper.CreateFeatureFromType(System.Type, TimeCockpit.UI.Common.Version.BatchDelegate())
  name.vb: CreateFeatureFromType(Type, BatchDelegate())
references:
- uid: TimeCockpit.UI.Common.Version
  commentId: N:TimeCockpit.UI.Common.Version
  isExternal: true
  name: TimeCockpit.UI.Common.Version
  nameWithType: TimeCockpit.UI.Common.Version
  fullName: TimeCockpit.UI.Common.Version
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TimeCockpit.UI.Common.Version.FeatureProviderHelper.FixFeatureDependencies*
  commentId: Overload:TimeCockpit.UI.Common.Version.FeatureProviderHelper.FixFeatureDependencies
  isExternal: true
  name: FixFeatureDependencies
  nameWithType: FeatureProviderHelper.FixFeatureDependencies
  fullName: TimeCockpit.UI.Common.Version.FeatureProviderHelper.FixFeatureDependencies
- uid: System.Collections.Generic.List{TimeCockpit.Data.Install.Feature}
  commentId: T:System.Collections.Generic.List{TimeCockpit.Data.Install.Feature}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Feature>
  nameWithType: List<Feature>
  fullName: System.Collections.Generic.List<TimeCockpit.Data.Install.Feature>
  nameWithType.vb: List(Of Feature)
  fullName.vb: System.Collections.Generic.List(Of TimeCockpit.Data.Install.Feature)
  name.vb: List(Of Feature)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TimeCockpit.Data.Install.Feature
    name: Feature
    nameWithType: Feature
    fullName: TimeCockpit.Data.Install.Feature
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TimeCockpit.Data.Install.Feature
    name: Feature
    nameWithType: Feature
    fullName: TimeCockpit.Data.Install.Feature
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: TimeCockpit.UI.Common.Version.FeatureProviderHelper.CreateFeatureFromType*
  commentId: Overload:TimeCockpit.UI.Common.Version.FeatureProviderHelper.CreateFeatureFromType
  isExternal: true
  name: CreateFeatureFromType
  nameWithType: FeatureProviderHelper.CreateFeatureFromType
  fullName: TimeCockpit.UI.Common.Version.FeatureProviderHelper.CreateFeatureFromType
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: TimeCockpit.UI.Common.Version.BatchDelegate[]
  isExternal: true
  name: BatchDelegate[]
  nameWithType: BatchDelegate[]
  fullName: TimeCockpit.UI.Common.Version.BatchDelegate[]
  nameWithType.vb: BatchDelegate()
  fullName.vb: TimeCockpit.UI.Common.Version.BatchDelegate()
  name.vb: BatchDelegate()
  spec.csharp:
  - uid: TimeCockpit.UI.Common.Version.BatchDelegate
    name: BatchDelegate
    nameWithType: BatchDelegate
    fullName: TimeCockpit.UI.Common.Version.BatchDelegate
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: TimeCockpit.UI.Common.Version.BatchDelegate
    name: BatchDelegate
    nameWithType: BatchDelegate
    fullName: TimeCockpit.UI.Common.Version.BatchDelegate
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: TimeCockpit.Data.Install.Feature
  commentId: T:TimeCockpit.Data.Install.Feature
  parent: TimeCockpit.Data.Install
  isExternal: true
  name: Feature
  nameWithType: Feature
  fullName: TimeCockpit.Data.Install.Feature
- uid: TimeCockpit.Data.Install
  commentId: N:TimeCockpit.Data.Install
  isExternal: true
  name: TimeCockpit.Data.Install
  nameWithType: TimeCockpit.Data.Install
  fullName: TimeCockpit.Data.Install
