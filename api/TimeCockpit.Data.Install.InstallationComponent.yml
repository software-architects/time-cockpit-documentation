### YamlMime:ManagedReference
items:
- uid: TimeCockpit.Data.Install.InstallationComponent
  commentId: T:TimeCockpit.Data.Install.InstallationComponent
  id: InstallationComponent
  parent: TimeCockpit.Data.Install
  children:
  - TimeCockpit.Data.Install.InstallationComponent.#ctor
  - TimeCockpit.Data.Install.InstallationComponent.ComponentUuid
  - TimeCockpit.Data.Install.InstallationComponent.InvariantFriendlyName
  - TimeCockpit.Data.Install.InstallationComponent.Mandatory
  - TimeCockpit.Data.Install.InstallationComponent.ProviderInvariantName
  langs:
  - csharp
  - vb
  name: InstallationComponent
  nameWithType: InstallationComponent
  fullName: TimeCockpit.Data.Install.InstallationComponent
  type: Class
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Install
  summary: "\nRepresents a component that is used in the installation and update process\n"
  syntax:
    content: public abstract class InstallationComponent
    content.vb: Public MustInherit Class InstallationComponent
  inheritance:
  - System.Object
  derivedClasses:
  - TimeCockpit.Data.Install.CompiledInstallationComponent
  - TimeCockpit.Data.Install.Feature
  - TimeCockpit.Data.Install.InstallationGroup
  - TimeCockpit.Data.Install.InstallationScript
  - TimeCockpit.Data.Install.SystemObjectInstall
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: TimeCockpit.Data.Install.InstallationComponent.#ctor
  commentId: M:TimeCockpit.Data.Install.InstallationComponent.#ctor
  id: '#ctor'
  parent: TimeCockpit.Data.Install.InstallationComponent
  langs:
  - csharp
  - vb
  name: InstallationComponent()
  nameWithType: InstallationComponent.InstallationComponent()
  fullName: TimeCockpit.Data.Install.InstallationComponent.InstallationComponent()
  type: Constructor
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Install
  syntax:
    content: protected InstallationComponent()
    content.vb: Protected Sub New
  overload: TimeCockpit.Data.Install.InstallationComponent.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: TimeCockpit.Data.Install.InstallationComponent.ComponentUuid
  commentId: P:TimeCockpit.Data.Install.InstallationComponent.ComponentUuid
  id: ComponentUuid
  parent: TimeCockpit.Data.Install.InstallationComponent
  langs:
  - csharp
  - vb
  name: ComponentUuid
  nameWithType: InstallationComponent.ComponentUuid
  fullName: TimeCockpit.Data.Install.InstallationComponent.ComponentUuid
  type: Property
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Install
  summary: "\nGets or sets the guid that can be used to uniquely identify the installer component\n"
  remarks: "\nYou need not explicitly set the component uuid because the system automatically assigns\na new uuid to each new installer component. However, you can set the value of the property\nif you need to.\n"
  syntax:
    content: public Guid ComponentUuid { get; set; }
    parameters: []
    return:
      type: System.Guid
    content.vb: Public Property ComponentUuid As Guid
  overload: TimeCockpit.Data.Install.InstallationComponent.ComponentUuid*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Install.InstallationComponent.InvariantFriendlyName
  commentId: P:TimeCockpit.Data.Install.InstallationComponent.InvariantFriendlyName
  id: InvariantFriendlyName
  parent: TimeCockpit.Data.Install.InstallationComponent
  langs:
  - csharp
  - vb
  name: InvariantFriendlyName
  nameWithType: InstallationComponent.InvariantFriendlyName
  fullName: TimeCockpit.Data.Install.InstallationComponent.InvariantFriendlyName
  type: Property
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Install
  summary: "\nGets or sets the culture-invariant friendly name of the component.\n"
  syntax:
    content: public string InvariantFriendlyName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property InvariantFriendlyName As String
  overload: TimeCockpit.Data.Install.InstallationComponent.InvariantFriendlyName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Install.InstallationComponent.Mandatory
  commentId: P:TimeCockpit.Data.Install.InstallationComponent.Mandatory
  id: Mandatory
  parent: TimeCockpit.Data.Install.InstallationComponent
  langs:
  - csharp
  - vb
  name: Mandatory
  nameWithType: InstallationComponent.Mandatory
  fullName: TimeCockpit.Data.Install.InstallationComponent.Mandatory
  type: Property
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Install
  summary: "\nGets or sets a value indicating whether whether the application can run without this component installed.\n"
  syntax:
    content: public bool Mandatory { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Mandatory As Boolean
  overload: TimeCockpit.Data.Install.InstallationComponent.Mandatory*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Install.InstallationComponent.ProviderInvariantName
  commentId: P:TimeCockpit.Data.Install.InstallationComponent.ProviderInvariantName
  id: ProviderInvariantName
  parent: TimeCockpit.Data.Install.InstallationComponent
  langs:
  - csharp
  - vb
  name: ProviderInvariantName
  nameWithType: InstallationComponent.ProviderInvariantName
  fullName: TimeCockpit.Data.Install.InstallationComponent.ProviderInvariantName
  type: Property
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Install
  summary: "\nGets or sets the invariant provider name on which the script should be executed.\n"
  remarks: "\n<p>\n  Property can be set to &quot;All&quot; if the script should be executed on all providers or\n  to a known provider name (see also <xref href=\"System.Data.Common.DbProviderFactories.GetFactoryClasses\" data-throw-if-not-resolved=\"false\"></xref>).\n</p>\n<p>\n  The default value for this property is &quot;All&quot;.\n</p>\n"
  syntax:
    content: public string ProviderInvariantName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ProviderInvariantName As String
  overload: TimeCockpit.Data.Install.InstallationComponent.ProviderInvariantName*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: Thrown if provider name is neither &quot;All&quot; nor a known provider name.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: TimeCockpit.Data.Install
  commentId: N:TimeCockpit.Data.Install
  isExternal: true
  name: TimeCockpit.Data.Install
  nameWithType: TimeCockpit.Data.Install
  fullName: TimeCockpit.Data.Install
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TimeCockpit.Data.Install.InstallationComponent.#ctor*
  commentId: Overload:TimeCockpit.Data.Install.InstallationComponent.#ctor
  isExternal: true
  name: InstallationComponent
  nameWithType: InstallationComponent.InstallationComponent
  fullName: TimeCockpit.Data.Install.InstallationComponent.InstallationComponent
- uid: TimeCockpit.Data.Install.InstallationComponent.ComponentUuid*
  commentId: Overload:TimeCockpit.Data.Install.InstallationComponent.ComponentUuid
  isExternal: true
  name: ComponentUuid
  nameWithType: InstallationComponent.ComponentUuid
  fullName: TimeCockpit.Data.Install.InstallationComponent.ComponentUuid
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: TimeCockpit.Data.Install.InstallationComponent.InvariantFriendlyName*
  commentId: Overload:TimeCockpit.Data.Install.InstallationComponent.InvariantFriendlyName
  isExternal: true
  name: InvariantFriendlyName
  nameWithType: InstallationComponent.InvariantFriendlyName
  fullName: TimeCockpit.Data.Install.InstallationComponent.InvariantFriendlyName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: TimeCockpit.Data.Install.InstallationComponent.Mandatory*
  commentId: Overload:TimeCockpit.Data.Install.InstallationComponent.Mandatory
  isExternal: true
  name: Mandatory
  nameWithType: InstallationComponent.Mandatory
  fullName: TimeCockpit.Data.Install.InstallationComponent.Mandatory
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: TimeCockpit.Data.Install.InstallationComponent.ProviderInvariantName*
  commentId: Overload:TimeCockpit.Data.Install.InstallationComponent.ProviderInvariantName
  isExternal: true
  name: ProviderInvariantName
  nameWithType: InstallationComponent.ProviderInvariantName
  fullName: TimeCockpit.Data.Install.InstallationComponent.ProviderInvariantName
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  isExternal: true
