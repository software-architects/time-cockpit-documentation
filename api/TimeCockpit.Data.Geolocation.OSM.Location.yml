### YamlMime:ManagedReference
items:
- uid: TimeCockpit.Data.Geolocation.OSM.Location
  commentId: T:TimeCockpit.Data.Geolocation.OSM.Location
  id: Location
  parent: TimeCockpit.Data.Geolocation.OSM
  children:
  - TimeCockpit.Data.Geolocation.OSM.Location.#ctor(System.Decimal,System.Decimal,System.Decimal,System.String,System.String)
  - TimeCockpit.Data.Geolocation.OSM.Location.Class
  - TimeCockpit.Data.Geolocation.OSM.Location.Latitude
  - TimeCockpit.Data.Geolocation.OSM.Location.Longitude
  - TimeCockpit.Data.Geolocation.OSM.Location.MaxRadius
  - TimeCockpit.Data.Geolocation.OSM.Location.NoMatch
  - TimeCockpit.Data.Geolocation.OSM.Location.Radius
  - TimeCockpit.Data.Geolocation.OSM.Location.Type
  langs:
  - csharp
  - vb
  name: Location
  nameWithType: Location
  fullName: TimeCockpit.Data.Geolocation.OSM.Location
  type: Class
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Geolocation.OSM
  summary: "\nRepresents a simple location.\n"
  syntax:
    content: public class Location
    content.vb: Public Class Location
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TimeCockpit.Data.Geolocation.OSM.Location.MaxRadius
  commentId: F:TimeCockpit.Data.Geolocation.OSM.Location.MaxRadius
  id: MaxRadius
  parent: TimeCockpit.Data.Geolocation.OSM.Location
  langs:
  - csharp
  - vb
  name: MaxRadius
  nameWithType: Location.MaxRadius
  fullName: TimeCockpit.Data.Geolocation.OSM.Location.MaxRadius
  type: Field
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Geolocation.OSM
  summary: "\nMaximum radius, represents no-match.\n"
  syntax:
    content: public static readonly decimal MaxRadius
    return:
      type: System.Decimal
    content.vb: Public Shared ReadOnly MaxRadius As Decimal
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: TimeCockpit.Data.Geolocation.OSM.Location.NoMatch
  commentId: F:TimeCockpit.Data.Geolocation.OSM.Location.NoMatch
  id: NoMatch
  parent: TimeCockpit.Data.Geolocation.OSM.Location
  langs:
  - csharp
  - vb
  name: NoMatch
  nameWithType: Location.NoMatch
  fullName: TimeCockpit.Data.Geolocation.OSM.Location.NoMatch
  type: Field
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Geolocation.OSM
  summary: "\nConstant no-match location.\n"
  syntax:
    content: public static readonly Location NoMatch
    return:
      type: TimeCockpit.Data.Geolocation.OSM.Location
    content.vb: Public Shared ReadOnly NoMatch As Location
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: TimeCockpit.Data.Geolocation.OSM.Location.#ctor(System.Decimal,System.Decimal,System.Decimal,System.String,System.String)
  commentId: M:TimeCockpit.Data.Geolocation.OSM.Location.#ctor(System.Decimal,System.Decimal,System.Decimal,System.String,System.String)
  id: '#ctor(System.Decimal,System.Decimal,System.Decimal,System.String,System.String)'
  parent: TimeCockpit.Data.Geolocation.OSM.Location
  langs:
  - csharp
  - vb
  name: Location(Decimal, Decimal, Decimal, String, String)
  nameWithType: Location.Location(Decimal, Decimal, Decimal, String, String)
  fullName: TimeCockpit.Data.Geolocation.OSM.Location.Location(System.Decimal, System.Decimal, System.Decimal, System.String, System.String)
  type: Constructor
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Geolocation.OSM
  summary: "\nInitializes a new instance of the Location class.\n"
  syntax:
    content: public Location(decimal latitude, decimal longitude, decimal radius, string type, string className)
    parameters:
    - id: latitude
      type: System.Decimal
      description: Latitude in decimal degrees.
    - id: longitude
      type: System.Decimal
      description: Longitude in decimal degrees.
    - id: radius
      type: System.Decimal
      description: Radius in meters.
    - id: type
      type: System.String
      description: Location type. e.g. postcode
    - id: className
      type: System.String
      description: Location class. e.g. highway
    content.vb: Public Sub New(latitude As Decimal, longitude As Decimal, radius As Decimal, type As String, className As String)
  overload: TimeCockpit.Data.Geolocation.OSM.Location.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Geolocation.OSM.Location.Latitude
  commentId: P:TimeCockpit.Data.Geolocation.OSM.Location.Latitude
  id: Latitude
  parent: TimeCockpit.Data.Geolocation.OSM.Location
  langs:
  - csharp
  - vb
  name: Latitude
  nameWithType: Location.Latitude
  fullName: TimeCockpit.Data.Geolocation.OSM.Location.Latitude
  type: Property
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Geolocation.OSM
  summary: "\nGets the decimal degree latidude.\n"
  syntax:
    content: public decimal Latitude { get; }
    parameters: []
    return:
      type: System.Decimal
    content.vb: Public ReadOnly Property Latitude As Decimal
  overload: TimeCockpit.Data.Geolocation.OSM.Location.Latitude*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TimeCockpit.Data.Geolocation.OSM.Location.Longitude
  commentId: P:TimeCockpit.Data.Geolocation.OSM.Location.Longitude
  id: Longitude
  parent: TimeCockpit.Data.Geolocation.OSM.Location
  langs:
  - csharp
  - vb
  name: Longitude
  nameWithType: Location.Longitude
  fullName: TimeCockpit.Data.Geolocation.OSM.Location.Longitude
  type: Property
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Geolocation.OSM
  summary: "\nGets the decimal degree longitude.\n"
  syntax:
    content: public decimal Longitude { get; }
    parameters: []
    return:
      type: System.Decimal
    content.vb: Public ReadOnly Property Longitude As Decimal
  overload: TimeCockpit.Data.Geolocation.OSM.Location.Longitude*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TimeCockpit.Data.Geolocation.OSM.Location.Radius
  commentId: P:TimeCockpit.Data.Geolocation.OSM.Location.Radius
  id: Radius
  parent: TimeCockpit.Data.Geolocation.OSM.Location
  langs:
  - csharp
  - vb
  name: Radius
  nameWithType: Location.Radius
  fullName: TimeCockpit.Data.Geolocation.OSM.Location.Radius
  type: Property
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Geolocation.OSM
  summary: "\nGets the radius in meters.\n"
  syntax:
    content: public decimal Radius { get; }
    parameters: []
    return:
      type: System.Decimal
    content.vb: Public ReadOnly Property Radius As Decimal
  overload: TimeCockpit.Data.Geolocation.OSM.Location.Radius*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TimeCockpit.Data.Geolocation.OSM.Location.Type
  commentId: P:TimeCockpit.Data.Geolocation.OSM.Location.Type
  id: Type
  parent: TimeCockpit.Data.Geolocation.OSM.Location
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: Location.Type
  fullName: TimeCockpit.Data.Geolocation.OSM.Location.Type
  type: Property
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Geolocation.OSM
  summary: "\nGets the location type. e.g. city, building\n"
  syntax:
    content: public string Type { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Type As String
  overload: TimeCockpit.Data.Geolocation.OSM.Location.Type*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TimeCockpit.Data.Geolocation.OSM.Location.Class
  commentId: P:TimeCockpit.Data.Geolocation.OSM.Location.Class
  id: Class
  parent: TimeCockpit.Data.Geolocation.OSM.Location
  langs:
  - csharp
  - vb
  name: Class
  nameWithType: Location.Class
  fullName: TimeCockpit.Data.Geolocation.OSM.Location.Class
  type: Property
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Geolocation.OSM
  summary: "\nGets the location class. e.g. highway\n"
  syntax:
    content: public string Class { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Class As String
  overload: TimeCockpit.Data.Geolocation.OSM.Location.Class*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: TimeCockpit.Data.Geolocation.OSM
  commentId: N:TimeCockpit.Data.Geolocation.OSM
  isExternal: true
  name: TimeCockpit.Data.Geolocation.OSM
  nameWithType: TimeCockpit.Data.Geolocation.OSM
  fullName: TimeCockpit.Data.Geolocation.OSM
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Decimal
  commentId: T:System.Decimal
  parent: System
  isExternal: true
  name: Decimal
  nameWithType: Decimal
  fullName: System.Decimal
- uid: TimeCockpit.Data.Geolocation.OSM.Location
  commentId: T:TimeCockpit.Data.Geolocation.OSM.Location
  parent: TimeCockpit.Data.Geolocation.OSM
  isExternal: true
  name: Location
  nameWithType: Location
  fullName: TimeCockpit.Data.Geolocation.OSM.Location
- uid: TimeCockpit.Data.Geolocation.OSM.Location.#ctor*
  commentId: Overload:TimeCockpit.Data.Geolocation.OSM.Location.#ctor
  isExternal: true
  name: Location
  nameWithType: Location.Location
  fullName: TimeCockpit.Data.Geolocation.OSM.Location.Location
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: TimeCockpit.Data.Geolocation.OSM.Location.Latitude*
  commentId: Overload:TimeCockpit.Data.Geolocation.OSM.Location.Latitude
  isExternal: true
  name: Latitude
  nameWithType: Location.Latitude
  fullName: TimeCockpit.Data.Geolocation.OSM.Location.Latitude
- uid: TimeCockpit.Data.Geolocation.OSM.Location.Longitude*
  commentId: Overload:TimeCockpit.Data.Geolocation.OSM.Location.Longitude
  isExternal: true
  name: Longitude
  nameWithType: Location.Longitude
  fullName: TimeCockpit.Data.Geolocation.OSM.Location.Longitude
- uid: TimeCockpit.Data.Geolocation.OSM.Location.Radius*
  commentId: Overload:TimeCockpit.Data.Geolocation.OSM.Location.Radius
  isExternal: true
  name: Radius
  nameWithType: Location.Radius
  fullName: TimeCockpit.Data.Geolocation.OSM.Location.Radius
- uid: TimeCockpit.Data.Geolocation.OSM.Location.Type*
  commentId: Overload:TimeCockpit.Data.Geolocation.OSM.Location.Type
  isExternal: true
  name: Type
  nameWithType: Location.Type
  fullName: TimeCockpit.Data.Geolocation.OSM.Location.Type
- uid: TimeCockpit.Data.Geolocation.OSM.Location.Class*
  commentId: Overload:TimeCockpit.Data.Geolocation.OSM.Location.Class
  isExternal: true
  name: Class
  nameWithType: Location.Class
  fullName: TimeCockpit.Data.Geolocation.OSM.Location.Class
