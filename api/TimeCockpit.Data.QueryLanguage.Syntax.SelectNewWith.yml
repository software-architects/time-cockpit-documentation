### YamlMime:ManagedReference
items:
- uid: TimeCockpit.Data.QueryLanguage.Syntax.SelectNewWith
  commentId: T:TimeCockpit.Data.QueryLanguage.Syntax.SelectNewWith
  id: SelectNewWith
  parent: TimeCockpit.Data.QueryLanguage.Syntax
  children:
  - TimeCockpit.Data.QueryLanguage.Syntax.SelectNewWith.#ctor(System.Collections.Generic.IEnumerable{TimeCockpit.Data.QueryLanguage.Syntax.MemberDeclaration},System.String,System.Int32)
  - TimeCockpit.Data.QueryLanguage.Syntax.SelectNewWith.Accept(TimeCockpit.Data.QueryLanguage.Syntax.Visitor)
  - TimeCockpit.Data.QueryLanguage.Syntax.SelectNewWith.EntityName
  - TimeCockpit.Data.QueryLanguage.Syntax.SelectNewWith.Members
  langs:
  - csharp
  - vb
  name: SelectNewWith
  nameWithType: SelectNewWith
  fullName: TimeCockpit.Data.QueryLanguage.Syntax.SelectNewWith
  type: Class
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/QueryLanguage/Syntax/SelectNewWith.cs
    id: SelectNewWith
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/QueryLanguage/Syntax/SelectNewWith.cs
    startLine: 21
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.QueryLanguage.Syntax
  summary: "\nAST Node representing a select new with statement.\ne.g.\nIn\n<pre><code>From X In Timesheet Select New With { .Duration = X.EndTime - X.BeginTime }</code></pre>\nthis node represents the &quot;Select New With { .Duration = X.EndTime - X.BeginTime }&quot; part.\n"
  example: []
  syntax:
    content: 'public class SelectNewWith : Select'
    content.vb: >-
      Public Class SelectNewWith
          Inherits

           Select
  inheritance:
  - System.Object
  - TimeCockpit.Data.QueryLanguage.Syntax.Node
  - TimeCockpit.Data.QueryLanguage.Syntax.Select
  inheritedMembers:
  - TimeCockpit.Data.QueryLanguage.Syntax.Select.IsTopLimited
  - TimeCockpit.Data.QueryLanguage.Syntax.Select.TopCount
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TimeCockpit.Data.QueryLanguage.Syntax.SelectNewWith.#ctor(System.Collections.Generic.IEnumerable{TimeCockpit.Data.QueryLanguage.Syntax.MemberDeclaration},System.String,System.Int32)
  commentId: M:TimeCockpit.Data.QueryLanguage.Syntax.SelectNewWith.#ctor(System.Collections.Generic.IEnumerable{TimeCockpit.Data.QueryLanguage.Syntax.MemberDeclaration},System.String,System.Int32)
  id: '#ctor(System.Collections.Generic.IEnumerable{TimeCockpit.Data.QueryLanguage.Syntax.MemberDeclaration},System.String,System.Int32)'
  parent: TimeCockpit.Data.QueryLanguage.Syntax.SelectNewWith
  langs:
  - csharp
  - vb
  name: SelectNewWith(IEnumerable<MemberDeclaration>, String, Int32)
  nameWithType: SelectNewWith.SelectNewWith(IEnumerable<MemberDeclaration>, String, Int32)
  fullName: TimeCockpit.Data.QueryLanguage.Syntax.SelectNewWith.SelectNewWith(System.Collections.Generic.IEnumerable<TimeCockpit.Data.QueryLanguage.Syntax.MemberDeclaration>, System.String, System.Int32)
  type: Constructor
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/QueryLanguage/Syntax/SelectNewWith.cs
    id: .ctor
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/QueryLanguage/Syntax/SelectNewWith.cs
    startLine: 29
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.QueryLanguage.Syntax
  summary: "\nInitializes a new instance of the <xref href=\"TimeCockpit.Data.QueryLanguage.Syntax.SelectNewWith\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public SelectNewWith(IEnumerable<MemberDeclaration> members, string entityName = null, int topCount = -1)
    parameters:
    - id: members
      type: System.Collections.Generic.IEnumerable{TimeCockpit.Data.QueryLanguage.Syntax.MemberDeclaration}
      description: The members of the new type defined by select new with.
    - id: entityName
      type: System.String
      description: The name of the entity that describes the structure of the new entity.
    - id: topCount
      type: System.Int32
      description: The topCount value.
    content.vb: Public Sub New(members As IEnumerable(Of MemberDeclaration), entityName As String = Nothing, topCount As Integer = -1)
  overload: TimeCockpit.Data.QueryLanguage.Syntax.SelectNewWith.#ctor*
  nameWithType.vb: SelectNewWith.SelectNewWith(IEnumerable(Of MemberDeclaration), String, Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TimeCockpit.Data.QueryLanguage.Syntax.SelectNewWith.SelectNewWith(System.Collections.Generic.IEnumerable(Of TimeCockpit.Data.QueryLanguage.Syntax.MemberDeclaration), System.String, System.Int32)
  name.vb: SelectNewWith(IEnumerable(Of MemberDeclaration), String, Int32)
- uid: TimeCockpit.Data.QueryLanguage.Syntax.SelectNewWith.EntityName
  commentId: P:TimeCockpit.Data.QueryLanguage.Syntax.SelectNewWith.EntityName
  id: EntityName
  parent: TimeCockpit.Data.QueryLanguage.Syntax.SelectNewWith
  langs:
  - csharp
  - vb
  name: EntityName
  nameWithType: SelectNewWith.EntityName
  fullName: TimeCockpit.Data.QueryLanguage.Syntax.SelectNewWith.EntityName
  type: Property
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/QueryLanguage/Syntax/SelectNewWith.cs
    id: EntityName
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/QueryLanguage/Syntax/SelectNewWith.cs
    startLine: 44
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.QueryLanguage.Syntax
  summary: "\nGets the name of the entity to create.\n"
  example: []
  syntax:
    content: public string EntityName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property EntityName As String
  overload: TimeCockpit.Data.QueryLanguage.Syntax.SelectNewWith.EntityName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TimeCockpit.Data.QueryLanguage.Syntax.SelectNewWith.Members
  commentId: P:TimeCockpit.Data.QueryLanguage.Syntax.SelectNewWith.Members
  id: Members
  parent: TimeCockpit.Data.QueryLanguage.Syntax.SelectNewWith
  langs:
  - csharp
  - vb
  name: Members
  nameWithType: SelectNewWith.Members
  fullName: TimeCockpit.Data.QueryLanguage.Syntax.SelectNewWith.Members
  type: Property
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/QueryLanguage/Syntax/SelectNewWith.cs
    id: Members
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/QueryLanguage/Syntax/SelectNewWith.cs
    startLine: 52
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.QueryLanguage.Syntax
  summary: "\nGets the members of the select new with statement.\n"
  example: []
  syntax:
    content: public ReadOnlyCollection<MemberDeclaration> Members { get; }
    parameters: []
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{TimeCockpit.Data.QueryLanguage.Syntax.MemberDeclaration}
    content.vb: Public ReadOnly Property Members As ReadOnlyCollection(Of MemberDeclaration)
  overload: TimeCockpit.Data.QueryLanguage.Syntax.SelectNewWith.Members*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TimeCockpit.Data.QueryLanguage.Syntax.SelectNewWith.Accept(TimeCockpit.Data.QueryLanguage.Syntax.Visitor)
  commentId: M:TimeCockpit.Data.QueryLanguage.Syntax.SelectNewWith.Accept(TimeCockpit.Data.QueryLanguage.Syntax.Visitor)
  id: Accept(TimeCockpit.Data.QueryLanguage.Syntax.Visitor)
  parent: TimeCockpit.Data.QueryLanguage.Syntax.SelectNewWith
  langs:
  - csharp
  - vb
  name: Accept(Visitor)
  nameWithType: SelectNewWith.Accept(Visitor)
  fullName: TimeCockpit.Data.QueryLanguage.Syntax.SelectNewWith.Accept(TimeCockpit.Data.QueryLanguage.Syntax.Visitor)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/QueryLanguage/Syntax/SelectNewWith.cs
    id: Accept
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/QueryLanguage/Syntax/SelectNewWith.cs
    startLine: 63
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.QueryLanguage.Syntax
  summary: "\nDispatches to the correct <xref href=\"TimeCockpit.Data.QueryLanguage.Syntax.Visitor.VisitQuery(TimeCockpit.Data.QueryLanguage.Syntax.Query)\" data-throw-if-not-resolved=\"false\"></xref> call.\n"
  example: []
  syntax:
    content: public override Node Accept(Visitor visitor)
    parameters:
    - id: visitor
      type: TimeCockpit.Data.QueryLanguage.Syntax.Visitor
      description: The visitor to visit.
    return:
      type: TimeCockpit.Data.QueryLanguage.Syntax.Node
      description: Returns the value returned from the <xref href="TimeCockpit.Data.QueryLanguage.Syntax.Visitor.VisitQuery(TimeCockpit.Data.QueryLanguage.Syntax.Query)" data-throw-if-not-resolved="false"></xref> call.
    content.vb: Public Overrides Function Accept(visitor As Visitor) As Node
  overridden: TimeCockpit.Data.QueryLanguage.Syntax.Node.Accept(TimeCockpit.Data.QueryLanguage.Syntax.Visitor)
  overload: TimeCockpit.Data.QueryLanguage.Syntax.SelectNewWith.Accept*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: TimeCockpit.Data.QueryLanguage.Syntax
  commentId: N:TimeCockpit.Data.QueryLanguage.Syntax
  isExternal: false
  name: TimeCockpit.Data.QueryLanguage.Syntax
  nameWithType: TimeCockpit.Data.QueryLanguage.Syntax
  fullName: TimeCockpit.Data.QueryLanguage.Syntax
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: TimeCockpit.Data.QueryLanguage.Syntax.Node
  commentId: T:TimeCockpit.Data.QueryLanguage.Syntax.Node
  parent: TimeCockpit.Data.QueryLanguage.Syntax
  isExternal: false
  name: Node
  nameWithType: Node
  fullName: TimeCockpit.Data.QueryLanguage.Syntax.Node
- uid: TimeCockpit.Data.QueryLanguage.Syntax.Select
  commentId: T:TimeCockpit.Data.QueryLanguage.Syntax.Select
  parent: TimeCockpit.Data.QueryLanguage.Syntax
  isExternal: false
  name: Select
  nameWithType: Select
  fullName: TimeCockpit.Data.QueryLanguage.Syntax.Select
- uid: TimeCockpit.Data.QueryLanguage.Syntax.Select.IsTopLimited
  commentId: P:TimeCockpit.Data.QueryLanguage.Syntax.Select.IsTopLimited
  parent: TimeCockpit.Data.QueryLanguage.Syntax.Select
  isExternal: false
  name: IsTopLimited
  nameWithType: Select.IsTopLimited
  fullName: TimeCockpit.Data.QueryLanguage.Syntax.Select.IsTopLimited
- uid: TimeCockpit.Data.QueryLanguage.Syntax.Select.TopCount
  commentId: P:TimeCockpit.Data.QueryLanguage.Syntax.Select.TopCount
  parent: TimeCockpit.Data.QueryLanguage.Syntax.Select
  isExternal: false
  name: TopCount
  nameWithType: Select.TopCount
  fullName: TimeCockpit.Data.QueryLanguage.Syntax.Select.TopCount
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: TimeCockpit.Data.QueryLanguage.Syntax.SelectNewWith
  commentId: T:TimeCockpit.Data.QueryLanguage.Syntax.SelectNewWith
  parent: TimeCockpit.Data.QueryLanguage.Syntax
  isExternal: false
  name: SelectNewWith
  nameWithType: SelectNewWith
  fullName: TimeCockpit.Data.QueryLanguage.Syntax.SelectNewWith
- uid: TimeCockpit.Data.QueryLanguage.Syntax.SelectNewWith.#ctor*
  commentId: Overload:TimeCockpit.Data.QueryLanguage.Syntax.SelectNewWith.#ctor
  isExternal: false
  name: SelectNewWith
  nameWithType: SelectNewWith.SelectNewWith
  fullName: TimeCockpit.Data.QueryLanguage.Syntax.SelectNewWith.SelectNewWith
- uid: System.Collections.Generic.IEnumerable{TimeCockpit.Data.QueryLanguage.Syntax.MemberDeclaration}
  commentId: T:System.Collections.Generic.IEnumerable{TimeCockpit.Data.QueryLanguage.Syntax.MemberDeclaration}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<MemberDeclaration>
  nameWithType: IEnumerable<MemberDeclaration>
  fullName: System.Collections.Generic.IEnumerable<TimeCockpit.Data.QueryLanguage.Syntax.MemberDeclaration>
  nameWithType.vb: IEnumerable(Of MemberDeclaration)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TimeCockpit.Data.QueryLanguage.Syntax.MemberDeclaration)
  name.vb: IEnumerable(Of MemberDeclaration)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TimeCockpit.Data.QueryLanguage.Syntax.MemberDeclaration
    name: MemberDeclaration
    nameWithType: MemberDeclaration
    fullName: TimeCockpit.Data.QueryLanguage.Syntax.MemberDeclaration
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TimeCockpit.Data.QueryLanguage.Syntax.MemberDeclaration
    name: MemberDeclaration
    nameWithType: MemberDeclaration
    fullName: TimeCockpit.Data.QueryLanguage.Syntax.MemberDeclaration
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: TimeCockpit.Data.QueryLanguage.Syntax.SelectNewWith.EntityName*
  commentId: Overload:TimeCockpit.Data.QueryLanguage.Syntax.SelectNewWith.EntityName
  isExternal: false
  name: EntityName
  nameWithType: SelectNewWith.EntityName
  fullName: TimeCockpit.Data.QueryLanguage.Syntax.SelectNewWith.EntityName
- uid: TimeCockpit.Data.QueryLanguage.Syntax.SelectNewWith.Members*
  commentId: Overload:TimeCockpit.Data.QueryLanguage.Syntax.SelectNewWith.Members
  isExternal: false
  name: Members
  nameWithType: SelectNewWith.Members
  fullName: TimeCockpit.Data.QueryLanguage.Syntax.SelectNewWith.Members
- uid: System.Collections.ObjectModel.ReadOnlyCollection{TimeCockpit.Data.QueryLanguage.Syntax.MemberDeclaration}
  commentId: T:System.Collections.ObjectModel.ReadOnlyCollection{TimeCockpit.Data.QueryLanguage.Syntax.MemberDeclaration}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1
  name: ReadOnlyCollection<MemberDeclaration>
  nameWithType: ReadOnlyCollection<MemberDeclaration>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<TimeCockpit.Data.QueryLanguage.Syntax.MemberDeclaration>
  nameWithType.vb: ReadOnlyCollection(Of MemberDeclaration)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of TimeCockpit.Data.QueryLanguage.Syntax.MemberDeclaration)
  name.vb: ReadOnlyCollection(Of MemberDeclaration)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TimeCockpit.Data.QueryLanguage.Syntax.MemberDeclaration
    name: MemberDeclaration
    nameWithType: MemberDeclaration
    fullName: TimeCockpit.Data.QueryLanguage.Syntax.MemberDeclaration
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TimeCockpit.Data.QueryLanguage.Syntax.MemberDeclaration
    name: MemberDeclaration
    nameWithType: MemberDeclaration
    fullName: TimeCockpit.Data.QueryLanguage.Syntax.MemberDeclaration
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1
  commentId: T:System.Collections.ObjectModel.ReadOnlyCollection`1
  isExternal: true
  name: ReadOnlyCollection<T>
  nameWithType: ReadOnlyCollection<T>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>
  nameWithType.vb: ReadOnlyCollection(Of T)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T)
  name.vb: ReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel
  commentId: N:System.Collections.ObjectModel
  isExternal: false
  name: System.Collections.ObjectModel
  nameWithType: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
- uid: TimeCockpit.Data.QueryLanguage.Syntax.Visitor.VisitQuery(TimeCockpit.Data.QueryLanguage.Syntax.Query)
  commentId: M:TimeCockpit.Data.QueryLanguage.Syntax.Visitor.VisitQuery(TimeCockpit.Data.QueryLanguage.Syntax.Query)
  parent: TimeCockpit.Data.QueryLanguage.Syntax.Visitor
  isExternal: false
  name: VisitQuery(Query)
  nameWithType: Visitor.VisitQuery(Query)
  fullName: TimeCockpit.Data.QueryLanguage.Syntax.Visitor.VisitQuery(TimeCockpit.Data.QueryLanguage.Syntax.Query)
  spec.csharp:
  - uid: TimeCockpit.Data.QueryLanguage.Syntax.Visitor.VisitQuery(TimeCockpit.Data.QueryLanguage.Syntax.Query)
    name: VisitQuery
    nameWithType: Visitor.VisitQuery
    fullName: TimeCockpit.Data.QueryLanguage.Syntax.Visitor.VisitQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: TimeCockpit.Data.QueryLanguage.Syntax.Query
    name: Query
    nameWithType: Query
    fullName: TimeCockpit.Data.QueryLanguage.Syntax.Query
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TimeCockpit.Data.QueryLanguage.Syntax.Visitor.VisitQuery(TimeCockpit.Data.QueryLanguage.Syntax.Query)
    name: VisitQuery
    nameWithType: Visitor.VisitQuery
    fullName: TimeCockpit.Data.QueryLanguage.Syntax.Visitor.VisitQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: TimeCockpit.Data.QueryLanguage.Syntax.Query
    name: Query
    nameWithType: Query
    fullName: TimeCockpit.Data.QueryLanguage.Syntax.Query
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.QueryLanguage.Syntax.Node.Accept(TimeCockpit.Data.QueryLanguage.Syntax.Visitor)
  commentId: M:TimeCockpit.Data.QueryLanguage.Syntax.Node.Accept(TimeCockpit.Data.QueryLanguage.Syntax.Visitor)
  parent: TimeCockpit.Data.QueryLanguage.Syntax.Node
  isExternal: false
  name: Accept(Visitor)
  nameWithType: Node.Accept(Visitor)
  fullName: TimeCockpit.Data.QueryLanguage.Syntax.Node.Accept(TimeCockpit.Data.QueryLanguage.Syntax.Visitor)
  spec.csharp:
  - uid: TimeCockpit.Data.QueryLanguage.Syntax.Node.Accept(TimeCockpit.Data.QueryLanguage.Syntax.Visitor)
    name: Accept
    nameWithType: Node.Accept
    fullName: TimeCockpit.Data.QueryLanguage.Syntax.Node.Accept
  - name: (
    nameWithType: (
    fullName: (
  - uid: TimeCockpit.Data.QueryLanguage.Syntax.Visitor
    name: Visitor
    nameWithType: Visitor
    fullName: TimeCockpit.Data.QueryLanguage.Syntax.Visitor
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TimeCockpit.Data.QueryLanguage.Syntax.Node.Accept(TimeCockpit.Data.QueryLanguage.Syntax.Visitor)
    name: Accept
    nameWithType: Node.Accept
    fullName: TimeCockpit.Data.QueryLanguage.Syntax.Node.Accept
  - name: (
    nameWithType: (
    fullName: (
  - uid: TimeCockpit.Data.QueryLanguage.Syntax.Visitor
    name: Visitor
    nameWithType: Visitor
    fullName: TimeCockpit.Data.QueryLanguage.Syntax.Visitor
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.QueryLanguage.Syntax.SelectNewWith.Accept*
  commentId: Overload:TimeCockpit.Data.QueryLanguage.Syntax.SelectNewWith.Accept
  isExternal: false
  name: Accept
  nameWithType: SelectNewWith.Accept
  fullName: TimeCockpit.Data.QueryLanguage.Syntax.SelectNewWith.Accept
- uid: TimeCockpit.Data.QueryLanguage.Syntax.Visitor
  commentId: T:TimeCockpit.Data.QueryLanguage.Syntax.Visitor
  parent: TimeCockpit.Data.QueryLanguage.Syntax
  isExternal: false
  name: Visitor
  nameWithType: Visitor
  fullName: TimeCockpit.Data.QueryLanguage.Syntax.Visitor
