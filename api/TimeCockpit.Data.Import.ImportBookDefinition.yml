### YamlMime:ManagedReference
items:
- uid: TimeCockpit.Data.Import.ImportBookDefinition
  commentId: T:TimeCockpit.Data.Import.ImportBookDefinition
  id: ImportBookDefinition
  parent: TimeCockpit.Data.Import
  children:
  - TimeCockpit.Data.Import.ImportBookDefinition.#ctor
  - TimeCockpit.Data.Import.ImportBookDefinition.Namespace
  - TimeCockpit.Data.Import.ImportBookDefinition.OnPropertyChanged(System.String)
  - TimeCockpit.Data.Import.ImportBookDefinition.PropertyChanged
  - TimeCockpit.Data.Import.ImportBookDefinition.ReadXaml(System.String)
  - TimeCockpit.Data.Import.ImportBookDefinition.SaveReport
  - TimeCockpit.Data.Import.ImportBookDefinition.Sheets
  - TimeCockpit.Data.Import.ImportBookDefinition.SourceProvider
  - TimeCockpit.Data.Import.ImportBookDefinition.WriteXML
  langs:
  - csharp
  - vb
  name: ImportBookDefinition
  nameWithType: ImportBookDefinition
  fullName: TimeCockpit.Data.Import.ImportBookDefinition
  type: Class
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data.Import/ImportBookDefinition.cs
    id: ImportBookDefinition
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data.Import/ImportBookDefinition.cs
    startLine: 21
  assemblies:
  - TimeCockpit.Data.Import
  namespace: TimeCockpit.Data.Import
  summary: "\nclass holding information about \n"
  example: []
  syntax:
    content: 'public class ImportBookDefinition : INotifyPropertyChanged'
    content.vb: >-
      Public Class ImportBookDefinition
          Implements INotifyPropertyChanged
  inheritance:
  - System.Object
  implements:
  - System.ComponentModel.INotifyPropertyChanged
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TimeCockpit.Data.Import.ImportBookDefinition.Namespace
  commentId: F:TimeCockpit.Data.Import.ImportBookDefinition.Namespace
  id: Namespace
  parent: TimeCockpit.Data.Import.ImportBookDefinition
  langs:
  - csharp
  - vb
  name: Namespace
  nameWithType: ImportBookDefinition.Namespace
  fullName: TimeCockpit.Data.Import.ImportBookDefinition.Namespace
  type: Field
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data.Import/ImportBookDefinition.cs
    id: Namespace
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data.Import/ImportBookDefinition.cs
    startLine: 27
  assemblies:
  - TimeCockpit.Data.Import
  namespace: TimeCockpit.Data.Import
  summary: "\nThe for import book definitions.\n"
  example: []
  syntax:
    content: public static readonly XNamespace Namespace
    return:
      type: System.Xml.Linq.XNamespace
    content.vb: Public Shared ReadOnly Namespace As XNamespace
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: TimeCockpit.Data.Import.ImportBookDefinition.#ctor
  commentId: M:TimeCockpit.Data.Import.ImportBookDefinition.#ctor
  id: '#ctor'
  parent: TimeCockpit.Data.Import.ImportBookDefinition
  langs:
  - csharp
  - vb
  name: ImportBookDefinition()
  nameWithType: ImportBookDefinition.ImportBookDefinition()
  fullName: TimeCockpit.Data.Import.ImportBookDefinition.ImportBookDefinition()
  type: Constructor
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data.Import/ImportBookDefinition.cs
    id: .ctor
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data.Import/ImportBookDefinition.cs
    startLine: 47
  assemblies:
  - TimeCockpit.Data.Import
  namespace: TimeCockpit.Data.Import
  summary: "\nInitializes a new instance of the ImportBookDefinition class.\n"
  example: []
  syntax:
    content: public ImportBookDefinition()
    content.vb: Public Sub New
  overload: TimeCockpit.Data.Import.ImportBookDefinition.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Import.ImportBookDefinition.PropertyChanged
  commentId: E:TimeCockpit.Data.Import.ImportBookDefinition.PropertyChanged
  id: PropertyChanged
  parent: TimeCockpit.Data.Import.ImportBookDefinition
  langs:
  - csharp
  - vb
  name: PropertyChanged
  nameWithType: ImportBookDefinition.PropertyChanged
  fullName: TimeCockpit.Data.Import.ImportBookDefinition.PropertyChanged
  type: Event
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data.Import/ImportBookDefinition.cs
    id: PropertyChanged
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data.Import/ImportBookDefinition.cs
    startLine: 57
  assemblies:
  - TimeCockpit.Data.Import
  namespace: TimeCockpit.Data.Import
  summary: "\nEvent for INotifyPropertyChanged.\n"
  example: []
  syntax:
    content: public event PropertyChangedEventHandler PropertyChanged
    return:
      type: System.ComponentModel.PropertyChangedEventHandler
    content.vb: Public Event PropertyChanged As PropertyChangedEventHandler
  implements:
  - System.ComponentModel.INotifyPropertyChanged.PropertyChanged
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Import.ImportBookDefinition.Sheets
  commentId: P:TimeCockpit.Data.Import.ImportBookDefinition.Sheets
  id: Sheets
  parent: TimeCockpit.Data.Import.ImportBookDefinition
  langs:
  - csharp
  - vb
  name: Sheets
  nameWithType: ImportBookDefinition.Sheets
  fullName: TimeCockpit.Data.Import.ImportBookDefinition.Sheets
  type: Property
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data.Import/ImportBookDefinition.cs
    id: Sheets
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data.Import/ImportBookDefinition.cs
    startLine: 62
  assemblies:
  - TimeCockpit.Data.Import
  namespace: TimeCockpit.Data.Import
  summary: "\nGets or sets the sheets in this book.\n"
  example: []
  syntax:
    content: public ObservableCollection<ImportSheetDefinition> Sheets { get; set; }
    parameters: []
    return:
      type: System.Collections.ObjectModel.ObservableCollection{TimeCockpit.Data.Import.ImportSheetDefinition}
    content.vb: Public Property Sheets As ObservableCollection(Of ImportSheetDefinition)
  overload: TimeCockpit.Data.Import.ImportBookDefinition.Sheets*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Import.ImportBookDefinition.SourceProvider
  commentId: P:TimeCockpit.Data.Import.ImportBookDefinition.SourceProvider
  id: SourceProvider
  parent: TimeCockpit.Data.Import.ImportBookDefinition
  langs:
  - csharp
  - vb
  name: SourceProvider
  nameWithType: ImportBookDefinition.SourceProvider
  fullName: TimeCockpit.Data.Import.ImportBookDefinition.SourceProvider
  type: Property
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data.Import/ImportBookDefinition.cs
    id: SourceProvider
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data.Import/ImportBookDefinition.cs
    startLine: 82
  assemblies:
  - TimeCockpit.Data.Import
  namespace: TimeCockpit.Data.Import
  summary: "\nGets or sets the source provider.\n"
  example: []
  syntax:
    content: public string SourceProvider { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property SourceProvider As String
  overload: TimeCockpit.Data.Import.ImportBookDefinition.SourceProvider*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Import.ImportBookDefinition.SaveReport
  commentId: P:TimeCockpit.Data.Import.ImportBookDefinition.SaveReport
  id: SaveReport
  parent: TimeCockpit.Data.Import.ImportBookDefinition
  langs:
  - csharp
  - vb
  name: SaveReport
  nameWithType: ImportBookDefinition.SaveReport
  fullName: TimeCockpit.Data.Import.ImportBookDefinition.SaveReport
  type: Property
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data.Import/ImportBookDefinition.cs
    id: SaveReport
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data.Import/ImportBookDefinition.cs
    startLine: 102
  assemblies:
  - TimeCockpit.Data.Import
  namespace: TimeCockpit.Data.Import
  summary: "\nGets or sets a value indicating whether a report should be saved.\n"
  example: []
  syntax:
    content: public bool SaveReport { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property SaveReport As Boolean
  overload: TimeCockpit.Data.Import.ImportBookDefinition.SaveReport*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Import.ImportBookDefinition.ReadXaml(System.String)
  commentId: M:TimeCockpit.Data.Import.ImportBookDefinition.ReadXaml(System.String)
  id: ReadXaml(System.String)
  parent: TimeCockpit.Data.Import.ImportBookDefinition
  langs:
  - csharp
  - vb
  name: ReadXaml(String)
  nameWithType: ImportBookDefinition.ReadXaml(String)
  fullName: TimeCockpit.Data.Import.ImportBookDefinition.ReadXaml(System.String)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data.Import/ImportBookDefinition.cs
    id: ReadXaml
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data.Import/ImportBookDefinition.cs
    startLine: 124
  assemblies:
  - TimeCockpit.Data.Import
  namespace: TimeCockpit.Data.Import
  summary: "\nreads an import book definition from xaml.\n"
  example: []
  syntax:
    content: public static ImportBookDefinition ReadXaml(string xaml)
    parameters:
    - id: xaml
      type: System.String
      description: the textual xaml representation of the import book definition.
    return:
      type: TimeCockpit.Data.Import.ImportBookDefinition
      description: A new instance of the import book definition parsed from the xaml string.
    content.vb: Public Shared Function ReadXaml(xaml As String) As ImportBookDefinition
  overload: TimeCockpit.Data.Import.ImportBookDefinition.ReadXaml*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: TimeCockpit.Data.Import.ImportBookDefinition.WriteXML
  commentId: M:TimeCockpit.Data.Import.ImportBookDefinition.WriteXML
  id: WriteXML
  parent: TimeCockpit.Data.Import.ImportBookDefinition
  langs:
  - csharp
  - vb
  name: WriteXML()
  nameWithType: ImportBookDefinition.WriteXML()
  fullName: TimeCockpit.Data.Import.ImportBookDefinition.WriteXML()
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data.Import/ImportBookDefinition.cs
    id: WriteXML
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data.Import/ImportBookDefinition.cs
    startLine: 138
  assemblies:
  - TimeCockpit.Data.Import
  namespace: TimeCockpit.Data.Import
  summary: "\nWrites the import book definition to XML.\n"
  example: []
  syntax:
    content: public XElement WriteXML()
    return:
      type: System.Xml.Linq.XElement
      description: Returns the XML node.
    content.vb: Public Function WriteXML As XElement
  overload: TimeCockpit.Data.Import.ImportBookDefinition.WriteXML*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Import.ImportBookDefinition.OnPropertyChanged(System.String)
  commentId: M:TimeCockpit.Data.Import.ImportBookDefinition.OnPropertyChanged(System.String)
  id: OnPropertyChanged(System.String)
  parent: TimeCockpit.Data.Import.ImportBookDefinition
  langs:
  - csharp
  - vb
  name: OnPropertyChanged(String)
  nameWithType: ImportBookDefinition.OnPropertyChanged(String)
  fullName: TimeCockpit.Data.Import.ImportBookDefinition.OnPropertyChanged(System.String)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data.Import/ImportBookDefinition.cs
    id: OnPropertyChanged
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data.Import/ImportBookDefinition.cs
    startLine: 157
  assemblies:
  - TimeCockpit.Data.Import
  namespace: TimeCockpit.Data.Import
  summary: "\ncalled when a property of this class instance changes.\n"
  example: []
  syntax:
    content: protected void OnPropertyChanged(string propertyName)
    parameters:
    - id: propertyName
      type: System.String
      description: name of the property that changed.
    content.vb: Protected Sub OnPropertyChanged(propertyName As String)
  overload: TimeCockpit.Data.Import.ImportBookDefinition.OnPropertyChanged*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
references:
- uid: TimeCockpit.Data.Import
  commentId: N:TimeCockpit.Data.Import
  isExternal: false
  name: TimeCockpit.Data.Import
  nameWithType: TimeCockpit.Data.Import
  fullName: TimeCockpit.Data.Import
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ComponentModel.INotifyPropertyChanged
  commentId: T:System.ComponentModel.INotifyPropertyChanged
  parent: System.ComponentModel
  isExternal: true
  name: INotifyPropertyChanged
  nameWithType: INotifyPropertyChanged
  fullName: System.ComponentModel.INotifyPropertyChanged
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.ComponentModel
  commentId: N:System.ComponentModel
  isExternal: false
  name: System.ComponentModel
  nameWithType: System.ComponentModel
  fullName: System.ComponentModel
- uid: System.Xml.Linq.XNamespace
  commentId: T:System.Xml.Linq.XNamespace
  parent: System.Xml.Linq
  isExternal: true
  name: XNamespace
  nameWithType: XNamespace
  fullName: System.Xml.Linq.XNamespace
- uid: System.Xml.Linq
  commentId: N:System.Xml.Linq
  isExternal: false
  name: System.Xml.Linq
  nameWithType: System.Xml.Linq
  fullName: System.Xml.Linq
- uid: TimeCockpit.Data.Import.ImportBookDefinition.#ctor*
  commentId: Overload:TimeCockpit.Data.Import.ImportBookDefinition.#ctor
  isExternal: false
  name: ImportBookDefinition
  nameWithType: ImportBookDefinition.ImportBookDefinition
  fullName: TimeCockpit.Data.Import.ImportBookDefinition.ImportBookDefinition
- uid: System.ComponentModel.INotifyPropertyChanged.PropertyChanged
  commentId: E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged
  parent: System.ComponentModel.INotifyPropertyChanged
  isExternal: true
  name: PropertyChanged
  nameWithType: INotifyPropertyChanged.PropertyChanged
  fullName: System.ComponentModel.INotifyPropertyChanged.PropertyChanged
- uid: System.ComponentModel.PropertyChangedEventHandler
  commentId: T:System.ComponentModel.PropertyChangedEventHandler
  parent: System.ComponentModel
  isExternal: true
  name: PropertyChangedEventHandler
  nameWithType: PropertyChangedEventHandler
  fullName: System.ComponentModel.PropertyChangedEventHandler
- uid: TimeCockpit.Data.Import.ImportBookDefinition.Sheets*
  commentId: Overload:TimeCockpit.Data.Import.ImportBookDefinition.Sheets
  isExternal: false
  name: Sheets
  nameWithType: ImportBookDefinition.Sheets
  fullName: TimeCockpit.Data.Import.ImportBookDefinition.Sheets
- uid: System.Collections.ObjectModel.ObservableCollection{TimeCockpit.Data.Import.ImportSheetDefinition}
  commentId: T:System.Collections.ObjectModel.ObservableCollection{TimeCockpit.Data.Import.ImportSheetDefinition}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.ObservableCollection`1
  name: ObservableCollection<ImportSheetDefinition>
  nameWithType: ObservableCollection<ImportSheetDefinition>
  fullName: System.Collections.ObjectModel.ObservableCollection<TimeCockpit.Data.Import.ImportSheetDefinition>
  nameWithType.vb: ObservableCollection(Of ImportSheetDefinition)
  fullName.vb: System.Collections.ObjectModel.ObservableCollection(Of TimeCockpit.Data.Import.ImportSheetDefinition)
  name.vb: ObservableCollection(Of ImportSheetDefinition)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ObservableCollection`1
    name: ObservableCollection
    nameWithType: ObservableCollection
    fullName: System.Collections.ObjectModel.ObservableCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TimeCockpit.Data.Import.ImportSheetDefinition
    name: ImportSheetDefinition
    nameWithType: ImportSheetDefinition
    fullName: TimeCockpit.Data.Import.ImportSheetDefinition
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ObservableCollection`1
    name: ObservableCollection
    nameWithType: ObservableCollection
    fullName: System.Collections.ObjectModel.ObservableCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TimeCockpit.Data.Import.ImportSheetDefinition
    name: ImportSheetDefinition
    nameWithType: ImportSheetDefinition
    fullName: TimeCockpit.Data.Import.ImportSheetDefinition
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ObservableCollection`1
  commentId: T:System.Collections.ObjectModel.ObservableCollection`1
  isExternal: true
  name: ObservableCollection<T>
  nameWithType: ObservableCollection<T>
  fullName: System.Collections.ObjectModel.ObservableCollection<T>
  nameWithType.vb: ObservableCollection(Of T)
  fullName.vb: System.Collections.ObjectModel.ObservableCollection(Of T)
  name.vb: ObservableCollection(Of T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ObservableCollection`1
    name: ObservableCollection
    nameWithType: ObservableCollection
    fullName: System.Collections.ObjectModel.ObservableCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ObservableCollection`1
    name: ObservableCollection
    nameWithType: ObservableCollection
    fullName: System.Collections.ObjectModel.ObservableCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel
  commentId: N:System.Collections.ObjectModel
  isExternal: false
  name: System.Collections.ObjectModel
  nameWithType: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
- uid: TimeCockpit.Data.Import.ImportBookDefinition.SourceProvider*
  commentId: Overload:TimeCockpit.Data.Import.ImportBookDefinition.SourceProvider
  isExternal: false
  name: SourceProvider
  nameWithType: ImportBookDefinition.SourceProvider
  fullName: TimeCockpit.Data.Import.ImportBookDefinition.SourceProvider
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: TimeCockpit.Data.Import.ImportBookDefinition.SaveReport*
  commentId: Overload:TimeCockpit.Data.Import.ImportBookDefinition.SaveReport
  isExternal: false
  name: SaveReport
  nameWithType: ImportBookDefinition.SaveReport
  fullName: TimeCockpit.Data.Import.ImportBookDefinition.SaveReport
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: TimeCockpit.Data.Import.ImportBookDefinition.ReadXaml*
  commentId: Overload:TimeCockpit.Data.Import.ImportBookDefinition.ReadXaml
  isExternal: false
  name: ReadXaml
  nameWithType: ImportBookDefinition.ReadXaml
  fullName: TimeCockpit.Data.Import.ImportBookDefinition.ReadXaml
- uid: TimeCockpit.Data.Import.ImportBookDefinition
  commentId: T:TimeCockpit.Data.Import.ImportBookDefinition
  parent: TimeCockpit.Data.Import
  isExternal: false
  name: ImportBookDefinition
  nameWithType: ImportBookDefinition
  fullName: TimeCockpit.Data.Import.ImportBookDefinition
- uid: TimeCockpit.Data.Import.ImportBookDefinition.WriteXML*
  commentId: Overload:TimeCockpit.Data.Import.ImportBookDefinition.WriteXML
  isExternal: false
  name: WriteXML
  nameWithType: ImportBookDefinition.WriteXML
  fullName: TimeCockpit.Data.Import.ImportBookDefinition.WriteXML
- uid: System.Xml.Linq.XElement
  commentId: T:System.Xml.Linq.XElement
  parent: System.Xml.Linq
  isExternal: true
  name: XElement
  nameWithType: XElement
  fullName: System.Xml.Linq.XElement
- uid: TimeCockpit.Data.Import.ImportBookDefinition.OnPropertyChanged*
  commentId: Overload:TimeCockpit.Data.Import.ImportBookDefinition.OnPropertyChanged
  isExternal: false
  name: OnPropertyChanged
  nameWithType: ImportBookDefinition.OnPropertyChanged
  fullName: TimeCockpit.Data.Import.ImportBookDefinition.OnPropertyChanged
