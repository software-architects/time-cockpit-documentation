### YamlMime:ManagedReference
items:
- uid: TimeCockpit.Data.Scripting.ExecutionInfo
  commentId: T:TimeCockpit.Data.Scripting.ExecutionInfo
  id: ExecutionInfo
  parent: TimeCockpit.Data.Scripting
  children:
  - TimeCockpit.Data.Scripting.ExecutionInfo.#ctor
  - TimeCockpit.Data.Scripting.ExecutionInfo.FromString(System.String)
  - TimeCockpit.Data.Scripting.ExecutionInfo.ModelElementPath
  - TimeCockpit.Data.Scripting.ExecutionInfo.Script
  - TimeCockpit.Data.Scripting.ExecutionInfo.ScriptFilePath
  langs:
  - csharp
  - vb
  name: ExecutionInfo
  nameWithType: ExecutionInfo
  fullName: TimeCockpit.Data.Scripting.ExecutionInfo
  type: Class
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Scripting
  summary: "\nScript execution information.\n"
  syntax:
    content: public class ExecutionInfo
    content.vb: Public Class ExecutionInfo
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TimeCockpit.Data.Scripting.ExecutionInfo.FromString(System.String)
  commentId: M:TimeCockpit.Data.Scripting.ExecutionInfo.FromString(System.String)
  id: FromString(System.String)
  parent: TimeCockpit.Data.Scripting.ExecutionInfo
  langs:
  - csharp
  - vb
  name: FromString(String)
  nameWithType: ExecutionInfo.FromString(String)
  fullName: TimeCockpit.Data.Scripting.ExecutionInfo.FromString(System.String)
  type: Method
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Scripting
  summary: "\nCreate simple execution info from string.\n"
  syntax:
    content: public static ExecutionInfo FromString(string script)
    parameters:
    - id: script
      type: System.String
      description: Script source.
    return:
      type: TimeCockpit.Data.Scripting.ExecutionInfo
      description: Execution info.
    content.vb: Public Shared Function FromString(script As String) As ExecutionInfo
  overload: TimeCockpit.Data.Scripting.ExecutionInfo.FromString*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: TimeCockpit.Data.Scripting.ExecutionInfo.#ctor
  commentId: M:TimeCockpit.Data.Scripting.ExecutionInfo.#ctor
  id: '#ctor'
  parent: TimeCockpit.Data.Scripting.ExecutionInfo
  langs:
  - csharp
  - vb
  name: ExecutionInfo()
  nameWithType: ExecutionInfo.ExecutionInfo()
  fullName: TimeCockpit.Data.Scripting.ExecutionInfo.ExecutionInfo()
  type: Constructor
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Scripting
  syntax:
    content: public ExecutionInfo()
    content.vb: Public Sub New
  overload: TimeCockpit.Data.Scripting.ExecutionInfo.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Scripting.ExecutionInfo.ModelElementPath
  commentId: P:TimeCockpit.Data.Scripting.ExecutionInfo.ModelElementPath
  id: ModelElementPath
  parent: TimeCockpit.Data.Scripting.ExecutionInfo
  langs:
  - csharp
  - vb
  name: ModelElementPath
  nameWithType: ExecutionInfo.ModelElementPath
  fullName: TimeCockpit.Data.Scripting.ExecutionInfo.ModelElementPath
  type: Property
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Scripting
  summary: "\nGets or sets the logical path of the script within the model.\n"
  syntax:
    content: public string ModelElementPath { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ModelElementPath As String
  overload: TimeCockpit.Data.Scripting.ExecutionInfo.ModelElementPath*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Scripting.ExecutionInfo.Script
  commentId: P:TimeCockpit.Data.Scripting.ExecutionInfo.Script
  id: Script
  parent: TimeCockpit.Data.Scripting.ExecutionInfo
  langs:
  - csharp
  - vb
  name: Script
  nameWithType: ExecutionInfo.Script
  fullName: TimeCockpit.Data.Scripting.ExecutionInfo.Script
  type: Property
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Scripting
  summary: "\nGets or sets the script content.\n"
  syntax:
    content: public string Script { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Script As String
  overload: TimeCockpit.Data.Scripting.ExecutionInfo.Script*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Scripting.ExecutionInfo.ScriptFilePath
  commentId: P:TimeCockpit.Data.Scripting.ExecutionInfo.ScriptFilePath
  id: ScriptFilePath
  parent: TimeCockpit.Data.Scripting.ExecutionInfo
  langs:
  - csharp
  - vb
  name: ScriptFilePath
  nameWithType: ExecutionInfo.ScriptFilePath
  fullName: TimeCockpit.Data.Scripting.ExecutionInfo.ScriptFilePath
  type: Property
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Scripting
  summary: "\nGets or sets the script file path.\n"
  syntax:
    content: public string ScriptFilePath { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ScriptFilePath As String
  overload: TimeCockpit.Data.Scripting.ExecutionInfo.ScriptFilePath*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: TimeCockpit.Data.Scripting
  commentId: N:TimeCockpit.Data.Scripting
  isExternal: true
  name: TimeCockpit.Data.Scripting
  nameWithType: TimeCockpit.Data.Scripting
  fullName: TimeCockpit.Data.Scripting
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TimeCockpit.Data.Scripting.ExecutionInfo.FromString*
  commentId: Overload:TimeCockpit.Data.Scripting.ExecutionInfo.FromString
  isExternal: true
  name: FromString
  nameWithType: ExecutionInfo.FromString
  fullName: TimeCockpit.Data.Scripting.ExecutionInfo.FromString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: TimeCockpit.Data.Scripting.ExecutionInfo
  commentId: T:TimeCockpit.Data.Scripting.ExecutionInfo
  parent: TimeCockpit.Data.Scripting
  isExternal: true
  name: ExecutionInfo
  nameWithType: ExecutionInfo
  fullName: TimeCockpit.Data.Scripting.ExecutionInfo
- uid: TimeCockpit.Data.Scripting.ExecutionInfo.#ctor*
  commentId: Overload:TimeCockpit.Data.Scripting.ExecutionInfo.#ctor
  isExternal: true
  name: ExecutionInfo
  nameWithType: ExecutionInfo.ExecutionInfo
  fullName: TimeCockpit.Data.Scripting.ExecutionInfo.ExecutionInfo
- uid: TimeCockpit.Data.Scripting.ExecutionInfo.ModelElementPath*
  commentId: Overload:TimeCockpit.Data.Scripting.ExecutionInfo.ModelElementPath
  isExternal: true
  name: ModelElementPath
  nameWithType: ExecutionInfo.ModelElementPath
  fullName: TimeCockpit.Data.Scripting.ExecutionInfo.ModelElementPath
- uid: TimeCockpit.Data.Scripting.ExecutionInfo.Script*
  commentId: Overload:TimeCockpit.Data.Scripting.ExecutionInfo.Script
  isExternal: true
  name: Script
  nameWithType: ExecutionInfo.Script
  fullName: TimeCockpit.Data.Scripting.ExecutionInfo.Script
- uid: TimeCockpit.Data.Scripting.ExecutionInfo.ScriptFilePath*
  commentId: Overload:TimeCockpit.Data.Scripting.ExecutionInfo.ScriptFilePath
  isExternal: true
  name: ScriptFilePath
  nameWithType: ExecutionInfo.ScriptFilePath
  fullName: TimeCockpit.Data.Scripting.ExecutionInfo.ScriptFilePath
