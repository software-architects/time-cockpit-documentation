### YamlMime:ManagedReference
items:
- uid: TimeCockpit.Data.DataModel.MultiDuration
  commentId: T:TimeCockpit.Data.DataModel.MultiDuration
  id: MultiDuration
  parent: TimeCockpit.Data.DataModel
  children:
  - TimeCockpit.Data.DataModel.MultiDuration.#ctor(System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.IDuration})
  - TimeCockpit.Data.DataModel.MultiDuration.#ctor(System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.MultiDuration})
  - TimeCockpit.Data.DataModel.MultiDuration.#ctor(System.DateTime,System.DateTime)
  - TimeCockpit.Data.DataModel.MultiDuration.And(TimeCockpit.Data.DataModel.MultiDuration)
  - TimeCockpit.Data.DataModel.MultiDuration.Cut(TimeCockpit.Data.DataModel.MultiDuration)
  - TimeCockpit.Data.DataModel.MultiDuration.Durations
  - TimeCockpit.Data.DataModel.MultiDuration.EarliestBegin
  - TimeCockpit.Data.DataModel.MultiDuration.Flat
  - TimeCockpit.Data.DataModel.MultiDuration.Flatten
  - TimeCockpit.Data.DataModel.MultiDuration.Intersects(System.DateTime,System.DateTime)
  - TimeCockpit.Data.DataModel.MultiDuration.Intersects(TimeCockpit.Data.DataModel.IDuration)
  - TimeCockpit.Data.DataModel.MultiDuration.IsInside(System.DateTime)
  - TimeCockpit.Data.DataModel.MultiDuration.LatestEnd
  - TimeCockpit.Data.DataModel.MultiDuration.Or(TimeCockpit.Data.DataModel.MultiDuration)
  - TimeCockpit.Data.DataModel.MultiDuration.Subtract(TimeCockpit.Data.DataModel.MultiDuration)
  - TimeCockpit.Data.DataModel.MultiDuration.TotalTime
  langs:
  - csharp
  - vb
  name: MultiDuration
  nameWithType: MultiDuration
  fullName: TimeCockpit.Data.DataModel.MultiDuration
  type: Class
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/MultiDuration.cs
    id: MultiDuration
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/MultiDuration.cs
    startLine: 19
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel
  summary: "\nRepresents a set of durations that belong to this time span.\nDurations may overlap and can be explicitly flattened if required.\n"
  example: []
  syntax:
    content: public class MultiDuration
    content.vb: Public Class MultiDuration
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TimeCockpit.Data.DataModel.MultiDuration.#ctor(System.DateTime,System.DateTime)
  commentId: M:TimeCockpit.Data.DataModel.MultiDuration.#ctor(System.DateTime,System.DateTime)
  id: '#ctor(System.DateTime,System.DateTime)'
  parent: TimeCockpit.Data.DataModel.MultiDuration
  langs:
  - csharp
  - vb
  name: MultiDuration(DateTime, DateTime)
  nameWithType: MultiDuration.MultiDuration(DateTime, DateTime)
  fullName: TimeCockpit.Data.DataModel.MultiDuration.MultiDuration(System.DateTime, System.DateTime)
  type: Constructor
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/MultiDuration.cs
    id: .ctor
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/MultiDuration.cs
    startLine: 37
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel
  summary: "\nInitializes a new instance of the MultiDuration class.\nShorthand version for a single duration.\n"
  example: []
  syntax:
    content: public MultiDuration(DateTime beginTime, DateTime endTime)
    parameters:
    - id: beginTime
      type: System.DateTime
      description: begin time stamp of the duration.
    - id: endTime
      type: System.DateTime
      description: end time stamp of the duration.
    content.vb: Public Sub New(beginTime As Date, endTime As Date)
  overload: TimeCockpit.Data.DataModel.MultiDuration.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.DataModel.MultiDuration.#ctor(System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.IDuration})
  commentId: M:TimeCockpit.Data.DataModel.MultiDuration.#ctor(System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.IDuration})
  id: '#ctor(System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.IDuration})'
  parent: TimeCockpit.Data.DataModel.MultiDuration
  langs:
  - csharp
  - vb
  name: MultiDuration(IEnumerable<IDuration>)
  nameWithType: MultiDuration.MultiDuration(IEnumerable<IDuration>)
  fullName: TimeCockpit.Data.DataModel.MultiDuration.MultiDuration(System.Collections.Generic.IEnumerable<TimeCockpit.Data.DataModel.IDuration>)
  type: Constructor
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/MultiDuration.cs
    id: .ctor
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/MultiDuration.cs
    startLine: 52
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel
  summary: "\nInitializes a new instance of the MultiDuration class.\n"
  example: []
  syntax:
    content: public MultiDuration(IEnumerable<IDuration> parts)
    parameters:
    - id: parts
      type: System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.IDuration}
      description: duration parts of the new multiduration.
    content.vb: Public Sub New(parts As IEnumerable(Of IDuration))
  overload: TimeCockpit.Data.DataModel.MultiDuration.#ctor*
  nameWithType.vb: MultiDuration.MultiDuration(IEnumerable(Of IDuration))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TimeCockpit.Data.DataModel.MultiDuration.MultiDuration(System.Collections.Generic.IEnumerable(Of TimeCockpit.Data.DataModel.IDuration))
  name.vb: MultiDuration(IEnumerable(Of IDuration))
- uid: TimeCockpit.Data.DataModel.MultiDuration.#ctor(System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.MultiDuration})
  commentId: M:TimeCockpit.Data.DataModel.MultiDuration.#ctor(System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.MultiDuration})
  id: '#ctor(System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.MultiDuration})'
  parent: TimeCockpit.Data.DataModel.MultiDuration
  langs:
  - csharp
  - vb
  name: MultiDuration(IEnumerable<MultiDuration>)
  nameWithType: MultiDuration.MultiDuration(IEnumerable<MultiDuration>)
  fullName: TimeCockpit.Data.DataModel.MultiDuration.MultiDuration(System.Collections.Generic.IEnumerable<TimeCockpit.Data.DataModel.MultiDuration>)
  type: Constructor
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/MultiDuration.cs
    id: .ctor
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/MultiDuration.cs
    startLine: 65
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel
  summary: "\nInitializes a new instance of the MultiDuration class by unionizing the given durations.\n"
  example: []
  syntax:
    content: public MultiDuration(IEnumerable<MultiDuration> durations)
    parameters:
    - id: durations
      type: System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.MultiDuration}
      description: duration parts of the new multiduration.
    content.vb: Public Sub New(durations As IEnumerable(Of MultiDuration))
  overload: TimeCockpit.Data.DataModel.MultiDuration.#ctor*
  nameWithType.vb: MultiDuration.MultiDuration(IEnumerable(Of MultiDuration))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TimeCockpit.Data.DataModel.MultiDuration.MultiDuration(System.Collections.Generic.IEnumerable(Of TimeCockpit.Data.DataModel.MultiDuration))
  name.vb: MultiDuration(IEnumerable(Of MultiDuration))
- uid: TimeCockpit.Data.DataModel.MultiDuration.Flat
  commentId: P:TimeCockpit.Data.DataModel.MultiDuration.Flat
  id: Flat
  parent: TimeCockpit.Data.DataModel.MultiDuration
  langs:
  - csharp
  - vb
  name: Flat
  nameWithType: MultiDuration.Flat
  fullName: TimeCockpit.Data.DataModel.MultiDuration.Flat
  type: Property
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/MultiDuration.cs
    id: Flat
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/MultiDuration.cs
    startLine: 97
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel
  summary: "\nGets a value indicating whether none of the durations overlap.\n"
  example: []
  syntax:
    content: public bool Flat { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property Flat As Boolean
  overload: TimeCockpit.Data.DataModel.MultiDuration.Flat*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TimeCockpit.Data.DataModel.MultiDuration.Durations
  commentId: P:TimeCockpit.Data.DataModel.MultiDuration.Durations
  id: Durations
  parent: TimeCockpit.Data.DataModel.MultiDuration
  langs:
  - csharp
  - vb
  name: Durations
  nameWithType: MultiDuration.Durations
  fullName: TimeCockpit.Data.DataModel.MultiDuration.Durations
  type: Property
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/MultiDuration.cs
    id: Durations
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/MultiDuration.cs
    startLine: 108
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel
  summary: "\nGets the durations of this multi-duration.\n"
  example: []
  syntax:
    content: public IEnumerable<IDuration> Durations { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.IDuration}
    content.vb: Public ReadOnly Property Durations As IEnumerable(Of IDuration)
  overload: TimeCockpit.Data.DataModel.MultiDuration.Durations*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TimeCockpit.Data.DataModel.MultiDuration.EarliestBegin
  commentId: P:TimeCockpit.Data.DataModel.MultiDuration.EarliestBegin
  id: EarliestBegin
  parent: TimeCockpit.Data.DataModel.MultiDuration
  langs:
  - csharp
  - vb
  name: EarliestBegin
  nameWithType: MultiDuration.EarliestBegin
  fullName: TimeCockpit.Data.DataModel.MultiDuration.EarliestBegin
  type: Property
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/MultiDuration.cs
    id: EarliestBegin
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/MultiDuration.cs
    startLine: 116
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel
  summary: "\nGets the earliest begin time\n"
  example: []
  syntax:
    content: public DateTime EarliestBegin { get; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Public ReadOnly Property EarliestBegin As Date
  overload: TimeCockpit.Data.DataModel.MultiDuration.EarliestBegin*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TimeCockpit.Data.DataModel.MultiDuration.LatestEnd
  commentId: P:TimeCockpit.Data.DataModel.MultiDuration.LatestEnd
  id: LatestEnd
  parent: TimeCockpit.Data.DataModel.MultiDuration
  langs:
  - csharp
  - vb
  name: LatestEnd
  nameWithType: MultiDuration.LatestEnd
  fullName: TimeCockpit.Data.DataModel.MultiDuration.LatestEnd
  type: Property
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/MultiDuration.cs
    id: LatestEnd
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/MultiDuration.cs
    startLine: 132
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel
  summary: "\nGets the latest end time.\n"
  example: []
  syntax:
    content: public DateTime LatestEnd { get; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Public ReadOnly Property LatestEnd As Date
  overload: TimeCockpit.Data.DataModel.MultiDuration.LatestEnd*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TimeCockpit.Data.DataModel.MultiDuration.TotalTime
  commentId: P:TimeCockpit.Data.DataModel.MultiDuration.TotalTime
  id: TotalTime
  parent: TimeCockpit.Data.DataModel.MultiDuration
  langs:
  - csharp
  - vb
  name: TotalTime
  nameWithType: MultiDuration.TotalTime
  fullName: TimeCockpit.Data.DataModel.MultiDuration.TotalTime
  type: Property
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/MultiDuration.cs
    id: TotalTime
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/MultiDuration.cs
    startLine: 150
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel
  summary: "\nGets the total time / sum of the multi duration.\nBe aware that overlapping times are included in the calculation.\nUse Flatten before TotalTime if it is required that overlapping times are counted only once.\n"
  example: []
  syntax:
    content: public TimeSpan TotalTime { get; }
    parameters: []
    return:
      type: System.TimeSpan
    content.vb: Public ReadOnly Property TotalTime As TimeSpan
  overload: TimeCockpit.Data.DataModel.MultiDuration.TotalTime*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TimeCockpit.Data.DataModel.MultiDuration.IsInside(System.DateTime)
  commentId: M:TimeCockpit.Data.DataModel.MultiDuration.IsInside(System.DateTime)
  id: IsInside(System.DateTime)
  parent: TimeCockpit.Data.DataModel.MultiDuration
  langs:
  - csharp
  - vb
  name: IsInside(DateTime)
  nameWithType: MultiDuration.IsInside(DateTime)
  fullName: TimeCockpit.Data.DataModel.MultiDuration.IsInside(System.DateTime)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/MultiDuration.cs
    id: IsInside
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/MultiDuration.cs
    startLine: 163
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel
  summary: "\nchecks whether a given timeStamp is within (or on the border of) any of the durations.\n"
  example: []
  syntax:
    content: public bool IsInside(DateTime timeStamp)
    parameters:
    - id: timeStamp
      type: System.DateTime
      description: time stamp to check against multi duration.
    return:
      type: System.Boolean
      description: Returns true if timeStamp is within any duration.
    content.vb: Public Function IsInside(timeStamp As Date) As Boolean
  overload: TimeCockpit.Data.DataModel.MultiDuration.IsInside*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.DataModel.MultiDuration.Intersects(System.DateTime,System.DateTime)
  commentId: M:TimeCockpit.Data.DataModel.MultiDuration.Intersects(System.DateTime,System.DateTime)
  id: Intersects(System.DateTime,System.DateTime)
  parent: TimeCockpit.Data.DataModel.MultiDuration
  langs:
  - csharp
  - vb
  name: Intersects(DateTime, DateTime)
  nameWithType: MultiDuration.Intersects(DateTime, DateTime)
  fullName: TimeCockpit.Data.DataModel.MultiDuration.Intersects(System.DateTime, System.DateTime)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/MultiDuration.cs
    id: Intersects
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/MultiDuration.cs
    startLine: 179
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel
  summary: "\nChecks whether a given duration intersects with any of the durations.\n"
  example: []
  syntax:
    content: public bool Intersects(DateTime begin, DateTime end)
    parameters:
    - id: begin
      type: System.DateTime
      description: begin of duration to check
    - id: end
      type: System.DateTime
      description: end of duration to check
    return:
      type: System.Boolean
      description: true if duration intersects
    content.vb: Public Function Intersects(begin As Date, end As Date) As Boolean
  overload: TimeCockpit.Data.DataModel.MultiDuration.Intersects*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.DataModel.MultiDuration.Intersects(TimeCockpit.Data.DataModel.IDuration)
  commentId: M:TimeCockpit.Data.DataModel.MultiDuration.Intersects(TimeCockpit.Data.DataModel.IDuration)
  id: Intersects(TimeCockpit.Data.DataModel.IDuration)
  parent: TimeCockpit.Data.DataModel.MultiDuration
  langs:
  - csharp
  - vb
  name: Intersects(IDuration)
  nameWithType: MultiDuration.Intersects(IDuration)
  fullName: TimeCockpit.Data.DataModel.MultiDuration.Intersects(TimeCockpit.Data.DataModel.IDuration)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/MultiDuration.cs
    id: Intersects
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/MultiDuration.cs
    startLine: 194
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel
  summary: "\nChecks whether a given duration intersects with any of the durations.\n"
  example: []
  syntax:
    content: public bool Intersects(IDuration duration)
    parameters:
    - id: duration
      type: TimeCockpit.Data.DataModel.IDuration
      description: duration to check
    return:
      type: System.Boolean
      description: true if duration intersects
    content.vb: Public Function Intersects(duration As IDuration) As Boolean
  overload: TimeCockpit.Data.DataModel.MultiDuration.Intersects*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.DataModel.MultiDuration.Flatten
  commentId: M:TimeCockpit.Data.DataModel.MultiDuration.Flatten
  id: Flatten
  parent: TimeCockpit.Data.DataModel.MultiDuration
  langs:
  - csharp
  - vb
  name: Flatten()
  nameWithType: MultiDuration.Flatten()
  fullName: TimeCockpit.Data.DataModel.MultiDuration.Flatten()
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/MultiDuration.cs
    id: Flatten
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/MultiDuration.cs
    startLine: 204
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel
  summary: "\nBy default, multiple durations might overlap. the flatten method modifies the durations to\nnot overlap and turns two overlapping durations into a single duration.\n"
  example: []
  syntax:
    content: public void Flatten()
    content.vb: Public Sub Flatten
  overload: TimeCockpit.Data.DataModel.MultiDuration.Flatten*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.DataModel.MultiDuration.Cut(TimeCockpit.Data.DataModel.MultiDuration)
  commentId: M:TimeCockpit.Data.DataModel.MultiDuration.Cut(TimeCockpit.Data.DataModel.MultiDuration)
  id: Cut(TimeCockpit.Data.DataModel.MultiDuration)
  parent: TimeCockpit.Data.DataModel.MultiDuration
  langs:
  - csharp
  - vb
  name: Cut(MultiDuration)
  nameWithType: MultiDuration.Cut(MultiDuration)
  fullName: TimeCockpit.Data.DataModel.MultiDuration.Cut(TimeCockpit.Data.DataModel.MultiDuration)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/MultiDuration.cs
    id: Cut
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/MultiDuration.cs
    startLine: 254
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel
  summary: "\ncuts another multi duration by this multi duration.\nlogical &quot;this AND source&quot;\nresult does not contain elements of 0 duration\n"
  example: []
  syntax:
    content: >-
      [Obsolete("Use MultiDuration.And instead. Cut does not offer consistent naming compared to 'and', 'or' and 'subtract'.")]

      public MultiDuration Cut(MultiDuration source)
    parameters:
    - id: source
      type: TimeCockpit.Data.DataModel.MultiDuration
      description: Source duration to cut agains this multi duration.
    return:
      type: TimeCockpit.Data.DataModel.MultiDuration
      description: a new multiduration containing the source multiduration cut by this multiduration.
    content.vb: >-
      <Obsolete("Use MultiDuration.And instead. Cut does not offer consistent naming compared to 'and', 'or' and 'subtract'.")>

      Public Function Cut(source As MultiDuration) As MultiDuration
  overload: TimeCockpit.Data.DataModel.MultiDuration.Cut*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use MultiDuration.And instead. Cut does not offer consistent naming compared to 'and', 'or' and 'subtract'.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.DataModel.MultiDuration.And(TimeCockpit.Data.DataModel.MultiDuration)
  commentId: M:TimeCockpit.Data.DataModel.MultiDuration.And(TimeCockpit.Data.DataModel.MultiDuration)
  id: And(TimeCockpit.Data.DataModel.MultiDuration)
  parent: TimeCockpit.Data.DataModel.MultiDuration
  langs:
  - csharp
  - vb
  name: And(MultiDuration)
  nameWithType: MultiDuration.And(MultiDuration)
  fullName: TimeCockpit.Data.DataModel.MultiDuration.And(TimeCockpit.Data.DataModel.MultiDuration)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/MultiDuration.cs
    id: And
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/MultiDuration.cs
    startLine: 265
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel
  summary: "\nLogical &apos;and&apos; operation between this and another multi-duration.\n"
  example: []
  syntax:
    content: public MultiDuration And(MultiDuration other)
    parameters:
    - id: other
      type: TimeCockpit.Data.DataModel.MultiDuration
      description: Other multi-duration.
    return:
      type: TimeCockpit.Data.DataModel.MultiDuration
      description: Logical &apos;and&apos; between this and another multi-duration.
    content.vb: Public Function And(other As MultiDuration) As MultiDuration
  overload: TimeCockpit.Data.DataModel.MultiDuration.And*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.DataModel.MultiDuration.Or(TimeCockpit.Data.DataModel.MultiDuration)
  commentId: M:TimeCockpit.Data.DataModel.MultiDuration.Or(TimeCockpit.Data.DataModel.MultiDuration)
  id: Or(TimeCockpit.Data.DataModel.MultiDuration)
  parent: TimeCockpit.Data.DataModel.MultiDuration
  langs:
  - csharp
  - vb
  name: Or(MultiDuration)
  nameWithType: MultiDuration.Or(MultiDuration)
  fullName: TimeCockpit.Data.DataModel.MultiDuration.Or(TimeCockpit.Data.DataModel.MultiDuration)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/MultiDuration.cs
    id: Or
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/MultiDuration.cs
    startLine: 293
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel
  summary: "\nLogical &apos;or&apos; operation between this and another multi-duration.\n"
  example: []
  syntax:
    content: public MultiDuration Or(MultiDuration other)
    parameters:
    - id: other
      type: TimeCockpit.Data.DataModel.MultiDuration
      description: Other multi-duration.
    return:
      type: TimeCockpit.Data.DataModel.MultiDuration
      description: Logical &apos;or&apos; between this and another multi-duration.
    content.vb: Public Function Or(other As MultiDuration) As MultiDuration
  overload: TimeCockpit.Data.DataModel.MultiDuration.Or*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.DataModel.MultiDuration.Subtract(TimeCockpit.Data.DataModel.MultiDuration)
  commentId: M:TimeCockpit.Data.DataModel.MultiDuration.Subtract(TimeCockpit.Data.DataModel.MultiDuration)
  id: Subtract(TimeCockpit.Data.DataModel.MultiDuration)
  parent: TimeCockpit.Data.DataModel.MultiDuration
  langs:
  - csharp
  - vb
  name: Subtract(MultiDuration)
  nameWithType: MultiDuration.Subtract(MultiDuration)
  fullName: TimeCockpit.Data.DataModel.MultiDuration.Subtract(TimeCockpit.Data.DataModel.MultiDuration)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/MultiDuration.cs
    id: Subtract
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/MultiDuration.cs
    startLine: 321
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel
  summary: "\nLogically subtract another multi-duration from this one.\n"
  example: []
  syntax:
    content: public MultiDuration Subtract(MultiDuration other)
    parameters:
    - id: other
      type: TimeCockpit.Data.DataModel.MultiDuration
      description: Other multi-duration.
    return:
      type: TimeCockpit.Data.DataModel.MultiDuration
      description: Subraction result
    content.vb: Public Function Subtract(other As MultiDuration) As MultiDuration
  overload: TimeCockpit.Data.DataModel.MultiDuration.Subtract*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: TimeCockpit.Data.DataModel
  commentId: N:TimeCockpit.Data.DataModel
  isExternal: false
  name: TimeCockpit.Data.DataModel
  nameWithType: TimeCockpit.Data.DataModel
  fullName: TimeCockpit.Data.DataModel
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: TimeCockpit.Data.DataModel.MultiDuration.#ctor*
  commentId: Overload:TimeCockpit.Data.DataModel.MultiDuration.#ctor
  isExternal: false
  name: MultiDuration
  nameWithType: MultiDuration.MultiDuration
  fullName: TimeCockpit.Data.DataModel.MultiDuration.MultiDuration
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.IDuration}
  commentId: T:System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.IDuration}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IDuration>
  nameWithType: IEnumerable<IDuration>
  fullName: System.Collections.Generic.IEnumerable<TimeCockpit.Data.DataModel.IDuration>
  nameWithType.vb: IEnumerable(Of IDuration)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TimeCockpit.Data.DataModel.IDuration)
  name.vb: IEnumerable(Of IDuration)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TimeCockpit.Data.DataModel.IDuration
    name: IDuration
    nameWithType: IDuration
    fullName: TimeCockpit.Data.DataModel.IDuration
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TimeCockpit.Data.DataModel.IDuration
    name: IDuration
    nameWithType: IDuration
    fullName: TimeCockpit.Data.DataModel.IDuration
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.MultiDuration}
  commentId: T:System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.MultiDuration}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<MultiDuration>
  nameWithType: IEnumerable<MultiDuration>
  fullName: System.Collections.Generic.IEnumerable<TimeCockpit.Data.DataModel.MultiDuration>
  nameWithType.vb: IEnumerable(Of MultiDuration)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TimeCockpit.Data.DataModel.MultiDuration)
  name.vb: IEnumerable(Of MultiDuration)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TimeCockpit.Data.DataModel.MultiDuration
    name: MultiDuration
    nameWithType: MultiDuration
    fullName: TimeCockpit.Data.DataModel.MultiDuration
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TimeCockpit.Data.DataModel.MultiDuration
    name: MultiDuration
    nameWithType: MultiDuration
    fullName: TimeCockpit.Data.DataModel.MultiDuration
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.DataModel.MultiDuration.Flat*
  commentId: Overload:TimeCockpit.Data.DataModel.MultiDuration.Flat
  isExternal: false
  name: Flat
  nameWithType: MultiDuration.Flat
  fullName: TimeCockpit.Data.DataModel.MultiDuration.Flat
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: TimeCockpit.Data.DataModel.MultiDuration.Durations*
  commentId: Overload:TimeCockpit.Data.DataModel.MultiDuration.Durations
  isExternal: false
  name: Durations
  nameWithType: MultiDuration.Durations
  fullName: TimeCockpit.Data.DataModel.MultiDuration.Durations
- uid: TimeCockpit.Data.DataModel.MultiDuration.EarliestBegin*
  commentId: Overload:TimeCockpit.Data.DataModel.MultiDuration.EarliestBegin
  isExternal: false
  name: EarliestBegin
  nameWithType: MultiDuration.EarliestBegin
  fullName: TimeCockpit.Data.DataModel.MultiDuration.EarliestBegin
- uid: TimeCockpit.Data.DataModel.MultiDuration.LatestEnd*
  commentId: Overload:TimeCockpit.Data.DataModel.MultiDuration.LatestEnd
  isExternal: false
  name: LatestEnd
  nameWithType: MultiDuration.LatestEnd
  fullName: TimeCockpit.Data.DataModel.MultiDuration.LatestEnd
- uid: TimeCockpit.Data.DataModel.MultiDuration.TotalTime*
  commentId: Overload:TimeCockpit.Data.DataModel.MultiDuration.TotalTime
  isExternal: false
  name: TotalTime
  nameWithType: MultiDuration.TotalTime
  fullName: TimeCockpit.Data.DataModel.MultiDuration.TotalTime
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: TimeCockpit.Data.DataModel.MultiDuration.IsInside*
  commentId: Overload:TimeCockpit.Data.DataModel.MultiDuration.IsInside
  isExternal: false
  name: IsInside
  nameWithType: MultiDuration.IsInside
  fullName: TimeCockpit.Data.DataModel.MultiDuration.IsInside
- uid: TimeCockpit.Data.DataModel.MultiDuration.Intersects*
  commentId: Overload:TimeCockpit.Data.DataModel.MultiDuration.Intersects
  isExternal: false
  name: Intersects
  nameWithType: MultiDuration.Intersects
  fullName: TimeCockpit.Data.DataModel.MultiDuration.Intersects
- uid: TimeCockpit.Data.DataModel.IDuration
  commentId: T:TimeCockpit.Data.DataModel.IDuration
  parent: TimeCockpit.Data.DataModel
  isExternal: false
  name: IDuration
  nameWithType: IDuration
  fullName: TimeCockpit.Data.DataModel.IDuration
- uid: TimeCockpit.Data.DataModel.MultiDuration.Flatten*
  commentId: Overload:TimeCockpit.Data.DataModel.MultiDuration.Flatten
  isExternal: false
  name: Flatten
  nameWithType: MultiDuration.Flatten
  fullName: TimeCockpit.Data.DataModel.MultiDuration.Flatten
- uid: TimeCockpit.Data.DataModel.MultiDuration.Cut*
  commentId: Overload:TimeCockpit.Data.DataModel.MultiDuration.Cut
  isExternal: false
  name: Cut
  nameWithType: MultiDuration.Cut
  fullName: TimeCockpit.Data.DataModel.MultiDuration.Cut
- uid: TimeCockpit.Data.DataModel.MultiDuration
  commentId: T:TimeCockpit.Data.DataModel.MultiDuration
  parent: TimeCockpit.Data.DataModel
  isExternal: false
  name: MultiDuration
  nameWithType: MultiDuration
  fullName: TimeCockpit.Data.DataModel.MultiDuration
- uid: TimeCockpit.Data.DataModel.MultiDuration.And*
  commentId: Overload:TimeCockpit.Data.DataModel.MultiDuration.And
  isExternal: false
  name: And
  nameWithType: MultiDuration.And
  fullName: TimeCockpit.Data.DataModel.MultiDuration.And
- uid: TimeCockpit.Data.DataModel.MultiDuration.Or*
  commentId: Overload:TimeCockpit.Data.DataModel.MultiDuration.Or
  isExternal: false
  name: Or
  nameWithType: MultiDuration.Or
  fullName: TimeCockpit.Data.DataModel.MultiDuration.Or
- uid: TimeCockpit.Data.DataModel.MultiDuration.Subtract*
  commentId: Overload:TimeCockpit.Data.DataModel.MultiDuration.Subtract
  isExternal: false
  name: Subtract
  nameWithType: MultiDuration.Subtract
  fullName: TimeCockpit.Data.DataModel.MultiDuration.Subtract
