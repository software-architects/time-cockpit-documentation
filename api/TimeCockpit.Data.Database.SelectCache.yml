### YamlMime:ManagedReference
items:
- uid: TimeCockpit.Data.Database.SelectCache
  commentId: T:TimeCockpit.Data.Database.SelectCache
  id: SelectCache
  parent: TimeCockpit.Data.Database
  children:
  - TimeCockpit.Data.Database.SelectCache.CreateInstance
  - TimeCockpit.Data.Database.SelectCache.GetOrAdd(TimeCockpit.Data.DataModel.ModelEntityBase,System.Guid,System.Func{System.Guid,TimeCockpit.Data.EntityObject})
  - TimeCockpit.Data.Database.SelectCache.TryGetValue(TimeCockpit.Data.DataModel.ModelEntityBase,System.Guid,TimeCockpit.Data.EntityObject@)
  langs:
  - csharp
  - vb
  name: SelectCache
  nameWithType: SelectCache
  fullName: TimeCockpit.Data.Database.SelectCache
  type: Class
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Database
  summary: "\nclass hiding the cache. A User can create such a cache and provide it as a lookup to queries, but cannot access the data itself.\nA select cache represents entity objects that have been loaded previously. \nSelect methods from the <xref href=\"TimeCockpit.Data.DataContext\" data-throw-if-not-resolved=\"false\"></xref> take a select cache as an optional parameter. If such a parameter\nis provided, the passed in cache is queried for pre-existing entity objects and those <xref href=\"TimeCockpit.Data.EntityObject\" data-throw-if-not-resolved=\"false\"></xref>s are reused without\nfurther deserializing the relation.\nUse the <xref href=\"TimeCockpit.Data.Database.SelectCache.CreateInstance\" data-throw-if-not-resolved=\"false\"></xref> method to create a fresh instance of the select cache. Passing the same instance to the select\nmethods will cause referenced entity objects to be the same object / reference identical.\n<example>\n<pre><code source=\"..\\TimeCockpit.Test\\TimeCockpit.Test.Data.DataModel\\TestQueryDataModel.cs\" region=\"SelectCache example\"></code></pre>\n</example>\n"
  syntax:
    content: public class SelectCache
    content.vb: Public Class SelectCache
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TimeCockpit.Data.Database.SelectCache.CreateInstance
  commentId: M:TimeCockpit.Data.Database.SelectCache.CreateInstance
  id: CreateInstance
  parent: TimeCockpit.Data.Database.SelectCache
  langs:
  - csharp
  - vb
  name: CreateInstance()
  nameWithType: SelectCache.CreateInstance()
  fullName: TimeCockpit.Data.Database.SelectCache.CreateInstance()
  type: Method
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Database
  summary: "\ncreates a new instance of the select cache.\n"
  syntax:
    content: public static SelectCache CreateInstance()
    return:
      type: TimeCockpit.Data.Database.SelectCache
      description: Returns a new instance of the select cache.
    content.vb: Public Shared Function CreateInstance As SelectCache
  overload: TimeCockpit.Data.Database.SelectCache.CreateInstance*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: TimeCockpit.Data.Database.SelectCache.TryGetValue(TimeCockpit.Data.DataModel.ModelEntityBase,System.Guid,TimeCockpit.Data.EntityObject@)
  commentId: M:TimeCockpit.Data.Database.SelectCache.TryGetValue(TimeCockpit.Data.DataModel.ModelEntityBase,System.Guid,TimeCockpit.Data.EntityObject@)
  id: TryGetValue(TimeCockpit.Data.DataModel.ModelEntityBase,System.Guid,TimeCockpit.Data.EntityObject@)
  parent: TimeCockpit.Data.Database.SelectCache
  langs:
  - csharp
  - vb
  name: TryGetValue(ModelEntityBase, Guid, out EntityObject)
  nameWithType: SelectCache.TryGetValue(ModelEntityBase, Guid, out EntityObject)
  fullName: TimeCockpit.Data.Database.SelectCache.TryGetValue(TimeCockpit.Data.DataModel.ModelEntityBase, System.Guid, out TimeCockpit.Data.EntityObject)
  type: Method
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Database
  summary: "\nPerforms a 2 stage lookup to the cache structure to retrieve the entity object.\n"
  syntax:
    content: public bool TryGetValue(ModelEntityBase entity, Guid guid, out EntityObject entityObject)
    parameters:
    - id: entity
      type: TimeCockpit.Data.DataModel.ModelEntityBase
      description: The entity type the requested entity object is of.
    - id: guid
      type: System.Guid
      description: The unique identifier of the object.
    - id: entityObject
      type: TimeCockpit.Data.EntityObject
      description: The result entity object.
    return:
      type: System.Boolean
      description: Returns true if an entity object was found, false otherwise.
    content.vb: Public Function TryGetValue(entity As ModelEntityBase, guid As Guid, ByRef entityObject As EntityObject) As Boolean
  overload: TimeCockpit.Data.Database.SelectCache.TryGetValue*
  nameWithType.vb: SelectCache.TryGetValue(ModelEntityBase, Guid, ByRef EntityObject)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TimeCockpit.Data.Database.SelectCache.TryGetValue(TimeCockpit.Data.DataModel.ModelEntityBase, System.Guid, ByRef TimeCockpit.Data.EntityObject)
  name.vb: TryGetValue(ModelEntityBase, Guid, ByRef EntityObject)
- uid: TimeCockpit.Data.Database.SelectCache.GetOrAdd(TimeCockpit.Data.DataModel.ModelEntityBase,System.Guid,System.Func{System.Guid,TimeCockpit.Data.EntityObject})
  commentId: M:TimeCockpit.Data.Database.SelectCache.GetOrAdd(TimeCockpit.Data.DataModel.ModelEntityBase,System.Guid,System.Func{System.Guid,TimeCockpit.Data.EntityObject})
  id: GetOrAdd(TimeCockpit.Data.DataModel.ModelEntityBase,System.Guid,System.Func{System.Guid,TimeCockpit.Data.EntityObject})
  parent: TimeCockpit.Data.Database.SelectCache
  langs:
  - csharp
  - vb
  name: GetOrAdd(ModelEntityBase, Guid, Func<Guid, EntityObject>)
  nameWithType: SelectCache.GetOrAdd(ModelEntityBase, Guid, Func<Guid, EntityObject>)
  fullName: TimeCockpit.Data.Database.SelectCache.GetOrAdd(TimeCockpit.Data.DataModel.ModelEntityBase, System.Guid, System.Func<System.Guid, TimeCockpit.Data.EntityObject>)
  type: Method
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Database
  summary: "\nGets an entity object or calls the factory for a value to add.\n"
  syntax:
    content: public EntityObject GetOrAdd(ModelEntityBase entity, Guid guid, Func<Guid, EntityObject> factory)
    parameters:
    - id: entity
      type: TimeCockpit.Data.DataModel.ModelEntityBase
      description: The entity type of the object.
    - id: guid
      type: System.Guid
      description: The object id to add.
    - id: factory
      type: System.Func{System.Guid,TimeCockpit.Data.EntityObject}
      description: The factory method to call.
    return:
      type: TimeCockpit.Data.EntityObject
      description: Returns the added <xref href="TimeCockpit.Data.EntityObject" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Function GetOrAdd(entity As ModelEntityBase, guid As Guid, factory As Func(Of Guid, EntityObject)) As EntityObject
  overload: TimeCockpit.Data.Database.SelectCache.GetOrAdd*
  nameWithType.vb: SelectCache.GetOrAdd(ModelEntityBase, Guid, Func(Of Guid, EntityObject))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TimeCockpit.Data.Database.SelectCache.GetOrAdd(TimeCockpit.Data.DataModel.ModelEntityBase, System.Guid, System.Func(Of System.Guid, TimeCockpit.Data.EntityObject))
  name.vb: GetOrAdd(ModelEntityBase, Guid, Func(Of Guid, EntityObject))
references:
- uid: TimeCockpit.Data.Database
  commentId: N:TimeCockpit.Data.Database
  isExternal: true
  name: TimeCockpit.Data.Database
  nameWithType: TimeCockpit.Data.Database
  fullName: TimeCockpit.Data.Database
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TimeCockpit.Data.Database.SelectCache.CreateInstance*
  commentId: Overload:TimeCockpit.Data.Database.SelectCache.CreateInstance
  isExternal: true
  name: CreateInstance
  nameWithType: SelectCache.CreateInstance
  fullName: TimeCockpit.Data.Database.SelectCache.CreateInstance
- uid: TimeCockpit.Data.Database.SelectCache
  commentId: T:TimeCockpit.Data.Database.SelectCache
  parent: TimeCockpit.Data.Database
  isExternal: true
  name: SelectCache
  nameWithType: SelectCache
  fullName: TimeCockpit.Data.Database.SelectCache
- uid: TimeCockpit.Data.Database.SelectCache.TryGetValue*
  commentId: Overload:TimeCockpit.Data.Database.SelectCache.TryGetValue
  isExternal: true
  name: TryGetValue
  nameWithType: SelectCache.TryGetValue
  fullName: TimeCockpit.Data.Database.SelectCache.TryGetValue
- uid: TimeCockpit.Data.DataModel.ModelEntityBase
  commentId: T:TimeCockpit.Data.DataModel.ModelEntityBase
  parent: TimeCockpit.Data.DataModel
  isExternal: true
  name: ModelEntityBase
  nameWithType: ModelEntityBase
  fullName: TimeCockpit.Data.DataModel.ModelEntityBase
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: TimeCockpit.Data.EntityObject
  commentId: T:TimeCockpit.Data.EntityObject
  parent: TimeCockpit.Data
  isExternal: true
  name: EntityObject
  nameWithType: EntityObject
  fullName: TimeCockpit.Data.EntityObject
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: TimeCockpit.Data.DataModel
  commentId: N:TimeCockpit.Data.DataModel
  isExternal: true
  name: TimeCockpit.Data.DataModel
  nameWithType: TimeCockpit.Data.DataModel
  fullName: TimeCockpit.Data.DataModel
- uid: TimeCockpit.Data
  commentId: N:TimeCockpit.Data
  isExternal: true
  name: TimeCockpit.Data
  nameWithType: TimeCockpit.Data
  fullName: TimeCockpit.Data
- uid: TimeCockpit.Data.Database.SelectCache.GetOrAdd*
  commentId: Overload:TimeCockpit.Data.Database.SelectCache.GetOrAdd
  isExternal: true
  name: GetOrAdd
  nameWithType: SelectCache.GetOrAdd
  fullName: TimeCockpit.Data.Database.SelectCache.GetOrAdd
- uid: System.Func{System.Guid,TimeCockpit.Data.EntityObject}
  commentId: T:System.Func{System.Guid,TimeCockpit.Data.EntityObject}
  parent: System
  definition: System.Func`2
  name: Func<Guid, EntityObject>
  nameWithType: Func<Guid, EntityObject>
  fullName: System.Func<System.Guid, TimeCockpit.Data.EntityObject>
  nameWithType.vb: Func(Of Guid, EntityObject)
  fullName.vb: System.Func(Of System.Guid, TimeCockpit.Data.EntityObject)
  name.vb: Func(Of Guid, EntityObject)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TimeCockpit.Data.EntityObject
    name: EntityObject
    nameWithType: EntityObject
    fullName: TimeCockpit.Data.EntityObject
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TimeCockpit.Data.EntityObject
    name: EntityObject
    nameWithType: EntityObject
    fullName: TimeCockpit.Data.EntityObject
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
