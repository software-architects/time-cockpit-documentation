### YamlMime:ManagedReference
items:
- uid: TimeCockpit.Data.DependencyEntityObject
  commentId: T:TimeCockpit.Data.DependencyEntityObject
  id: DependencyEntityObject
  parent: TimeCockpit.Data
  children:
  - TimeCockpit.Data.DependencyEntityObject.#ctor
  - TimeCockpit.Data.DependencyEntityObject.Create(TimeCockpit.Data.EntityObject,TimeCockpit.Data.IDataContext)
  - TimeCockpit.Data.DependencyEntityObject.DataContext
  - TimeCockpit.Data.DependencyEntityObject.EntityObject
  - TimeCockpit.Data.DependencyEntityObject.Error
  - TimeCockpit.Data.DependencyEntityObject.GetMember(System.String)
  - TimeCockpit.Data.DependencyEntityObject.GetMemberAccessPermissions``1
  - TimeCockpit.Data.DependencyEntityObject.IsValid
  - TimeCockpit.Data.DependencyEntityObject.Me
  - TimeCockpit.Data.DependencyEntityObject.MemberAccessPermissions
  - TimeCockpit.Data.DependencyEntityObject.MemberAccessPermissionsInternal
  - TimeCockpit.Data.DependencyEntityObject.MemberAccessPermissionsLock
  - TimeCockpit.Data.DependencyEntityObject.MergeFrom(TimeCockpit.Data.EntityObject)
  - TimeCockpit.Data.DependencyEntityObject.ModelEntityName
  - TimeCockpit.Data.DependencyEntityObject.ObjectUuid
  - TimeCockpit.Data.DependencyEntityObject.OnPropertyChanged(System.String)
  - TimeCockpit.Data.DependencyEntityObject.PropertyChanged
  - TimeCockpit.Data.DependencyEntityObject.ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)
  - TimeCockpit.Data.DependencyEntityObject.SetMember(System.String,System.Object)
  langs:
  - csharp
  - vb
  name: DependencyEntityObject
  nameWithType: DependencyEntityObject
  fullName: TimeCockpit.Data.DependencyEntityObject
  type: Class
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data
  summary: "\nA wrapper for entity objects, that implements IDataErrorInfo and throws notifications.\n"
  syntax:
    content: 'public class DependencyEntityObject : DynamicObject, IDynamicMetaObjectProvider, INotifyPropertyChanged, IEntityObject, IDataErrorInfo, IWeakEventListener'
    content.vb: >-
      Public Class DependencyEntityObject
          Inherits DynamicObject
          Implements IDynamicMetaObjectProvider, INotifyPropertyChanged, IEntityObject, IDataErrorInfo, IWeakEventListener
  inheritance:
  - System.Object
  - TimeCockpit.Data.DynamicObject
  implements:
  - System.Dynamic.IDynamicMetaObjectProvider
  - System.ComponentModel.INotifyPropertyChanged
  - TimeCockpit.Data.IEntityObject
  - System.ComponentModel.IDataErrorInfo
  - TimeCockpit.Common.IWeakEventListener
  inheritedMembers:
  - TimeCockpit.Data.DynamicObject.GetMetaObject(System.Linq.Expressions.Expression)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TimeCockpit.Data.DependencyEntityObject.#ctor
  commentId: M:TimeCockpit.Data.DependencyEntityObject.#ctor
  id: '#ctor'
  parent: TimeCockpit.Data.DependencyEntityObject
  langs:
  - csharp
  - vb
  name: DependencyEntityObject()
  nameWithType: DependencyEntityObject.DependencyEntityObject()
  fullName: TimeCockpit.Data.DependencyEntityObject.DependencyEntityObject()
  type: Constructor
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data
  summary: "\nInitializes a new instance of the <xref href=\"TimeCockpit.Data.DependencyEntityObject\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  syntax:
    content: public DependencyEntityObject()
    content.vb: Public Sub New
  overload: TimeCockpit.Data.DependencyEntityObject.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.DependencyEntityObject.Create(TimeCockpit.Data.EntityObject,TimeCockpit.Data.IDataContext)
  commentId: M:TimeCockpit.Data.DependencyEntityObject.Create(TimeCockpit.Data.EntityObject,TimeCockpit.Data.IDataContext)
  id: Create(TimeCockpit.Data.EntityObject,TimeCockpit.Data.IDataContext)
  parent: TimeCockpit.Data.DependencyEntityObject
  langs:
  - csharp
  - vb
  name: Create(EntityObject, IDataContext)
  nameWithType: DependencyEntityObject.Create(EntityObject, IDataContext)
  fullName: TimeCockpit.Data.DependencyEntityObject.Create(TimeCockpit.Data.EntityObject, TimeCockpit.Data.IDataContext)
  type: Method
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data
  summary: "\nReturns a new instance for <xref href=\"TimeCockpit.Data.DependencyEntityObject.EntityObject\" data-throw-if-not-resolved=\"false\"></xref>s that provides functionality specific to \nthe user interface\n"
  syntax:
    content: public static DependencyEntityObject Create(EntityObject entityObject, IDataContext context)
    parameters:
    - id: entityObject
      type: TimeCockpit.Data.EntityObject
      description: The <xref href="TimeCockpit.Data.DependencyEntityObject.EntityObject" data-throw-if-not-resolved="false"></xref> to wrap.
    - id: context
      type: TimeCockpit.Data.IDataContext
      description: An instance of <xref href="TimeCockpit.Data.DependencyEntityObject.DataContext" data-throw-if-not-resolved="false"></xref> to work on.
    return:
      type: TimeCockpit.Data.DependencyEntityObject
      description: An instance of <xref href="TimeCockpit.Data.DependencyEntityObject" data-throw-if-not-resolved="false"></xref> wrapping an instance of <xref href="TimeCockpit.Data.DependencyEntityObject.EntityObject" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Shared Function Create(entityObject As EntityObject, context As IDataContext) As DependencyEntityObject
  overload: TimeCockpit.Data.DependencyEntityObject.Create*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: TimeCockpit.Data.DependencyEntityObject.ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)
  commentId: M:TimeCockpit.Data.DependencyEntityObject.ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)
  id: ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)
  parent: TimeCockpit.Data.DependencyEntityObject
  langs:
  - csharp
  - vb
  name: ReceiveWeakEvent(Type, Object, EventArgs)
  nameWithType: DependencyEntityObject.ReceiveWeakEvent(Type, Object, EventArgs)
  fullName: TimeCockpit.Data.DependencyEntityObject.ReceiveWeakEvent(System.Type, System.Object, System.EventArgs)
  type: Method
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data
  summary: "\nReceives events from the centralized event manager.\n"
  syntax:
    content: public bool ReceiveWeakEvent(Type managerType, object sender, EventArgs e)
    parameters:
    - id: managerType
      type: System.Type
      description: The type of the WeakEventManager calling this method.
    - id: sender
      type: System.Object
      description: Object that originated the event.
    - id: e
      type: System.EventArgs
      description: Event data.
    return:
      type: System.Boolean
      description: "\ntrue if the listener handled the event. It is considered an error by the\nWeakEventManager handling in WPF to register a listener for an event that the\nlistener does not handle. Regardless, the method should return false if it receives\nan event that it does not recognize or handle.\n"
    content.vb: Public Function ReceiveWeakEvent(managerType As Type, sender As Object, e As EventArgs) As Boolean
  overload: TimeCockpit.Data.DependencyEntityObject.ReceiveWeakEvent*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.DependencyEntityObject.GetMember(System.String)
  commentId: M:TimeCockpit.Data.DependencyEntityObject.GetMember(System.String)
  id: GetMember(System.String)
  parent: TimeCockpit.Data.DependencyEntityObject
  langs:
  - csharp
  - vb
  name: GetMember(String)
  nameWithType: DependencyEntityObject.GetMember(String)
  fullName: TimeCockpit.Data.DependencyEntityObject.GetMember(System.String)
  type: Method
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data
  summary: "\nGets the value of the specified member.\n"
  remarks: "\nThis method also returns the clr properties &apos;{ModelEntityName}Uuid&apos; and &apos;IsReadOnly&apos; of an <xref href=\"TimeCockpit.Data.DependencyEntityObject.EntityObject\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public override object GetMember(string name)
    parameters:
    - id: name
      type: System.String
      description: Name of the member.
    return:
      type: System.Object
      description: Returns the value of the specified member.
    content.vb: Public Overrides Function GetMember(name As String) As Object
  overridden: TimeCockpit.Data.DynamicObject.GetMember(System.String)
  overload: TimeCockpit.Data.DependencyEntityObject.GetMember*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: TimeCockpit.Data.DependencyEntityObject.SetMember(System.String,System.Object)
  commentId: M:TimeCockpit.Data.DependencyEntityObject.SetMember(System.String,System.Object)
  id: SetMember(System.String,System.Object)
  parent: TimeCockpit.Data.DependencyEntityObject
  langs:
  - csharp
  - vb
  name: SetMember(String, Object)
  nameWithType: DependencyEntityObject.SetMember(String, Object)
  fullName: TimeCockpit.Data.DependencyEntityObject.SetMember(System.String, System.Object)
  type: Method
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data
  summary: "\nSets a dynamic member.\n"
  syntax:
    content: public override void SetMember(string name, object value)
    parameters:
    - id: name
      type: System.String
      description: Name of the member to set.
    - id: value
      type: System.Object
      description: Value to set.
    content.vb: Public Overrides Sub SetMember(name As String, value As Object)
  overridden: TimeCockpit.Data.DynamicObject.SetMember(System.String,System.Object)
  overload: TimeCockpit.Data.DependencyEntityObject.SetMember*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: TimeCockpit.Data.DependencyEntityObject.GetMemberAccessPermissions``1
  commentId: M:TimeCockpit.Data.DependencyEntityObject.GetMemberAccessPermissions``1
  id: GetMemberAccessPermissions``1
  parent: TimeCockpit.Data.DependencyEntityObject
  langs:
  - csharp
  - vb
  name: GetMemberAccessPermissions<T>()
  nameWithType: DependencyEntityObject.GetMemberAccessPermissions<T>()
  fullName: TimeCockpit.Data.DependencyEntityObject.GetMemberAccessPermissions<T>()
  type: Method
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data
  summary: "\nGets the member access permissions.\n"
  syntax:
    content: >-
      public MemberAccessPermissions GetMemberAccessPermissions<T>()
          where T : MemberAccessPermissions
    typeParameters:
    - id: T
      description: Either <xref href="TimeCockpit.Data.DependencyEntityObject.MemberAccessPermissions" data-throw-if-not-resolved="false"></xref> or a derived type.
    return:
      type: TimeCockpit.Data.Security.MemberAccessPermissions
      description: An instance of <xref href="TimeCockpit.Data.DependencyEntityObject.MemberAccessPermissions" data-throw-if-not-resolved="false"></xref> or an inherited class.
    content.vb: Public Function GetMemberAccessPermissions(Of T As MemberAccessPermissions) As MemberAccessPermissions
  overload: TimeCockpit.Data.DependencyEntityObject.GetMemberAccessPermissions*
  nameWithType.vb: DependencyEntityObject.GetMemberAccessPermissions(Of T)()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TimeCockpit.Data.DependencyEntityObject.GetMemberAccessPermissions(Of T)()
  name.vb: GetMemberAccessPermissions(Of T)()
- uid: TimeCockpit.Data.DependencyEntityObject.MergeFrom(TimeCockpit.Data.EntityObject)
  commentId: M:TimeCockpit.Data.DependencyEntityObject.MergeFrom(TimeCockpit.Data.EntityObject)
  id: MergeFrom(TimeCockpit.Data.EntityObject)
  parent: TimeCockpit.Data.DependencyEntityObject
  langs:
  - csharp
  - vb
  name: MergeFrom(EntityObject)
  nameWithType: DependencyEntityObject.MergeFrom(EntityObject)
  fullName: TimeCockpit.Data.DependencyEntityObject.MergeFrom(TimeCockpit.Data.EntityObject)
  type: Method
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data
  summary: "\nMerges the specified entity object into the current instance of <xref href=\"TimeCockpit.Data.DependencyEntityObject\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public void MergeFrom(EntityObject entityObject)
    parameters:
    - id: entityObject
      type: TimeCockpit.Data.EntityObject
      description: The entity object.
    content.vb: Public Sub MergeFrom(entityObject As EntityObject)
  overload: TimeCockpit.Data.DependencyEntityObject.MergeFrom*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.DependencyEntityObject.OnPropertyChanged(System.String)
  commentId: M:TimeCockpit.Data.DependencyEntityObject.OnPropertyChanged(System.String)
  id: OnPropertyChanged(System.String)
  parent: TimeCockpit.Data.DependencyEntityObject
  langs:
  - csharp
  - vb
  name: OnPropertyChanged(String)
  nameWithType: DependencyEntityObject.OnPropertyChanged(String)
  fullName: TimeCockpit.Data.DependencyEntityObject.OnPropertyChanged(System.String)
  type: Method
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data
  summary: "\nInvoked whenever the value of any property on this object has been updated. \nThe specific property that changed is reported in the event data. \n"
  remarks: "\nThis method sets a property in the values collection of an <xref href=\"TimeCockpit.Data.DependencyEntityObject.EntityObject\" data-throw-if-not-resolved=\"false\"></xref>\nto MemberStatus.Changed. Each call of the method calls <xref href=\"TimeCockpit.Data.DependencyEntityObject.OnPropertyChanged(System.String)\" data-throw-if-not-resolved=\"false\"></xref> for the \nclr properties &apos;IsChanged&apos;, &apos;Me&apos;, &apos;IsReadonly&apos;.\n"
  syntax:
    content: protected virtual void OnPropertyChanged(string propertyName)
    parameters:
    - id: propertyName
      type: System.String
      description: Name of the property that has been updated.
    content.vb: Protected Overridable Sub OnPropertyChanged(propertyName As String)
  overload: TimeCockpit.Data.DependencyEntityObject.OnPropertyChanged*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: TimeCockpit.Data.DependencyEntityObject.EntityObject
  commentId: P:TimeCockpit.Data.DependencyEntityObject.EntityObject
  id: EntityObject
  parent: TimeCockpit.Data.DependencyEntityObject
  langs:
  - csharp
  - vb
  name: EntityObject
  nameWithType: DependencyEntityObject.EntityObject
  fullName: TimeCockpit.Data.DependencyEntityObject.EntityObject
  type: Property
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data
  summary: "\nGets or sets the underlying EntityObject.\n"
  syntax:
    content: public EntityObject EntityObject { get; set; }
    parameters: []
    return:
      type: TimeCockpit.Data.EntityObject
    content.vb: Public Property EntityObject As EntityObject
  overload: TimeCockpit.Data.DependencyEntityObject.EntityObject*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.DependencyEntityObject.DataContext
  commentId: P:TimeCockpit.Data.DependencyEntityObject.DataContext
  id: DataContext
  parent: TimeCockpit.Data.DependencyEntityObject
  langs:
  - csharp
  - vb
  name: DataContext
  nameWithType: DependencyEntityObject.DataContext
  fullName: TimeCockpit.Data.DependencyEntityObject.DataContext
  type: Property
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data
  summary: "\nGets or sets the data context to evaluate permissions\n"
  syntax:
    content: public IDataContext DataContext { get; set; }
    parameters: []
    return:
      type: TimeCockpit.Data.IDataContext
    content.vb: Public Property DataContext As IDataContext
  overload: TimeCockpit.Data.DependencyEntityObject.DataContext*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.DependencyEntityObject.ObjectUuid
  commentId: P:TimeCockpit.Data.DependencyEntityObject.ObjectUuid
  id: ObjectUuid
  parent: TimeCockpit.Data.DependencyEntityObject
  langs:
  - csharp
  - vb
  name: ObjectUuid
  nameWithType: DependencyEntityObject.ObjectUuid
  fullName: TimeCockpit.Data.DependencyEntityObject.ObjectUuid
  type: Property
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data
  summary: "\nGets the unique id of the object.\n"
  syntax:
    content: public Guid ObjectUuid { get; }
    parameters: []
    return:
      type: System.Guid
    content.vb: Public ReadOnly Property ObjectUuid As Guid
  overload: TimeCockpit.Data.DependencyEntityObject.ObjectUuid*
  implements:
  - TimeCockpit.Data.IEntityObject.ObjectUuid
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TimeCockpit.Data.DependencyEntityObject.ModelEntityName
  commentId: P:TimeCockpit.Data.DependencyEntityObject.ModelEntityName
  id: ModelEntityName
  parent: TimeCockpit.Data.DependencyEntityObject
  langs:
  - csharp
  - vb
  name: ModelEntityName
  nameWithType: DependencyEntityObject.ModelEntityName
  fullName: TimeCockpit.Data.DependencyEntityObject.ModelEntityName
  type: Property
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data
  summary: "\nGets the name of the current instance of <xref href=\"TimeCockpit.Data.DependencyEntityObject.EntityObject\" data-throw-if-not-resolved=\"false\"></xref>\n"
  syntax:
    content: public string ModelEntityName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property ModelEntityName As String
  overload: TimeCockpit.Data.DependencyEntityObject.ModelEntityName*
  implements:
  - TimeCockpit.Data.IEntityObject.ModelEntityName
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TimeCockpit.Data.DependencyEntityObject.Me
  commentId: P:TimeCockpit.Data.DependencyEntityObject.Me
  id: Me
  parent: TimeCockpit.Data.DependencyEntityObject
  langs:
  - csharp
  - vb
  name: Me
  nameWithType: DependencyEntityObject.Me
  fullName: TimeCockpit.Data.DependencyEntityObject.Me
  type: Property
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data
  summary: "\nGets the it self\n"
  remarks: "\nThis property is needed for DataBinding reasons. \nWhenever a property of an <xref href=\"TimeCockpit.Data.DependencyEntityObject.EntityObject\" data-throw-if-not-resolved=\"false\"></xref> is changed (e.g. via z.SetMember(&quot;X&quot;, &quot;Y&quot;)), the <xref href=\"TimeCockpit.Data.DependencyEntityObject.OnPropertyChanged(System.String)\" data-throw-if-not-resolved=\"false\"></xref> event\nof that property + the <xref href=\"TimeCockpit.Data.DependencyEntityObject.OnPropertyChanged(System.String)\" data-throw-if-not-resolved=\"false\"></xref> event of the Me property is fired.\n"
  syntax:
    content: public EntityObject Me { get; }
    parameters: []
    return:
      type: TimeCockpit.Data.EntityObject
    content.vb: Public ReadOnly Property Me As EntityObject
  overload: TimeCockpit.Data.DependencyEntityObject.Me*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TimeCockpit.Data.DependencyEntityObject.Error
  commentId: P:TimeCockpit.Data.DependencyEntityObject.Error
  id: Error
  parent: TimeCockpit.Data.DependencyEntityObject
  langs:
  - csharp
  - vb
  name: Error
  nameWithType: DependencyEntityObject.Error
  fullName: TimeCockpit.Data.DependencyEntityObject.Error
  type: Property
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data
  summary: "\nGets an error message indicating why validation fails for this object.\n<remarks>\nThis property calls all the <xref href=\"TimeCockpit.Data.DataModel.ValidationRule\" data-throw-if-not-resolved=\"false\"></xref>s of an <xref href=\"TimeCockpit.Data.DependencyEntityObject.EntityObject\" data-throw-if-not-resolved=\"false\"></xref>\nand aggregates their messages if they fail. That is, if an <xref href=\"TimeCockpit.Data.DependencyEntityObject.EntityObject\" data-throw-if-not-resolved=\"false\"></xref> validates\no.k. the property returns null. Else, it returns the first entry of the list of strings representing the error messages\ndefined in the <xref href=\"TimeCockpit.Data.DataModel.ValidationRule\" data-throw-if-not-resolved=\"false\"></xref>s.\n</remarks>\n"
  syntax:
    content: public string Error { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Error As String
  overload: TimeCockpit.Data.DependencyEntityObject.Error*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TimeCockpit.Data.DependencyEntityObject.IsValid
  commentId: P:TimeCockpit.Data.DependencyEntityObject.IsValid
  id: IsValid
  parent: TimeCockpit.Data.DependencyEntityObject
  langs:
  - csharp
  - vb
  name: IsValid
  nameWithType: DependencyEntityObject.IsValid
  fullName: TimeCockpit.Data.DependencyEntityObject.IsValid
  type: Property
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data
  summary: "\nGets a value indicating whether the <xref href=\"TimeCockpit.Data.DependencyEntityObject.EntityObject\" data-throw-if-not-resolved=\"false\"></xref> is valid or not.\n"
  syntax:
    content: public bool IsValid { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsValid As Boolean
  overload: TimeCockpit.Data.DependencyEntityObject.IsValid*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TimeCockpit.Data.DependencyEntityObject.MemberAccessPermissions
  commentId: P:TimeCockpit.Data.DependencyEntityObject.MemberAccessPermissions
  id: MemberAccessPermissions
  parent: TimeCockpit.Data.DependencyEntityObject
  langs:
  - csharp
  - vb
  name: MemberAccessPermissions
  nameWithType: DependencyEntityObject.MemberAccessPermissions
  fullName: TimeCockpit.Data.DependencyEntityObject.MemberAccessPermissions
  type: Property
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data
  summary: "\nGets the member permission information.\n"
  syntax:
    content: public virtual MemberAccessPermissions MemberAccessPermissions { get; }
    parameters: []
    return:
      type: TimeCockpit.Data.Security.MemberAccessPermissions
    content.vb: Public Overridable ReadOnly Property MemberAccessPermissions As MemberAccessPermissions
  overload: TimeCockpit.Data.DependencyEntityObject.MemberAccessPermissions*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: TimeCockpit.Data.DependencyEntityObject.MemberAccessPermissionsInternal
  commentId: P:TimeCockpit.Data.DependencyEntityObject.MemberAccessPermissionsInternal
  id: MemberAccessPermissionsInternal
  parent: TimeCockpit.Data.DependencyEntityObject
  langs:
  - csharp
  - vb
  name: MemberAccessPermissionsInternal
  nameWithType: DependencyEntityObject.MemberAccessPermissionsInternal
  fullName: TimeCockpit.Data.DependencyEntityObject.MemberAccessPermissionsInternal
  type: Property
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data
  summary: "\nGets or sets the member access permissions.\n"
  syntax:
    content: protected MemberAccessPermissions MemberAccessPermissionsInternal { get; set; }
    parameters: []
    return:
      type: TimeCockpit.Data.Security.MemberAccessPermissions
    content.vb: Protected Property MemberAccessPermissionsInternal As MemberAccessPermissions
  overload: TimeCockpit.Data.DependencyEntityObject.MemberAccessPermissionsInternal*
  modifiers.csharp:
  - protected
  - get
  - set
  modifiers.vb:
  - Protected
- uid: TimeCockpit.Data.DependencyEntityObject.MemberAccessPermissionsLock
  commentId: P:TimeCockpit.Data.DependencyEntityObject.MemberAccessPermissionsLock
  id: MemberAccessPermissionsLock
  parent: TimeCockpit.Data.DependencyEntityObject
  langs:
  - csharp
  - vb
  name: MemberAccessPermissionsLock
  nameWithType: DependencyEntityObject.MemberAccessPermissionsLock
  fullName: TimeCockpit.Data.DependencyEntityObject.MemberAccessPermissionsLock
  type: Property
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data
  summary: "\nGets the member access permissions lock.\n"
  syntax:
    content: protected object MemberAccessPermissionsLock { get; }
    parameters: []
    return:
      type: System.Object
    content.vb: Protected ReadOnly Property MemberAccessPermissionsLock As Object
  overload: TimeCockpit.Data.DependencyEntityObject.MemberAccessPermissionsLock*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: TimeCockpit.Data.DependencyEntityObject.PropertyChanged
  commentId: E:TimeCockpit.Data.DependencyEntityObject.PropertyChanged
  id: PropertyChanged
  parent: TimeCockpit.Data.DependencyEntityObject
  langs:
  - csharp
  - vb
  name: PropertyChanged
  nameWithType: DependencyEntityObject.PropertyChanged
  fullName: TimeCockpit.Data.DependencyEntityObject.PropertyChanged
  type: Event
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data
  summary: "\nOccurs when a property value changes.\n"
  syntax:
    content: public event PropertyChangedEventHandler PropertyChanged
    return:
      type: System.ComponentModel.PropertyChangedEventHandler
    content.vb: Public Event PropertyChanged As PropertyChangedEventHandler
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: TimeCockpit.Data
  commentId: N:TimeCockpit.Data
  isExternal: true
  name: TimeCockpit.Data
  nameWithType: TimeCockpit.Data
  fullName: TimeCockpit.Data
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: TimeCockpit.Data.DynamicObject
  commentId: T:TimeCockpit.Data.DynamicObject
  parent: TimeCockpit.Data
  isExternal: true
  name: DynamicObject
  nameWithType: DynamicObject
  fullName: TimeCockpit.Data.DynamicObject
- uid: System.Dynamic.IDynamicMetaObjectProvider
  isExternal: true
  name: IDynamicMetaObjectProvider
  nameWithType: IDynamicMetaObjectProvider
  fullName: System.Dynamic.IDynamicMetaObjectProvider
- uid: System.ComponentModel.INotifyPropertyChanged
  isExternal: true
  name: INotifyPropertyChanged
  nameWithType: INotifyPropertyChanged
  fullName: System.ComponentModel.INotifyPropertyChanged
- uid: TimeCockpit.Data.IEntityObject
  commentId: T:TimeCockpit.Data.IEntityObject
  parent: TimeCockpit.Data
  isExternal: true
  name: IEntityObject
  nameWithType: IEntityObject
  fullName: TimeCockpit.Data.IEntityObject
- uid: System.ComponentModel.IDataErrorInfo
  isExternal: true
  name: IDataErrorInfo
  nameWithType: IDataErrorInfo
  fullName: System.ComponentModel.IDataErrorInfo
- uid: TimeCockpit.Common.IWeakEventListener
  isExternal: true
  name: IWeakEventListener
  nameWithType: IWeakEventListener
  fullName: TimeCockpit.Common.IWeakEventListener
- uid: TimeCockpit.Data.DynamicObject.GetMetaObject(System.Linq.Expressions.Expression)
  commentId: M:TimeCockpit.Data.DynamicObject.GetMetaObject(System.Linq.Expressions.Expression)
  parent: TimeCockpit.Data.DynamicObject
  isExternal: true
  name: GetMetaObject(Expression)
  nameWithType: DynamicObject.GetMetaObject(Expression)
  fullName: TimeCockpit.Data.DynamicObject.GetMetaObject(System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: TimeCockpit.Data.DynamicObject.GetMetaObject(System.Linq.Expressions.Expression)
    name: GetMetaObject
    nameWithType: DynamicObject.GetMetaObject
    fullName: TimeCockpit.Data.DynamicObject.GetMetaObject
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TimeCockpit.Data.DynamicObject.GetMetaObject(System.Linq.Expressions.Expression)
    name: GetMetaObject
    nameWithType: DynamicObject.GetMetaObject
    fullName: TimeCockpit.Data.DynamicObject.GetMetaObject
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TimeCockpit.Data.DependencyEntityObject.#ctor*
  commentId: Overload:TimeCockpit.Data.DependencyEntityObject.#ctor
  isExternal: true
  name: DependencyEntityObject
  nameWithType: DependencyEntityObject.DependencyEntityObject
  fullName: TimeCockpit.Data.DependencyEntityObject.DependencyEntityObject
- uid: TimeCockpit.Data.DependencyEntityObject.Create*
  commentId: Overload:TimeCockpit.Data.DependencyEntityObject.Create
  isExternal: true
  name: Create
  nameWithType: DependencyEntityObject.Create
  fullName: TimeCockpit.Data.DependencyEntityObject.Create
- uid: TimeCockpit.Data.EntityObject
  commentId: T:TimeCockpit.Data.EntityObject
  parent: TimeCockpit.Data
  isExternal: true
  name: EntityObject
  nameWithType: EntityObject
  fullName: TimeCockpit.Data.EntityObject
- uid: TimeCockpit.Data.IDataContext
  commentId: T:TimeCockpit.Data.IDataContext
  parent: TimeCockpit.Data
  isExternal: true
  name: IDataContext
  nameWithType: IDataContext
  fullName: TimeCockpit.Data.IDataContext
- uid: TimeCockpit.Data.DependencyEntityObject
  commentId: T:TimeCockpit.Data.DependencyEntityObject
  parent: TimeCockpit.Data
  isExternal: true
  name: DependencyEntityObject
  nameWithType: DependencyEntityObject
  fullName: TimeCockpit.Data.DependencyEntityObject
- uid: TimeCockpit.Data.DependencyEntityObject.ReceiveWeakEvent*
  commentId: Overload:TimeCockpit.Data.DependencyEntityObject.ReceiveWeakEvent
  isExternal: true
  name: ReceiveWeakEvent
  nameWithType: DependencyEntityObject.ReceiveWeakEvent
  fullName: TimeCockpit.Data.DependencyEntityObject.ReceiveWeakEvent
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.EventArgs
  commentId: T:System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: TimeCockpit.Data.DynamicObject.GetMember(System.String)
  commentId: M:TimeCockpit.Data.DynamicObject.GetMember(System.String)
  parent: TimeCockpit.Data.DynamicObject
  isExternal: true
  name: GetMember(String)
  nameWithType: DynamicObject.GetMember(String)
  fullName: TimeCockpit.Data.DynamicObject.GetMember(System.String)
  spec.csharp:
  - uid: TimeCockpit.Data.DynamicObject.GetMember(System.String)
    name: GetMember
    nameWithType: DynamicObject.GetMember
    fullName: TimeCockpit.Data.DynamicObject.GetMember
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TimeCockpit.Data.DynamicObject.GetMember(System.String)
    name: GetMember
    nameWithType: DynamicObject.GetMember
    fullName: TimeCockpit.Data.DynamicObject.GetMember
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.DependencyEntityObject.GetMember*
  commentId: Overload:TimeCockpit.Data.DependencyEntityObject.GetMember
  isExternal: true
  name: GetMember
  nameWithType: DependencyEntityObject.GetMember
  fullName: TimeCockpit.Data.DependencyEntityObject.GetMember
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: TimeCockpit.Data.DynamicObject.SetMember(System.String,System.Object)
  commentId: M:TimeCockpit.Data.DynamicObject.SetMember(System.String,System.Object)
  parent: TimeCockpit.Data.DynamicObject
  isExternal: true
  name: SetMember(String, Object)
  nameWithType: DynamicObject.SetMember(String, Object)
  fullName: TimeCockpit.Data.DynamicObject.SetMember(System.String, System.Object)
  spec.csharp:
  - uid: TimeCockpit.Data.DynamicObject.SetMember(System.String,System.Object)
    name: SetMember
    nameWithType: DynamicObject.SetMember
    fullName: TimeCockpit.Data.DynamicObject.SetMember
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TimeCockpit.Data.DynamicObject.SetMember(System.String,System.Object)
    name: SetMember
    nameWithType: DynamicObject.SetMember
    fullName: TimeCockpit.Data.DynamicObject.SetMember
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.DependencyEntityObject.SetMember*
  commentId: Overload:TimeCockpit.Data.DependencyEntityObject.SetMember
  isExternal: true
  name: SetMember
  nameWithType: DependencyEntityObject.SetMember
  fullName: TimeCockpit.Data.DependencyEntityObject.SetMember
- uid: TimeCockpit.Data.DependencyEntityObject.GetMemberAccessPermissions*
  commentId: Overload:TimeCockpit.Data.DependencyEntityObject.GetMemberAccessPermissions
  isExternal: true
  name: GetMemberAccessPermissions
  nameWithType: DependencyEntityObject.GetMemberAccessPermissions
  fullName: TimeCockpit.Data.DependencyEntityObject.GetMemberAccessPermissions
- uid: TimeCockpit.Data.Security.MemberAccessPermissions
  commentId: T:TimeCockpit.Data.Security.MemberAccessPermissions
  parent: TimeCockpit.Data.Security
  isExternal: true
  name: MemberAccessPermissions
  nameWithType: MemberAccessPermissions
  fullName: TimeCockpit.Data.Security.MemberAccessPermissions
- uid: TimeCockpit.Data.Security
  commentId: N:TimeCockpit.Data.Security
  isExternal: true
  name: TimeCockpit.Data.Security
  nameWithType: TimeCockpit.Data.Security
  fullName: TimeCockpit.Data.Security
- uid: TimeCockpit.Data.DependencyEntityObject.MergeFrom*
  commentId: Overload:TimeCockpit.Data.DependencyEntityObject.MergeFrom
  isExternal: true
  name: MergeFrom
  nameWithType: DependencyEntityObject.MergeFrom
  fullName: TimeCockpit.Data.DependencyEntityObject.MergeFrom
- uid: TimeCockpit.Data.DependencyEntityObject.OnPropertyChanged*
  commentId: Overload:TimeCockpit.Data.DependencyEntityObject.OnPropertyChanged
  isExternal: true
  name: OnPropertyChanged
  nameWithType: DependencyEntityObject.OnPropertyChanged
  fullName: TimeCockpit.Data.DependencyEntityObject.OnPropertyChanged
- uid: TimeCockpit.Data.DependencyEntityObject.EntityObject*
  commentId: Overload:TimeCockpit.Data.DependencyEntityObject.EntityObject
  isExternal: true
  name: EntityObject
  nameWithType: DependencyEntityObject.EntityObject
  fullName: TimeCockpit.Data.DependencyEntityObject.EntityObject
- uid: TimeCockpit.Data.DependencyEntityObject.DataContext*
  commentId: Overload:TimeCockpit.Data.DependencyEntityObject.DataContext
  isExternal: true
  name: DataContext
  nameWithType: DependencyEntityObject.DataContext
  fullName: TimeCockpit.Data.DependencyEntityObject.DataContext
- uid: TimeCockpit.Data.DependencyEntityObject.ObjectUuid*
  commentId: Overload:TimeCockpit.Data.DependencyEntityObject.ObjectUuid
  isExternal: true
  name: ObjectUuid
  nameWithType: DependencyEntityObject.ObjectUuid
  fullName: TimeCockpit.Data.DependencyEntityObject.ObjectUuid
- uid: TimeCockpit.Data.IEntityObject.ObjectUuid
  commentId: P:TimeCockpit.Data.IEntityObject.ObjectUuid
  parent: TimeCockpit.Data.IEntityObject
  isExternal: true
  name: ObjectUuid
  nameWithType: IEntityObject.ObjectUuid
  fullName: TimeCockpit.Data.IEntityObject.ObjectUuid
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: TimeCockpit.Data.DependencyEntityObject.ModelEntityName*
  commentId: Overload:TimeCockpit.Data.DependencyEntityObject.ModelEntityName
  isExternal: true
  name: ModelEntityName
  nameWithType: DependencyEntityObject.ModelEntityName
  fullName: TimeCockpit.Data.DependencyEntityObject.ModelEntityName
- uid: TimeCockpit.Data.IEntityObject.ModelEntityName
  commentId: P:TimeCockpit.Data.IEntityObject.ModelEntityName
  parent: TimeCockpit.Data.IEntityObject
  isExternal: true
  name: ModelEntityName
  nameWithType: IEntityObject.ModelEntityName
  fullName: TimeCockpit.Data.IEntityObject.ModelEntityName
- uid: TimeCockpit.Data.DependencyEntityObject.Me*
  commentId: Overload:TimeCockpit.Data.DependencyEntityObject.Me
  isExternal: true
  name: Me
  nameWithType: DependencyEntityObject.Me
  fullName: TimeCockpit.Data.DependencyEntityObject.Me
- uid: TimeCockpit.Data.DependencyEntityObject.Error*
  commentId: Overload:TimeCockpit.Data.DependencyEntityObject.Error
  isExternal: true
  name: Error
  nameWithType: DependencyEntityObject.Error
  fullName: TimeCockpit.Data.DependencyEntityObject.Error
- uid: TimeCockpit.Data.DependencyEntityObject.IsValid*
  commentId: Overload:TimeCockpit.Data.DependencyEntityObject.IsValid
  isExternal: true
  name: IsValid
  nameWithType: DependencyEntityObject.IsValid
  fullName: TimeCockpit.Data.DependencyEntityObject.IsValid
- uid: TimeCockpit.Data.DependencyEntityObject.MemberAccessPermissions*
  commentId: Overload:TimeCockpit.Data.DependencyEntityObject.MemberAccessPermissions
  isExternal: true
  name: MemberAccessPermissions
  nameWithType: DependencyEntityObject.MemberAccessPermissions
  fullName: TimeCockpit.Data.DependencyEntityObject.MemberAccessPermissions
- uid: TimeCockpit.Data.DependencyEntityObject.MemberAccessPermissionsInternal*
  commentId: Overload:TimeCockpit.Data.DependencyEntityObject.MemberAccessPermissionsInternal
  isExternal: true
  name: MemberAccessPermissionsInternal
  nameWithType: DependencyEntityObject.MemberAccessPermissionsInternal
  fullName: TimeCockpit.Data.DependencyEntityObject.MemberAccessPermissionsInternal
- uid: TimeCockpit.Data.DependencyEntityObject.MemberAccessPermissionsLock*
  commentId: Overload:TimeCockpit.Data.DependencyEntityObject.MemberAccessPermissionsLock
  isExternal: true
  name: MemberAccessPermissionsLock
  nameWithType: DependencyEntityObject.MemberAccessPermissionsLock
  fullName: TimeCockpit.Data.DependencyEntityObject.MemberAccessPermissionsLock
- uid: System.ComponentModel.PropertyChangedEventHandler
  isExternal: true
  name: PropertyChangedEventHandler
  nameWithType: PropertyChangedEventHandler
  fullName: System.ComponentModel.PropertyChangedEventHandler
