### YamlMime:ManagedReference
items:
- uid: TimeCockpit.Data.Export.Excel.XlsxExporter2
  commentId: T:TimeCockpit.Data.Export.Excel.XlsxExporter2
  id: XlsxExporter2
  parent: TimeCockpit.Data.Export.Excel
  children:
  - TimeCockpit.Data.Export.Excel.XlsxExporter2.BuildDefaultTemplate(ClosedXML.Excel.XLWorkbook,System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.View.BoundCell})
  - TimeCockpit.Data.Export.Excel.XlsxExporter2.BuildDefaultTemplate(ClosedXML.Excel.XLWorkbook,System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.View.BoundCell},System.Boolean,TimeCockpit.Data.DataModel.View.Form,TimeCockpit.Data.EntityObject,System.Collections.Generic.IEnumerable{TimeCockpit.Data.Export.ExportParameter},System.String)
  - TimeCockpit.Data.Export.Excel.XlsxExporter2.BuildFilterForm(ClosedXML.Excel.IXLWorksheet,TimeCockpit.Data.DataModel.View.Form,TimeCockpit.Data.EntityObject,System.Collections.Generic.IEnumerable{TimeCockpit.Data.Export.ExportParameter})
  - TimeCockpit.Data.Export.Excel.XlsxExporter2.CheckTemplate(System.String,TimeCockpit.Data.DataModel.ModelEntityBase)
  - TimeCockpit.Data.Export.Excel.XlsxExporter2.Export(System.Byte[],System.Collections.Generic.IEnumerable{TimeCockpit.Data.EntityObject},System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.View.BoundCell},System.Action{System.Int32},System.Threading.CancellationToken)
  - TimeCockpit.Data.Export.Excel.XlsxExporter2.Export(System.Byte[],System.Collections.Generic.IEnumerable{TimeCockpit.Data.EntityObject},System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.View.BoundCell},System.Boolean,TimeCockpit.Data.DataModel.View.Form,TimeCockpit.Data.EntityObject,System.Collections.Generic.IEnumerable{TimeCockpit.Data.Export.ExportParameter},System.String,System.Action{System.Int32},System.Threading.CancellationToken)
  - TimeCockpit.Data.Export.Excel.XlsxExporter2.ExportToFile(System.String,System.String,System.Collections.Generic.IEnumerable{TimeCockpit.Data.EntityObject},System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.View.BoundCell},System.Action{System.Int32},System.Threading.CancellationToken)
  - TimeCockpit.Data.Export.Excel.XlsxExporter2.ExportToFile(System.String,System.String,System.Collections.Generic.IEnumerable{TimeCockpit.Data.EntityObject},System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.View.BoundCell},System.Boolean,TimeCockpit.Data.DataModel.View.Form,TimeCockpit.Data.EntityObject,System.Collections.Generic.IEnumerable{TimeCockpit.Data.Export.ExportParameter},System.String,System.Action{System.Int32},System.Threading.CancellationToken)
  - TimeCockpit.Data.Export.Excel.XlsxExporter2.FillWorkBook(ClosedXML.Excel.XLWorkbook,System.Collections.Generic.IEnumerable{TimeCockpit.Data.EntityObject},System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.View.BoundCell},System.Action{System.Int32},System.Threading.CancellationToken)
  - TimeCockpit.Data.Export.Excel.XlsxExporter2.SanitizeWorksheetName(System.String)
  - TimeCockpit.Data.Export.Excel.XlsxExporter2.SetCellStyle(TimeCockpit.Data.DataModel.View.BoundCell,ClosedXML.Excel.IXLCell)
  langs:
  - csharp
  - vb
  name: XlsxExporter2
  nameWithType: XlsxExporter2
  fullName: TimeCockpit.Data.Export.Excel.XlsxExporter2
  type: Class
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data.Export/Excel/XlsxExporter2.cs
    id: XlsxExporter2
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data.Export/Excel/XlsxExporter2.cs
    startLine: 22
  assemblies:
  - TimeCockpit.Data.Export
  namespace: TimeCockpit.Data.Export.Excel
  summary: "\nexcel exporter using ClosedXML\n"
  example: []
  syntax:
    content: public class XlsxExporter2
    content.vb: Public Class XlsxExporter2
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TimeCockpit.Data.Export.Excel.XlsxExporter2.ExportToFile(System.String,System.String,System.Collections.Generic.IEnumerable{TimeCockpit.Data.EntityObject},System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.View.BoundCell},System.Action{System.Int32},System.Threading.CancellationToken)
  commentId: M:TimeCockpit.Data.Export.Excel.XlsxExporter2.ExportToFile(System.String,System.String,System.Collections.Generic.IEnumerable{TimeCockpit.Data.EntityObject},System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.View.BoundCell},System.Action{System.Int32},System.Threading.CancellationToken)
  id: ExportToFile(System.String,System.String,System.Collections.Generic.IEnumerable{TimeCockpit.Data.EntityObject},System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.View.BoundCell},System.Action{System.Int32},System.Threading.CancellationToken)
  parent: TimeCockpit.Data.Export.Excel.XlsxExporter2
  langs:
  - csharp
  - vb
  name: ExportToFile(String, String, IEnumerable<EntityObject>, IEnumerable<BoundCell>, Action<Int32>, CancellationToken)
  nameWithType: XlsxExporter2.ExportToFile(String, String, IEnumerable<EntityObject>, IEnumerable<BoundCell>, Action<Int32>, CancellationToken)
  fullName: TimeCockpit.Data.Export.Excel.XlsxExporter2.ExportToFile(System.String, System.String, System.Collections.Generic.IEnumerable<TimeCockpit.Data.EntityObject>, System.Collections.Generic.IEnumerable<TimeCockpit.Data.DataModel.View.BoundCell>, System.Action<System.Int32>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data.Export/Excel/XlsxExporter2.cs
    id: ExportToFile
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data.Export/Excel/XlsxExporter2.cs
    startLine: 33
  assemblies:
  - TimeCockpit.Data.Export
  namespace: TimeCockpit.Data.Export.Excel
  summary: "\nExports to file.\n"
  example: []
  syntax:
    content: public static void ExportToFile(string templatePath, string filePath, IEnumerable<EntityObject> entityObjects, IEnumerable<BoundCell> columns, Action<int> progressCallback, CancellationToken cancelToken)
    parameters:
    - id: templatePath
      type: System.String
      description: The template path.
    - id: filePath
      type: System.String
      description: The file path.
    - id: entityObjects
      type: System.Collections.Generic.IEnumerable{TimeCockpit.Data.EntityObject}
      description: The entity objects.
    - id: columns
      type: System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.View.BoundCell}
      description: The columns.
    - id: progressCallback
      type: System.Action{System.Int32}
      description: The progress callback.
    - id: cancelToken
      type: System.Threading.CancellationToken
      description: The cancel token.
    content.vb: Public Shared Sub ExportToFile(templatePath As String, filePath As String, entityObjects As IEnumerable(Of EntityObject), columns As IEnumerable(Of BoundCell), progressCallback As Action(Of Integer), cancelToken As CancellationToken)
  overload: TimeCockpit.Data.Export.Excel.XlsxExporter2.ExportToFile*
  nameWithType.vb: XlsxExporter2.ExportToFile(String, String, IEnumerable(Of EntityObject), IEnumerable(Of BoundCell), Action(Of Int32), CancellationToken)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TimeCockpit.Data.Export.Excel.XlsxExporter2.ExportToFile(System.String, System.String, System.Collections.Generic.IEnumerable(Of TimeCockpit.Data.EntityObject), System.Collections.Generic.IEnumerable(Of TimeCockpit.Data.DataModel.View.BoundCell), System.Action(Of System.Int32), System.Threading.CancellationToken)
  name.vb: ExportToFile(String, String, IEnumerable(Of EntityObject), IEnumerable(Of BoundCell), Action(Of Int32), CancellationToken)
- uid: TimeCockpit.Data.Export.Excel.XlsxExporter2.ExportToFile(System.String,System.String,System.Collections.Generic.IEnumerable{TimeCockpit.Data.EntityObject},System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.View.BoundCell},System.Boolean,TimeCockpit.Data.DataModel.View.Form,TimeCockpit.Data.EntityObject,System.Collections.Generic.IEnumerable{TimeCockpit.Data.Export.ExportParameter},System.String,System.Action{System.Int32},System.Threading.CancellationToken)
  commentId: M:TimeCockpit.Data.Export.Excel.XlsxExporter2.ExportToFile(System.String,System.String,System.Collections.Generic.IEnumerable{TimeCockpit.Data.EntityObject},System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.View.BoundCell},System.Boolean,TimeCockpit.Data.DataModel.View.Form,TimeCockpit.Data.EntityObject,System.Collections.Generic.IEnumerable{TimeCockpit.Data.Export.ExportParameter},System.String,System.Action{System.Int32},System.Threading.CancellationToken)
  id: ExportToFile(System.String,System.String,System.Collections.Generic.IEnumerable{TimeCockpit.Data.EntityObject},System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.View.BoundCell},System.Boolean,TimeCockpit.Data.DataModel.View.Form,TimeCockpit.Data.EntityObject,System.Collections.Generic.IEnumerable{TimeCockpit.Data.Export.ExportParameter},System.String,System.Action{System.Int32},System.Threading.CancellationToken)
  parent: TimeCockpit.Data.Export.Excel.XlsxExporter2
  langs:
  - csharp
  - vb
  name: ExportToFile(String, String, IEnumerable<EntityObject>, IEnumerable<BoundCell>, Boolean, Form, EntityObject, IEnumerable<ExportParameter>, String, Action<Int32>, CancellationToken)
  nameWithType: XlsxExporter2.ExportToFile(String, String, IEnumerable<EntityObject>, IEnumerable<BoundCell>, Boolean, Form, EntityObject, IEnumerable<ExportParameter>, String, Action<Int32>, CancellationToken)
  fullName: TimeCockpit.Data.Export.Excel.XlsxExporter2.ExportToFile(System.String, System.String, System.Collections.Generic.IEnumerable<TimeCockpit.Data.EntityObject>, System.Collections.Generic.IEnumerable<TimeCockpit.Data.DataModel.View.BoundCell>, System.Boolean, TimeCockpit.Data.DataModel.View.Form, TimeCockpit.Data.EntityObject, System.Collections.Generic.IEnumerable<TimeCockpit.Data.Export.ExportParameter>, System.String, System.Action<System.Int32>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data.Export/Excel/XlsxExporter2.cs
    id: ExportToFile
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data.Export/Excel/XlsxExporter2.cs
    startLine: 52
  assemblies:
  - TimeCockpit.Data.Export
  namespace: TimeCockpit.Data.Export.Excel
  summary: "\nExports to file.\n"
  example: []
  syntax:
    content: public static void ExportToFile(string templatePath, string filePath, IEnumerable<EntityObject> entityObjects, IEnumerable<BoundCell> columns, bool exportFilterParams, Form filterForm, EntityObject filterObject, IEnumerable<ExportParameter> advancedFilters, string listName, Action<int> progressCallback, CancellationToken cancelToken)
    parameters:
    - id: templatePath
      type: System.String
      description: The template path.
    - id: filePath
      type: System.String
      description: The file path.
    - id: entityObjects
      type: System.Collections.Generic.IEnumerable{TimeCockpit.Data.EntityObject}
      description: The entity objects.
    - id: columns
      type: System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.View.BoundCell}
      description: The columns.
    - id: exportFilterParams
      type: System.Boolean
      description: filter parameter to export.
    - id: filterForm
      type: TimeCockpit.Data.DataModel.View.Form
      description: filter form.
    - id: filterObject
      type: TimeCockpit.Data.EntityObject
      description: filter object for the filter form.
    - id: advancedFilters
      type: System.Collections.Generic.IEnumerable{TimeCockpit.Data.Export.ExportParameter}
      description: query parameters, may be null.
    - id: listName
      type: System.String
      description: name of the list that is being exported.
    - id: progressCallback
      type: System.Action{System.Int32}
      description: The progress callback.
    - id: cancelToken
      type: System.Threading.CancellationToken
      description: The cancel token.
    content.vb: Public Shared Sub ExportToFile(templatePath As String, filePath As String, entityObjects As IEnumerable(Of EntityObject), columns As IEnumerable(Of BoundCell), exportFilterParams As Boolean, filterForm As Form, filterObject As EntityObject, advancedFilters As IEnumerable(Of ExportParameter), listName As String, progressCallback As Action(Of Integer), cancelToken As CancellationToken)
  overload: TimeCockpit.Data.Export.Excel.XlsxExporter2.ExportToFile*
  nameWithType.vb: XlsxExporter2.ExportToFile(String, String, IEnumerable(Of EntityObject), IEnumerable(Of BoundCell), Boolean, Form, EntityObject, IEnumerable(Of ExportParameter), String, Action(Of Int32), CancellationToken)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TimeCockpit.Data.Export.Excel.XlsxExporter2.ExportToFile(System.String, System.String, System.Collections.Generic.IEnumerable(Of TimeCockpit.Data.EntityObject), System.Collections.Generic.IEnumerable(Of TimeCockpit.Data.DataModel.View.BoundCell), System.Boolean, TimeCockpit.Data.DataModel.View.Form, TimeCockpit.Data.EntityObject, System.Collections.Generic.IEnumerable(Of TimeCockpit.Data.Export.ExportParameter), System.String, System.Action(Of System.Int32), System.Threading.CancellationToken)
  name.vb: ExportToFile(String, String, IEnumerable(Of EntityObject), IEnumerable(Of BoundCell), Boolean, Form, EntityObject, IEnumerable(Of ExportParameter), String, Action(Of Int32), CancellationToken)
- uid: TimeCockpit.Data.Export.Excel.XlsxExporter2.Export(System.Byte[],System.Collections.Generic.IEnumerable{TimeCockpit.Data.EntityObject},System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.View.BoundCell},System.Action{System.Int32},System.Threading.CancellationToken)
  commentId: M:TimeCockpit.Data.Export.Excel.XlsxExporter2.Export(System.Byte[],System.Collections.Generic.IEnumerable{TimeCockpit.Data.EntityObject},System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.View.BoundCell},System.Action{System.Int32},System.Threading.CancellationToken)
  id: Export(System.Byte[],System.Collections.Generic.IEnumerable{TimeCockpit.Data.EntityObject},System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.View.BoundCell},System.Action{System.Int32},System.Threading.CancellationToken)
  parent: TimeCockpit.Data.Export.Excel.XlsxExporter2
  langs:
  - csharp
  - vb
  name: Export(Byte[], IEnumerable<EntityObject>, IEnumerable<BoundCell>, Action<Int32>, CancellationToken)
  nameWithType: XlsxExporter2.Export(Byte[], IEnumerable<EntityObject>, IEnumerable<BoundCell>, Action<Int32>, CancellationToken)
  fullName: TimeCockpit.Data.Export.Excel.XlsxExporter2.Export(System.Byte[], System.Collections.Generic.IEnumerable<TimeCockpit.Data.EntityObject>, System.Collections.Generic.IEnumerable<TimeCockpit.Data.DataModel.View.BoundCell>, System.Action<System.Int32>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data.Export/Excel/XlsxExporter2.cs
    id: Export
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data.Export/Excel/XlsxExporter2.cs
    startLine: 108
  assemblies:
  - TimeCockpit.Data.Export
  namespace: TimeCockpit.Data.Export.Excel
  summary: "\nExports the list of entityobjects to the non-existing file at filePath\n"
  example: []
  syntax:
    content: public static byte[] Export(byte[] templateData, IEnumerable<EntityObject> entityObjects, IEnumerable<BoundCell> columns, Action<int> progressCallback, CancellationToken cancelToken)
    parameters:
    - id: templateData
      type: System.Byte[]
      description: The template data.
    - id: entityObjects
      type: System.Collections.Generic.IEnumerable{TimeCockpit.Data.EntityObject}
      description: list of entityobjects that should be serialized
    - id: columns
      type: System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.View.BoundCell}
      description: if template is null, contains the descriptions of the columns to export.
    - id: progressCallback
      type: System.Action{System.Int32}
      description: callback notifying the amount of entityobjects exported.
    - id: cancelToken
      type: System.Threading.CancellationToken
      description: cancellation token for the operation.
    return:
      type: System.Byte[]
      description: returns the binary data to be written to the desintation file.
    content.vb: Public Shared Function Export(templateData As Byte(), entityObjects As IEnumerable(Of EntityObject), columns As IEnumerable(Of BoundCell), progressCallback As Action(Of Integer), cancelToken As CancellationToken) As Byte()
  overload: TimeCockpit.Data.Export.Excel.XlsxExporter2.Export*
  nameWithType.vb: XlsxExporter2.Export(Byte(), IEnumerable(Of EntityObject), IEnumerable(Of BoundCell), Action(Of Int32), CancellationToken)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TimeCockpit.Data.Export.Excel.XlsxExporter2.Export(System.Byte(), System.Collections.Generic.IEnumerable(Of TimeCockpit.Data.EntityObject), System.Collections.Generic.IEnumerable(Of TimeCockpit.Data.DataModel.View.BoundCell), System.Action(Of System.Int32), System.Threading.CancellationToken)
  name.vb: Export(Byte(), IEnumerable(Of EntityObject), IEnumerable(Of BoundCell), Action(Of Int32), CancellationToken)
- uid: TimeCockpit.Data.Export.Excel.XlsxExporter2.Export(System.Byte[],System.Collections.Generic.IEnumerable{TimeCockpit.Data.EntityObject},System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.View.BoundCell},System.Boolean,TimeCockpit.Data.DataModel.View.Form,TimeCockpit.Data.EntityObject,System.Collections.Generic.IEnumerable{TimeCockpit.Data.Export.ExportParameter},System.String,System.Action{System.Int32},System.Threading.CancellationToken)
  commentId: M:TimeCockpit.Data.Export.Excel.XlsxExporter2.Export(System.Byte[],System.Collections.Generic.IEnumerable{TimeCockpit.Data.EntityObject},System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.View.BoundCell},System.Boolean,TimeCockpit.Data.DataModel.View.Form,TimeCockpit.Data.EntityObject,System.Collections.Generic.IEnumerable{TimeCockpit.Data.Export.ExportParameter},System.String,System.Action{System.Int32},System.Threading.CancellationToken)
  id: Export(System.Byte[],System.Collections.Generic.IEnumerable{TimeCockpit.Data.EntityObject},System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.View.BoundCell},System.Boolean,TimeCockpit.Data.DataModel.View.Form,TimeCockpit.Data.EntityObject,System.Collections.Generic.IEnumerable{TimeCockpit.Data.Export.ExportParameter},System.String,System.Action{System.Int32},System.Threading.CancellationToken)
  parent: TimeCockpit.Data.Export.Excel.XlsxExporter2
  langs:
  - csharp
  - vb
  name: Export(Byte[], IEnumerable<EntityObject>, IEnumerable<BoundCell>, Boolean, Form, EntityObject, IEnumerable<ExportParameter>, String, Action<Int32>, CancellationToken)
  nameWithType: XlsxExporter2.Export(Byte[], IEnumerable<EntityObject>, IEnumerable<BoundCell>, Boolean, Form, EntityObject, IEnumerable<ExportParameter>, String, Action<Int32>, CancellationToken)
  fullName: TimeCockpit.Data.Export.Excel.XlsxExporter2.Export(System.Byte[], System.Collections.Generic.IEnumerable<TimeCockpit.Data.EntityObject>, System.Collections.Generic.IEnumerable<TimeCockpit.Data.DataModel.View.BoundCell>, System.Boolean, TimeCockpit.Data.DataModel.View.Form, TimeCockpit.Data.EntityObject, System.Collections.Generic.IEnumerable<TimeCockpit.Data.Export.ExportParameter>, System.String, System.Action<System.Int32>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data.Export/Excel/XlsxExporter2.cs
    id: Export
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data.Export/Excel/XlsxExporter2.cs
    startLine: 127
  assemblies:
  - TimeCockpit.Data.Export
  namespace: TimeCockpit.Data.Export.Excel
  summary: "\nExports the list of entityobjects to the non-existing file at filePath\n"
  example: []
  syntax:
    content: public static byte[] Export(byte[] templateData, IEnumerable<EntityObject> entityObjects, IEnumerable<BoundCell> columns, bool showFilterParams, Form filterForm, EntityObject filterObject, IEnumerable<ExportParameter> advancedFilters, string listName, Action<int> progressCallback, CancellationToken cancelToken)
    parameters:
    - id: templateData
      type: System.Byte[]
      description: The template data.
    - id: entityObjects
      type: System.Collections.Generic.IEnumerable{TimeCockpit.Data.EntityObject}
      description: list of entityobjects that should be serialized
    - id: columns
      type: System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.View.BoundCell}
      description: if template is null, contains the descriptions of the columns to export.
    - id: showFilterParams
      type: System.Boolean
      description: true if filter params should be exported as well, false if not.
    - id: filterForm
      type: TimeCockpit.Data.DataModel.View.Form
      description: filter form to export, may be null.
    - id: filterObject
      type: TimeCockpit.Data.EntityObject
      description: object containing values for filter form, may be null if filterForm is also null.
    - id: advancedFilters
      type: System.Collections.Generic.IEnumerable{TimeCockpit.Data.Export.ExportParameter}
      description: query parameters, may be null.
    - id: listName
      type: System.String
      description: name of list to export.
    - id: progressCallback
      type: System.Action{System.Int32}
      description: callback notifying the amount of entityobjects exported.
    - id: cancelToken
      type: System.Threading.CancellationToken
      description: cancellation token for the operation.
    return:
      type: System.Byte[]
      description: returns the binary data to be written to the destination file.
    content.vb: Public Shared Function Export(templateData As Byte(), entityObjects As IEnumerable(Of EntityObject), columns As IEnumerable(Of BoundCell), showFilterParams As Boolean, filterForm As Form, filterObject As EntityObject, advancedFilters As IEnumerable(Of ExportParameter), listName As String, progressCallback As Action(Of Integer), cancelToken As CancellationToken) As Byte()
  overload: TimeCockpit.Data.Export.Excel.XlsxExporter2.Export*
  nameWithType.vb: XlsxExporter2.Export(Byte(), IEnumerable(Of EntityObject), IEnumerable(Of BoundCell), Boolean, Form, EntityObject, IEnumerable(Of ExportParameter), String, Action(Of Int32), CancellationToken)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TimeCockpit.Data.Export.Excel.XlsxExporter2.Export(System.Byte(), System.Collections.Generic.IEnumerable(Of TimeCockpit.Data.EntityObject), System.Collections.Generic.IEnumerable(Of TimeCockpit.Data.DataModel.View.BoundCell), System.Boolean, TimeCockpit.Data.DataModel.View.Form, TimeCockpit.Data.EntityObject, System.Collections.Generic.IEnumerable(Of TimeCockpit.Data.Export.ExportParameter), System.String, System.Action(Of System.Int32), System.Threading.CancellationToken)
  name.vb: Export(Byte(), IEnumerable(Of EntityObject), IEnumerable(Of BoundCell), Boolean, Form, EntityObject, IEnumerable(Of ExportParameter), String, Action(Of Int32), CancellationToken)
- uid: TimeCockpit.Data.Export.Excel.XlsxExporter2.FillWorkBook(ClosedXML.Excel.XLWorkbook,System.Collections.Generic.IEnumerable{TimeCockpit.Data.EntityObject},System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.View.BoundCell},System.Action{System.Int32},System.Threading.CancellationToken)
  commentId: M:TimeCockpit.Data.Export.Excel.XlsxExporter2.FillWorkBook(ClosedXML.Excel.XLWorkbook,System.Collections.Generic.IEnumerable{TimeCockpit.Data.EntityObject},System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.View.BoundCell},System.Action{System.Int32},System.Threading.CancellationToken)
  id: FillWorkBook(ClosedXML.Excel.XLWorkbook,System.Collections.Generic.IEnumerable{TimeCockpit.Data.EntityObject},System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.View.BoundCell},System.Action{System.Int32},System.Threading.CancellationToken)
  parent: TimeCockpit.Data.Export.Excel.XlsxExporter2
  langs:
  - csharp
  - vb
  name: FillWorkBook(XLWorkbook, IEnumerable<EntityObject>, IEnumerable<BoundCell>, Action<Int32>, CancellationToken)
  nameWithType: XlsxExporter2.FillWorkBook(XLWorkbook, IEnumerable<EntityObject>, IEnumerable<BoundCell>, Action<Int32>, CancellationToken)
  fullName: TimeCockpit.Data.Export.Excel.XlsxExporter2.FillWorkBook(ClosedXML.Excel.XLWorkbook, System.Collections.Generic.IEnumerable<TimeCockpit.Data.EntityObject>, System.Collections.Generic.IEnumerable<TimeCockpit.Data.DataModel.View.BoundCell>, System.Action<System.Int32>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data.Export/Excel/XlsxExporter2.cs
    id: FillWorkBook
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data.Export/Excel/XlsxExporter2.cs
    startLine: 198
  assemblies:
  - TimeCockpit.Data.Export
  namespace: TimeCockpit.Data.Export.Excel
  summary: "\nFills the work book.\n"
  example: []
  syntax:
    content: public static void FillWorkBook(XLWorkbook wb, IEnumerable<EntityObject> entityObjects, IEnumerable<BoundCell> columns, Action<int> progressCallback, CancellationToken cancelToken)
    parameters:
    - id: wb
      type: ClosedXML.Excel.XLWorkbook
      description: The workbook to write to.
    - id: entityObjects
      type: System.Collections.Generic.IEnumerable{TimeCockpit.Data.EntityObject}
      description: The entity objects.
    - id: columns
      type: System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.View.BoundCell}
      description: The columns.
    - id: progressCallback
      type: System.Action{System.Int32}
      description: The progress callback.
    - id: cancelToken
      type: System.Threading.CancellationToken
      description: The cancel token.
    content.vb: Public Shared Sub FillWorkBook(wb As XLWorkbook, entityObjects As IEnumerable(Of EntityObject), columns As IEnumerable(Of BoundCell), progressCallback As Action(Of Integer), cancelToken As CancellationToken)
  overload: TimeCockpit.Data.Export.Excel.XlsxExporter2.FillWorkBook*
  nameWithType.vb: XlsxExporter2.FillWorkBook(XLWorkbook, IEnumerable(Of EntityObject), IEnumerable(Of BoundCell), Action(Of Int32), CancellationToken)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TimeCockpit.Data.Export.Excel.XlsxExporter2.FillWorkBook(ClosedXML.Excel.XLWorkbook, System.Collections.Generic.IEnumerable(Of TimeCockpit.Data.EntityObject), System.Collections.Generic.IEnumerable(Of TimeCockpit.Data.DataModel.View.BoundCell), System.Action(Of System.Int32), System.Threading.CancellationToken)
  name.vb: FillWorkBook(XLWorkbook, IEnumerable(Of EntityObject), IEnumerable(Of BoundCell), Action(Of Int32), CancellationToken)
- uid: TimeCockpit.Data.Export.Excel.XlsxExporter2.BuildDefaultTemplate(ClosedXML.Excel.XLWorkbook,System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.View.BoundCell})
  commentId: M:TimeCockpit.Data.Export.Excel.XlsxExporter2.BuildDefaultTemplate(ClosedXML.Excel.XLWorkbook,System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.View.BoundCell})
  id: BuildDefaultTemplate(ClosedXML.Excel.XLWorkbook,System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.View.BoundCell})
  parent: TimeCockpit.Data.Export.Excel.XlsxExporter2
  langs:
  - csharp
  - vb
  name: BuildDefaultTemplate(XLWorkbook, IEnumerable<BoundCell>)
  nameWithType: XlsxExporter2.BuildDefaultTemplate(XLWorkbook, IEnumerable<BoundCell>)
  fullName: TimeCockpit.Data.Export.Excel.XlsxExporter2.BuildDefaultTemplate(ClosedXML.Excel.XLWorkbook, System.Collections.Generic.IEnumerable<TimeCockpit.Data.DataModel.View.BoundCell>)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data.Export/Excel/XlsxExporter2.cs
    id: BuildDefaultTemplate
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data.Export/Excel/XlsxExporter2.cs
    startLine: 321
  assemblies:
  - TimeCockpit.Data.Export
  namespace: TimeCockpit.Data.Export.Excel
  summary: "\nBuilds the default template.\n"
  example: []
  syntax:
    content: public static void BuildDefaultTemplate(XLWorkbook wb, IEnumerable<BoundCell> columns)
    parameters:
    - id: wb
      type: ClosedXML.Excel.XLWorkbook
      description: The workbook to write to.
    - id: columns
      type: System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.View.BoundCell}
      description: The columns.
    content.vb: Public Shared Sub BuildDefaultTemplate(wb As XLWorkbook, columns As IEnumerable(Of BoundCell))
  overload: TimeCockpit.Data.Export.Excel.XlsxExporter2.BuildDefaultTemplate*
  nameWithType.vb: XlsxExporter2.BuildDefaultTemplate(XLWorkbook, IEnumerable(Of BoundCell))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TimeCockpit.Data.Export.Excel.XlsxExporter2.BuildDefaultTemplate(ClosedXML.Excel.XLWorkbook, System.Collections.Generic.IEnumerable(Of TimeCockpit.Data.DataModel.View.BoundCell))
  name.vb: BuildDefaultTemplate(XLWorkbook, IEnumerable(Of BoundCell))
- uid: TimeCockpit.Data.Export.Excel.XlsxExporter2.SanitizeWorksheetName(System.String)
  commentId: M:TimeCockpit.Data.Export.Excel.XlsxExporter2.SanitizeWorksheetName(System.String)
  id: SanitizeWorksheetName(System.String)
  parent: TimeCockpit.Data.Export.Excel.XlsxExporter2
  langs:
  - csharp
  - vb
  name: SanitizeWorksheetName(String)
  nameWithType: XlsxExporter2.SanitizeWorksheetName(String)
  fullName: TimeCockpit.Data.Export.Excel.XlsxExporter2.SanitizeWorksheetName(System.String)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data.Export/Excel/XlsxExporter2.cs
    id: SanitizeWorksheetName
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data.Export/Excel/XlsxExporter2.cs
    startLine: 331
  assemblies:
  - TimeCockpit.Data.Export
  namespace: TimeCockpit.Data.Export.Excel
  summary: "\nSanitizes the worksheet name to be Excel compatible (used for all import engines).\n"
  example: []
  syntax:
    content: public static string SanitizeWorksheetName(string sourceName)
    parameters:
    - id: sourceName
      type: System.String
      description: The source name to sanitize.
    return:
      type: System.String
      description: Returns a new string, valid for use with excel.
    content.vb: Public Shared Function SanitizeWorksheetName(sourceName As String) As String
  overload: TimeCockpit.Data.Export.Excel.XlsxExporter2.SanitizeWorksheetName*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: TimeCockpit.Data.Export.Excel.XlsxExporter2.BuildDefaultTemplate(ClosedXML.Excel.XLWorkbook,System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.View.BoundCell},System.Boolean,TimeCockpit.Data.DataModel.View.Form,TimeCockpit.Data.EntityObject,System.Collections.Generic.IEnumerable{TimeCockpit.Data.Export.ExportParameter},System.String)
  commentId: M:TimeCockpit.Data.Export.Excel.XlsxExporter2.BuildDefaultTemplate(ClosedXML.Excel.XLWorkbook,System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.View.BoundCell},System.Boolean,TimeCockpit.Data.DataModel.View.Form,TimeCockpit.Data.EntityObject,System.Collections.Generic.IEnumerable{TimeCockpit.Data.Export.ExportParameter},System.String)
  id: BuildDefaultTemplate(ClosedXML.Excel.XLWorkbook,System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.View.BoundCell},System.Boolean,TimeCockpit.Data.DataModel.View.Form,TimeCockpit.Data.EntityObject,System.Collections.Generic.IEnumerable{TimeCockpit.Data.Export.ExportParameter},System.String)
  parent: TimeCockpit.Data.Export.Excel.XlsxExporter2
  langs:
  - csharp
  - vb
  name: BuildDefaultTemplate(XLWorkbook, IEnumerable<BoundCell>, Boolean, Form, EntityObject, IEnumerable<ExportParameter>, String)
  nameWithType: XlsxExporter2.BuildDefaultTemplate(XLWorkbook, IEnumerable<BoundCell>, Boolean, Form, EntityObject, IEnumerable<ExportParameter>, String)
  fullName: TimeCockpit.Data.Export.Excel.XlsxExporter2.BuildDefaultTemplate(ClosedXML.Excel.XLWorkbook, System.Collections.Generic.IEnumerable<TimeCockpit.Data.DataModel.View.BoundCell>, System.Boolean, TimeCockpit.Data.DataModel.View.Form, TimeCockpit.Data.EntityObject, System.Collections.Generic.IEnumerable<TimeCockpit.Data.Export.ExportParameter>, System.String)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data.Export/Excel/XlsxExporter2.cs
    id: BuildDefaultTemplate
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data.Export/Excel/XlsxExporter2.cs
    startLine: 357
  assemblies:
  - TimeCockpit.Data.Export
  namespace: TimeCockpit.Data.Export.Excel
  summary: "\nBuilds the default template.\n"
  example: []
  syntax:
    content: public static void BuildDefaultTemplate(XLWorkbook wb, IEnumerable<BoundCell> columns, bool showFilterParams, Form filterForm, EntityObject filterObject, IEnumerable<ExportParameter> advancedFilters, string listName)
    parameters:
    - id: wb
      type: ClosedXML.Excel.XLWorkbook
      description: The workbook to write to.
    - id: columns
      type: System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.View.BoundCell}
      description: The columns.
    - id: showFilterParams
      type: System.Boolean
      description: true if the filter options should be exported as well, false if not.
    - id: filterForm
      type: TimeCockpit.Data.DataModel.View.Form
      description: filter form to export, may be null.
    - id: filterObject
      type: TimeCockpit.Data.EntityObject
      description: filter object for filter form to export, may be null if filterform is null.
    - id: advancedFilters
      type: System.Collections.Generic.IEnumerable{TimeCockpit.Data.Export.ExportParameter}
      description: query parameters, may be null.
    - id: listName
      type: System.String
      description: name of the list to export.
    content.vb: Public Shared Sub BuildDefaultTemplate(wb As XLWorkbook, columns As IEnumerable(Of BoundCell), showFilterParams As Boolean, filterForm As Form, filterObject As EntityObject, advancedFilters As IEnumerable(Of ExportParameter), listName As String)
  overload: TimeCockpit.Data.Export.Excel.XlsxExporter2.BuildDefaultTemplate*
  nameWithType.vb: XlsxExporter2.BuildDefaultTemplate(XLWorkbook, IEnumerable(Of BoundCell), Boolean, Form, EntityObject, IEnumerable(Of ExportParameter), String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TimeCockpit.Data.Export.Excel.XlsxExporter2.BuildDefaultTemplate(ClosedXML.Excel.XLWorkbook, System.Collections.Generic.IEnumerable(Of TimeCockpit.Data.DataModel.View.BoundCell), System.Boolean, TimeCockpit.Data.DataModel.View.Form, TimeCockpit.Data.EntityObject, System.Collections.Generic.IEnumerable(Of TimeCockpit.Data.Export.ExportParameter), System.String)
  name.vb: BuildDefaultTemplate(XLWorkbook, IEnumerable(Of BoundCell), Boolean, Form, EntityObject, IEnumerable(Of ExportParameter), String)
- uid: TimeCockpit.Data.Export.Excel.XlsxExporter2.SetCellStyle(TimeCockpit.Data.DataModel.View.BoundCell,ClosedXML.Excel.IXLCell)
  commentId: M:TimeCockpit.Data.Export.Excel.XlsxExporter2.SetCellStyle(TimeCockpit.Data.DataModel.View.BoundCell,ClosedXML.Excel.IXLCell)
  id: SetCellStyle(TimeCockpit.Data.DataModel.View.BoundCell,ClosedXML.Excel.IXLCell)
  parent: TimeCockpit.Data.Export.Excel.XlsxExporter2
  langs:
  - csharp
  - vb
  name: SetCellStyle(BoundCell, IXLCell)
  nameWithType: XlsxExporter2.SetCellStyle(BoundCell, IXLCell)
  fullName: TimeCockpit.Data.Export.Excel.XlsxExporter2.SetCellStyle(TimeCockpit.Data.DataModel.View.BoundCell, ClosedXML.Excel.IXLCell)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data.Export/Excel/XlsxExporter2.cs
    id: SetCellStyle
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data.Export/Excel/XlsxExporter2.cs
    startLine: 409
  assemblies:
  - TimeCockpit.Data.Export
  namespace: TimeCockpit.Data.Export.Excel
  summary: "\nSets the style of the cell.\n"
  example: []
  syntax:
    content: public static void SetCellStyle(BoundCell boundCell, IXLCell cell)
    parameters:
    - id: boundCell
      type: TimeCockpit.Data.DataModel.View.BoundCell
      description: cell to derive style from.
    - id: cell
      type: ClosedXML.Excel.IXLCell
      description: cell to set style on.
    content.vb: Public Shared Sub SetCellStyle(boundCell As BoundCell, cell As IXLCell)
  overload: TimeCockpit.Data.Export.Excel.XlsxExporter2.SetCellStyle*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: TimeCockpit.Data.Export.Excel.XlsxExporter2.BuildFilterForm(ClosedXML.Excel.IXLWorksheet,TimeCockpit.Data.DataModel.View.Form,TimeCockpit.Data.EntityObject,System.Collections.Generic.IEnumerable{TimeCockpit.Data.Export.ExportParameter})
  commentId: M:TimeCockpit.Data.Export.Excel.XlsxExporter2.BuildFilterForm(ClosedXML.Excel.IXLWorksheet,TimeCockpit.Data.DataModel.View.Form,TimeCockpit.Data.EntityObject,System.Collections.Generic.IEnumerable{TimeCockpit.Data.Export.ExportParameter})
  id: BuildFilterForm(ClosedXML.Excel.IXLWorksheet,TimeCockpit.Data.DataModel.View.Form,TimeCockpit.Data.EntityObject,System.Collections.Generic.IEnumerable{TimeCockpit.Data.Export.ExportParameter})
  parent: TimeCockpit.Data.Export.Excel.XlsxExporter2
  langs:
  - csharp
  - vb
  name: BuildFilterForm(IXLWorksheet, Form, EntityObject, IEnumerable<ExportParameter>)
  nameWithType: XlsxExporter2.BuildFilterForm(IXLWorksheet, Form, EntityObject, IEnumerable<ExportParameter>)
  fullName: TimeCockpit.Data.Export.Excel.XlsxExporter2.BuildFilterForm(ClosedXML.Excel.IXLWorksheet, TimeCockpit.Data.DataModel.View.Form, TimeCockpit.Data.EntityObject, System.Collections.Generic.IEnumerable<TimeCockpit.Data.Export.ExportParameter>)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data.Export/Excel/XlsxExporter2.cs
    id: BuildFilterForm
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data.Export/Excel/XlsxExporter2.cs
    startLine: 495
  assemblies:
  - TimeCockpit.Data.Export
  namespace: TimeCockpit.Data.Export.Excel
  summary: "\nbuilds the filter form.\n"
  example: []
  syntax:
    content: public static int BuildFilterForm(IXLWorksheet ws, Form filterForm, EntityObject filterObject, IEnumerable<ExportParameter> advancedFilters)
    parameters:
    - id: ws
      type: ClosedXML.Excel.IXLWorksheet
      description: Worksheet to write to.
    - id: filterForm
      type: TimeCockpit.Data.DataModel.View.Form
      description: filterForm to write out.
    - id: filterObject
      type: TimeCockpit.Data.EntityObject
      description: values for the filter form.
    - id: advancedFilters
      type: System.Collections.Generic.IEnumerable{TimeCockpit.Data.Export.ExportParameter}
      description: query parameters to use, may be null.
    return:
      type: System.Int32
      description: returns the column offset, after which the filter may start.
    content.vb: Public Shared Function BuildFilterForm(ws As IXLWorksheet, filterForm As Form, filterObject As EntityObject, advancedFilters As IEnumerable(Of ExportParameter)) As Integer
  overload: TimeCockpit.Data.Export.Excel.XlsxExporter2.BuildFilterForm*
  nameWithType.vb: XlsxExporter2.BuildFilterForm(IXLWorksheet, Form, EntityObject, IEnumerable(Of ExportParameter))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TimeCockpit.Data.Export.Excel.XlsxExporter2.BuildFilterForm(ClosedXML.Excel.IXLWorksheet, TimeCockpit.Data.DataModel.View.Form, TimeCockpit.Data.EntityObject, System.Collections.Generic.IEnumerable(Of TimeCockpit.Data.Export.ExportParameter))
  name.vb: BuildFilterForm(IXLWorksheet, Form, EntityObject, IEnumerable(Of ExportParameter))
- uid: TimeCockpit.Data.Export.Excel.XlsxExporter2.CheckTemplate(System.String,TimeCockpit.Data.DataModel.ModelEntityBase)
  commentId: M:TimeCockpit.Data.Export.Excel.XlsxExporter2.CheckTemplate(System.String,TimeCockpit.Data.DataModel.ModelEntityBase)
  id: CheckTemplate(System.String,TimeCockpit.Data.DataModel.ModelEntityBase)
  parent: TimeCockpit.Data.Export.Excel.XlsxExporter2
  langs:
  - csharp
  - vb
  name: CheckTemplate(String, ModelEntityBase)
  nameWithType: XlsxExporter2.CheckTemplate(String, ModelEntityBase)
  fullName: TimeCockpit.Data.Export.Excel.XlsxExporter2.CheckTemplate(System.String, TimeCockpit.Data.DataModel.ModelEntityBase)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data.Export/Excel/XlsxExporter2.cs
    id: CheckTemplate
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data.Export/Excel/XlsxExporter2.cs
    startLine: 582
  assemblies:
  - TimeCockpit.Data.Export
  namespace: TimeCockpit.Data.Export.Excel
  summary: "\nChecks whether the expressions in a template file will work agains the given modelEntity.\n"
  example: []
  syntax:
    content: public static bool CheckTemplate(string templatePath, ModelEntityBase modelEntity)
    parameters:
    - id: templatePath
      type: System.String
      description: path to the template
    - id: modelEntity
      type: TimeCockpit.Data.DataModel.ModelEntityBase
      description: model entity to check against.
    return:
      type: System.Boolean
      description: returns true if the template is valid for the passed model.
    content.vb: Public Shared Function CheckTemplate(templatePath As String, modelEntity As ModelEntityBase) As Boolean
  overload: TimeCockpit.Data.Export.Excel.XlsxExporter2.CheckTemplate*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: TimeCockpit.Data.Export.Excel
  commentId: N:TimeCockpit.Data.Export.Excel
  isExternal: false
  name: TimeCockpit.Data.Export.Excel
  nameWithType: TimeCockpit.Data.Export.Excel
  fullName: TimeCockpit.Data.Export.Excel
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: TimeCockpit.Data.Export.Excel.XlsxExporter2.ExportToFile*
  commentId: Overload:TimeCockpit.Data.Export.Excel.XlsxExporter2.ExportToFile
  isExternal: false
  name: ExportToFile
  nameWithType: XlsxExporter2.ExportToFile
  fullName: TimeCockpit.Data.Export.Excel.XlsxExporter2.ExportToFile
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IEnumerable{TimeCockpit.Data.EntityObject}
  commentId: T:System.Collections.Generic.IEnumerable{TimeCockpit.Data.EntityObject}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<EntityObject>
  nameWithType: IEnumerable<EntityObject>
  fullName: System.Collections.Generic.IEnumerable<TimeCockpit.Data.EntityObject>
  nameWithType.vb: IEnumerable(Of EntityObject)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TimeCockpit.Data.EntityObject)
  name.vb: IEnumerable(Of EntityObject)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TimeCockpit.Data.EntityObject
    name: EntityObject
    nameWithType: EntityObject
    fullName: TimeCockpit.Data.EntityObject
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TimeCockpit.Data.EntityObject
    name: EntityObject
    nameWithType: EntityObject
    fullName: TimeCockpit.Data.EntityObject
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.View.BoundCell}
  commentId: T:System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.View.BoundCell}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<BoundCell>
  nameWithType: IEnumerable<BoundCell>
  fullName: System.Collections.Generic.IEnumerable<TimeCockpit.Data.DataModel.View.BoundCell>
  nameWithType.vb: IEnumerable(Of BoundCell)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TimeCockpit.Data.DataModel.View.BoundCell)
  name.vb: IEnumerable(Of BoundCell)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TimeCockpit.Data.DataModel.View.BoundCell
    name: BoundCell
    nameWithType: BoundCell
    fullName: TimeCockpit.Data.DataModel.View.BoundCell
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TimeCockpit.Data.DataModel.View.BoundCell
    name: BoundCell
    nameWithType: BoundCell
    fullName: TimeCockpit.Data.DataModel.View.BoundCell
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action{System.Int32}
  commentId: T:System.Action{System.Int32}
  parent: System
  definition: System.Action`1
  name: Action<Int32>
  nameWithType: Action<Int32>
  fullName: System.Action<System.Int32>
  nameWithType.vb: Action(Of Int32)
  fullName.vb: System.Action(Of System.Int32)
  name.vb: Action(Of Int32)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: TimeCockpit.Data.DataModel.View.Form
  commentId: T:TimeCockpit.Data.DataModel.View.Form
  parent: TimeCockpit.Data.DataModel.View
  isExternal: false
  name: Form
  nameWithType: Form
  fullName: TimeCockpit.Data.DataModel.View.Form
- uid: TimeCockpit.Data.EntityObject
  commentId: T:TimeCockpit.Data.EntityObject
  parent: TimeCockpit.Data
  isExternal: false
  name: EntityObject
  nameWithType: EntityObject
  fullName: TimeCockpit.Data.EntityObject
- uid: System.Collections.Generic.IEnumerable{TimeCockpit.Data.Export.ExportParameter}
  commentId: T:System.Collections.Generic.IEnumerable{TimeCockpit.Data.Export.ExportParameter}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<ExportParameter>
  nameWithType: IEnumerable<ExportParameter>
  fullName: System.Collections.Generic.IEnumerable<TimeCockpit.Data.Export.ExportParameter>
  nameWithType.vb: IEnumerable(Of ExportParameter)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TimeCockpit.Data.Export.ExportParameter)
  name.vb: IEnumerable(Of ExportParameter)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TimeCockpit.Data.Export.ExportParameter
    name: ExportParameter
    nameWithType: ExportParameter
    fullName: TimeCockpit.Data.Export.ExportParameter
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TimeCockpit.Data.Export.ExportParameter
    name: ExportParameter
    nameWithType: ExportParameter
    fullName: TimeCockpit.Data.Export.ExportParameter
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.DataModel.View
  commentId: N:TimeCockpit.Data.DataModel.View
  isExternal: false
  name: TimeCockpit.Data.DataModel.View
  nameWithType: TimeCockpit.Data.DataModel.View
  fullName: TimeCockpit.Data.DataModel.View
- uid: TimeCockpit.Data
  commentId: N:TimeCockpit.Data
  isExternal: false
  name: TimeCockpit.Data
  nameWithType: TimeCockpit.Data
  fullName: TimeCockpit.Data
- uid: TimeCockpit.Data.Export.Excel.XlsxExporter2.Export*
  commentId: Overload:TimeCockpit.Data.Export.Excel.XlsxExporter2.Export
  isExternal: false
  name: Export
  nameWithType: XlsxExporter2.Export
  fullName: TimeCockpit.Data.Export.Excel.XlsxExporter2.Export
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: TimeCockpit.Data.Export.Excel.XlsxExporter2.FillWorkBook*
  commentId: Overload:TimeCockpit.Data.Export.Excel.XlsxExporter2.FillWorkBook
  isExternal: false
  name: FillWorkBook
  nameWithType: XlsxExporter2.FillWorkBook
  fullName: TimeCockpit.Data.Export.Excel.XlsxExporter2.FillWorkBook
- uid: ClosedXML.Excel.XLWorkbook
  commentId: T:ClosedXML.Excel.XLWorkbook
  parent: ClosedXML.Excel
  isExternal: true
  name: XLWorkbook
  nameWithType: XLWorkbook
  fullName: ClosedXML.Excel.XLWorkbook
- uid: ClosedXML.Excel
  commentId: N:ClosedXML.Excel
  isExternal: false
  name: ClosedXML.Excel
  nameWithType: ClosedXML.Excel
  fullName: ClosedXML.Excel
- uid: TimeCockpit.Data.Export.Excel.XlsxExporter2.BuildDefaultTemplate*
  commentId: Overload:TimeCockpit.Data.Export.Excel.XlsxExporter2.BuildDefaultTemplate
  isExternal: false
  name: BuildDefaultTemplate
  nameWithType: XlsxExporter2.BuildDefaultTemplate
  fullName: TimeCockpit.Data.Export.Excel.XlsxExporter2.BuildDefaultTemplate
- uid: TimeCockpit.Data.Export.Excel.XlsxExporter2.SanitizeWorksheetName*
  commentId: Overload:TimeCockpit.Data.Export.Excel.XlsxExporter2.SanitizeWorksheetName
  isExternal: false
  name: SanitizeWorksheetName
  nameWithType: XlsxExporter2.SanitizeWorksheetName
  fullName: TimeCockpit.Data.Export.Excel.XlsxExporter2.SanitizeWorksheetName
- uid: TimeCockpit.Data.Export.Excel.XlsxExporter2.SetCellStyle*
  commentId: Overload:TimeCockpit.Data.Export.Excel.XlsxExporter2.SetCellStyle
  isExternal: false
  name: SetCellStyle
  nameWithType: XlsxExporter2.SetCellStyle
  fullName: TimeCockpit.Data.Export.Excel.XlsxExporter2.SetCellStyle
- uid: TimeCockpit.Data.DataModel.View.BoundCell
  commentId: T:TimeCockpit.Data.DataModel.View.BoundCell
  parent: TimeCockpit.Data.DataModel.View
  isExternal: false
  name: BoundCell
  nameWithType: BoundCell
  fullName: TimeCockpit.Data.DataModel.View.BoundCell
- uid: ClosedXML.Excel.IXLCell
  commentId: T:ClosedXML.Excel.IXLCell
  parent: ClosedXML.Excel
  isExternal: true
  name: IXLCell
  nameWithType: IXLCell
  fullName: ClosedXML.Excel.IXLCell
- uid: TimeCockpit.Data.Export.Excel.XlsxExporter2.BuildFilterForm*
  commentId: Overload:TimeCockpit.Data.Export.Excel.XlsxExporter2.BuildFilterForm
  isExternal: false
  name: BuildFilterForm
  nameWithType: XlsxExporter2.BuildFilterForm
  fullName: TimeCockpit.Data.Export.Excel.XlsxExporter2.BuildFilterForm
- uid: ClosedXML.Excel.IXLWorksheet
  commentId: T:ClosedXML.Excel.IXLWorksheet
  parent: ClosedXML.Excel
  isExternal: true
  name: IXLWorksheet
  nameWithType: IXLWorksheet
  fullName: ClosedXML.Excel.IXLWorksheet
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: TimeCockpit.Data.Export.Excel.XlsxExporter2.CheckTemplate*
  commentId: Overload:TimeCockpit.Data.Export.Excel.XlsxExporter2.CheckTemplate
  isExternal: false
  name: CheckTemplate
  nameWithType: XlsxExporter2.CheckTemplate
  fullName: TimeCockpit.Data.Export.Excel.XlsxExporter2.CheckTemplate
- uid: TimeCockpit.Data.DataModel.ModelEntityBase
  commentId: T:TimeCockpit.Data.DataModel.ModelEntityBase
  parent: TimeCockpit.Data.DataModel
  isExternal: false
  name: ModelEntityBase
  nameWithType: ModelEntityBase
  fullName: TimeCockpit.Data.DataModel.ModelEntityBase
- uid: TimeCockpit.Data.DataModel
  commentId: N:TimeCockpit.Data.DataModel
  isExternal: false
  name: TimeCockpit.Data.DataModel
  nameWithType: TimeCockpit.Data.DataModel
  fullName: TimeCockpit.Data.DataModel
