### YamlMime:ManagedReference
items:
- uid: TimeCockpit.Data.Export.Excel.XlsxExporter2
  commentId: T:TimeCockpit.Data.Export.Excel.XlsxExporter2
  id: XlsxExporter2
  parent: TimeCockpit.Data.Export.Excel
  children:
  - TimeCockpit.Data.Export.Excel.XlsxExporter2.#ctor
  - TimeCockpit.Data.Export.Excel.XlsxExporter2.BuildDefaultTemplate(ClosedXML.Excel.XLWorkbook,System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.View.BoundCell})
  - TimeCockpit.Data.Export.Excel.XlsxExporter2.BuildDefaultTemplate(ClosedXML.Excel.XLWorkbook,System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.View.BoundCell},System.Boolean,TimeCockpit.Data.DataModel.View.Form,TimeCockpit.Data.EntityObject,System.Collections.Generic.IEnumerable{TimeCockpit.Data.Export.ExportParameter},System.String)
  - TimeCockpit.Data.Export.Excel.XlsxExporter2.BuildFilterForm(ClosedXML.Excel.IXLWorksheet,TimeCockpit.Data.DataModel.View.Form,TimeCockpit.Data.EntityObject,System.Collections.Generic.IEnumerable{TimeCockpit.Data.Export.ExportParameter})
  - TimeCockpit.Data.Export.Excel.XlsxExporter2.CheckTemplate(System.String,TimeCockpit.Data.DataModel.ModelEntityBase)
  - TimeCockpit.Data.Export.Excel.XlsxExporter2.Export(System.Byte[],System.Collections.Generic.IEnumerable{TimeCockpit.Data.EntityObject},System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.View.BoundCell},System.Action{System.Int32},System.Threading.CancellationToken)
  - TimeCockpit.Data.Export.Excel.XlsxExporter2.Export(System.Byte[],System.Collections.Generic.IEnumerable{TimeCockpit.Data.EntityObject},System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.View.BoundCell},System.Boolean,TimeCockpit.Data.DataModel.View.Form,TimeCockpit.Data.EntityObject,System.Collections.Generic.IEnumerable{TimeCockpit.Data.Export.ExportParameter},System.String,System.Action{System.Int32},System.Threading.CancellationToken)
  - TimeCockpit.Data.Export.Excel.XlsxExporter2.ExportToFile(System.String,System.String,System.Collections.Generic.IEnumerable{TimeCockpit.Data.EntityObject},System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.View.BoundCell},System.Action{System.Int32},System.Threading.CancellationToken)
  - TimeCockpit.Data.Export.Excel.XlsxExporter2.ExportToFile(System.String,System.String,System.Collections.Generic.IEnumerable{TimeCockpit.Data.EntityObject},System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.View.BoundCell},System.Boolean,TimeCockpit.Data.DataModel.View.Form,TimeCockpit.Data.EntityObject,System.Collections.Generic.IEnumerable{TimeCockpit.Data.Export.ExportParameter},System.String,System.Action{System.Int32},System.Threading.CancellationToken)
  - TimeCockpit.Data.Export.Excel.XlsxExporter2.FillWorkBook(ClosedXML.Excel.XLWorkbook,System.Collections.Generic.IEnumerable{TimeCockpit.Data.EntityObject},System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.View.BoundCell},System.Action{System.Int32},System.Threading.CancellationToken)
  - TimeCockpit.Data.Export.Excel.XlsxExporter2.SanitizeWorksheetName(System.String)
  - TimeCockpit.Data.Export.Excel.XlsxExporter2.SetCellStyle(TimeCockpit.Data.DataModel.View.BoundCell,ClosedXML.Excel.IXLCell)
  langs:
  - csharp
  - vb
  name: XlsxExporter2
  nameWithType: XlsxExporter2
  fullName: TimeCockpit.Data.Export.Excel.XlsxExporter2
  type: Class
  source:
    path: TimeCockpit.Data.Export
    isExternal: true
  assemblies:
  - TimeCockpit.Data.Export
  namespace: TimeCockpit.Data.Export.Excel
  syntax:
    content: public class XlsxExporter2
    content.vb: Public Class XlsxExporter2
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TimeCockpit.Data.Export.Excel.XlsxExporter2.ExportToFile(System.String,System.String,System.Collections.Generic.IEnumerable{TimeCockpit.Data.EntityObject},System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.View.BoundCell},System.Action{System.Int32},System.Threading.CancellationToken)
  commentId: M:TimeCockpit.Data.Export.Excel.XlsxExporter2.ExportToFile(System.String,System.String,System.Collections.Generic.IEnumerable{TimeCockpit.Data.EntityObject},System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.View.BoundCell},System.Action{System.Int32},System.Threading.CancellationToken)
  id: ExportToFile(System.String,System.String,System.Collections.Generic.IEnumerable{TimeCockpit.Data.EntityObject},System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.View.BoundCell},System.Action{System.Int32},System.Threading.CancellationToken)
  parent: TimeCockpit.Data.Export.Excel.XlsxExporter2
  langs:
  - csharp
  - vb
  name: ExportToFile(String, String, IEnumerable<EntityObject>, IEnumerable<BoundCell>, Action<Int32>, CancellationToken)
  nameWithType: XlsxExporter2.ExportToFile(String, String, IEnumerable<EntityObject>, IEnumerable<BoundCell>, Action<Int32>, CancellationToken)
  fullName: TimeCockpit.Data.Export.Excel.XlsxExporter2.ExportToFile(System.String, System.String, System.Collections.Generic.IEnumerable<TimeCockpit.Data.EntityObject>, System.Collections.Generic.IEnumerable<TimeCockpit.Data.DataModel.View.BoundCell>, System.Action<System.Int32>, System.Threading.CancellationToken)
  type: Method
  source:
    path: TimeCockpit.Data.Export
    isExternal: true
  assemblies:
  - TimeCockpit.Data.Export
  namespace: TimeCockpit.Data.Export.Excel
  syntax:
    content: public static void ExportToFile(string templatePath, string filePath, IEnumerable<EntityObject> entityObjects, IEnumerable<BoundCell> columns, Action<int> progressCallback, CancellationToken cancelToken)
    parameters:
    - id: templatePath
      type: System.String
    - id: filePath
      type: System.String
    - id: entityObjects
      type: System.Collections.Generic.IEnumerable{TimeCockpit.Data.EntityObject}
    - id: columns
      type: System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.View.BoundCell}
    - id: progressCallback
      type: System.Action{System.Int32}
    - id: cancelToken
      type: System.Threading.CancellationToken
    content.vb: Public Shared Sub ExportToFile(templatePath As String, filePath As String, entityObjects As IEnumerable(Of EntityObject), columns As IEnumerable(Of BoundCell), progressCallback As Action(Of Integer), cancelToken As CancellationToken)
  overload: TimeCockpit.Data.Export.Excel.XlsxExporter2.ExportToFile*
  nameWithType.vb: XlsxExporter2.ExportToFile(String, String, IEnumerable(Of EntityObject), IEnumerable(Of BoundCell), Action(Of Int32), CancellationToken)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TimeCockpit.Data.Export.Excel.XlsxExporter2.ExportToFile(System.String, System.String, System.Collections.Generic.IEnumerable(Of TimeCockpit.Data.EntityObject), System.Collections.Generic.IEnumerable(Of TimeCockpit.Data.DataModel.View.BoundCell), System.Action(Of System.Int32), System.Threading.CancellationToken)
  name.vb: ExportToFile(String, String, IEnumerable(Of EntityObject), IEnumerable(Of BoundCell), Action(Of Int32), CancellationToken)
- uid: TimeCockpit.Data.Export.Excel.XlsxExporter2.ExportToFile(System.String,System.String,System.Collections.Generic.IEnumerable{TimeCockpit.Data.EntityObject},System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.View.BoundCell},System.Boolean,TimeCockpit.Data.DataModel.View.Form,TimeCockpit.Data.EntityObject,System.Collections.Generic.IEnumerable{TimeCockpit.Data.Export.ExportParameter},System.String,System.Action{System.Int32},System.Threading.CancellationToken)
  commentId: M:TimeCockpit.Data.Export.Excel.XlsxExporter2.ExportToFile(System.String,System.String,System.Collections.Generic.IEnumerable{TimeCockpit.Data.EntityObject},System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.View.BoundCell},System.Boolean,TimeCockpit.Data.DataModel.View.Form,TimeCockpit.Data.EntityObject,System.Collections.Generic.IEnumerable{TimeCockpit.Data.Export.ExportParameter},System.String,System.Action{System.Int32},System.Threading.CancellationToken)
  id: ExportToFile(System.String,System.String,System.Collections.Generic.IEnumerable{TimeCockpit.Data.EntityObject},System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.View.BoundCell},System.Boolean,TimeCockpit.Data.DataModel.View.Form,TimeCockpit.Data.EntityObject,System.Collections.Generic.IEnumerable{TimeCockpit.Data.Export.ExportParameter},System.String,System.Action{System.Int32},System.Threading.CancellationToken)
  parent: TimeCockpit.Data.Export.Excel.XlsxExporter2
  langs:
  - csharp
  - vb
  name: ExportToFile(String, String, IEnumerable<EntityObject>, IEnumerable<BoundCell>, Boolean, Form, EntityObject, IEnumerable<ExportParameter>, String, Action<Int32>, CancellationToken)
  nameWithType: XlsxExporter2.ExportToFile(String, String, IEnumerable<EntityObject>, IEnumerable<BoundCell>, Boolean, Form, EntityObject, IEnumerable<ExportParameter>, String, Action<Int32>, CancellationToken)
  fullName: TimeCockpit.Data.Export.Excel.XlsxExporter2.ExportToFile(System.String, System.String, System.Collections.Generic.IEnumerable<TimeCockpit.Data.EntityObject>, System.Collections.Generic.IEnumerable<TimeCockpit.Data.DataModel.View.BoundCell>, System.Boolean, TimeCockpit.Data.DataModel.View.Form, TimeCockpit.Data.EntityObject, System.Collections.Generic.IEnumerable<TimeCockpit.Data.Export.ExportParameter>, System.String, System.Action<System.Int32>, System.Threading.CancellationToken)
  type: Method
  source:
    path: TimeCockpit.Data.Export
    isExternal: true
  assemblies:
  - TimeCockpit.Data.Export
  namespace: TimeCockpit.Data.Export.Excel
  syntax:
    content: public static void ExportToFile(string templatePath, string filePath, IEnumerable<EntityObject> entityObjects, IEnumerable<BoundCell> columns, bool exportFilterParams, Form filterForm, EntityObject filterObject, IEnumerable<ExportParameter> advancedFilters, string listName, Action<int> progressCallback, CancellationToken cancelToken)
    parameters:
    - id: templatePath
      type: System.String
    - id: filePath
      type: System.String
    - id: entityObjects
      type: System.Collections.Generic.IEnumerable{TimeCockpit.Data.EntityObject}
    - id: columns
      type: System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.View.BoundCell}
    - id: exportFilterParams
      type: System.Boolean
    - id: filterForm
      type: TimeCockpit.Data.DataModel.View.Form
    - id: filterObject
      type: TimeCockpit.Data.EntityObject
    - id: advancedFilters
      type: System.Collections.Generic.IEnumerable{TimeCockpit.Data.Export.ExportParameter}
    - id: listName
      type: System.String
    - id: progressCallback
      type: System.Action{System.Int32}
    - id: cancelToken
      type: System.Threading.CancellationToken
    content.vb: Public Shared Sub ExportToFile(templatePath As String, filePath As String, entityObjects As IEnumerable(Of EntityObject), columns As IEnumerable(Of BoundCell), exportFilterParams As Boolean, filterForm As Form, filterObject As EntityObject, advancedFilters As IEnumerable(Of ExportParameter), listName As String, progressCallback As Action(Of Integer), cancelToken As CancellationToken)
  overload: TimeCockpit.Data.Export.Excel.XlsxExporter2.ExportToFile*
  nameWithType.vb: XlsxExporter2.ExportToFile(String, String, IEnumerable(Of EntityObject), IEnumerable(Of BoundCell), Boolean, Form, EntityObject, IEnumerable(Of ExportParameter), String, Action(Of Int32), CancellationToken)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TimeCockpit.Data.Export.Excel.XlsxExporter2.ExportToFile(System.String, System.String, System.Collections.Generic.IEnumerable(Of TimeCockpit.Data.EntityObject), System.Collections.Generic.IEnumerable(Of TimeCockpit.Data.DataModel.View.BoundCell), System.Boolean, TimeCockpit.Data.DataModel.View.Form, TimeCockpit.Data.EntityObject, System.Collections.Generic.IEnumerable(Of TimeCockpit.Data.Export.ExportParameter), System.String, System.Action(Of System.Int32), System.Threading.CancellationToken)
  name.vb: ExportToFile(String, String, IEnumerable(Of EntityObject), IEnumerable(Of BoundCell), Boolean, Form, EntityObject, IEnumerable(Of ExportParameter), String, Action(Of Int32), CancellationToken)
- uid: TimeCockpit.Data.Export.Excel.XlsxExporter2.Export(System.Byte[],System.Collections.Generic.IEnumerable{TimeCockpit.Data.EntityObject},System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.View.BoundCell},System.Action{System.Int32},System.Threading.CancellationToken)
  commentId: M:TimeCockpit.Data.Export.Excel.XlsxExporter2.Export(System.Byte[],System.Collections.Generic.IEnumerable{TimeCockpit.Data.EntityObject},System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.View.BoundCell},System.Action{System.Int32},System.Threading.CancellationToken)
  id: Export(System.Byte[],System.Collections.Generic.IEnumerable{TimeCockpit.Data.EntityObject},System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.View.BoundCell},System.Action{System.Int32},System.Threading.CancellationToken)
  parent: TimeCockpit.Data.Export.Excel.XlsxExporter2
  langs:
  - csharp
  - vb
  name: Export(Byte[], IEnumerable<EntityObject>, IEnumerable<BoundCell>, Action<Int32>, CancellationToken)
  nameWithType: XlsxExporter2.Export(Byte[], IEnumerable<EntityObject>, IEnumerable<BoundCell>, Action<Int32>, CancellationToken)
  fullName: TimeCockpit.Data.Export.Excel.XlsxExporter2.Export(System.Byte[], System.Collections.Generic.IEnumerable<TimeCockpit.Data.EntityObject>, System.Collections.Generic.IEnumerable<TimeCockpit.Data.DataModel.View.BoundCell>, System.Action<System.Int32>, System.Threading.CancellationToken)
  type: Method
  source:
    path: TimeCockpit.Data.Export
    isExternal: true
  assemblies:
  - TimeCockpit.Data.Export
  namespace: TimeCockpit.Data.Export.Excel
  syntax:
    content: public static byte[] Export(byte[] templateData, IEnumerable<EntityObject> entityObjects, IEnumerable<BoundCell> columns, Action<int> progressCallback, CancellationToken cancelToken)
    parameters:
    - id: templateData
      type: System.Byte[]
    - id: entityObjects
      type: System.Collections.Generic.IEnumerable{TimeCockpit.Data.EntityObject}
    - id: columns
      type: System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.View.BoundCell}
    - id: progressCallback
      type: System.Action{System.Int32}
    - id: cancelToken
      type: System.Threading.CancellationToken
    return:
      type: System.Byte[]
    content.vb: Public Shared Function Export(templateData As Byte(), entityObjects As IEnumerable(Of EntityObject), columns As IEnumerable(Of BoundCell), progressCallback As Action(Of Integer), cancelToken As CancellationToken) As Byte()
  overload: TimeCockpit.Data.Export.Excel.XlsxExporter2.Export*
  nameWithType.vb: XlsxExporter2.Export(Byte(), IEnumerable(Of EntityObject), IEnumerable(Of BoundCell), Action(Of Int32), CancellationToken)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TimeCockpit.Data.Export.Excel.XlsxExporter2.Export(System.Byte(), System.Collections.Generic.IEnumerable(Of TimeCockpit.Data.EntityObject), System.Collections.Generic.IEnumerable(Of TimeCockpit.Data.DataModel.View.BoundCell), System.Action(Of System.Int32), System.Threading.CancellationToken)
  name.vb: Export(Byte(), IEnumerable(Of EntityObject), IEnumerable(Of BoundCell), Action(Of Int32), CancellationToken)
- uid: TimeCockpit.Data.Export.Excel.XlsxExporter2.Export(System.Byte[],System.Collections.Generic.IEnumerable{TimeCockpit.Data.EntityObject},System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.View.BoundCell},System.Boolean,TimeCockpit.Data.DataModel.View.Form,TimeCockpit.Data.EntityObject,System.Collections.Generic.IEnumerable{TimeCockpit.Data.Export.ExportParameter},System.String,System.Action{System.Int32},System.Threading.CancellationToken)
  commentId: M:TimeCockpit.Data.Export.Excel.XlsxExporter2.Export(System.Byte[],System.Collections.Generic.IEnumerable{TimeCockpit.Data.EntityObject},System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.View.BoundCell},System.Boolean,TimeCockpit.Data.DataModel.View.Form,TimeCockpit.Data.EntityObject,System.Collections.Generic.IEnumerable{TimeCockpit.Data.Export.ExportParameter},System.String,System.Action{System.Int32},System.Threading.CancellationToken)
  id: Export(System.Byte[],System.Collections.Generic.IEnumerable{TimeCockpit.Data.EntityObject},System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.View.BoundCell},System.Boolean,TimeCockpit.Data.DataModel.View.Form,TimeCockpit.Data.EntityObject,System.Collections.Generic.IEnumerable{TimeCockpit.Data.Export.ExportParameter},System.String,System.Action{System.Int32},System.Threading.CancellationToken)
  parent: TimeCockpit.Data.Export.Excel.XlsxExporter2
  langs:
  - csharp
  - vb
  name: Export(Byte[], IEnumerable<EntityObject>, IEnumerable<BoundCell>, Boolean, Form, EntityObject, IEnumerable<ExportParameter>, String, Action<Int32>, CancellationToken)
  nameWithType: XlsxExporter2.Export(Byte[], IEnumerable<EntityObject>, IEnumerable<BoundCell>, Boolean, Form, EntityObject, IEnumerable<ExportParameter>, String, Action<Int32>, CancellationToken)
  fullName: TimeCockpit.Data.Export.Excel.XlsxExporter2.Export(System.Byte[], System.Collections.Generic.IEnumerable<TimeCockpit.Data.EntityObject>, System.Collections.Generic.IEnumerable<TimeCockpit.Data.DataModel.View.BoundCell>, System.Boolean, TimeCockpit.Data.DataModel.View.Form, TimeCockpit.Data.EntityObject, System.Collections.Generic.IEnumerable<TimeCockpit.Data.Export.ExportParameter>, System.String, System.Action<System.Int32>, System.Threading.CancellationToken)
  type: Method
  source:
    path: TimeCockpit.Data.Export
    isExternal: true
  assemblies:
  - TimeCockpit.Data.Export
  namespace: TimeCockpit.Data.Export.Excel
  syntax:
    content: public static byte[] Export(byte[] templateData, IEnumerable<EntityObject> entityObjects, IEnumerable<BoundCell> columns, bool showFilterParams, Form filterForm, EntityObject filterObject, IEnumerable<ExportParameter> advancedFilters, string listName, Action<int> progressCallback, CancellationToken cancelToken)
    parameters:
    - id: templateData
      type: System.Byte[]
    - id: entityObjects
      type: System.Collections.Generic.IEnumerable{TimeCockpit.Data.EntityObject}
    - id: columns
      type: System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.View.BoundCell}
    - id: showFilterParams
      type: System.Boolean
    - id: filterForm
      type: TimeCockpit.Data.DataModel.View.Form
    - id: filterObject
      type: TimeCockpit.Data.EntityObject
    - id: advancedFilters
      type: System.Collections.Generic.IEnumerable{TimeCockpit.Data.Export.ExportParameter}
    - id: listName
      type: System.String
    - id: progressCallback
      type: System.Action{System.Int32}
    - id: cancelToken
      type: System.Threading.CancellationToken
    return:
      type: System.Byte[]
    content.vb: Public Shared Function Export(templateData As Byte(), entityObjects As IEnumerable(Of EntityObject), columns As IEnumerable(Of BoundCell), showFilterParams As Boolean, filterForm As Form, filterObject As EntityObject, advancedFilters As IEnumerable(Of ExportParameter), listName As String, progressCallback As Action(Of Integer), cancelToken As CancellationToken) As Byte()
  overload: TimeCockpit.Data.Export.Excel.XlsxExporter2.Export*
  nameWithType.vb: XlsxExporter2.Export(Byte(), IEnumerable(Of EntityObject), IEnumerable(Of BoundCell), Boolean, Form, EntityObject, IEnumerable(Of ExportParameter), String, Action(Of Int32), CancellationToken)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TimeCockpit.Data.Export.Excel.XlsxExporter2.Export(System.Byte(), System.Collections.Generic.IEnumerable(Of TimeCockpit.Data.EntityObject), System.Collections.Generic.IEnumerable(Of TimeCockpit.Data.DataModel.View.BoundCell), System.Boolean, TimeCockpit.Data.DataModel.View.Form, TimeCockpit.Data.EntityObject, System.Collections.Generic.IEnumerable(Of TimeCockpit.Data.Export.ExportParameter), System.String, System.Action(Of System.Int32), System.Threading.CancellationToken)
  name.vb: Export(Byte(), IEnumerable(Of EntityObject), IEnumerable(Of BoundCell), Boolean, Form, EntityObject, IEnumerable(Of ExportParameter), String, Action(Of Int32), CancellationToken)
- uid: TimeCockpit.Data.Export.Excel.XlsxExporter2.FillWorkBook(ClosedXML.Excel.XLWorkbook,System.Collections.Generic.IEnumerable{TimeCockpit.Data.EntityObject},System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.View.BoundCell},System.Action{System.Int32},System.Threading.CancellationToken)
  commentId: M:TimeCockpit.Data.Export.Excel.XlsxExporter2.FillWorkBook(ClosedXML.Excel.XLWorkbook,System.Collections.Generic.IEnumerable{TimeCockpit.Data.EntityObject},System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.View.BoundCell},System.Action{System.Int32},System.Threading.CancellationToken)
  id: FillWorkBook(ClosedXML.Excel.XLWorkbook,System.Collections.Generic.IEnumerable{TimeCockpit.Data.EntityObject},System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.View.BoundCell},System.Action{System.Int32},System.Threading.CancellationToken)
  parent: TimeCockpit.Data.Export.Excel.XlsxExporter2
  langs:
  - csharp
  - vb
  name: FillWorkBook(XLWorkbook, IEnumerable<EntityObject>, IEnumerable<BoundCell>, Action<Int32>, CancellationToken)
  nameWithType: XlsxExporter2.FillWorkBook(XLWorkbook, IEnumerable<EntityObject>, IEnumerable<BoundCell>, Action<Int32>, CancellationToken)
  fullName: TimeCockpit.Data.Export.Excel.XlsxExporter2.FillWorkBook(ClosedXML.Excel.XLWorkbook, System.Collections.Generic.IEnumerable<TimeCockpit.Data.EntityObject>, System.Collections.Generic.IEnumerable<TimeCockpit.Data.DataModel.View.BoundCell>, System.Action<System.Int32>, System.Threading.CancellationToken)
  type: Method
  source:
    path: TimeCockpit.Data.Export
    isExternal: true
  assemblies:
  - TimeCockpit.Data.Export
  namespace: TimeCockpit.Data.Export.Excel
  syntax:
    content: public static void FillWorkBook(XLWorkbook wb, IEnumerable<EntityObject> entityObjects, IEnumerable<BoundCell> columns, Action<int> progressCallback, CancellationToken cancelToken)
    parameters:
    - id: wb
      type: ClosedXML.Excel.XLWorkbook
    - id: entityObjects
      type: System.Collections.Generic.IEnumerable{TimeCockpit.Data.EntityObject}
    - id: columns
      type: System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.View.BoundCell}
    - id: progressCallback
      type: System.Action{System.Int32}
    - id: cancelToken
      type: System.Threading.CancellationToken
    content.vb: Public Shared Sub FillWorkBook(wb As XLWorkbook, entityObjects As IEnumerable(Of EntityObject), columns As IEnumerable(Of BoundCell), progressCallback As Action(Of Integer), cancelToken As CancellationToken)
  overload: TimeCockpit.Data.Export.Excel.XlsxExporter2.FillWorkBook*
  nameWithType.vb: XlsxExporter2.FillWorkBook(XLWorkbook, IEnumerable(Of EntityObject), IEnumerable(Of BoundCell), Action(Of Int32), CancellationToken)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TimeCockpit.Data.Export.Excel.XlsxExporter2.FillWorkBook(ClosedXML.Excel.XLWorkbook, System.Collections.Generic.IEnumerable(Of TimeCockpit.Data.EntityObject), System.Collections.Generic.IEnumerable(Of TimeCockpit.Data.DataModel.View.BoundCell), System.Action(Of System.Int32), System.Threading.CancellationToken)
  name.vb: FillWorkBook(XLWorkbook, IEnumerable(Of EntityObject), IEnumerable(Of BoundCell), Action(Of Int32), CancellationToken)
- uid: TimeCockpit.Data.Export.Excel.XlsxExporter2.BuildDefaultTemplate(ClosedXML.Excel.XLWorkbook,System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.View.BoundCell})
  commentId: M:TimeCockpit.Data.Export.Excel.XlsxExporter2.BuildDefaultTemplate(ClosedXML.Excel.XLWorkbook,System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.View.BoundCell})
  id: BuildDefaultTemplate(ClosedXML.Excel.XLWorkbook,System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.View.BoundCell})
  parent: TimeCockpit.Data.Export.Excel.XlsxExporter2
  langs:
  - csharp
  - vb
  name: BuildDefaultTemplate(XLWorkbook, IEnumerable<BoundCell>)
  nameWithType: XlsxExporter2.BuildDefaultTemplate(XLWorkbook, IEnumerable<BoundCell>)
  fullName: TimeCockpit.Data.Export.Excel.XlsxExporter2.BuildDefaultTemplate(ClosedXML.Excel.XLWorkbook, System.Collections.Generic.IEnumerable<TimeCockpit.Data.DataModel.View.BoundCell>)
  type: Method
  source:
    path: TimeCockpit.Data.Export
    isExternal: true
  assemblies:
  - TimeCockpit.Data.Export
  namespace: TimeCockpit.Data.Export.Excel
  syntax:
    content: public static void BuildDefaultTemplate(XLWorkbook wb, IEnumerable<BoundCell> columns)
    parameters:
    - id: wb
      type: ClosedXML.Excel.XLWorkbook
    - id: columns
      type: System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.View.BoundCell}
    content.vb: Public Shared Sub BuildDefaultTemplate(wb As XLWorkbook, columns As IEnumerable(Of BoundCell))
  overload: TimeCockpit.Data.Export.Excel.XlsxExporter2.BuildDefaultTemplate*
  nameWithType.vb: XlsxExporter2.BuildDefaultTemplate(XLWorkbook, IEnumerable(Of BoundCell))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TimeCockpit.Data.Export.Excel.XlsxExporter2.BuildDefaultTemplate(ClosedXML.Excel.XLWorkbook, System.Collections.Generic.IEnumerable(Of TimeCockpit.Data.DataModel.View.BoundCell))
  name.vb: BuildDefaultTemplate(XLWorkbook, IEnumerable(Of BoundCell))
- uid: TimeCockpit.Data.Export.Excel.XlsxExporter2.SanitizeWorksheetName(System.String)
  commentId: M:TimeCockpit.Data.Export.Excel.XlsxExporter2.SanitizeWorksheetName(System.String)
  id: SanitizeWorksheetName(System.String)
  parent: TimeCockpit.Data.Export.Excel.XlsxExporter2
  langs:
  - csharp
  - vb
  name: SanitizeWorksheetName(String)
  nameWithType: XlsxExporter2.SanitizeWorksheetName(String)
  fullName: TimeCockpit.Data.Export.Excel.XlsxExporter2.SanitizeWorksheetName(System.String)
  type: Method
  source:
    path: TimeCockpit.Data.Export
    isExternal: true
  assemblies:
  - TimeCockpit.Data.Export
  namespace: TimeCockpit.Data.Export.Excel
  syntax:
    content: public static string SanitizeWorksheetName(string sourceName)
    parameters:
    - id: sourceName
      type: System.String
    return:
      type: System.String
    content.vb: Public Shared Function SanitizeWorksheetName(sourceName As String) As String
  overload: TimeCockpit.Data.Export.Excel.XlsxExporter2.SanitizeWorksheetName*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: TimeCockpit.Data.Export.Excel.XlsxExporter2.BuildDefaultTemplate(ClosedXML.Excel.XLWorkbook,System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.View.BoundCell},System.Boolean,TimeCockpit.Data.DataModel.View.Form,TimeCockpit.Data.EntityObject,System.Collections.Generic.IEnumerable{TimeCockpit.Data.Export.ExportParameter},System.String)
  commentId: M:TimeCockpit.Data.Export.Excel.XlsxExporter2.BuildDefaultTemplate(ClosedXML.Excel.XLWorkbook,System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.View.BoundCell},System.Boolean,TimeCockpit.Data.DataModel.View.Form,TimeCockpit.Data.EntityObject,System.Collections.Generic.IEnumerable{TimeCockpit.Data.Export.ExportParameter},System.String)
  id: BuildDefaultTemplate(ClosedXML.Excel.XLWorkbook,System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.View.BoundCell},System.Boolean,TimeCockpit.Data.DataModel.View.Form,TimeCockpit.Data.EntityObject,System.Collections.Generic.IEnumerable{TimeCockpit.Data.Export.ExportParameter},System.String)
  parent: TimeCockpit.Data.Export.Excel.XlsxExporter2
  langs:
  - csharp
  - vb
  name: BuildDefaultTemplate(XLWorkbook, IEnumerable<BoundCell>, Boolean, Form, EntityObject, IEnumerable<ExportParameter>, String)
  nameWithType: XlsxExporter2.BuildDefaultTemplate(XLWorkbook, IEnumerable<BoundCell>, Boolean, Form, EntityObject, IEnumerable<ExportParameter>, String)
  fullName: TimeCockpit.Data.Export.Excel.XlsxExporter2.BuildDefaultTemplate(ClosedXML.Excel.XLWorkbook, System.Collections.Generic.IEnumerable<TimeCockpit.Data.DataModel.View.BoundCell>, System.Boolean, TimeCockpit.Data.DataModel.View.Form, TimeCockpit.Data.EntityObject, System.Collections.Generic.IEnumerable<TimeCockpit.Data.Export.ExportParameter>, System.String)
  type: Method
  source:
    path: TimeCockpit.Data.Export
    isExternal: true
  assemblies:
  - TimeCockpit.Data.Export
  namespace: TimeCockpit.Data.Export.Excel
  syntax:
    content: public static void BuildDefaultTemplate(XLWorkbook wb, IEnumerable<BoundCell> columns, bool showFilterParams, Form filterForm, EntityObject filterObject, IEnumerable<ExportParameter> advancedFilters, string listName)
    parameters:
    - id: wb
      type: ClosedXML.Excel.XLWorkbook
    - id: columns
      type: System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.View.BoundCell}
    - id: showFilterParams
      type: System.Boolean
    - id: filterForm
      type: TimeCockpit.Data.DataModel.View.Form
    - id: filterObject
      type: TimeCockpit.Data.EntityObject
    - id: advancedFilters
      type: System.Collections.Generic.IEnumerable{TimeCockpit.Data.Export.ExportParameter}
    - id: listName
      type: System.String
    content.vb: Public Shared Sub BuildDefaultTemplate(wb As XLWorkbook, columns As IEnumerable(Of BoundCell), showFilterParams As Boolean, filterForm As Form, filterObject As EntityObject, advancedFilters As IEnumerable(Of ExportParameter), listName As String)
  overload: TimeCockpit.Data.Export.Excel.XlsxExporter2.BuildDefaultTemplate*
  nameWithType.vb: XlsxExporter2.BuildDefaultTemplate(XLWorkbook, IEnumerable(Of BoundCell), Boolean, Form, EntityObject, IEnumerable(Of ExportParameter), String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TimeCockpit.Data.Export.Excel.XlsxExporter2.BuildDefaultTemplate(ClosedXML.Excel.XLWorkbook, System.Collections.Generic.IEnumerable(Of TimeCockpit.Data.DataModel.View.BoundCell), System.Boolean, TimeCockpit.Data.DataModel.View.Form, TimeCockpit.Data.EntityObject, System.Collections.Generic.IEnumerable(Of TimeCockpit.Data.Export.ExportParameter), System.String)
  name.vb: BuildDefaultTemplate(XLWorkbook, IEnumerable(Of BoundCell), Boolean, Form, EntityObject, IEnumerable(Of ExportParameter), String)
- uid: TimeCockpit.Data.Export.Excel.XlsxExporter2.SetCellStyle(TimeCockpit.Data.DataModel.View.BoundCell,ClosedXML.Excel.IXLCell)
  commentId: M:TimeCockpit.Data.Export.Excel.XlsxExporter2.SetCellStyle(TimeCockpit.Data.DataModel.View.BoundCell,ClosedXML.Excel.IXLCell)
  id: SetCellStyle(TimeCockpit.Data.DataModel.View.BoundCell,ClosedXML.Excel.IXLCell)
  parent: TimeCockpit.Data.Export.Excel.XlsxExporter2
  langs:
  - csharp
  - vb
  name: SetCellStyle(BoundCell, IXLCell)
  nameWithType: XlsxExporter2.SetCellStyle(BoundCell, IXLCell)
  fullName: TimeCockpit.Data.Export.Excel.XlsxExporter2.SetCellStyle(TimeCockpit.Data.DataModel.View.BoundCell, ClosedXML.Excel.IXLCell)
  type: Method
  source:
    path: TimeCockpit.Data.Export
    isExternal: true
  assemblies:
  - TimeCockpit.Data.Export
  namespace: TimeCockpit.Data.Export.Excel
  syntax:
    content: public static void SetCellStyle(BoundCell boundCell, IXLCell cell)
    parameters:
    - id: boundCell
      type: TimeCockpit.Data.DataModel.View.BoundCell
    - id: cell
      type: ClosedXML.Excel.IXLCell
    content.vb: Public Shared Sub SetCellStyle(boundCell As BoundCell, cell As IXLCell)
  overload: TimeCockpit.Data.Export.Excel.XlsxExporter2.SetCellStyle*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: TimeCockpit.Data.Export.Excel.XlsxExporter2.BuildFilterForm(ClosedXML.Excel.IXLWorksheet,TimeCockpit.Data.DataModel.View.Form,TimeCockpit.Data.EntityObject,System.Collections.Generic.IEnumerable{TimeCockpit.Data.Export.ExportParameter})
  commentId: M:TimeCockpit.Data.Export.Excel.XlsxExporter2.BuildFilterForm(ClosedXML.Excel.IXLWorksheet,TimeCockpit.Data.DataModel.View.Form,TimeCockpit.Data.EntityObject,System.Collections.Generic.IEnumerable{TimeCockpit.Data.Export.ExportParameter})
  id: BuildFilterForm(ClosedXML.Excel.IXLWorksheet,TimeCockpit.Data.DataModel.View.Form,TimeCockpit.Data.EntityObject,System.Collections.Generic.IEnumerable{TimeCockpit.Data.Export.ExportParameter})
  parent: TimeCockpit.Data.Export.Excel.XlsxExporter2
  langs:
  - csharp
  - vb
  name: BuildFilterForm(IXLWorksheet, Form, EntityObject, IEnumerable<ExportParameter>)
  nameWithType: XlsxExporter2.BuildFilterForm(IXLWorksheet, Form, EntityObject, IEnumerable<ExportParameter>)
  fullName: TimeCockpit.Data.Export.Excel.XlsxExporter2.BuildFilterForm(ClosedXML.Excel.IXLWorksheet, TimeCockpit.Data.DataModel.View.Form, TimeCockpit.Data.EntityObject, System.Collections.Generic.IEnumerable<TimeCockpit.Data.Export.ExportParameter>)
  type: Method
  source:
    path: TimeCockpit.Data.Export
    isExternal: true
  assemblies:
  - TimeCockpit.Data.Export
  namespace: TimeCockpit.Data.Export.Excel
  syntax:
    content: public static int BuildFilterForm(IXLWorksheet ws, Form filterForm, EntityObject filterObject, IEnumerable<ExportParameter> advancedFilters)
    parameters:
    - id: ws
      type: ClosedXML.Excel.IXLWorksheet
    - id: filterForm
      type: TimeCockpit.Data.DataModel.View.Form
    - id: filterObject
      type: TimeCockpit.Data.EntityObject
    - id: advancedFilters
      type: System.Collections.Generic.IEnumerable{TimeCockpit.Data.Export.ExportParameter}
    return:
      type: System.Int32
    content.vb: Public Shared Function BuildFilterForm(ws As IXLWorksheet, filterForm As Form, filterObject As EntityObject, advancedFilters As IEnumerable(Of ExportParameter)) As Integer
  overload: TimeCockpit.Data.Export.Excel.XlsxExporter2.BuildFilterForm*
  nameWithType.vb: XlsxExporter2.BuildFilterForm(IXLWorksheet, Form, EntityObject, IEnumerable(Of ExportParameter))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TimeCockpit.Data.Export.Excel.XlsxExporter2.BuildFilterForm(ClosedXML.Excel.IXLWorksheet, TimeCockpit.Data.DataModel.View.Form, TimeCockpit.Data.EntityObject, System.Collections.Generic.IEnumerable(Of TimeCockpit.Data.Export.ExportParameter))
  name.vb: BuildFilterForm(IXLWorksheet, Form, EntityObject, IEnumerable(Of ExportParameter))
- uid: TimeCockpit.Data.Export.Excel.XlsxExporter2.CheckTemplate(System.String,TimeCockpit.Data.DataModel.ModelEntityBase)
  commentId: M:TimeCockpit.Data.Export.Excel.XlsxExporter2.CheckTemplate(System.String,TimeCockpit.Data.DataModel.ModelEntityBase)
  id: CheckTemplate(System.String,TimeCockpit.Data.DataModel.ModelEntityBase)
  parent: TimeCockpit.Data.Export.Excel.XlsxExporter2
  langs:
  - csharp
  - vb
  name: CheckTemplate(String, ModelEntityBase)
  nameWithType: XlsxExporter2.CheckTemplate(String, ModelEntityBase)
  fullName: TimeCockpit.Data.Export.Excel.XlsxExporter2.CheckTemplate(System.String, TimeCockpit.Data.DataModel.ModelEntityBase)
  type: Method
  source:
    path: TimeCockpit.Data.Export
    isExternal: true
  assemblies:
  - TimeCockpit.Data.Export
  namespace: TimeCockpit.Data.Export.Excel
  syntax:
    content: public static bool CheckTemplate(string templatePath, ModelEntityBase modelEntity)
    parameters:
    - id: templatePath
      type: System.String
    - id: modelEntity
      type: TimeCockpit.Data.DataModel.ModelEntityBase
    return:
      type: System.Boolean
    content.vb: Public Shared Function CheckTemplate(templatePath As String, modelEntity As ModelEntityBase) As Boolean
  overload: TimeCockpit.Data.Export.Excel.XlsxExporter2.CheckTemplate*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: TimeCockpit.Data.Export.Excel.XlsxExporter2.#ctor
  commentId: M:TimeCockpit.Data.Export.Excel.XlsxExporter2.#ctor
  id: '#ctor'
  parent: TimeCockpit.Data.Export.Excel.XlsxExporter2
  langs:
  - csharp
  - vb
  name: XlsxExporter2()
  nameWithType: XlsxExporter2.XlsxExporter2()
  fullName: TimeCockpit.Data.Export.Excel.XlsxExporter2.XlsxExporter2()
  type: Constructor
  source:
    path: TimeCockpit.Data.Export
    isExternal: true
  assemblies:
  - TimeCockpit.Data.Export
  namespace: TimeCockpit.Data.Export.Excel
  syntax:
    content: public XlsxExporter2()
    content.vb: Public Sub New
  overload: TimeCockpit.Data.Export.Excel.XlsxExporter2.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: TimeCockpit.Data.Export.Excel
  commentId: N:TimeCockpit.Data.Export.Excel
  isExternal: true
  name: TimeCockpit.Data.Export.Excel
  nameWithType: TimeCockpit.Data.Export.Excel
  fullName: TimeCockpit.Data.Export.Excel
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TimeCockpit.Data.Export.Excel.XlsxExporter2.ExportToFile*
  commentId: Overload:TimeCockpit.Data.Export.Excel.XlsxExporter2.ExportToFile
  isExternal: true
  name: ExportToFile
  nameWithType: XlsxExporter2.ExportToFile
  fullName: TimeCockpit.Data.Export.Excel.XlsxExporter2.ExportToFile
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IEnumerable{TimeCockpit.Data.EntityObject}
  commentId: T:System.Collections.Generic.IEnumerable{TimeCockpit.Data.EntityObject}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<EntityObject>
  nameWithType: IEnumerable<EntityObject>
  fullName: System.Collections.Generic.IEnumerable<TimeCockpit.Data.EntityObject>
  nameWithType.vb: IEnumerable(Of EntityObject)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TimeCockpit.Data.EntityObject)
  name.vb: IEnumerable(Of EntityObject)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TimeCockpit.Data.EntityObject
    name: EntityObject
    nameWithType: EntityObject
    fullName: TimeCockpit.Data.EntityObject
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TimeCockpit.Data.EntityObject
    name: EntityObject
    nameWithType: EntityObject
    fullName: TimeCockpit.Data.EntityObject
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.View.BoundCell}
  commentId: T:System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.View.BoundCell}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<BoundCell>
  nameWithType: IEnumerable<BoundCell>
  fullName: System.Collections.Generic.IEnumerable<TimeCockpit.Data.DataModel.View.BoundCell>
  nameWithType.vb: IEnumerable(Of BoundCell)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TimeCockpit.Data.DataModel.View.BoundCell)
  name.vb: IEnumerable(Of BoundCell)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TimeCockpit.Data.DataModel.View.BoundCell
    name: BoundCell
    nameWithType: BoundCell
    fullName: TimeCockpit.Data.DataModel.View.BoundCell
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TimeCockpit.Data.DataModel.View.BoundCell
    name: BoundCell
    nameWithType: BoundCell
    fullName: TimeCockpit.Data.DataModel.View.BoundCell
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action{System.Int32}
  commentId: T:System.Action{System.Int32}
  parent: System
  definition: System.Action`1
  name: Action<Int32>
  nameWithType: Action<Int32>
  fullName: System.Action<System.Int32>
  nameWithType.vb: Action(Of Int32)
  fullName.vb: System.Action(Of System.Int32)
  name.vb: Action(Of Int32)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: TimeCockpit.Data.DataModel.View.Form
  commentId: T:TimeCockpit.Data.DataModel.View.Form
  parent: TimeCockpit.Data.DataModel.View
  isExternal: true
  name: Form
  nameWithType: Form
  fullName: TimeCockpit.Data.DataModel.View.Form
- uid: TimeCockpit.Data.EntityObject
  commentId: T:TimeCockpit.Data.EntityObject
  parent: TimeCockpit.Data
  isExternal: true
  name: EntityObject
  nameWithType: EntityObject
  fullName: TimeCockpit.Data.EntityObject
- uid: System.Collections.Generic.IEnumerable{TimeCockpit.Data.Export.ExportParameter}
  commentId: T:System.Collections.Generic.IEnumerable{TimeCockpit.Data.Export.ExportParameter}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<ExportParameter>
  nameWithType: IEnumerable<ExportParameter>
  fullName: System.Collections.Generic.IEnumerable<TimeCockpit.Data.Export.ExportParameter>
  nameWithType.vb: IEnumerable(Of ExportParameter)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TimeCockpit.Data.Export.ExportParameter)
  name.vb: IEnumerable(Of ExportParameter)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TimeCockpit.Data.Export.ExportParameter
    name: ExportParameter
    nameWithType: ExportParameter
    fullName: TimeCockpit.Data.Export.ExportParameter
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TimeCockpit.Data.Export.ExportParameter
    name: ExportParameter
    nameWithType: ExportParameter
    fullName: TimeCockpit.Data.Export.ExportParameter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.DataModel.View
  commentId: N:TimeCockpit.Data.DataModel.View
  isExternal: true
  name: TimeCockpit.Data.DataModel.View
  nameWithType: TimeCockpit.Data.DataModel.View
  fullName: TimeCockpit.Data.DataModel.View
- uid: TimeCockpit.Data
  commentId: N:TimeCockpit.Data
  isExternal: true
  name: TimeCockpit.Data
  nameWithType: TimeCockpit.Data
  fullName: TimeCockpit.Data
- uid: TimeCockpit.Data.Export.Excel.XlsxExporter2.Export*
  commentId: Overload:TimeCockpit.Data.Export.Excel.XlsxExporter2.Export
  isExternal: true
  name: Export
  nameWithType: XlsxExporter2.Export
  fullName: TimeCockpit.Data.Export.Excel.XlsxExporter2.Export
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: TimeCockpit.Data.Export.Excel.XlsxExporter2.FillWorkBook*
  commentId: Overload:TimeCockpit.Data.Export.Excel.XlsxExporter2.FillWorkBook
  isExternal: true
  name: FillWorkBook
  nameWithType: XlsxExporter2.FillWorkBook
  fullName: TimeCockpit.Data.Export.Excel.XlsxExporter2.FillWorkBook
- uid: ClosedXML.Excel.XLWorkbook
  isExternal: true
  name: XLWorkbook
  nameWithType: XLWorkbook
  fullName: ClosedXML.Excel.XLWorkbook
- uid: TimeCockpit.Data.Export.Excel.XlsxExporter2.BuildDefaultTemplate*
  commentId: Overload:TimeCockpit.Data.Export.Excel.XlsxExporter2.BuildDefaultTemplate
  isExternal: true
  name: BuildDefaultTemplate
  nameWithType: XlsxExporter2.BuildDefaultTemplate
  fullName: TimeCockpit.Data.Export.Excel.XlsxExporter2.BuildDefaultTemplate
- uid: TimeCockpit.Data.Export.Excel.XlsxExporter2.SanitizeWorksheetName*
  commentId: Overload:TimeCockpit.Data.Export.Excel.XlsxExporter2.SanitizeWorksheetName
  isExternal: true
  name: SanitizeWorksheetName
  nameWithType: XlsxExporter2.SanitizeWorksheetName
  fullName: TimeCockpit.Data.Export.Excel.XlsxExporter2.SanitizeWorksheetName
- uid: TimeCockpit.Data.Export.Excel.XlsxExporter2.SetCellStyle*
  commentId: Overload:TimeCockpit.Data.Export.Excel.XlsxExporter2.SetCellStyle
  isExternal: true
  name: SetCellStyle
  nameWithType: XlsxExporter2.SetCellStyle
  fullName: TimeCockpit.Data.Export.Excel.XlsxExporter2.SetCellStyle
- uid: TimeCockpit.Data.DataModel.View.BoundCell
  commentId: T:TimeCockpit.Data.DataModel.View.BoundCell
  parent: TimeCockpit.Data.DataModel.View
  isExternal: true
  name: BoundCell
  nameWithType: BoundCell
  fullName: TimeCockpit.Data.DataModel.View.BoundCell
- uid: ClosedXML.Excel.IXLCell
  commentId: '!:ClosedXML.Excel.IXLCell'
  isExternal: true
  name: IXLCell
  nameWithType: IXLCell
  fullName: ClosedXML.Excel.IXLCell
- uid: TimeCockpit.Data.Export.Excel.XlsxExporter2.BuildFilterForm*
  commentId: Overload:TimeCockpit.Data.Export.Excel.XlsxExporter2.BuildFilterForm
  isExternal: true
  name: BuildFilterForm
  nameWithType: XlsxExporter2.BuildFilterForm
  fullName: TimeCockpit.Data.Export.Excel.XlsxExporter2.BuildFilterForm
- uid: ClosedXML.Excel.IXLWorksheet
  commentId: '!:ClosedXML.Excel.IXLWorksheet'
  isExternal: true
  name: IXLWorksheet
  nameWithType: IXLWorksheet
  fullName: ClosedXML.Excel.IXLWorksheet
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: TimeCockpit.Data.Export.Excel.XlsxExporter2.CheckTemplate*
  commentId: Overload:TimeCockpit.Data.Export.Excel.XlsxExporter2.CheckTemplate
  isExternal: true
  name: CheckTemplate
  nameWithType: XlsxExporter2.CheckTemplate
  fullName: TimeCockpit.Data.Export.Excel.XlsxExporter2.CheckTemplate
- uid: TimeCockpit.Data.DataModel.ModelEntityBase
  commentId: T:TimeCockpit.Data.DataModel.ModelEntityBase
  parent: TimeCockpit.Data.DataModel
  isExternal: true
  name: ModelEntityBase
  nameWithType: ModelEntityBase
  fullName: TimeCockpit.Data.DataModel.ModelEntityBase
- uid: TimeCockpit.Data.DataModel
  commentId: N:TimeCockpit.Data.DataModel
  isExternal: true
  name: TimeCockpit.Data.DataModel
  nameWithType: TimeCockpit.Data.DataModel
  fullName: TimeCockpit.Data.DataModel
- uid: TimeCockpit.Data.Export.Excel.XlsxExporter2.#ctor*
  commentId: Overload:TimeCockpit.Data.Export.Excel.XlsxExporter2.#ctor
  isExternal: true
  name: XlsxExporter2
  nameWithType: XlsxExporter2.XlsxExporter2
  fullName: TimeCockpit.Data.Export.Excel.XlsxExporter2.XlsxExporter2
