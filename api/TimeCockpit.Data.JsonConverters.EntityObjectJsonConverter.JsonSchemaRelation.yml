### YamlMime:ManagedReference
items:
- uid: TimeCockpit.Data.JsonConverters.EntityObjectJsonConverter.JsonSchemaRelation
  commentId: T:TimeCockpit.Data.JsonConverters.EntityObjectJsonConverter.JsonSchemaRelation
  id: EntityObjectJsonConverter.JsonSchemaRelation
  parent: TimeCockpit.Data.JsonConverters
  children:
  - TimeCockpit.Data.JsonConverters.EntityObjectJsonConverter.JsonSchemaRelation.#ctor(System.String,System.Int32,TimeCockpit.Data.JsonConverters.EntityObjectJsonConverter.JsonSchemaModelEntity[])
  - TimeCockpit.Data.JsonConverters.EntityObjectJsonConverter.JsonSchemaRelation.ContentMapIndex
  - TimeCockpit.Data.JsonConverters.EntityObjectJsonConverter.JsonSchemaRelation.GetIndexForTargetType(System.String)
  - TimeCockpit.Data.JsonConverters.EntityObjectJsonConverter.JsonSchemaRelation.Name
  - TimeCockpit.Data.JsonConverters.EntityObjectJsonConverter.JsonSchemaRelation.Targets
  langs:
  - csharp
  - vb
  name: EntityObjectJsonConverter.JsonSchemaRelation
  nameWithType: EntityObjectJsonConverter.JsonSchemaRelation
  fullName: TimeCockpit.Data.JsonConverters.EntityObjectJsonConverter.JsonSchemaRelation
  type: Class
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.JsonConverters
  summary: "\nInitializes a new instance of the JsonSchemaRelation index.\n"
  syntax:
    content: public class JsonSchemaRelation
    content.vb: Public Class JsonSchemaRelation
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TimeCockpit.Data.JsonConverters.EntityObjectJsonConverter.JsonSchemaRelation.#ctor(System.String,System.Int32,TimeCockpit.Data.JsonConverters.EntityObjectJsonConverter.JsonSchemaModelEntity[])
  commentId: M:TimeCockpit.Data.JsonConverters.EntityObjectJsonConverter.JsonSchemaRelation.#ctor(System.String,System.Int32,TimeCockpit.Data.JsonConverters.EntityObjectJsonConverter.JsonSchemaModelEntity[])
  id: '#ctor(System.String,System.Int32,TimeCockpit.Data.JsonConverters.EntityObjectJsonConverter.JsonSchemaModelEntity[])'
  parent: TimeCockpit.Data.JsonConverters.EntityObjectJsonConverter.JsonSchemaRelation
  langs:
  - csharp
  - vb
  name: JsonSchemaRelation(String, Int32, EntityObjectJsonConverter.JsonSchemaModelEntity[])
  nameWithType: EntityObjectJsonConverter.JsonSchemaRelation.JsonSchemaRelation(String, Int32, EntityObjectJsonConverter.JsonSchemaModelEntity[])
  fullName: TimeCockpit.Data.JsonConverters.EntityObjectJsonConverter.JsonSchemaRelation.JsonSchemaRelation(System.String, System.Int32, TimeCockpit.Data.JsonConverters.EntityObjectJsonConverter.JsonSchemaModelEntity[])
  type: Constructor
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.JsonConverters
  summary: "\nInitializes a new instance of the JsonSchemaRelation class.\n"
  syntax:
    content: public JsonSchemaRelation(string name, int contentMapIndex, EntityObjectJsonConverter.JsonSchemaModelEntity[] targets)
    parameters:
    - id: name
      type: System.String
      description: name of the relation.
    - id: contentMapIndex
      type: System.Int32
      description: index for the content map.
    - id: targets
      type: TimeCockpit.Data.JsonConverters.EntityObjectJsonConverter.JsonSchemaModelEntity[]
      description: possible target relations.
    content.vb: Public Sub New(name As String, contentMapIndex As Integer, targets As EntityObjectJsonConverter.JsonSchemaModelEntity())
  overload: TimeCockpit.Data.JsonConverters.EntityObjectJsonConverter.JsonSchemaRelation.#ctor*
  nameWithType.vb: EntityObjectJsonConverter.JsonSchemaRelation.JsonSchemaRelation(String, Int32, EntityObjectJsonConverter.JsonSchemaModelEntity())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TimeCockpit.Data.JsonConverters.EntityObjectJsonConverter.JsonSchemaRelation.JsonSchemaRelation(System.String, System.Int32, TimeCockpit.Data.JsonConverters.EntityObjectJsonConverter.JsonSchemaModelEntity())
  name.vb: JsonSchemaRelation(String, Int32, EntityObjectJsonConverter.JsonSchemaModelEntity())
- uid: TimeCockpit.Data.JsonConverters.EntityObjectJsonConverter.JsonSchemaRelation.GetIndexForTargetType(System.String)
  commentId: M:TimeCockpit.Data.JsonConverters.EntityObjectJsonConverter.JsonSchemaRelation.GetIndexForTargetType(System.String)
  id: GetIndexForTargetType(System.String)
  parent: TimeCockpit.Data.JsonConverters.EntityObjectJsonConverter.JsonSchemaRelation
  langs:
  - csharp
  - vb
  name: GetIndexForTargetType(String)
  nameWithType: EntityObjectJsonConverter.JsonSchemaRelation.GetIndexForTargetType(String)
  fullName: TimeCockpit.Data.JsonConverters.EntityObjectJsonConverter.JsonSchemaRelation.GetIndexForTargetType(System.String)
  type: Method
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.JsonConverters
  summary: "\nGets the index of the schema given by the name.\n"
  syntax:
    content: public int GetIndexForTargetType(string targetModelEntityName)
    parameters:
    - id: targetModelEntityName
      type: System.String
      description: name of the schema target to find.
    return:
      type: System.Int32
      description: the index of the schema with given name.
    content.vb: Public Function GetIndexForTargetType(targetModelEntityName As String) As Integer
  overload: TimeCockpit.Data.JsonConverters.EntityObjectJsonConverter.JsonSchemaRelation.GetIndexForTargetType*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.JsonConverters.EntityObjectJsonConverter.JsonSchemaRelation.Name
  commentId: P:TimeCockpit.Data.JsonConverters.EntityObjectJsonConverter.JsonSchemaRelation.Name
  id: Name
  parent: TimeCockpit.Data.JsonConverters.EntityObjectJsonConverter.JsonSchemaRelation
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: EntityObjectJsonConverter.JsonSchemaRelation.Name
  fullName: TimeCockpit.Data.JsonConverters.EntityObjectJsonConverter.JsonSchemaRelation.Name
  type: Property
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.JsonConverters
  summary: "\nGets the name of the relation.\n"
  syntax:
    content: public string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Name As String
  overload: TimeCockpit.Data.JsonConverters.EntityObjectJsonConverter.JsonSchemaRelation.Name*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TimeCockpit.Data.JsonConverters.EntityObjectJsonConverter.JsonSchemaRelation.ContentMapIndex
  commentId: P:TimeCockpit.Data.JsonConverters.EntityObjectJsonConverter.JsonSchemaRelation.ContentMapIndex
  id: ContentMapIndex
  parent: TimeCockpit.Data.JsonConverters.EntityObjectJsonConverter.JsonSchemaRelation
  langs:
  - csharp
  - vb
  name: ContentMapIndex
  nameWithType: EntityObjectJsonConverter.JsonSchemaRelation.ContentMapIndex
  fullName: TimeCockpit.Data.JsonConverters.EntityObjectJsonConverter.JsonSchemaRelation.ContentMapIndex
  type: Property
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.JsonConverters
  summary: "\nGets an index to the contentmap inside the entity object.\n"
  syntax:
    content: public int ContentMapIndex { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property ContentMapIndex As Integer
  overload: TimeCockpit.Data.JsonConverters.EntityObjectJsonConverter.JsonSchemaRelation.ContentMapIndex*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TimeCockpit.Data.JsonConverters.EntityObjectJsonConverter.JsonSchemaRelation.Targets
  commentId: P:TimeCockpit.Data.JsonConverters.EntityObjectJsonConverter.JsonSchemaRelation.Targets
  id: Targets
  parent: TimeCockpit.Data.JsonConverters.EntityObjectJsonConverter.JsonSchemaRelation
  langs:
  - csharp
  - vb
  name: Targets
  nameWithType: EntityObjectJsonConverter.JsonSchemaRelation.Targets
  fullName: TimeCockpit.Data.JsonConverters.EntityObjectJsonConverter.JsonSchemaRelation.Targets
  type: Property
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.JsonConverters
  summary: "\nGets the Targets collection. The list represents all possibly ModelEntity targets.\n"
  syntax:
    content: public EntityObjectJsonConverter.JsonSchemaModelEntity[] Targets { get; }
    parameters: []
    return:
      type: TimeCockpit.Data.JsonConverters.EntityObjectJsonConverter.JsonSchemaModelEntity[]
    content.vb: Public ReadOnly Property Targets As EntityObjectJsonConverter.JsonSchemaModelEntity()
  overload: TimeCockpit.Data.JsonConverters.EntityObjectJsonConverter.JsonSchemaRelation.Targets*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: TimeCockpit.Data.JsonConverters
  commentId: N:TimeCockpit.Data.JsonConverters
  isExternal: true
  name: TimeCockpit.Data.JsonConverters
  nameWithType: TimeCockpit.Data.JsonConverters
  fullName: TimeCockpit.Data.JsonConverters
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TimeCockpit.Data.JsonConverters.EntityObjectJsonConverter.JsonSchemaRelation.#ctor*
  commentId: Overload:TimeCockpit.Data.JsonConverters.EntityObjectJsonConverter.JsonSchemaRelation.#ctor
  isExternal: true
  name: JsonSchemaRelation
  nameWithType: EntityObjectJsonConverter.JsonSchemaRelation.JsonSchemaRelation
  fullName: TimeCockpit.Data.JsonConverters.EntityObjectJsonConverter.JsonSchemaRelation.JsonSchemaRelation
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: TimeCockpit.Data.JsonConverters.EntityObjectJsonConverter.JsonSchemaModelEntity[]
  isExternal: true
  name: EntityObjectJsonConverter.JsonSchemaModelEntity[]
  nameWithType: EntityObjectJsonConverter.JsonSchemaModelEntity[]
  fullName: TimeCockpit.Data.JsonConverters.EntityObjectJsonConverter.JsonSchemaModelEntity[]
  nameWithType.vb: EntityObjectJsonConverter.JsonSchemaModelEntity()
  fullName.vb: TimeCockpit.Data.JsonConverters.EntityObjectJsonConverter.JsonSchemaModelEntity()
  name.vb: EntityObjectJsonConverter.JsonSchemaModelEntity()
  spec.csharp:
  - uid: TimeCockpit.Data.JsonConverters.EntityObjectJsonConverter.JsonSchemaModelEntity
    name: EntityObjectJsonConverter.JsonSchemaModelEntity
    nameWithType: EntityObjectJsonConverter.JsonSchemaModelEntity
    fullName: TimeCockpit.Data.JsonConverters.EntityObjectJsonConverter.JsonSchemaModelEntity
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: TimeCockpit.Data.JsonConverters.EntityObjectJsonConverter.JsonSchemaModelEntity
    name: EntityObjectJsonConverter.JsonSchemaModelEntity
    nameWithType: EntityObjectJsonConverter.JsonSchemaModelEntity
    fullName: TimeCockpit.Data.JsonConverters.EntityObjectJsonConverter.JsonSchemaModelEntity
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: TimeCockpit.Data.JsonConverters.EntityObjectJsonConverter.JsonSchemaRelation.GetIndexForTargetType*
  commentId: Overload:TimeCockpit.Data.JsonConverters.EntityObjectJsonConverter.JsonSchemaRelation.GetIndexForTargetType
  isExternal: true
  name: GetIndexForTargetType
  nameWithType: EntityObjectJsonConverter.JsonSchemaRelation.GetIndexForTargetType
  fullName: TimeCockpit.Data.JsonConverters.EntityObjectJsonConverter.JsonSchemaRelation.GetIndexForTargetType
- uid: TimeCockpit.Data.JsonConverters.EntityObjectJsonConverter.JsonSchemaRelation.Name*
  commentId: Overload:TimeCockpit.Data.JsonConverters.EntityObjectJsonConverter.JsonSchemaRelation.Name
  isExternal: true
  name: Name
  nameWithType: EntityObjectJsonConverter.JsonSchemaRelation.Name
  fullName: TimeCockpit.Data.JsonConverters.EntityObjectJsonConverter.JsonSchemaRelation.Name
- uid: TimeCockpit.Data.JsonConverters.EntityObjectJsonConverter.JsonSchemaRelation.ContentMapIndex*
  commentId: Overload:TimeCockpit.Data.JsonConverters.EntityObjectJsonConverter.JsonSchemaRelation.ContentMapIndex
  isExternal: true
  name: ContentMapIndex
  nameWithType: EntityObjectJsonConverter.JsonSchemaRelation.ContentMapIndex
  fullName: TimeCockpit.Data.JsonConverters.EntityObjectJsonConverter.JsonSchemaRelation.ContentMapIndex
- uid: TimeCockpit.Data.JsonConverters.EntityObjectJsonConverter.JsonSchemaRelation.Targets*
  commentId: Overload:TimeCockpit.Data.JsonConverters.EntityObjectJsonConverter.JsonSchemaRelation.Targets
  isExternal: true
  name: Targets
  nameWithType: EntityObjectJsonConverter.JsonSchemaRelation.Targets
  fullName: TimeCockpit.Data.JsonConverters.EntityObjectJsonConverter.JsonSchemaRelation.Targets
