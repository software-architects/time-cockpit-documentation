### YamlMime:ManagedReference
items:
- uid: TimeCockpit.Data.JsonConverters.JsonEntityObjectList
  commentId: T:TimeCockpit.Data.JsonConverters.JsonEntityObjectList
  id: JsonEntityObjectList
  parent: TimeCockpit.Data.JsonConverters
  children:
  - TimeCockpit.Data.JsonConverters.JsonEntityObjectList.AnonynmousTypes
  - TimeCockpit.Data.JsonConverters.JsonEntityObjectList.FindAnonymousTypes(System.Collections.Generic.IEnumerable{TimeCockpit.Data.EntityObject},TimeCockpit.Data.DataModel.Model)
  - TimeCockpit.Data.JsonConverters.JsonEntityObjectList.FindAnonymousTypesAlongRelations(TimeCockpit.Data.EntityObject,TimeCockpit.Data.DataModel.Model,System.Collections.Generic.HashSet{TimeCockpit.Data.DataModel.ModelEntityBase})
  - TimeCockpit.Data.JsonConverters.JsonEntityObjectList.Items
  - TimeCockpit.Data.JsonConverters.JsonEntityObjectList.Read(Newtonsoft.Json.JsonReader,TimeCockpit.Data.DataModel.Model,TimeCockpit.Data.Environment)
  - TimeCockpit.Data.JsonConverters.JsonEntityObjectList.Write(Newtonsoft.Json.JsonWriter,TimeCockpit.Data.DataModel.Model,TimeCockpit.Data.JsonConverters.JsonEntityObjectList)
  langs:
  - csharp
  - vb
  name: JsonEntityObjectList
  nameWithType: JsonEntityObjectList
  fullName: TimeCockpit.Data.JsonConverters.JsonEntityObjectList
  type: Class
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/JsonConverters/JsonEntityObjectList.cs
    id: JsonEntityObjectList
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/JsonConverters/JsonEntityObjectList.cs
    startLine: 22
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.JsonConverters
  summary: "\nObject representing a result as serialized by a service call.\nit contains a type and a collection of items.\nThe type name is always set.\nIf the NewWithType is null, the ModelEntityBase for the given type\ncan be found in the already transferred model.\n"
  example: []
  syntax:
    content: public class JsonEntityObjectList
    content.vb: Public Class JsonEntityObjectList
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TimeCockpit.Data.JsonConverters.JsonEntityObjectList.AnonynmousTypes
  commentId: P:TimeCockpit.Data.JsonConverters.JsonEntityObjectList.AnonynmousTypes
  id: AnonynmousTypes
  parent: TimeCockpit.Data.JsonConverters.JsonEntityObjectList
  langs:
  - csharp
  - vb
  name: AnonynmousTypes
  nameWithType: JsonEntityObjectList.AnonynmousTypes
  fullName: TimeCockpit.Data.JsonConverters.JsonEntityObjectList.AnonynmousTypes
  type: Property
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/JsonConverters/JsonEntityObjectList.cs
    id: AnonynmousTypes
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/JsonConverters/JsonEntityObjectList.cs
    startLine: 29
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.JsonConverters
  summary: "\nGets or sets the type of the entity objects in the item collection.\n"
  example: []
  syntax:
    content: public IEnumerable<ModelEntityBase> AnonynmousTypes { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.ModelEntityBase}
    content.vb: Public Property AnonynmousTypes As IEnumerable(Of ModelEntityBase)
  overload: TimeCockpit.Data.JsonConverters.JsonEntityObjectList.AnonynmousTypes*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.JsonConverters.JsonEntityObjectList.Items
  commentId: P:TimeCockpit.Data.JsonConverters.JsonEntityObjectList.Items
  id: Items
  parent: TimeCockpit.Data.JsonConverters.JsonEntityObjectList
  langs:
  - csharp
  - vb
  name: Items
  nameWithType: JsonEntityObjectList.Items
  fullName: TimeCockpit.Data.JsonConverters.JsonEntityObjectList.Items
  type: Property
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/JsonConverters/JsonEntityObjectList.cs
    id: Items
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/JsonConverters/JsonEntityObjectList.cs
    startLine: 34
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.JsonConverters
  summary: "\nGets or sets a collection of entity object types.\n"
  example: []
  syntax:
    content: public IEnumerable<EntityObject> Items { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{TimeCockpit.Data.EntityObject}
    content.vb: Public Property Items As IEnumerable(Of EntityObject)
  overload: TimeCockpit.Data.JsonConverters.JsonEntityObjectList.Items*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.JsonConverters.JsonEntityObjectList.Read(Newtonsoft.Json.JsonReader,TimeCockpit.Data.DataModel.Model,TimeCockpit.Data.Environment)
  commentId: M:TimeCockpit.Data.JsonConverters.JsonEntityObjectList.Read(Newtonsoft.Json.JsonReader,TimeCockpit.Data.DataModel.Model,TimeCockpit.Data.Environment)
  id: Read(Newtonsoft.Json.JsonReader,TimeCockpit.Data.DataModel.Model,TimeCockpit.Data.Environment)
  parent: TimeCockpit.Data.JsonConverters.JsonEntityObjectList
  langs:
  - csharp
  - vb
  name: Read(JsonReader, Model, Environment)
  nameWithType: JsonEntityObjectList.Read(JsonReader, Model, Environment)
  fullName: TimeCockpit.Data.JsonConverters.JsonEntityObjectList.Read(Newtonsoft.Json.JsonReader, TimeCockpit.Data.DataModel.Model, TimeCockpit.Data.Environment)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/JsonConverters/JsonEntityObjectList.cs
    id: Read
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/JsonConverters/JsonEntityObjectList.cs
    startLine: 47
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.JsonConverters
  summary: "\nReads an instance of <xref href=\"TimeCockpit.Data.EntityObject\" data-throw-if-not-resolved=\"false\"></xref> that is serialized in Json\n"
  example: []
  syntax:
    content: public static JsonEntityObjectList Read(JsonReader reader, Model model, Environment environment)
    parameters:
    - id: reader
      type: Newtonsoft.Json.JsonReader
      description: The reader that is used to read the Json string.
    - id: model
      type: TimeCockpit.Data.DataModel.Model
      description: The current DataContext model.
    - id: environment
      type: TimeCockpit.Data.Environment
      description: the Current DataContext Environment.
    return:
      type: TimeCockpit.Data.JsonConverters.JsonEntityObjectList
      description: an instance of <xref href="TimeCockpit.Data.EntityObject" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Shared Function Read(reader As JsonReader, model As Model, environment As Environment) As JsonEntityObjectList
  overload: TimeCockpit.Data.JsonConverters.JsonEntityObjectList.Read*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: TimeCockpit.Data.JsonConverters.JsonEntityObjectList.Write(Newtonsoft.Json.JsonWriter,TimeCockpit.Data.DataModel.Model,TimeCockpit.Data.JsonConverters.JsonEntityObjectList)
  commentId: M:TimeCockpit.Data.JsonConverters.JsonEntityObjectList.Write(Newtonsoft.Json.JsonWriter,TimeCockpit.Data.DataModel.Model,TimeCockpit.Data.JsonConverters.JsonEntityObjectList)
  id: Write(Newtonsoft.Json.JsonWriter,TimeCockpit.Data.DataModel.Model,TimeCockpit.Data.JsonConverters.JsonEntityObjectList)
  parent: TimeCockpit.Data.JsonConverters.JsonEntityObjectList
  langs:
  - csharp
  - vb
  name: Write(JsonWriter, Model, JsonEntityObjectList)
  nameWithType: JsonEntityObjectList.Write(JsonWriter, Model, JsonEntityObjectList)
  fullName: TimeCockpit.Data.JsonConverters.JsonEntityObjectList.Write(Newtonsoft.Json.JsonWriter, TimeCockpit.Data.DataModel.Model, TimeCockpit.Data.JsonConverters.JsonEntityObjectList)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/JsonConverters/JsonEntityObjectList.cs
    id: Write
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/JsonConverters/JsonEntityObjectList.cs
    startLine: 102
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.JsonConverters
  summary: "\nWrites the json.\n"
  example: []
  syntax:
    content: public static void Write(JsonWriter writer, Model model, JsonEntityObjectList selectResult)
    parameters:
    - id: writer
      type: Newtonsoft.Json.JsonWriter
      description: The writer.
    - id: model
      type: TimeCockpit.Data.DataModel.Model
      description: The base model to use for existing types.
    - id: selectResult
      type: TimeCockpit.Data.JsonConverters.JsonEntityObjectList
      description: The entity object.
    content.vb: Public Shared Sub Write(writer As JsonWriter, model As Model, selectResult As JsonEntityObjectList)
  overload: TimeCockpit.Data.JsonConverters.JsonEntityObjectList.Write*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: TimeCockpit.Data.JsonConverters.JsonEntityObjectList.FindAnonymousTypes(System.Collections.Generic.IEnumerable{TimeCockpit.Data.EntityObject},TimeCockpit.Data.DataModel.Model)
  commentId: M:TimeCockpit.Data.JsonConverters.JsonEntityObjectList.FindAnonymousTypes(System.Collections.Generic.IEnumerable{TimeCockpit.Data.EntityObject},TimeCockpit.Data.DataModel.Model)
  id: FindAnonymousTypes(System.Collections.Generic.IEnumerable{TimeCockpit.Data.EntityObject},TimeCockpit.Data.DataModel.Model)
  parent: TimeCockpit.Data.JsonConverters.JsonEntityObjectList
  langs:
  - csharp
  - vb
  name: FindAnonymousTypes(IEnumerable<EntityObject>, Model)
  nameWithType: JsonEntityObjectList.FindAnonymousTypes(IEnumerable<EntityObject>, Model)
  fullName: TimeCockpit.Data.JsonConverters.JsonEntityObjectList.FindAnonymousTypes(System.Collections.Generic.IEnumerable<TimeCockpit.Data.EntityObject>, TimeCockpit.Data.DataModel.Model)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/JsonConverters/JsonEntityObjectList.cs
    id: FindAnonymousTypes
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/JsonConverters/JsonEntityObjectList.cs
    startLine: 141
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.JsonConverters
  summary: "\nFinds the anonymous types.\n"
  example: []
  syntax:
    content: public static IEnumerable<ModelEntityBase> FindAnonymousTypes(IEnumerable<EntityObject> entityObjects, Model model)
    parameters:
    - id: entityObjects
      type: System.Collections.Generic.IEnumerable{TimeCockpit.Data.EntityObject}
      description: The entity objects.
    - id: model
      type: TimeCockpit.Data.DataModel.Model
      description: The model to search for model entities.
    return:
      type: System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.ModelEntityBase}
      description: "\nA list of types that cannot be found in the model.\n"
    content.vb: Public Shared Function FindAnonymousTypes(entityObjects As IEnumerable(Of EntityObject), model As Model) As IEnumerable(Of ModelEntityBase)
  overload: TimeCockpit.Data.JsonConverters.JsonEntityObjectList.FindAnonymousTypes*
  nameWithType.vb: JsonEntityObjectList.FindAnonymousTypes(IEnumerable(Of EntityObject), Model)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TimeCockpit.Data.JsonConverters.JsonEntityObjectList.FindAnonymousTypes(System.Collections.Generic.IEnumerable(Of TimeCockpit.Data.EntityObject), TimeCockpit.Data.DataModel.Model)
  name.vb: FindAnonymousTypes(IEnumerable(Of EntityObject), Model)
- uid: TimeCockpit.Data.JsonConverters.JsonEntityObjectList.FindAnonymousTypesAlongRelations(TimeCockpit.Data.EntityObject,TimeCockpit.Data.DataModel.Model,System.Collections.Generic.HashSet{TimeCockpit.Data.DataModel.ModelEntityBase})
  commentId: M:TimeCockpit.Data.JsonConverters.JsonEntityObjectList.FindAnonymousTypesAlongRelations(TimeCockpit.Data.EntityObject,TimeCockpit.Data.DataModel.Model,System.Collections.Generic.HashSet{TimeCockpit.Data.DataModel.ModelEntityBase})
  id: FindAnonymousTypesAlongRelations(TimeCockpit.Data.EntityObject,TimeCockpit.Data.DataModel.Model,System.Collections.Generic.HashSet{TimeCockpit.Data.DataModel.ModelEntityBase})
  parent: TimeCockpit.Data.JsonConverters.JsonEntityObjectList
  langs:
  - csharp
  - vb
  name: FindAnonymousTypesAlongRelations(EntityObject, Model, HashSet<ModelEntityBase>)
  nameWithType: JsonEntityObjectList.FindAnonymousTypesAlongRelations(EntityObject, Model, HashSet<ModelEntityBase>)
  fullName: TimeCockpit.Data.JsonConverters.JsonEntityObjectList.FindAnonymousTypesAlongRelations(TimeCockpit.Data.EntityObject, TimeCockpit.Data.DataModel.Model, System.Collections.Generic.HashSet<TimeCockpit.Data.DataModel.ModelEntityBase>)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/JsonConverters/JsonEntityObjectList.cs
    id: FindAnonymousTypesAlongRelations
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/JsonConverters/JsonEntityObjectList.cs
    startLine: 152
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.JsonConverters
  summary: "\nFinds the anonymous types along an entity object. Calls itself along the relations.\n"
  example: []
  syntax:
    content: public static void FindAnonymousTypesAlongRelations(EntityObject entityObject, Model model, HashSet<ModelEntityBase> target)
    parameters:
    - id: entityObject
      type: TimeCockpit.Data.EntityObject
      description: The entity object.
    - id: model
      type: TimeCockpit.Data.DataModel.Model
      description: The model containing the well-defined entity objects.
    - id: target
      type: System.Collections.Generic.HashSet{TimeCockpit.Data.DataModel.ModelEntityBase}
      description: The target to write model entities to.
    content.vb: Public Shared Sub FindAnonymousTypesAlongRelations(entityObject As EntityObject, model As Model, target As HashSet(Of ModelEntityBase))
  overload: TimeCockpit.Data.JsonConverters.JsonEntityObjectList.FindAnonymousTypesAlongRelations*
  nameWithType.vb: JsonEntityObjectList.FindAnonymousTypesAlongRelations(EntityObject, Model, HashSet(Of ModelEntityBase))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TimeCockpit.Data.JsonConverters.JsonEntityObjectList.FindAnonymousTypesAlongRelations(TimeCockpit.Data.EntityObject, TimeCockpit.Data.DataModel.Model, System.Collections.Generic.HashSet(Of TimeCockpit.Data.DataModel.ModelEntityBase))
  name.vb: FindAnonymousTypesAlongRelations(EntityObject, Model, HashSet(Of ModelEntityBase))
references:
- uid: TimeCockpit.Data.JsonConverters
  commentId: N:TimeCockpit.Data.JsonConverters
  isExternal: false
  name: TimeCockpit.Data.JsonConverters
  nameWithType: TimeCockpit.Data.JsonConverters
  fullName: TimeCockpit.Data.JsonConverters
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: TimeCockpit.Data.JsonConverters.JsonEntityObjectList.AnonynmousTypes*
  commentId: Overload:TimeCockpit.Data.JsonConverters.JsonEntityObjectList.AnonynmousTypes
  isExternal: false
  name: AnonynmousTypes
  nameWithType: JsonEntityObjectList.AnonynmousTypes
  fullName: TimeCockpit.Data.JsonConverters.JsonEntityObjectList.AnonynmousTypes
- uid: System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.ModelEntityBase}
  commentId: T:System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.ModelEntityBase}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<ModelEntityBase>
  nameWithType: IEnumerable<ModelEntityBase>
  fullName: System.Collections.Generic.IEnumerable<TimeCockpit.Data.DataModel.ModelEntityBase>
  nameWithType.vb: IEnumerable(Of ModelEntityBase)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TimeCockpit.Data.DataModel.ModelEntityBase)
  name.vb: IEnumerable(Of ModelEntityBase)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TimeCockpit.Data.DataModel.ModelEntityBase
    name: ModelEntityBase
    nameWithType: ModelEntityBase
    fullName: TimeCockpit.Data.DataModel.ModelEntityBase
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TimeCockpit.Data.DataModel.ModelEntityBase
    name: ModelEntityBase
    nameWithType: ModelEntityBase
    fullName: TimeCockpit.Data.DataModel.ModelEntityBase
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: TimeCockpit.Data.JsonConverters.JsonEntityObjectList.Items*
  commentId: Overload:TimeCockpit.Data.JsonConverters.JsonEntityObjectList.Items
  isExternal: false
  name: Items
  nameWithType: JsonEntityObjectList.Items
  fullName: TimeCockpit.Data.JsonConverters.JsonEntityObjectList.Items
- uid: System.Collections.Generic.IEnumerable{TimeCockpit.Data.EntityObject}
  commentId: T:System.Collections.Generic.IEnumerable{TimeCockpit.Data.EntityObject}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<EntityObject>
  nameWithType: IEnumerable<EntityObject>
  fullName: System.Collections.Generic.IEnumerable<TimeCockpit.Data.EntityObject>
  nameWithType.vb: IEnumerable(Of EntityObject)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TimeCockpit.Data.EntityObject)
  name.vb: IEnumerable(Of EntityObject)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TimeCockpit.Data.EntityObject
    name: EntityObject
    nameWithType: EntityObject
    fullName: TimeCockpit.Data.EntityObject
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TimeCockpit.Data.EntityObject
    name: EntityObject
    nameWithType: EntityObject
    fullName: TimeCockpit.Data.EntityObject
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.EntityObject
  commentId: T:TimeCockpit.Data.EntityObject
  parent: TimeCockpit.Data
  isExternal: false
  name: EntityObject
  nameWithType: EntityObject
  fullName: TimeCockpit.Data.EntityObject
- uid: TimeCockpit.Data.JsonConverters.JsonEntityObjectList.Read*
  commentId: Overload:TimeCockpit.Data.JsonConverters.JsonEntityObjectList.Read
  isExternal: false
  name: Read
  nameWithType: JsonEntityObjectList.Read
  fullName: TimeCockpit.Data.JsonConverters.JsonEntityObjectList.Read
- uid: Newtonsoft.Json.JsonReader
  commentId: T:Newtonsoft.Json.JsonReader
  parent: Newtonsoft.Json
  isExternal: true
  name: JsonReader
  nameWithType: JsonReader
  fullName: Newtonsoft.Json.JsonReader
- uid: TimeCockpit.Data.DataModel.Model
  commentId: T:TimeCockpit.Data.DataModel.Model
  parent: TimeCockpit.Data.DataModel
  isExternal: false
  name: Model
  nameWithType: Model
  fullName: TimeCockpit.Data.DataModel.Model
- uid: TimeCockpit.Data.Environment
  commentId: T:TimeCockpit.Data.Environment
  parent: TimeCockpit.Data
  isExternal: false
  name: Environment
  nameWithType: Environment
  fullName: TimeCockpit.Data.Environment
- uid: TimeCockpit.Data.JsonConverters.JsonEntityObjectList
  commentId: T:TimeCockpit.Data.JsonConverters.JsonEntityObjectList
  parent: TimeCockpit.Data.JsonConverters
  isExternal: false
  name: JsonEntityObjectList
  nameWithType: JsonEntityObjectList
  fullName: TimeCockpit.Data.JsonConverters.JsonEntityObjectList
- uid: TimeCockpit.Data
  commentId: N:TimeCockpit.Data
  isExternal: false
  name: TimeCockpit.Data
  nameWithType: TimeCockpit.Data
  fullName: TimeCockpit.Data
- uid: Newtonsoft.Json
  commentId: N:Newtonsoft.Json
  isExternal: false
  name: Newtonsoft.Json
  nameWithType: Newtonsoft.Json
  fullName: Newtonsoft.Json
- uid: TimeCockpit.Data.DataModel
  commentId: N:TimeCockpit.Data.DataModel
  isExternal: false
  name: TimeCockpit.Data.DataModel
  nameWithType: TimeCockpit.Data.DataModel
  fullName: TimeCockpit.Data.DataModel
- uid: TimeCockpit.Data.JsonConverters.JsonEntityObjectList.Write*
  commentId: Overload:TimeCockpit.Data.JsonConverters.JsonEntityObjectList.Write
  isExternal: false
  name: Write
  nameWithType: JsonEntityObjectList.Write
  fullName: TimeCockpit.Data.JsonConverters.JsonEntityObjectList.Write
- uid: Newtonsoft.Json.JsonWriter
  commentId: T:Newtonsoft.Json.JsonWriter
  parent: Newtonsoft.Json
  isExternal: true
  name: JsonWriter
  nameWithType: JsonWriter
  fullName: Newtonsoft.Json.JsonWriter
- uid: TimeCockpit.Data.JsonConverters.JsonEntityObjectList.FindAnonymousTypes*
  commentId: Overload:TimeCockpit.Data.JsonConverters.JsonEntityObjectList.FindAnonymousTypes
  isExternal: false
  name: FindAnonymousTypes
  nameWithType: JsonEntityObjectList.FindAnonymousTypes
  fullName: TimeCockpit.Data.JsonConverters.JsonEntityObjectList.FindAnonymousTypes
- uid: TimeCockpit.Data.JsonConverters.JsonEntityObjectList.FindAnonymousTypesAlongRelations*
  commentId: Overload:TimeCockpit.Data.JsonConverters.JsonEntityObjectList.FindAnonymousTypesAlongRelations
  isExternal: false
  name: FindAnonymousTypesAlongRelations
  nameWithType: JsonEntityObjectList.FindAnonymousTypesAlongRelations
  fullName: TimeCockpit.Data.JsonConverters.JsonEntityObjectList.FindAnonymousTypesAlongRelations
- uid: System.Collections.Generic.HashSet{TimeCockpit.Data.DataModel.ModelEntityBase}
  commentId: T:System.Collections.Generic.HashSet{TimeCockpit.Data.DataModel.ModelEntityBase}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.HashSet`1
  name: HashSet<ModelEntityBase>
  nameWithType: HashSet<ModelEntityBase>
  fullName: System.Collections.Generic.HashSet<TimeCockpit.Data.DataModel.ModelEntityBase>
  nameWithType.vb: HashSet(Of ModelEntityBase)
  fullName.vb: System.Collections.Generic.HashSet(Of TimeCockpit.Data.DataModel.ModelEntityBase)
  name.vb: HashSet(Of ModelEntityBase)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    nameWithType: HashSet
    fullName: System.Collections.Generic.HashSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TimeCockpit.Data.DataModel.ModelEntityBase
    name: ModelEntityBase
    nameWithType: ModelEntityBase
    fullName: TimeCockpit.Data.DataModel.ModelEntityBase
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    nameWithType: HashSet
    fullName: System.Collections.Generic.HashSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TimeCockpit.Data.DataModel.ModelEntityBase
    name: ModelEntityBase
    nameWithType: ModelEntityBase
    fullName: TimeCockpit.Data.DataModel.ModelEntityBase
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.HashSet`1
  commentId: T:System.Collections.Generic.HashSet`1
  isExternal: true
  name: HashSet<T>
  nameWithType: HashSet<T>
  fullName: System.Collections.Generic.HashSet<T>
  nameWithType.vb: HashSet(Of T)
  fullName.vb: System.Collections.Generic.HashSet(Of T)
  name.vb: HashSet(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    nameWithType: HashSet
    fullName: System.Collections.Generic.HashSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    nameWithType: HashSet
    fullName: System.Collections.Generic.HashSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
