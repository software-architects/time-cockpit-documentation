### YamlMime:ManagedReference
items:
- uid: TimeCockpit.Data.Localization.Default.LocalizedString
  commentId: T:TimeCockpit.Data.Localization.Default.LocalizedString
  id: LocalizedString
  parent: TimeCockpit.Data.Localization.Default
  children:
  - TimeCockpit.Data.Localization.Default.LocalizedString.#ctor(System.String,System.String,System.Boolean)
  - TimeCockpit.Data.Localization.Default.LocalizedString.#ctor(TimeCockpit.Data.Localization.Default.LocalizedString)
  - TimeCockpit.Data.Localization.Default.LocalizedString.ClearDirtyFlag
  - TimeCockpit.Data.Localization.Default.LocalizedString.Culture
  - TimeCockpit.Data.Localization.Default.LocalizedString.Dirty
  - TimeCockpit.Data.Localization.Default.LocalizedString.Text
  langs:
  - csharp
  - vb
  name: LocalizedString
  nameWithType: LocalizedString
  fullName: TimeCockpit.Data.Localization.Default.LocalizedString
  type: Class
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Localization.Default
  summary: "\nclass representing a string localization for a string used in the model (e.g. FriendlyName, BackReferenceFriendlyName, etc)\n"
  syntax:
    content: public class LocalizedString
    content.vb: Public Class LocalizedString
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TimeCockpit.Data.Localization.Default.LocalizedString.#ctor(System.String,System.String,System.Boolean)
  commentId: M:TimeCockpit.Data.Localization.Default.LocalizedString.#ctor(System.String,System.String,System.Boolean)
  id: '#ctor(System.String,System.String,System.Boolean)'
  parent: TimeCockpit.Data.Localization.Default.LocalizedString
  langs:
  - csharp
  - vb
  name: LocalizedString(String, String, Boolean)
  nameWithType: LocalizedString.LocalizedString(String, String, Boolean)
  fullName: TimeCockpit.Data.Localization.Default.LocalizedString.LocalizedString(System.String, System.String, System.Boolean)
  type: Constructor
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Localization.Default
  summary: "\nInitializes a new instance of the <xref href=\"TimeCockpit.Data.Localization.Default.LocalizedString\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  syntax:
    content: public LocalizedString(string culture, string text, bool dirty)
    parameters:
    - id: culture
      type: System.String
      description: the culture key this string localization is for.
    - id: text
      type: System.String
      description: the text.
    - id: dirty
      type: System.Boolean
      description: true if the string should be marked as dirty.
    content.vb: Public Sub New(culture As String, text As String, dirty As Boolean)
  overload: TimeCockpit.Data.Localization.Default.LocalizedString.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Localization.Default.LocalizedString.#ctor(TimeCockpit.Data.Localization.Default.LocalizedString)
  commentId: M:TimeCockpit.Data.Localization.Default.LocalizedString.#ctor(TimeCockpit.Data.Localization.Default.LocalizedString)
  id: '#ctor(TimeCockpit.Data.Localization.Default.LocalizedString)'
  parent: TimeCockpit.Data.Localization.Default.LocalizedString
  langs:
  - csharp
  - vb
  name: LocalizedString(LocalizedString)
  nameWithType: LocalizedString.LocalizedString(LocalizedString)
  fullName: TimeCockpit.Data.Localization.Default.LocalizedString.LocalizedString(TimeCockpit.Data.Localization.Default.LocalizedString)
  type: Constructor
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Localization.Default
  summary: "\nInitializes a new instance of the <xref href=\"TimeCockpit.Data.Localization.Default.LocalizedString\" data-throw-if-not-resolved=\"false\"></xref> class. Copy Constructor.\n"
  syntax:
    content: public LocalizedString(LocalizedString source)
    parameters:
    - id: source
      type: TimeCockpit.Data.Localization.Default.LocalizedString
      description: the source to copy from.
    content.vb: Public Sub New(source As LocalizedString)
  overload: TimeCockpit.Data.Localization.Default.LocalizedString.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Localization.Default.LocalizedString.ClearDirtyFlag
  commentId: M:TimeCockpit.Data.Localization.Default.LocalizedString.ClearDirtyFlag
  id: ClearDirtyFlag
  parent: TimeCockpit.Data.Localization.Default.LocalizedString
  langs:
  - csharp
  - vb
  name: ClearDirtyFlag()
  nameWithType: LocalizedString.ClearDirtyFlag()
  fullName: TimeCockpit.Data.Localization.Default.LocalizedString.ClearDirtyFlag()
  type: Method
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Localization.Default
  summary: "\nClears the dirty flag.\n"
  syntax:
    content: public void ClearDirtyFlag()
    content.vb: Public Sub ClearDirtyFlag
  overload: TimeCockpit.Data.Localization.Default.LocalizedString.ClearDirtyFlag*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Localization.Default.LocalizedString.Culture
  commentId: P:TimeCockpit.Data.Localization.Default.LocalizedString.Culture
  id: Culture
  parent: TimeCockpit.Data.Localization.Default.LocalizedString
  langs:
  - csharp
  - vb
  name: Culture
  nameWithType: LocalizedString.Culture
  fullName: TimeCockpit.Data.Localization.Default.LocalizedString.Culture
  type: Property
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Localization.Default
  summary: "\nGets the culture of the localized string.\n"
  syntax:
    content: public string Culture { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Culture As String
  overload: TimeCockpit.Data.Localization.Default.LocalizedString.Culture*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TimeCockpit.Data.Localization.Default.LocalizedString.Text
  commentId: P:TimeCockpit.Data.Localization.Default.LocalizedString.Text
  id: Text
  parent: TimeCockpit.Data.Localization.Default.LocalizedString
  langs:
  - csharp
  - vb
  name: Text
  nameWithType: LocalizedString.Text
  fullName: TimeCockpit.Data.Localization.Default.LocalizedString.Text
  type: Property
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Localization.Default
  summary: "\nGets or sets the localized text. Marks the instance as dirty.\n"
  syntax:
    content: public string Text { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Text As String
  overload: TimeCockpit.Data.Localization.Default.LocalizedString.Text*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Localization.Default.LocalizedString.Dirty
  commentId: P:TimeCockpit.Data.Localization.Default.LocalizedString.Dirty
  id: Dirty
  parent: TimeCockpit.Data.Localization.Default.LocalizedString
  langs:
  - csharp
  - vb
  name: Dirty
  nameWithType: LocalizedString.Dirty
  fullName: TimeCockpit.Data.Localization.Default.LocalizedString.Dirty
  type: Property
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Localization.Default
  summary: "\nGets a value indicating whether this localized string has been updated.\n"
  syntax:
    content: public bool Dirty { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property Dirty As Boolean
  overload: TimeCockpit.Data.Localization.Default.LocalizedString.Dirty*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: TimeCockpit.Data.Localization.Default
  commentId: N:TimeCockpit.Data.Localization.Default
  isExternal: true
  name: TimeCockpit.Data.Localization.Default
  nameWithType: TimeCockpit.Data.Localization.Default
  fullName: TimeCockpit.Data.Localization.Default
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TimeCockpit.Data.Localization.Default.LocalizedString.#ctor*
  commentId: Overload:TimeCockpit.Data.Localization.Default.LocalizedString.#ctor
  isExternal: true
  name: LocalizedString
  nameWithType: LocalizedString.LocalizedString
  fullName: TimeCockpit.Data.Localization.Default.LocalizedString.LocalizedString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: TimeCockpit.Data.Localization.Default.LocalizedString
  commentId: T:TimeCockpit.Data.Localization.Default.LocalizedString
  parent: TimeCockpit.Data.Localization.Default
  isExternal: true
  name: LocalizedString
  nameWithType: LocalizedString
  fullName: TimeCockpit.Data.Localization.Default.LocalizedString
- uid: TimeCockpit.Data.Localization.Default.LocalizedString.ClearDirtyFlag*
  commentId: Overload:TimeCockpit.Data.Localization.Default.LocalizedString.ClearDirtyFlag
  isExternal: true
  name: ClearDirtyFlag
  nameWithType: LocalizedString.ClearDirtyFlag
  fullName: TimeCockpit.Data.Localization.Default.LocalizedString.ClearDirtyFlag
- uid: TimeCockpit.Data.Localization.Default.LocalizedString.Culture*
  commentId: Overload:TimeCockpit.Data.Localization.Default.LocalizedString.Culture
  isExternal: true
  name: Culture
  nameWithType: LocalizedString.Culture
  fullName: TimeCockpit.Data.Localization.Default.LocalizedString.Culture
- uid: TimeCockpit.Data.Localization.Default.LocalizedString.Text*
  commentId: Overload:TimeCockpit.Data.Localization.Default.LocalizedString.Text
  isExternal: true
  name: Text
  nameWithType: LocalizedString.Text
  fullName: TimeCockpit.Data.Localization.Default.LocalizedString.Text
- uid: TimeCockpit.Data.Localization.Default.LocalizedString.Dirty*
  commentId: Overload:TimeCockpit.Data.Localization.Default.LocalizedString.Dirty
  isExternal: true
  name: Dirty
  nameWithType: LocalizedString.Dirty
  fullName: TimeCockpit.Data.Localization.Default.LocalizedString.Dirty
