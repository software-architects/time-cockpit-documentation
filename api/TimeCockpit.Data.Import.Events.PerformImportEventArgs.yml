### YamlMime:ManagedReference
items:
- uid: TimeCockpit.Data.Import.Events.PerformImportEventArgs
  commentId: T:TimeCockpit.Data.Import.Events.PerformImportEventArgs
  id: PerformImportEventArgs
  parent: TimeCockpit.Data.Import.Events
  children:
  - TimeCockpit.Data.Import.Events.PerformImportEventArgs.#ctor(System.String,System.Byte[],System.String,System.Boolean,System.String,System.Guid,System.Nullable{System.Guid},System.Action,TimeCockpit.Data.DataContext,TimeCockpit.Data.DataContextSettings,System.Action{System.String,System.Int64,System.Int64})
  - TimeCockpit.Data.Import.Events.PerformImportEventArgs.Completed
  - TimeCockpit.Data.Import.Events.PerformImportEventArgs.Definition
  - TimeCockpit.Data.Import.Events.PerformImportEventArgs.DefinitionId
  - TimeCockpit.Data.Import.Events.PerformImportEventArgs.DefinitionName
  - TimeCockpit.Data.Import.Events.PerformImportEventArgs.ImportTaskId
  - TimeCockpit.Data.Import.Events.PerformImportEventArgs.Progress
  - TimeCockpit.Data.Import.Events.PerformImportEventArgs.SaveOnSucess
  - TimeCockpit.Data.Import.Events.PerformImportEventArgs.SourceData
  - TimeCockpit.Data.Import.Events.PerformImportEventArgs.SourceFileName
  - TimeCockpit.Data.Import.Events.PerformImportEventArgs.TargetDataContext
  - TimeCockpit.Data.Import.Events.PerformImportEventArgs.TargetDataContextSettings
  langs:
  - csharp
  - vb
  name: PerformImportEventArgs
  nameWithType: PerformImportEventArgs
  fullName: TimeCockpit.Data.Import.Events.PerformImportEventArgs
  type: Class
  source:
    path: TimeCockpit.Data.Import
    isExternal: true
  assemblies:
  - TimeCockpit.Data.Import
  namespace: TimeCockpit.Data.Import.Events
  syntax:
    content: public class PerformImportEventArgs
    content.vb: Public Class PerformImportEventArgs
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TimeCockpit.Data.Import.Events.PerformImportEventArgs.#ctor(System.String,System.Byte[],System.String,System.Boolean,System.String,System.Guid,System.Nullable{System.Guid},System.Action,TimeCockpit.Data.DataContext,TimeCockpit.Data.DataContextSettings,System.Action{System.String,System.Int64,System.Int64})
  commentId: M:TimeCockpit.Data.Import.Events.PerformImportEventArgs.#ctor(System.String,System.Byte[],System.String,System.Boolean,System.String,System.Guid,System.Nullable{System.Guid},System.Action,TimeCockpit.Data.DataContext,TimeCockpit.Data.DataContextSettings,System.Action{System.String,System.Int64,System.Int64})
  id: '#ctor(System.String,System.Byte[],System.String,System.Boolean,System.String,System.Guid,System.Nullable{System.Guid},System.Action,TimeCockpit.Data.DataContext,TimeCockpit.Data.DataContextSettings,System.Action{System.String,System.Int64,System.Int64})'
  parent: TimeCockpit.Data.Import.Events.PerformImportEventArgs
  langs:
  - csharp
  - vb
  name: PerformImportEventArgs(String, Byte[], String, Boolean, String, Guid, Nullable<Guid>, Action, DataContext, DataContextSettings, Action<String, Int64, Int64>)
  nameWithType: PerformImportEventArgs.PerformImportEventArgs(String, Byte[], String, Boolean, String, Guid, Nullable<Guid>, Action, DataContext, DataContextSettings, Action<String, Int64, Int64>)
  fullName: TimeCockpit.Data.Import.Events.PerformImportEventArgs.PerformImportEventArgs(System.String, System.Byte[], System.String, System.Boolean, System.String, System.Guid, System.Nullable<System.Guid>, System.Action, TimeCockpit.Data.DataContext, TimeCockpit.Data.DataContextSettings, System.Action<System.String, System.Int64, System.Int64>)
  type: Constructor
  source:
    path: TimeCockpit.Data.Import
    isExternal: true
  assemblies:
  - TimeCockpit.Data.Import
  namespace: TimeCockpit.Data.Import.Events
  syntax:
    content: public PerformImportEventArgs(string definition, byte[] sourceData, string sourceFileName, bool saveOnSuccess, string definitionName, Guid importTaskId, Guid? definitionId = default(Guid? ), Action completed = null, DataContext targetDataContext = null, DataContextSettings targetDataContextSettings = null, Action<string, long, long> progress = null)
    parameters:
    - id: definition
      type: System.String
    - id: sourceData
      type: System.Byte[]
    - id: sourceFileName
      type: System.String
    - id: saveOnSuccess
      type: System.Boolean
    - id: definitionName
      type: System.String
    - id: importTaskId
      type: System.Guid
    - id: definitionId
      type: System.Nullable{System.Guid}
    - id: completed
      type: System.Action
    - id: targetDataContext
      type: TimeCockpit.Data.DataContext
    - id: targetDataContextSettings
      type: TimeCockpit.Data.DataContextSettings
    - id: progress
      type: System.Action{System.String,System.Int64,System.Int64}
    content.vb: Public Sub New(definition As String, sourceData As Byte(), sourceFileName As String, saveOnSuccess As Boolean, definitionName As String, importTaskId As Guid, definitionId As Guid? = Nothing, completed As Action = Nothing, targetDataContext As DataContext = Nothing, targetDataContextSettings As DataContextSettings = Nothing, progress As Action(Of String, Long, Long) = Nothing)
  overload: TimeCockpit.Data.Import.Events.PerformImportEventArgs.#ctor*
  nameWithType.vb: PerformImportEventArgs.PerformImportEventArgs(String, Byte(), String, Boolean, String, Guid, Nullable(Of Guid), Action, DataContext, DataContextSettings, Action(Of String, Int64, Int64))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TimeCockpit.Data.Import.Events.PerformImportEventArgs.PerformImportEventArgs(System.String, System.Byte(), System.String, System.Boolean, System.String, System.Guid, System.Nullable(Of System.Guid), System.Action, TimeCockpit.Data.DataContext, TimeCockpit.Data.DataContextSettings, System.Action(Of System.String, System.Int64, System.Int64))
  name.vb: PerformImportEventArgs(String, Byte(), String, Boolean, String, Guid, Nullable(Of Guid), Action, DataContext, DataContextSettings, Action(Of String, Int64, Int64))
- uid: TimeCockpit.Data.Import.Events.PerformImportEventArgs.TargetDataContext
  commentId: P:TimeCockpit.Data.Import.Events.PerformImportEventArgs.TargetDataContext
  id: TargetDataContext
  parent: TimeCockpit.Data.Import.Events.PerformImportEventArgs
  langs:
  - csharp
  - vb
  name: TargetDataContext
  nameWithType: PerformImportEventArgs.TargetDataContext
  fullName: TimeCockpit.Data.Import.Events.PerformImportEventArgs.TargetDataContext
  type: Property
  source:
    path: TimeCockpit.Data.Import
    isExternal: true
  assemblies:
  - TimeCockpit.Data.Import
  namespace: TimeCockpit.Data.Import.Events
  syntax:
    content: public DataContext TargetDataContext { get; }
    parameters: []
    return:
      type: TimeCockpit.Data.DataContext
    content.vb: Public ReadOnly Property TargetDataContext As DataContext
  overload: TimeCockpit.Data.Import.Events.PerformImportEventArgs.TargetDataContext*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TimeCockpit.Data.Import.Events.PerformImportEventArgs.TargetDataContextSettings
  commentId: P:TimeCockpit.Data.Import.Events.PerformImportEventArgs.TargetDataContextSettings
  id: TargetDataContextSettings
  parent: TimeCockpit.Data.Import.Events.PerformImportEventArgs
  langs:
  - csharp
  - vb
  name: TargetDataContextSettings
  nameWithType: PerformImportEventArgs.TargetDataContextSettings
  fullName: TimeCockpit.Data.Import.Events.PerformImportEventArgs.TargetDataContextSettings
  type: Property
  source:
    path: TimeCockpit.Data.Import
    isExternal: true
  assemblies:
  - TimeCockpit.Data.Import
  namespace: TimeCockpit.Data.Import.Events
  syntax:
    content: public DataContextSettings TargetDataContextSettings { get; }
    parameters: []
    return:
      type: TimeCockpit.Data.DataContextSettings
    content.vb: Public ReadOnly Property TargetDataContextSettings As DataContextSettings
  overload: TimeCockpit.Data.Import.Events.PerformImportEventArgs.TargetDataContextSettings*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TimeCockpit.Data.Import.Events.PerformImportEventArgs.Definition
  commentId: P:TimeCockpit.Data.Import.Events.PerformImportEventArgs.Definition
  id: Definition
  parent: TimeCockpit.Data.Import.Events.PerformImportEventArgs
  langs:
  - csharp
  - vb
  name: Definition
  nameWithType: PerformImportEventArgs.Definition
  fullName: TimeCockpit.Data.Import.Events.PerformImportEventArgs.Definition
  type: Property
  source:
    path: TimeCockpit.Data.Import
    isExternal: true
  assemblies:
  - TimeCockpit.Data.Import
  namespace: TimeCockpit.Data.Import.Events
  syntax:
    content: public string Definition { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Definition As String
  overload: TimeCockpit.Data.Import.Events.PerformImportEventArgs.Definition*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TimeCockpit.Data.Import.Events.PerformImportEventArgs.SourceData
  commentId: P:TimeCockpit.Data.Import.Events.PerformImportEventArgs.SourceData
  id: SourceData
  parent: TimeCockpit.Data.Import.Events.PerformImportEventArgs
  langs:
  - csharp
  - vb
  name: SourceData
  nameWithType: PerformImportEventArgs.SourceData
  fullName: TimeCockpit.Data.Import.Events.PerformImportEventArgs.SourceData
  type: Property
  source:
    path: TimeCockpit.Data.Import
    isExternal: true
  assemblies:
  - TimeCockpit.Data.Import
  namespace: TimeCockpit.Data.Import.Events
  syntax:
    content: public byte[] SourceData { get; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: Public ReadOnly Property SourceData As Byte()
  overload: TimeCockpit.Data.Import.Events.PerformImportEventArgs.SourceData*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TimeCockpit.Data.Import.Events.PerformImportEventArgs.SourceFileName
  commentId: P:TimeCockpit.Data.Import.Events.PerformImportEventArgs.SourceFileName
  id: SourceFileName
  parent: TimeCockpit.Data.Import.Events.PerformImportEventArgs
  langs:
  - csharp
  - vb
  name: SourceFileName
  nameWithType: PerformImportEventArgs.SourceFileName
  fullName: TimeCockpit.Data.Import.Events.PerformImportEventArgs.SourceFileName
  type: Property
  source:
    path: TimeCockpit.Data.Import
    isExternal: true
  assemblies:
  - TimeCockpit.Data.Import
  namespace: TimeCockpit.Data.Import.Events
  syntax:
    content: public string SourceFileName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property SourceFileName As String
  overload: TimeCockpit.Data.Import.Events.PerformImportEventArgs.SourceFileName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TimeCockpit.Data.Import.Events.PerformImportEventArgs.SaveOnSucess
  commentId: P:TimeCockpit.Data.Import.Events.PerformImportEventArgs.SaveOnSucess
  id: SaveOnSucess
  parent: TimeCockpit.Data.Import.Events.PerformImportEventArgs
  langs:
  - csharp
  - vb
  name: SaveOnSucess
  nameWithType: PerformImportEventArgs.SaveOnSucess
  fullName: TimeCockpit.Data.Import.Events.PerformImportEventArgs.SaveOnSucess
  type: Property
  source:
    path: TimeCockpit.Data.Import
    isExternal: true
  assemblies:
  - TimeCockpit.Data.Import
  namespace: TimeCockpit.Data.Import.Events
  syntax:
    content: public bool SaveOnSucess { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property SaveOnSucess As Boolean
  overload: TimeCockpit.Data.Import.Events.PerformImportEventArgs.SaveOnSucess*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TimeCockpit.Data.Import.Events.PerformImportEventArgs.DefinitionName
  commentId: P:TimeCockpit.Data.Import.Events.PerformImportEventArgs.DefinitionName
  id: DefinitionName
  parent: TimeCockpit.Data.Import.Events.PerformImportEventArgs
  langs:
  - csharp
  - vb
  name: DefinitionName
  nameWithType: PerformImportEventArgs.DefinitionName
  fullName: TimeCockpit.Data.Import.Events.PerformImportEventArgs.DefinitionName
  type: Property
  source:
    path: TimeCockpit.Data.Import
    isExternal: true
  assemblies:
  - TimeCockpit.Data.Import
  namespace: TimeCockpit.Data.Import.Events
  syntax:
    content: public string DefinitionName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property DefinitionName As String
  overload: TimeCockpit.Data.Import.Events.PerformImportEventArgs.DefinitionName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TimeCockpit.Data.Import.Events.PerformImportEventArgs.ImportTaskId
  commentId: P:TimeCockpit.Data.Import.Events.PerformImportEventArgs.ImportTaskId
  id: ImportTaskId
  parent: TimeCockpit.Data.Import.Events.PerformImportEventArgs
  langs:
  - csharp
  - vb
  name: ImportTaskId
  nameWithType: PerformImportEventArgs.ImportTaskId
  fullName: TimeCockpit.Data.Import.Events.PerformImportEventArgs.ImportTaskId
  type: Property
  source:
    path: TimeCockpit.Data.Import
    isExternal: true
  assemblies:
  - TimeCockpit.Data.Import
  namespace: TimeCockpit.Data.Import.Events
  syntax:
    content: public Guid ImportTaskId { get; }
    parameters: []
    return:
      type: System.Guid
    content.vb: Public ReadOnly Property ImportTaskId As Guid
  overload: TimeCockpit.Data.Import.Events.PerformImportEventArgs.ImportTaskId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TimeCockpit.Data.Import.Events.PerformImportEventArgs.DefinitionId
  commentId: P:TimeCockpit.Data.Import.Events.PerformImportEventArgs.DefinitionId
  id: DefinitionId
  parent: TimeCockpit.Data.Import.Events.PerformImportEventArgs
  langs:
  - csharp
  - vb
  name: DefinitionId
  nameWithType: PerformImportEventArgs.DefinitionId
  fullName: TimeCockpit.Data.Import.Events.PerformImportEventArgs.DefinitionId
  type: Property
  source:
    path: TimeCockpit.Data.Import
    isExternal: true
  assemblies:
  - TimeCockpit.Data.Import
  namespace: TimeCockpit.Data.Import.Events
  syntax:
    content: public Guid? DefinitionId { get; }
    parameters: []
    return:
      type: System.Nullable{System.Guid}
    content.vb: Public ReadOnly Property DefinitionId As Guid?
  overload: TimeCockpit.Data.Import.Events.PerformImportEventArgs.DefinitionId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TimeCockpit.Data.Import.Events.PerformImportEventArgs.Completed
  commentId: P:TimeCockpit.Data.Import.Events.PerformImportEventArgs.Completed
  id: Completed
  parent: TimeCockpit.Data.Import.Events.PerformImportEventArgs
  langs:
  - csharp
  - vb
  name: Completed
  nameWithType: PerformImportEventArgs.Completed
  fullName: TimeCockpit.Data.Import.Events.PerformImportEventArgs.Completed
  type: Property
  source:
    path: TimeCockpit.Data.Import
    isExternal: true
  assemblies:
  - TimeCockpit.Data.Import
  namespace: TimeCockpit.Data.Import.Events
  syntax:
    content: public Action Completed { get; }
    parameters: []
    return:
      type: System.Action
    content.vb: Public ReadOnly Property Completed As Action
  overload: TimeCockpit.Data.Import.Events.PerformImportEventArgs.Completed*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TimeCockpit.Data.Import.Events.PerformImportEventArgs.Progress
  commentId: P:TimeCockpit.Data.Import.Events.PerformImportEventArgs.Progress
  id: Progress
  parent: TimeCockpit.Data.Import.Events.PerformImportEventArgs
  langs:
  - csharp
  - vb
  name: Progress
  nameWithType: PerformImportEventArgs.Progress
  fullName: TimeCockpit.Data.Import.Events.PerformImportEventArgs.Progress
  type: Property
  source:
    path: TimeCockpit.Data.Import
    isExternal: true
  assemblies:
  - TimeCockpit.Data.Import
  namespace: TimeCockpit.Data.Import.Events
  syntax:
    content: public Action<string, long, long> Progress { get; }
    parameters: []
    return:
      type: System.Action{System.String,System.Int64,System.Int64}
    content.vb: Public ReadOnly Property Progress As Action(Of String, Long, Long)
  overload: TimeCockpit.Data.Import.Events.PerformImportEventArgs.Progress*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: TimeCockpit.Data.Import.Events
  commentId: N:TimeCockpit.Data.Import.Events
  isExternal: true
  name: TimeCockpit.Data.Import.Events
  nameWithType: TimeCockpit.Data.Import.Events
  fullName: TimeCockpit.Data.Import.Events
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TimeCockpit.Data.Import.Events.PerformImportEventArgs.#ctor*
  commentId: Overload:TimeCockpit.Data.Import.Events.PerformImportEventArgs.#ctor
  isExternal: true
  name: PerformImportEventArgs
  nameWithType: PerformImportEventArgs.PerformImportEventArgs
  fullName: TimeCockpit.Data.Import.Events.PerformImportEventArgs.PerformImportEventArgs
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Nullable{System.Guid}
  commentId: T:System.Nullable{System.Guid}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Guid>
  nameWithType: Nullable<Guid>
  fullName: System.Nullable<System.Guid>
  nameWithType.vb: Nullable(Of Guid)
  fullName.vb: System.Nullable(Of System.Guid)
  name.vb: Nullable(Of Guid)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action
  commentId: T:System.Action
  parent: System
  isExternal: true
  name: Action
  nameWithType: Action
  fullName: System.Action
- uid: TimeCockpit.Data.DataContext
  commentId: T:TimeCockpit.Data.DataContext
  parent: TimeCockpit.Data
  isExternal: true
  name: DataContext
  nameWithType: DataContext
  fullName: TimeCockpit.Data.DataContext
- uid: TimeCockpit.Data.DataContextSettings
  commentId: T:TimeCockpit.Data.DataContextSettings
  parent: TimeCockpit.Data
  isExternal: true
  name: DataContextSettings
  nameWithType: DataContextSettings
  fullName: TimeCockpit.Data.DataContextSettings
- uid: System.Action{System.String,System.Int64,System.Int64}
  commentId: T:System.Action{System.String,System.Int64,System.Int64}
  parent: System
  definition: System.Action`3
  name: Action<String, Int64, Int64>
  nameWithType: Action<String, Int64, Int64>
  fullName: System.Action<System.String, System.Int64, System.Int64>
  nameWithType.vb: Action(Of String, Int64, Int64)
  fullName.vb: System.Action(Of System.String, System.Int64, System.Int64)
  name.vb: Action(Of String, Int64, Int64)
  spec.csharp:
  - uid: System.Action`3
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`3
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data
  commentId: N:TimeCockpit.Data
  isExternal: true
  name: TimeCockpit.Data
  nameWithType: TimeCockpit.Data
  fullName: TimeCockpit.Data
- uid: System.Action`3
  commentId: T:System.Action`3
  isExternal: true
  name: Action<T1, T2, T3>
  nameWithType: Action<T1, T2, T3>
  fullName: System.Action<T1, T2, T3>
  nameWithType.vb: Action(Of T1, T2, T3)
  fullName.vb: System.Action(Of T1, T2, T3)
  name.vb: Action(Of T1, T2, T3)
  spec.csharp:
  - uid: System.Action`3
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`3
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.Import.Events.PerformImportEventArgs.TargetDataContext*
  commentId: Overload:TimeCockpit.Data.Import.Events.PerformImportEventArgs.TargetDataContext
  isExternal: true
  name: TargetDataContext
  nameWithType: PerformImportEventArgs.TargetDataContext
  fullName: TimeCockpit.Data.Import.Events.PerformImportEventArgs.TargetDataContext
- uid: TimeCockpit.Data.Import.Events.PerformImportEventArgs.TargetDataContextSettings*
  commentId: Overload:TimeCockpit.Data.Import.Events.PerformImportEventArgs.TargetDataContextSettings
  isExternal: true
  name: TargetDataContextSettings
  nameWithType: PerformImportEventArgs.TargetDataContextSettings
  fullName: TimeCockpit.Data.Import.Events.PerformImportEventArgs.TargetDataContextSettings
- uid: TimeCockpit.Data.Import.Events.PerformImportEventArgs.Definition*
  commentId: Overload:TimeCockpit.Data.Import.Events.PerformImportEventArgs.Definition
  isExternal: true
  name: Definition
  nameWithType: PerformImportEventArgs.Definition
  fullName: TimeCockpit.Data.Import.Events.PerformImportEventArgs.Definition
- uid: TimeCockpit.Data.Import.Events.PerformImportEventArgs.SourceData*
  commentId: Overload:TimeCockpit.Data.Import.Events.PerformImportEventArgs.SourceData
  isExternal: true
  name: SourceData
  nameWithType: PerformImportEventArgs.SourceData
  fullName: TimeCockpit.Data.Import.Events.PerformImportEventArgs.SourceData
- uid: TimeCockpit.Data.Import.Events.PerformImportEventArgs.SourceFileName*
  commentId: Overload:TimeCockpit.Data.Import.Events.PerformImportEventArgs.SourceFileName
  isExternal: true
  name: SourceFileName
  nameWithType: PerformImportEventArgs.SourceFileName
  fullName: TimeCockpit.Data.Import.Events.PerformImportEventArgs.SourceFileName
- uid: TimeCockpit.Data.Import.Events.PerformImportEventArgs.SaveOnSucess*
  commentId: Overload:TimeCockpit.Data.Import.Events.PerformImportEventArgs.SaveOnSucess
  isExternal: true
  name: SaveOnSucess
  nameWithType: PerformImportEventArgs.SaveOnSucess
  fullName: TimeCockpit.Data.Import.Events.PerformImportEventArgs.SaveOnSucess
- uid: TimeCockpit.Data.Import.Events.PerformImportEventArgs.DefinitionName*
  commentId: Overload:TimeCockpit.Data.Import.Events.PerformImportEventArgs.DefinitionName
  isExternal: true
  name: DefinitionName
  nameWithType: PerformImportEventArgs.DefinitionName
  fullName: TimeCockpit.Data.Import.Events.PerformImportEventArgs.DefinitionName
- uid: TimeCockpit.Data.Import.Events.PerformImportEventArgs.ImportTaskId*
  commentId: Overload:TimeCockpit.Data.Import.Events.PerformImportEventArgs.ImportTaskId
  isExternal: true
  name: ImportTaskId
  nameWithType: PerformImportEventArgs.ImportTaskId
  fullName: TimeCockpit.Data.Import.Events.PerformImportEventArgs.ImportTaskId
- uid: TimeCockpit.Data.Import.Events.PerformImportEventArgs.DefinitionId*
  commentId: Overload:TimeCockpit.Data.Import.Events.PerformImportEventArgs.DefinitionId
  isExternal: true
  name: DefinitionId
  nameWithType: PerformImportEventArgs.DefinitionId
  fullName: TimeCockpit.Data.Import.Events.PerformImportEventArgs.DefinitionId
- uid: TimeCockpit.Data.Import.Events.PerformImportEventArgs.Completed*
  commentId: Overload:TimeCockpit.Data.Import.Events.PerformImportEventArgs.Completed
  isExternal: true
  name: Completed
  nameWithType: PerformImportEventArgs.Completed
  fullName: TimeCockpit.Data.Import.Events.PerformImportEventArgs.Completed
- uid: TimeCockpit.Data.Import.Events.PerformImportEventArgs.Progress*
  commentId: Overload:TimeCockpit.Data.Import.Events.PerformImportEventArgs.Progress
  isExternal: true
  name: Progress
  nameWithType: PerformImportEventArgs.Progress
  fullName: TimeCockpit.Data.Import.Events.PerformImportEventArgs.Progress
