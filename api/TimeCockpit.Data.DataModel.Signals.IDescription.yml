### YamlMime:ManagedReference
items:
- uid: TimeCockpit.Data.DataModel.Signals.IDescription
  commentId: T:TimeCockpit.Data.DataModel.Signals.IDescription
  id: IDescription
  parent: TimeCockpit.Data.DataModel.Signals
  children:
  - TimeCockpit.Data.DataModel.Signals.IDescription.Category
  - TimeCockpit.Data.DataModel.Signals.IDescription.Description
  langs:
  - csharp
  - vb
  name: IDescription
  nameWithType: IDescription
  fullName: TimeCockpit.Data.DataModel.Signals.IDescription
  type: Interface
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel.Signals
  summary: "\nInterface for Entity Objects that have a description\n"
  syntax:
    content: public interface IDescription
    content.vb: Public Interface IDescription
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: TimeCockpit.Data.DataModel.Signals.IDescription.Description
  commentId: P:TimeCockpit.Data.DataModel.Signals.IDescription.Description
  id: Description
  parent: TimeCockpit.Data.DataModel.Signals.IDescription
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: IDescription.Description
  fullName: TimeCockpit.Data.DataModel.Signals.IDescription.Description
  type: Property
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel.Signals
  summary: "\nGets or sets the Description.\n"
  syntax:
    content: string Description { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property Description As String
  overload: TimeCockpit.Data.DataModel.Signals.IDescription.Description*
  modifiers.csharp:
  - get
  - set
- uid: TimeCockpit.Data.DataModel.Signals.IDescription.Category
  commentId: P:TimeCockpit.Data.DataModel.Signals.IDescription.Category
  id: Category
  parent: TimeCockpit.Data.DataModel.Signals.IDescription
  langs:
  - csharp
  - vb
  name: Category
  nameWithType: IDescription.Category
  fullName: TimeCockpit.Data.DataModel.Signals.IDescription.Category
  type: Property
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel.Signals
  summary: "\nGets or sets the category this entity object belongs to\n"
  syntax:
    content: string Category { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property Category As String
  overload: TimeCockpit.Data.DataModel.Signals.IDescription.Category*
  modifiers.csharp:
  - get
  - set
references:
- uid: TimeCockpit.Data.DataModel.Signals
  commentId: N:TimeCockpit.Data.DataModel.Signals
  isExternal: true
  name: TimeCockpit.Data.DataModel.Signals
  nameWithType: TimeCockpit.Data.DataModel.Signals
  fullName: TimeCockpit.Data.DataModel.Signals
- uid: TimeCockpit.Data.DataModel.Signals.IDescription.Description*
  commentId: Overload:TimeCockpit.Data.DataModel.Signals.IDescription.Description
  isExternal: true
  name: Description
  nameWithType: IDescription.Description
  fullName: TimeCockpit.Data.DataModel.Signals.IDescription.Description
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TimeCockpit.Data.DataModel.Signals.IDescription.Category*
  commentId: Overload:TimeCockpit.Data.DataModel.Signals.IDescription.Category
  isExternal: true
  name: Category
  nameWithType: IDescription.Category
  fullName: TimeCockpit.Data.DataModel.Signals.IDescription.Category
