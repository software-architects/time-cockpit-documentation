### YamlMime:ManagedReference
items:
- uid: TimeCockpit.Data.Extensibility.ITypeNameProvider
  commentId: T:TimeCockpit.Data.Extensibility.ITypeNameProvider
  id: ITypeNameProvider
  parent: TimeCockpit.Data.Extensibility
  children:
  - TimeCockpit.Data.Extensibility.ITypeNameProvider.GetFunctionTypeNames
  - TimeCockpit.Data.Extensibility.ITypeNameProvider.GetInterfaceTypeNames
  - TimeCockpit.Data.Extensibility.ITypeNameProvider.GetTriggerTypeNames
  langs:
  - csharp
  - vb
  name: ITypeNameProvider
  nameWithType: ITypeNameProvider
  fullName: TimeCockpit.Data.Extensibility.ITypeNameProvider
  type: Interface
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Extensibility/ITypeProvider.cs
    id: ITypeNameProvider
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Extensibility/ITypeProvider.cs
    startLine: 14
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Extensibility
  summary: "\nAn interface that when implemented provides 3rd party types for e.g. functions, interfaces etc.\n"
  example: []
  syntax:
    content: public interface ITypeNameProvider
    content.vb: Public Interface ITypeNameProvider
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: TimeCockpit.Data.Extensibility.ITypeNameProvider.GetFunctionTypeNames
  commentId: M:TimeCockpit.Data.Extensibility.ITypeNameProvider.GetFunctionTypeNames
  id: GetFunctionTypeNames
  parent: TimeCockpit.Data.Extensibility.ITypeNameProvider
  langs:
  - csharp
  - vb
  name: GetFunctionTypeNames()
  nameWithType: ITypeNameProvider.GetFunctionTypeNames()
  fullName: TimeCockpit.Data.Extensibility.ITypeNameProvider.GetFunctionTypeNames()
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Extensibility/ITypeProvider.cs
    id: GetFunctionTypeNames
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Extensibility/ITypeProvider.cs
    startLine: 20
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Extensibility
  summary: "\nGets the assemblies from a given source.\n"
  example: []
  syntax:
    content: IEnumerable<ExternalType> GetFunctionTypeNames()
    return:
      type: System.Collections.Generic.IEnumerable{TimeCockpit.Data.Extensibility.ExternalType}
      description: A list of <xref href="TimeCockpit.Data.Extensibility.ExternalType" data-throw-if-not-resolved="false"></xref>s.
    content.vb: Function GetFunctionTypeNames As IEnumerable(Of ExternalType)
  overload: TimeCockpit.Data.Extensibility.ITypeNameProvider.GetFunctionTypeNames*
- uid: TimeCockpit.Data.Extensibility.ITypeNameProvider.GetInterfaceTypeNames
  commentId: M:TimeCockpit.Data.Extensibility.ITypeNameProvider.GetInterfaceTypeNames
  id: GetInterfaceTypeNames
  parent: TimeCockpit.Data.Extensibility.ITypeNameProvider
  langs:
  - csharp
  - vb
  name: GetInterfaceTypeNames()
  nameWithType: ITypeNameProvider.GetInterfaceTypeNames()
  fullName: TimeCockpit.Data.Extensibility.ITypeNameProvider.GetInterfaceTypeNames()
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Extensibility/ITypeProvider.cs
    id: GetInterfaceTypeNames
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Extensibility/ITypeProvider.cs
    startLine: 26
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Extensibility
  summary: "\nGets the assemblies from a given source.\n"
  example: []
  syntax:
    content: IEnumerable<ExternalType> GetInterfaceTypeNames()
    return:
      type: System.Collections.Generic.IEnumerable{TimeCockpit.Data.Extensibility.ExternalType}
      description: A list of <xref href="TimeCockpit.Data.Extensibility.ExternalType" data-throw-if-not-resolved="false"></xref>s.
    content.vb: Function GetInterfaceTypeNames As IEnumerable(Of ExternalType)
  overload: TimeCockpit.Data.Extensibility.ITypeNameProvider.GetInterfaceTypeNames*
- uid: TimeCockpit.Data.Extensibility.ITypeNameProvider.GetTriggerTypeNames
  commentId: M:TimeCockpit.Data.Extensibility.ITypeNameProvider.GetTriggerTypeNames
  id: GetTriggerTypeNames
  parent: TimeCockpit.Data.Extensibility.ITypeNameProvider
  langs:
  - csharp
  - vb
  name: GetTriggerTypeNames()
  nameWithType: ITypeNameProvider.GetTriggerTypeNames()
  fullName: TimeCockpit.Data.Extensibility.ITypeNameProvider.GetTriggerTypeNames()
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Extensibility/ITypeProvider.cs
    id: GetTriggerTypeNames
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Extensibility/ITypeProvider.cs
    startLine: 32
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Extensibility
  summary: "\nGets the assemblies from a given source.\n"
  example: []
  syntax:
    content: IEnumerable<ExternalType> GetTriggerTypeNames()
    return:
      type: System.Collections.Generic.IEnumerable{TimeCockpit.Data.Extensibility.ExternalType}
      description: A list of <xref href="TimeCockpit.Data.Extensibility.ExternalType" data-throw-if-not-resolved="false"></xref>s.
    content.vb: Function GetTriggerTypeNames As IEnumerable(Of ExternalType)
  overload: TimeCockpit.Data.Extensibility.ITypeNameProvider.GetTriggerTypeNames*
references:
- uid: TimeCockpit.Data.Extensibility
  commentId: N:TimeCockpit.Data.Extensibility
  isExternal: false
  name: TimeCockpit.Data.Extensibility
  nameWithType: TimeCockpit.Data.Extensibility
  fullName: TimeCockpit.Data.Extensibility
- uid: TimeCockpit.Data.Extensibility.ExternalType
  commentId: T:TimeCockpit.Data.Extensibility.ExternalType
  parent: TimeCockpit.Data.Extensibility
  isExternal: false
  name: ExternalType
  nameWithType: ExternalType
  fullName: TimeCockpit.Data.Extensibility.ExternalType
- uid: TimeCockpit.Data.Extensibility.ITypeNameProvider.GetFunctionTypeNames*
  commentId: Overload:TimeCockpit.Data.Extensibility.ITypeNameProvider.GetFunctionTypeNames
  isExternal: false
  name: GetFunctionTypeNames
  nameWithType: ITypeNameProvider.GetFunctionTypeNames
  fullName: TimeCockpit.Data.Extensibility.ITypeNameProvider.GetFunctionTypeNames
- uid: System.Collections.Generic.IEnumerable{TimeCockpit.Data.Extensibility.ExternalType}
  commentId: T:System.Collections.Generic.IEnumerable{TimeCockpit.Data.Extensibility.ExternalType}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<ExternalType>
  nameWithType: IEnumerable<ExternalType>
  fullName: System.Collections.Generic.IEnumerable<TimeCockpit.Data.Extensibility.ExternalType>
  nameWithType.vb: IEnumerable(Of ExternalType)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TimeCockpit.Data.Extensibility.ExternalType)
  name.vb: IEnumerable(Of ExternalType)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TimeCockpit.Data.Extensibility.ExternalType
    name: ExternalType
    nameWithType: ExternalType
    fullName: TimeCockpit.Data.Extensibility.ExternalType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TimeCockpit.Data.Extensibility.ExternalType
    name: ExternalType
    nameWithType: ExternalType
    fullName: TimeCockpit.Data.Extensibility.ExternalType
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: TimeCockpit.Data.Extensibility.ITypeNameProvider.GetInterfaceTypeNames*
  commentId: Overload:TimeCockpit.Data.Extensibility.ITypeNameProvider.GetInterfaceTypeNames
  isExternal: false
  name: GetInterfaceTypeNames
  nameWithType: ITypeNameProvider.GetInterfaceTypeNames
  fullName: TimeCockpit.Data.Extensibility.ITypeNameProvider.GetInterfaceTypeNames
- uid: TimeCockpit.Data.Extensibility.ITypeNameProvider.GetTriggerTypeNames*
  commentId: Overload:TimeCockpit.Data.Extensibility.ITypeNameProvider.GetTriggerTypeNames
  isExternal: false
  name: GetTriggerTypeNames
  nameWithType: ITypeNameProvider.GetTriggerTypeNames
  fullName: TimeCockpit.Data.Extensibility.ITypeNameProvider.GetTriggerTypeNames
