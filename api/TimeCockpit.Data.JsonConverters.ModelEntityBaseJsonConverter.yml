### YamlMime:ManagedReference
items:
- uid: TimeCockpit.Data.JsonConverters.ModelEntityBaseJsonConverter
  commentId: T:TimeCockpit.Data.JsonConverters.ModelEntityBaseJsonConverter
  id: ModelEntityBaseJsonConverter
  parent: TimeCockpit.Data.JsonConverters
  children:
  - TimeCockpit.Data.JsonConverters.ModelEntityBaseJsonConverter.Create(System.Type)
  - TimeCockpit.Data.JsonConverters.ModelEntityBaseJsonConverter.ReadAnonymousTypeArray(Newtonsoft.Json.JsonReader,TimeCockpit.Data.DataModel.Model)
  - TimeCockpit.Data.JsonConverters.ModelEntityBaseJsonConverter.WriteAnonymousTypeArray(Newtonsoft.Json.JsonWriter,TimeCockpit.Data.DataModel.Model,System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.ModelEntityBase})
  langs:
  - csharp
  - vb
  name: ModelEntityBaseJsonConverter
  nameWithType: ModelEntityBaseJsonConverter
  fullName: TimeCockpit.Data.JsonConverters.ModelEntityBaseJsonConverter
  type: Class
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/JsonConverters/ModelEntityBaseJsonConverter.cs
    id: ModelEntityBaseJsonConverter
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/JsonConverters/ModelEntityBaseJsonConverter.cs
    startLine: 20
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.JsonConverters
  summary: "\nCustom converter for <xref href=\"TimeCockpit.Data.DataModel.ModelEntityBase\" data-throw-if-not-resolved=\"false\"></xref>s into Json.\n"
  remarks: "\nThis converter creates a new instance of <xref href=\"TimeCockpit.Data.DataModel.ModelEntity\" data-throw-if-not-resolved=\"false\"></xref> whenever\nthe Json.Net serializer encounters a <xref href=\"TimeCockpit.Data.DataModel.ModelEntityBase\" data-throw-if-not-resolved=\"false\"></xref> to deserialize.\n"
  example: []
  syntax:
    content: 'public class ModelEntityBaseJsonConverter : CustomCreationConverter<ModelEntityBase>'
    content.vb: >-
      Public Class ModelEntityBaseJsonConverter
          Inherits CustomCreationConverter(Of ModelEntityBase)
  inheritance:
  - System.Object
  - Newtonsoft.Json.JsonConverter
  - Newtonsoft.Json.Converters.CustomCreationConverter{TimeCockpit.Data.DataModel.ModelEntityBase}
  inheritedMembers:
  - Newtonsoft.Json.Converters.CustomCreationConverter{TimeCockpit.Data.DataModel.ModelEntityBase}.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)
  - Newtonsoft.Json.Converters.CustomCreationConverter{TimeCockpit.Data.DataModel.ModelEntityBase}.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)
  - Newtonsoft.Json.Converters.CustomCreationConverter{TimeCockpit.Data.DataModel.ModelEntityBase}.CanConvert(System.Type)
  - Newtonsoft.Json.Converters.CustomCreationConverter{TimeCockpit.Data.DataModel.ModelEntityBase}.CanWrite
  - Newtonsoft.Json.JsonConverter.GetSchema
  - Newtonsoft.Json.JsonConverter.CanRead
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TimeCockpit.Data.JsonConverters.ModelEntityBaseJsonConverter.WriteAnonymousTypeArray(Newtonsoft.Json.JsonWriter,TimeCockpit.Data.DataModel.Model,System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.ModelEntityBase})
  commentId: M:TimeCockpit.Data.JsonConverters.ModelEntityBaseJsonConverter.WriteAnonymousTypeArray(Newtonsoft.Json.JsonWriter,TimeCockpit.Data.DataModel.Model,System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.ModelEntityBase})
  id: WriteAnonymousTypeArray(Newtonsoft.Json.JsonWriter,TimeCockpit.Data.DataModel.Model,System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.ModelEntityBase})
  parent: TimeCockpit.Data.JsonConverters.ModelEntityBaseJsonConverter
  langs:
  - csharp
  - vb
  name: WriteAnonymousTypeArray(JsonWriter, Model, IEnumerable<ModelEntityBase>)
  nameWithType: ModelEntityBaseJsonConverter.WriteAnonymousTypeArray(JsonWriter, Model, IEnumerable<ModelEntityBase>)
  fullName: TimeCockpit.Data.JsonConverters.ModelEntityBaseJsonConverter.WriteAnonymousTypeArray(Newtonsoft.Json.JsonWriter, TimeCockpit.Data.DataModel.Model, System.Collections.Generic.IEnumerable<TimeCockpit.Data.DataModel.ModelEntityBase>)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/JsonConverters/ModelEntityBaseJsonConverter.cs
    id: WriteAnonymousTypeArray
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/JsonConverters/ModelEntityBaseJsonConverter.cs
    startLine: 28
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.JsonConverters
  summary: "\nWrites a collection of model entity base types to the writer.\n"
  example: []
  syntax:
    content: public static void WriteAnonymousTypeArray(JsonWriter writer, Model model, IEnumerable<ModelEntityBase> anonymousTypes)
    parameters:
    - id: writer
      type: Newtonsoft.Json.JsonWriter
      description: the writer to write to.
    - id: model
      type: TimeCockpit.Data.DataModel.Model
      description: The model.
    - id: anonymousTypes
      type: System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.ModelEntityBase}
      description: <xref href="TimeCockpit.Data.DataModel.ModelEntityBase" data-throw-if-not-resolved="false"></xref> types to serialize.
    content.vb: Public Shared Sub WriteAnonymousTypeArray(writer As JsonWriter, model As Model, anonymousTypes As IEnumerable(Of ModelEntityBase))
  overload: TimeCockpit.Data.JsonConverters.ModelEntityBaseJsonConverter.WriteAnonymousTypeArray*
  nameWithType.vb: ModelEntityBaseJsonConverter.WriteAnonymousTypeArray(JsonWriter, Model, IEnumerable(Of ModelEntityBase))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TimeCockpit.Data.JsonConverters.ModelEntityBaseJsonConverter.WriteAnonymousTypeArray(Newtonsoft.Json.JsonWriter, TimeCockpit.Data.DataModel.Model, System.Collections.Generic.IEnumerable(Of TimeCockpit.Data.DataModel.ModelEntityBase))
  name.vb: WriteAnonymousTypeArray(JsonWriter, Model, IEnumerable(Of ModelEntityBase))
- uid: TimeCockpit.Data.JsonConverters.ModelEntityBaseJsonConverter.ReadAnonymousTypeArray(Newtonsoft.Json.JsonReader,TimeCockpit.Data.DataModel.Model)
  commentId: M:TimeCockpit.Data.JsonConverters.ModelEntityBaseJsonConverter.ReadAnonymousTypeArray(Newtonsoft.Json.JsonReader,TimeCockpit.Data.DataModel.Model)
  id: ReadAnonymousTypeArray(Newtonsoft.Json.JsonReader,TimeCockpit.Data.DataModel.Model)
  parent: TimeCockpit.Data.JsonConverters.ModelEntityBaseJsonConverter
  langs:
  - csharp
  - vb
  name: ReadAnonymousTypeArray(JsonReader, Model)
  nameWithType: ModelEntityBaseJsonConverter.ReadAnonymousTypeArray(JsonReader, Model)
  fullName: TimeCockpit.Data.JsonConverters.ModelEntityBaseJsonConverter.ReadAnonymousTypeArray(Newtonsoft.Json.JsonReader, TimeCockpit.Data.DataModel.Model)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/JsonConverters/ModelEntityBaseJsonConverter.cs
    id: ReadAnonymousTypeArray
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/JsonConverters/ModelEntityBaseJsonConverter.cs
    startLine: 54
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.JsonConverters
  summary: "\nReads an array of model entity base instances\n"
  example: []
  syntax:
    content: public static IEnumerable<ModelEntityBase> ReadAnonymousTypeArray(JsonReader reader, Model model)
    parameters:
    - id: reader
      type: Newtonsoft.Json.JsonReader
      description: the reader to read from.
    - id: model
      type: TimeCockpit.Data.DataModel.Model
      description: The model.
    return:
      type: System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.ModelEntityBase}
      description: Returns a collection of model entity base.
    content.vb: Public Shared Function ReadAnonymousTypeArray(reader As JsonReader, model As Model) As IEnumerable(Of ModelEntityBase)
  overload: TimeCockpit.Data.JsonConverters.ModelEntityBaseJsonConverter.ReadAnonymousTypeArray*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: TimeCockpit.Data.JsonConverters.ModelEntityBaseJsonConverter.Create(System.Type)
  commentId: M:TimeCockpit.Data.JsonConverters.ModelEntityBaseJsonConverter.Create(System.Type)
  id: Create(System.Type)
  parent: TimeCockpit.Data.JsonConverters.ModelEntityBaseJsonConverter
  langs:
  - csharp
  - vb
  name: Create(Type)
  nameWithType: ModelEntityBaseJsonConverter.Create(Type)
  fullName: TimeCockpit.Data.JsonConverters.ModelEntityBaseJsonConverter.Create(System.Type)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/JsonConverters/ModelEntityBaseJsonConverter.cs
    id: Create
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/JsonConverters/ModelEntityBaseJsonConverter.cs
    startLine: 102
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.JsonConverters
  summary: "\nCreates the specified object type.\n"
  example: []
  syntax:
    content: public override ModelEntityBase Create(Type objectType)
    parameters:
    - id: objectType
      type: System.Type
      description: Type of the object.
    return:
      type: TimeCockpit.Data.DataModel.ModelEntityBase
      description: an instance of <xref href="TimeCockpit.Data.DataModel.ModelEntity" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Overrides Function Create(objectType As Type) As ModelEntityBase
  overridden: Newtonsoft.Json.Converters.CustomCreationConverter{TimeCockpit.Data.DataModel.ModelEntityBase}.Create(System.Type)
  overload: TimeCockpit.Data.JsonConverters.ModelEntityBaseJsonConverter.Create*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: TimeCockpit.Data.DataModel.ModelEntityBase
  commentId: T:TimeCockpit.Data.DataModel.ModelEntityBase
  parent: TimeCockpit.Data.DataModel
  isExternal: false
  name: ModelEntityBase
  nameWithType: ModelEntityBase
  fullName: TimeCockpit.Data.DataModel.ModelEntityBase
- uid: TimeCockpit.Data.DataModel.ModelEntity
  commentId: T:TimeCockpit.Data.DataModel.ModelEntity
  parent: TimeCockpit.Data.DataModel
  isExternal: false
  name: ModelEntity
  nameWithType: ModelEntity
  fullName: TimeCockpit.Data.DataModel.ModelEntity
- uid: TimeCockpit.Data.JsonConverters
  commentId: N:TimeCockpit.Data.JsonConverters
  isExternal: false
  name: TimeCockpit.Data.JsonConverters
  nameWithType: TimeCockpit.Data.JsonConverters
  fullName: TimeCockpit.Data.JsonConverters
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Newtonsoft.Json.JsonConverter
  commentId: T:Newtonsoft.Json.JsonConverter
  parent: Newtonsoft.Json
  isExternal: true
  name: JsonConverter
  nameWithType: JsonConverter
  fullName: Newtonsoft.Json.JsonConverter
- uid: Newtonsoft.Json.Converters.CustomCreationConverter{TimeCockpit.Data.DataModel.ModelEntityBase}
  commentId: T:Newtonsoft.Json.Converters.CustomCreationConverter{TimeCockpit.Data.DataModel.ModelEntityBase}
  parent: Newtonsoft.Json.Converters
  definition: Newtonsoft.Json.Converters.CustomCreationConverter`1
  name: CustomCreationConverter<ModelEntityBase>
  nameWithType: CustomCreationConverter<ModelEntityBase>
  fullName: Newtonsoft.Json.Converters.CustomCreationConverter<TimeCockpit.Data.DataModel.ModelEntityBase>
  nameWithType.vb: CustomCreationConverter(Of ModelEntityBase)
  fullName.vb: Newtonsoft.Json.Converters.CustomCreationConverter(Of TimeCockpit.Data.DataModel.ModelEntityBase)
  name.vb: CustomCreationConverter(Of ModelEntityBase)
  spec.csharp:
  - uid: Newtonsoft.Json.Converters.CustomCreationConverter`1
    name: CustomCreationConverter
    nameWithType: CustomCreationConverter
    fullName: Newtonsoft.Json.Converters.CustomCreationConverter
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TimeCockpit.Data.DataModel.ModelEntityBase
    name: ModelEntityBase
    nameWithType: ModelEntityBase
    fullName: TimeCockpit.Data.DataModel.ModelEntityBase
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Newtonsoft.Json.Converters.CustomCreationConverter`1
    name: CustomCreationConverter
    nameWithType: CustomCreationConverter
    fullName: Newtonsoft.Json.Converters.CustomCreationConverter
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TimeCockpit.Data.DataModel.ModelEntityBase
    name: ModelEntityBase
    nameWithType: ModelEntityBase
    fullName: TimeCockpit.Data.DataModel.ModelEntityBase
  - name: )
    nameWithType: )
    fullName: )
- uid: Newtonsoft.Json.Converters.CustomCreationConverter{TimeCockpit.Data.DataModel.ModelEntityBase}.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)
  commentId: M:Newtonsoft.Json.Converters.CustomCreationConverter{TimeCockpit.Data.DataModel.ModelEntityBase}.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)
  parent: Newtonsoft.Json.Converters.CustomCreationConverter{TimeCockpit.Data.DataModel.ModelEntityBase}
  definition: Newtonsoft.Json.Converters.CustomCreationConverter`1.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)
  name: WriteJson(JsonWriter, Object, JsonSerializer)
  nameWithType: CustomCreationConverter<ModelEntityBase>.WriteJson(JsonWriter, Object, JsonSerializer)
  fullName: Newtonsoft.Json.Converters.CustomCreationConverter<TimeCockpit.Data.DataModel.ModelEntityBase>.WriteJson(Newtonsoft.Json.JsonWriter, System.Object, Newtonsoft.Json.JsonSerializer)
  nameWithType.vb: CustomCreationConverter(Of ModelEntityBase).WriteJson(JsonWriter, Object, JsonSerializer)
  fullName.vb: Newtonsoft.Json.Converters.CustomCreationConverter(Of TimeCockpit.Data.DataModel.ModelEntityBase).WriteJson(Newtonsoft.Json.JsonWriter, System.Object, Newtonsoft.Json.JsonSerializer)
  spec.csharp:
  - uid: Newtonsoft.Json.Converters.CustomCreationConverter`1.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)
    name: WriteJson
    nameWithType: CustomCreationConverter<ModelEntityBase>.WriteJson
    fullName: Newtonsoft.Json.Converters.CustomCreationConverter<TimeCockpit.Data.DataModel.ModelEntityBase>.WriteJson
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Newtonsoft.Json.JsonWriter
    name: JsonWriter
    nameWithType: JsonWriter
    fullName: Newtonsoft.Json.JsonWriter
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Newtonsoft.Json.JsonSerializer
    name: JsonSerializer
    nameWithType: JsonSerializer
    fullName: Newtonsoft.Json.JsonSerializer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Newtonsoft.Json.Converters.CustomCreationConverter`1.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)
    name: WriteJson
    nameWithType: CustomCreationConverter(Of ModelEntityBase).WriteJson
    fullName: Newtonsoft.Json.Converters.CustomCreationConverter(Of TimeCockpit.Data.DataModel.ModelEntityBase).WriteJson
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Newtonsoft.Json.JsonWriter
    name: JsonWriter
    nameWithType: JsonWriter
    fullName: Newtonsoft.Json.JsonWriter
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Newtonsoft.Json.JsonSerializer
    name: JsonSerializer
    nameWithType: JsonSerializer
    fullName: Newtonsoft.Json.JsonSerializer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Newtonsoft.Json.Converters.CustomCreationConverter{TimeCockpit.Data.DataModel.ModelEntityBase}.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)
  commentId: M:Newtonsoft.Json.Converters.CustomCreationConverter{TimeCockpit.Data.DataModel.ModelEntityBase}.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)
  parent: Newtonsoft.Json.Converters.CustomCreationConverter{TimeCockpit.Data.DataModel.ModelEntityBase}
  definition: Newtonsoft.Json.Converters.CustomCreationConverter`1.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)
  name: ReadJson(JsonReader, Type, Object, JsonSerializer)
  nameWithType: CustomCreationConverter<ModelEntityBase>.ReadJson(JsonReader, Type, Object, JsonSerializer)
  fullName: Newtonsoft.Json.Converters.CustomCreationConverter<TimeCockpit.Data.DataModel.ModelEntityBase>.ReadJson(Newtonsoft.Json.JsonReader, System.Type, System.Object, Newtonsoft.Json.JsonSerializer)
  nameWithType.vb: CustomCreationConverter(Of ModelEntityBase).ReadJson(JsonReader, Type, Object, JsonSerializer)
  fullName.vb: Newtonsoft.Json.Converters.CustomCreationConverter(Of TimeCockpit.Data.DataModel.ModelEntityBase).ReadJson(Newtonsoft.Json.JsonReader, System.Type, System.Object, Newtonsoft.Json.JsonSerializer)
  spec.csharp:
  - uid: Newtonsoft.Json.Converters.CustomCreationConverter`1.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)
    name: ReadJson
    nameWithType: CustomCreationConverter<ModelEntityBase>.ReadJson
    fullName: Newtonsoft.Json.Converters.CustomCreationConverter<TimeCockpit.Data.DataModel.ModelEntityBase>.ReadJson
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Newtonsoft.Json.JsonReader
    name: JsonReader
    nameWithType: JsonReader
    fullName: Newtonsoft.Json.JsonReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Newtonsoft.Json.JsonSerializer
    name: JsonSerializer
    nameWithType: JsonSerializer
    fullName: Newtonsoft.Json.JsonSerializer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Newtonsoft.Json.Converters.CustomCreationConverter`1.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)
    name: ReadJson
    nameWithType: CustomCreationConverter(Of ModelEntityBase).ReadJson
    fullName: Newtonsoft.Json.Converters.CustomCreationConverter(Of TimeCockpit.Data.DataModel.ModelEntityBase).ReadJson
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Newtonsoft.Json.JsonReader
    name: JsonReader
    nameWithType: JsonReader
    fullName: Newtonsoft.Json.JsonReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Newtonsoft.Json.JsonSerializer
    name: JsonSerializer
    nameWithType: JsonSerializer
    fullName: Newtonsoft.Json.JsonSerializer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Newtonsoft.Json.Converters.CustomCreationConverter{TimeCockpit.Data.DataModel.ModelEntityBase}.CanConvert(System.Type)
  commentId: M:Newtonsoft.Json.Converters.CustomCreationConverter{TimeCockpit.Data.DataModel.ModelEntityBase}.CanConvert(System.Type)
  parent: Newtonsoft.Json.Converters.CustomCreationConverter{TimeCockpit.Data.DataModel.ModelEntityBase}
  definition: Newtonsoft.Json.Converters.CustomCreationConverter`1.CanConvert(System.Type)
  name: CanConvert(Type)
  nameWithType: CustomCreationConverter<ModelEntityBase>.CanConvert(Type)
  fullName: Newtonsoft.Json.Converters.CustomCreationConverter<TimeCockpit.Data.DataModel.ModelEntityBase>.CanConvert(System.Type)
  nameWithType.vb: CustomCreationConverter(Of ModelEntityBase).CanConvert(Type)
  fullName.vb: Newtonsoft.Json.Converters.CustomCreationConverter(Of TimeCockpit.Data.DataModel.ModelEntityBase).CanConvert(System.Type)
  spec.csharp:
  - uid: Newtonsoft.Json.Converters.CustomCreationConverter`1.CanConvert(System.Type)
    name: CanConvert
    nameWithType: CustomCreationConverter<ModelEntityBase>.CanConvert
    fullName: Newtonsoft.Json.Converters.CustomCreationConverter<TimeCockpit.Data.DataModel.ModelEntityBase>.CanConvert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Newtonsoft.Json.Converters.CustomCreationConverter`1.CanConvert(System.Type)
    name: CanConvert
    nameWithType: CustomCreationConverter(Of ModelEntityBase).CanConvert
    fullName: Newtonsoft.Json.Converters.CustomCreationConverter(Of TimeCockpit.Data.DataModel.ModelEntityBase).CanConvert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Newtonsoft.Json.Converters.CustomCreationConverter{TimeCockpit.Data.DataModel.ModelEntityBase}.CanWrite
  commentId: P:Newtonsoft.Json.Converters.CustomCreationConverter{TimeCockpit.Data.DataModel.ModelEntityBase}.CanWrite
  parent: Newtonsoft.Json.Converters.CustomCreationConverter{TimeCockpit.Data.DataModel.ModelEntityBase}
  definition: Newtonsoft.Json.Converters.CustomCreationConverter`1.CanWrite
  name: CanWrite
  nameWithType: CustomCreationConverter<ModelEntityBase>.CanWrite
  fullName: Newtonsoft.Json.Converters.CustomCreationConverter<TimeCockpit.Data.DataModel.ModelEntityBase>.CanWrite
  nameWithType.vb: CustomCreationConverter(Of ModelEntityBase).CanWrite
  fullName.vb: Newtonsoft.Json.Converters.CustomCreationConverter(Of TimeCockpit.Data.DataModel.ModelEntityBase).CanWrite
- uid: Newtonsoft.Json.JsonConverter.GetSchema
  commentId: M:Newtonsoft.Json.JsonConverter.GetSchema
  parent: Newtonsoft.Json.JsonConverter
  isExternal: true
  name: GetSchema()
  nameWithType: JsonConverter.GetSchema()
  fullName: Newtonsoft.Json.JsonConverter.GetSchema()
  spec.csharp:
  - uid: Newtonsoft.Json.JsonConverter.GetSchema
    name: GetSchema
    nameWithType: JsonConverter.GetSchema
    fullName: Newtonsoft.Json.JsonConverter.GetSchema
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Newtonsoft.Json.JsonConverter.GetSchema
    name: GetSchema
    nameWithType: JsonConverter.GetSchema
    fullName: Newtonsoft.Json.JsonConverter.GetSchema
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Newtonsoft.Json.JsonConverter.CanRead
  commentId: P:Newtonsoft.Json.JsonConverter.CanRead
  parent: Newtonsoft.Json.JsonConverter
  isExternal: true
  name: CanRead
  nameWithType: JsonConverter.CanRead
  fullName: Newtonsoft.Json.JsonConverter.CanRead
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.DataModel
  commentId: N:TimeCockpit.Data.DataModel
  isExternal: false
  name: TimeCockpit.Data.DataModel
  nameWithType: TimeCockpit.Data.DataModel
  fullName: TimeCockpit.Data.DataModel
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Newtonsoft.Json
  commentId: N:Newtonsoft.Json
  isExternal: false
  name: Newtonsoft.Json
  nameWithType: Newtonsoft.Json
  fullName: Newtonsoft.Json
- uid: Newtonsoft.Json.Converters.CustomCreationConverter`1
  commentId: T:Newtonsoft.Json.Converters.CustomCreationConverter`1
  isExternal: true
  name: CustomCreationConverter<T>
  nameWithType: CustomCreationConverter<T>
  fullName: Newtonsoft.Json.Converters.CustomCreationConverter<T>
  nameWithType.vb: CustomCreationConverter(Of T)
  fullName.vb: Newtonsoft.Json.Converters.CustomCreationConverter(Of T)
  name.vb: CustomCreationConverter(Of T)
  spec.csharp:
  - uid: Newtonsoft.Json.Converters.CustomCreationConverter`1
    name: CustomCreationConverter
    nameWithType: CustomCreationConverter
    fullName: Newtonsoft.Json.Converters.CustomCreationConverter
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Newtonsoft.Json.Converters.CustomCreationConverter`1
    name: CustomCreationConverter
    nameWithType: CustomCreationConverter
    fullName: Newtonsoft.Json.Converters.CustomCreationConverter
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Newtonsoft.Json.Converters
  commentId: N:Newtonsoft.Json.Converters
  isExternal: false
  name: Newtonsoft.Json.Converters
  nameWithType: Newtonsoft.Json.Converters
  fullName: Newtonsoft.Json.Converters
- uid: Newtonsoft.Json.Converters.CustomCreationConverter`1.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)
  commentId: M:Newtonsoft.Json.Converters.CustomCreationConverter`1.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)
  isExternal: true
  name: WriteJson(JsonWriter, Object, JsonSerializer)
  nameWithType: CustomCreationConverter<T>.WriteJson(JsonWriter, Object, JsonSerializer)
  fullName: Newtonsoft.Json.Converters.CustomCreationConverter<T>.WriteJson(Newtonsoft.Json.JsonWriter, System.Object, Newtonsoft.Json.JsonSerializer)
  nameWithType.vb: CustomCreationConverter(Of T).WriteJson(JsonWriter, Object, JsonSerializer)
  fullName.vb: Newtonsoft.Json.Converters.CustomCreationConverter(Of T).WriteJson(Newtonsoft.Json.JsonWriter, System.Object, Newtonsoft.Json.JsonSerializer)
  spec.csharp:
  - uid: Newtonsoft.Json.Converters.CustomCreationConverter`1.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)
    name: WriteJson
    nameWithType: CustomCreationConverter<T>.WriteJson
    fullName: Newtonsoft.Json.Converters.CustomCreationConverter<T>.WriteJson
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Newtonsoft.Json.JsonWriter
    name: JsonWriter
    nameWithType: JsonWriter
    fullName: Newtonsoft.Json.JsonWriter
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Newtonsoft.Json.JsonSerializer
    name: JsonSerializer
    nameWithType: JsonSerializer
    fullName: Newtonsoft.Json.JsonSerializer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Newtonsoft.Json.Converters.CustomCreationConverter`1.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)
    name: WriteJson
    nameWithType: CustomCreationConverter(Of T).WriteJson
    fullName: Newtonsoft.Json.Converters.CustomCreationConverter(Of T).WriteJson
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Newtonsoft.Json.JsonWriter
    name: JsonWriter
    nameWithType: JsonWriter
    fullName: Newtonsoft.Json.JsonWriter
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Newtonsoft.Json.JsonSerializer
    name: JsonSerializer
    nameWithType: JsonSerializer
    fullName: Newtonsoft.Json.JsonSerializer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Newtonsoft.Json.Converters.CustomCreationConverter`1.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)
  commentId: M:Newtonsoft.Json.Converters.CustomCreationConverter`1.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)
  isExternal: true
  name: ReadJson(JsonReader, Type, Object, JsonSerializer)
  nameWithType: CustomCreationConverter<T>.ReadJson(JsonReader, Type, Object, JsonSerializer)
  fullName: Newtonsoft.Json.Converters.CustomCreationConverter<T>.ReadJson(Newtonsoft.Json.JsonReader, System.Type, System.Object, Newtonsoft.Json.JsonSerializer)
  nameWithType.vb: CustomCreationConverter(Of T).ReadJson(JsonReader, Type, Object, JsonSerializer)
  fullName.vb: Newtonsoft.Json.Converters.CustomCreationConverter(Of T).ReadJson(Newtonsoft.Json.JsonReader, System.Type, System.Object, Newtonsoft.Json.JsonSerializer)
  spec.csharp:
  - uid: Newtonsoft.Json.Converters.CustomCreationConverter`1.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)
    name: ReadJson
    nameWithType: CustomCreationConverter<T>.ReadJson
    fullName: Newtonsoft.Json.Converters.CustomCreationConverter<T>.ReadJson
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Newtonsoft.Json.JsonReader
    name: JsonReader
    nameWithType: JsonReader
    fullName: Newtonsoft.Json.JsonReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Newtonsoft.Json.JsonSerializer
    name: JsonSerializer
    nameWithType: JsonSerializer
    fullName: Newtonsoft.Json.JsonSerializer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Newtonsoft.Json.Converters.CustomCreationConverter`1.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)
    name: ReadJson
    nameWithType: CustomCreationConverter(Of T).ReadJson
    fullName: Newtonsoft.Json.Converters.CustomCreationConverter(Of T).ReadJson
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Newtonsoft.Json.JsonReader
    name: JsonReader
    nameWithType: JsonReader
    fullName: Newtonsoft.Json.JsonReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Newtonsoft.Json.JsonSerializer
    name: JsonSerializer
    nameWithType: JsonSerializer
    fullName: Newtonsoft.Json.JsonSerializer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Newtonsoft.Json.Converters.CustomCreationConverter`1.CanConvert(System.Type)
  commentId: M:Newtonsoft.Json.Converters.CustomCreationConverter`1.CanConvert(System.Type)
  isExternal: true
  name: CanConvert(Type)
  nameWithType: CustomCreationConverter<T>.CanConvert(Type)
  fullName: Newtonsoft.Json.Converters.CustomCreationConverter<T>.CanConvert(System.Type)
  nameWithType.vb: CustomCreationConverter(Of T).CanConvert(Type)
  fullName.vb: Newtonsoft.Json.Converters.CustomCreationConverter(Of T).CanConvert(System.Type)
  spec.csharp:
  - uid: Newtonsoft.Json.Converters.CustomCreationConverter`1.CanConvert(System.Type)
    name: CanConvert
    nameWithType: CustomCreationConverter<T>.CanConvert
    fullName: Newtonsoft.Json.Converters.CustomCreationConverter<T>.CanConvert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Newtonsoft.Json.Converters.CustomCreationConverter`1.CanConvert(System.Type)
    name: CanConvert
    nameWithType: CustomCreationConverter(Of T).CanConvert
    fullName: Newtonsoft.Json.Converters.CustomCreationConverter(Of T).CanConvert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Newtonsoft.Json.Converters.CustomCreationConverter`1.CanWrite
  commentId: P:Newtonsoft.Json.Converters.CustomCreationConverter`1.CanWrite
  isExternal: true
  name: CanWrite
  nameWithType: CustomCreationConverter<T>.CanWrite
  fullName: Newtonsoft.Json.Converters.CustomCreationConverter<T>.CanWrite
  nameWithType.vb: CustomCreationConverter(Of T).CanWrite
  fullName.vb: Newtonsoft.Json.Converters.CustomCreationConverter(Of T).CanWrite
- uid: TimeCockpit.Data.JsonConverters.ModelEntityBaseJsonConverter.WriteAnonymousTypeArray*
  commentId: Overload:TimeCockpit.Data.JsonConverters.ModelEntityBaseJsonConverter.WriteAnonymousTypeArray
  isExternal: false
  name: WriteAnonymousTypeArray
  nameWithType: ModelEntityBaseJsonConverter.WriteAnonymousTypeArray
  fullName: TimeCockpit.Data.JsonConverters.ModelEntityBaseJsonConverter.WriteAnonymousTypeArray
- uid: Newtonsoft.Json.JsonWriter
  commentId: T:Newtonsoft.Json.JsonWriter
  parent: Newtonsoft.Json
  isExternal: true
  name: JsonWriter
  nameWithType: JsonWriter
  fullName: Newtonsoft.Json.JsonWriter
- uid: TimeCockpit.Data.DataModel.Model
  commentId: T:TimeCockpit.Data.DataModel.Model
  parent: TimeCockpit.Data.DataModel
  isExternal: false
  name: Model
  nameWithType: Model
  fullName: TimeCockpit.Data.DataModel.Model
- uid: System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.ModelEntityBase}
  commentId: T:System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.ModelEntityBase}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<ModelEntityBase>
  nameWithType: IEnumerable<ModelEntityBase>
  fullName: System.Collections.Generic.IEnumerable<TimeCockpit.Data.DataModel.ModelEntityBase>
  nameWithType.vb: IEnumerable(Of ModelEntityBase)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TimeCockpit.Data.DataModel.ModelEntityBase)
  name.vb: IEnumerable(Of ModelEntityBase)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TimeCockpit.Data.DataModel.ModelEntityBase
    name: ModelEntityBase
    nameWithType: ModelEntityBase
    fullName: TimeCockpit.Data.DataModel.ModelEntityBase
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TimeCockpit.Data.DataModel.ModelEntityBase
    name: ModelEntityBase
    nameWithType: ModelEntityBase
    fullName: TimeCockpit.Data.DataModel.ModelEntityBase
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: TimeCockpit.Data.JsonConverters.ModelEntityBaseJsonConverter.ReadAnonymousTypeArray*
  commentId: Overload:TimeCockpit.Data.JsonConverters.ModelEntityBaseJsonConverter.ReadAnonymousTypeArray
  isExternal: false
  name: ReadAnonymousTypeArray
  nameWithType: ModelEntityBaseJsonConverter.ReadAnonymousTypeArray
  fullName: TimeCockpit.Data.JsonConverters.ModelEntityBaseJsonConverter.ReadAnonymousTypeArray
- uid: Newtonsoft.Json.JsonReader
  commentId: T:Newtonsoft.Json.JsonReader
  parent: Newtonsoft.Json
  isExternal: true
  name: JsonReader
  nameWithType: JsonReader
  fullName: Newtonsoft.Json.JsonReader
- uid: Newtonsoft.Json.Converters.CustomCreationConverter{TimeCockpit.Data.DataModel.ModelEntityBase}.Create(System.Type)
  commentId: M:Newtonsoft.Json.Converters.CustomCreationConverter{TimeCockpit.Data.DataModel.ModelEntityBase}.Create(System.Type)
  parent: Newtonsoft.Json.Converters.CustomCreationConverter{TimeCockpit.Data.DataModel.ModelEntityBase}
  definition: Newtonsoft.Json.Converters.CustomCreationConverter`1.Create(System.Type)
  name: Create(Type)
  nameWithType: CustomCreationConverter<ModelEntityBase>.Create(Type)
  fullName: Newtonsoft.Json.Converters.CustomCreationConverter<TimeCockpit.Data.DataModel.ModelEntityBase>.Create(System.Type)
  nameWithType.vb: CustomCreationConverter(Of ModelEntityBase).Create(Type)
  fullName.vb: Newtonsoft.Json.Converters.CustomCreationConverter(Of TimeCockpit.Data.DataModel.ModelEntityBase).Create(System.Type)
  spec.csharp:
  - uid: Newtonsoft.Json.Converters.CustomCreationConverter`1.Create(System.Type)
    name: Create
    nameWithType: CustomCreationConverter<ModelEntityBase>.Create
    fullName: Newtonsoft.Json.Converters.CustomCreationConverter<TimeCockpit.Data.DataModel.ModelEntityBase>.Create
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Newtonsoft.Json.Converters.CustomCreationConverter`1.Create(System.Type)
    name: Create
    nameWithType: CustomCreationConverter(Of ModelEntityBase).Create
    fullName: Newtonsoft.Json.Converters.CustomCreationConverter(Of TimeCockpit.Data.DataModel.ModelEntityBase).Create
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.JsonConverters.ModelEntityBaseJsonConverter.Create*
  commentId: Overload:TimeCockpit.Data.JsonConverters.ModelEntityBaseJsonConverter.Create
  isExternal: false
  name: Create
  nameWithType: ModelEntityBaseJsonConverter.Create
  fullName: TimeCockpit.Data.JsonConverters.ModelEntityBaseJsonConverter.Create
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Newtonsoft.Json.Converters.CustomCreationConverter`1.Create(System.Type)
  commentId: M:Newtonsoft.Json.Converters.CustomCreationConverter`1.Create(System.Type)
  isExternal: true
  name: Create(Type)
  nameWithType: CustomCreationConverter<T>.Create(Type)
  fullName: Newtonsoft.Json.Converters.CustomCreationConverter<T>.Create(System.Type)
  nameWithType.vb: CustomCreationConverter(Of T).Create(Type)
  fullName.vb: Newtonsoft.Json.Converters.CustomCreationConverter(Of T).Create(System.Type)
  spec.csharp:
  - uid: Newtonsoft.Json.Converters.CustomCreationConverter`1.Create(System.Type)
    name: Create
    nameWithType: CustomCreationConverter<T>.Create
    fullName: Newtonsoft.Json.Converters.CustomCreationConverter<T>.Create
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Newtonsoft.Json.Converters.CustomCreationConverter`1.Create(System.Type)
    name: Create
    nameWithType: CustomCreationConverter(Of T).Create
    fullName: Newtonsoft.Json.Converters.CustomCreationConverter(Of T).Create
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
