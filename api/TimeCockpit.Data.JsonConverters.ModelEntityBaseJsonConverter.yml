### YamlMime:ManagedReference
items:
- uid: TimeCockpit.Data.JsonConverters.ModelEntityBaseJsonConverter
  commentId: T:TimeCockpit.Data.JsonConverters.ModelEntityBaseJsonConverter
  id: ModelEntityBaseJsonConverter
  parent: TimeCockpit.Data.JsonConverters
  children:
  - TimeCockpit.Data.JsonConverters.ModelEntityBaseJsonConverter.#ctor
  - TimeCockpit.Data.JsonConverters.ModelEntityBaseJsonConverter.Create(System.Type)
  - TimeCockpit.Data.JsonConverters.ModelEntityBaseJsonConverter.ReadAnonymousTypeArray(Newtonsoft.Json.JsonReader,TimeCockpit.Data.DataModel.Model)
  - TimeCockpit.Data.JsonConverters.ModelEntityBaseJsonConverter.WriteAnonymousTypeArray(Newtonsoft.Json.JsonWriter,TimeCockpit.Data.DataModel.Model,System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.ModelEntityBase})
  langs:
  - csharp
  - vb
  name: ModelEntityBaseJsonConverter
  nameWithType: ModelEntityBaseJsonConverter
  fullName: TimeCockpit.Data.JsonConverters.ModelEntityBaseJsonConverter
  type: Class
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.JsonConverters
  summary: "\nCustom converter for <xref href=\"TimeCockpit.Data.DataModel.ModelEntityBase\" data-throw-if-not-resolved=\"false\"></xref>s into Json.\n"
  remarks: "\nThis converter creates a new instance of <xref href=\"TimeCockpit.Data.DataModel.ModelEntity\" data-throw-if-not-resolved=\"false\"></xref> whenever\nthe Json.Net serializer encounters a <xref href=\"TimeCockpit.Data.DataModel.ModelEntityBase\" data-throw-if-not-resolved=\"false\"></xref> to deserialize.\n"
  syntax:
    content: 'public class ModelEntityBaseJsonConverter : CustomCreationConverter<ModelEntityBase>'
    content.vb: >-
      Public Class ModelEntityBaseJsonConverter
          Inherits CustomCreationConverter(Of ModelEntityBase)
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TimeCockpit.Data.JsonConverters.ModelEntityBaseJsonConverter.WriteAnonymousTypeArray(Newtonsoft.Json.JsonWriter,TimeCockpit.Data.DataModel.Model,System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.ModelEntityBase})
  commentId: M:TimeCockpit.Data.JsonConverters.ModelEntityBaseJsonConverter.WriteAnonymousTypeArray(Newtonsoft.Json.JsonWriter,TimeCockpit.Data.DataModel.Model,System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.ModelEntityBase})
  id: WriteAnonymousTypeArray(Newtonsoft.Json.JsonWriter,TimeCockpit.Data.DataModel.Model,System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.ModelEntityBase})
  parent: TimeCockpit.Data.JsonConverters.ModelEntityBaseJsonConverter
  langs:
  - csharp
  - vb
  name: WriteAnonymousTypeArray(JsonWriter, Model, IEnumerable<ModelEntityBase>)
  nameWithType: ModelEntityBaseJsonConverter.WriteAnonymousTypeArray(JsonWriter, Model, IEnumerable<ModelEntityBase>)
  fullName: TimeCockpit.Data.JsonConverters.ModelEntityBaseJsonConverter.WriteAnonymousTypeArray(Newtonsoft.Json.JsonWriter, TimeCockpit.Data.DataModel.Model, System.Collections.Generic.IEnumerable<TimeCockpit.Data.DataModel.ModelEntityBase>)
  type: Method
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.JsonConverters
  summary: "\nWrites a collection of model entity base types to the writer.\n"
  syntax:
    content: public static void WriteAnonymousTypeArray(JsonWriter writer, Model model, IEnumerable<ModelEntityBase> anonymousTypes)
    parameters:
    - id: writer
      type: Newtonsoft.Json.JsonWriter
      description: the writer to write to.
    - id: model
      type: TimeCockpit.Data.DataModel.Model
      description: The model.
    - id: anonymousTypes
      type: System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.ModelEntityBase}
      description: <xref href="TimeCockpit.Data.DataModel.ModelEntityBase" data-throw-if-not-resolved="false"></xref> types to serialize.
    content.vb: Public Shared Sub WriteAnonymousTypeArray(writer As JsonWriter, model As Model, anonymousTypes As IEnumerable(Of ModelEntityBase))
  overload: TimeCockpit.Data.JsonConverters.ModelEntityBaseJsonConverter.WriteAnonymousTypeArray*
  nameWithType.vb: ModelEntityBaseJsonConverter.WriteAnonymousTypeArray(JsonWriter, Model, IEnumerable(Of ModelEntityBase))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TimeCockpit.Data.JsonConverters.ModelEntityBaseJsonConverter.WriteAnonymousTypeArray(Newtonsoft.Json.JsonWriter, TimeCockpit.Data.DataModel.Model, System.Collections.Generic.IEnumerable(Of TimeCockpit.Data.DataModel.ModelEntityBase))
  name.vb: WriteAnonymousTypeArray(JsonWriter, Model, IEnumerable(Of ModelEntityBase))
- uid: TimeCockpit.Data.JsonConverters.ModelEntityBaseJsonConverter.ReadAnonymousTypeArray(Newtonsoft.Json.JsonReader,TimeCockpit.Data.DataModel.Model)
  commentId: M:TimeCockpit.Data.JsonConverters.ModelEntityBaseJsonConverter.ReadAnonymousTypeArray(Newtonsoft.Json.JsonReader,TimeCockpit.Data.DataModel.Model)
  id: ReadAnonymousTypeArray(Newtonsoft.Json.JsonReader,TimeCockpit.Data.DataModel.Model)
  parent: TimeCockpit.Data.JsonConverters.ModelEntityBaseJsonConverter
  langs:
  - csharp
  - vb
  name: ReadAnonymousTypeArray(JsonReader, Model)
  nameWithType: ModelEntityBaseJsonConverter.ReadAnonymousTypeArray(JsonReader, Model)
  fullName: TimeCockpit.Data.JsonConverters.ModelEntityBaseJsonConverter.ReadAnonymousTypeArray(Newtonsoft.Json.JsonReader, TimeCockpit.Data.DataModel.Model)
  type: Method
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.JsonConverters
  summary: "\nReads an array of model entity base instances\n"
  syntax:
    content: public static IEnumerable<ModelEntityBase> ReadAnonymousTypeArray(JsonReader reader, Model model)
    parameters:
    - id: reader
      type: Newtonsoft.Json.JsonReader
      description: the reader to read from.
    - id: model
      type: TimeCockpit.Data.DataModel.Model
      description: The model.
    return:
      type: System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.ModelEntityBase}
      description: Returns a collection of model entity base.
    content.vb: Public Shared Function ReadAnonymousTypeArray(reader As JsonReader, model As Model) As IEnumerable(Of ModelEntityBase)
  overload: TimeCockpit.Data.JsonConverters.ModelEntityBaseJsonConverter.ReadAnonymousTypeArray*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: TimeCockpit.Data.JsonConverters.ModelEntityBaseJsonConverter.Create(System.Type)
  commentId: M:TimeCockpit.Data.JsonConverters.ModelEntityBaseJsonConverter.Create(System.Type)
  id: Create(System.Type)
  parent: TimeCockpit.Data.JsonConverters.ModelEntityBaseJsonConverter
  langs:
  - csharp
  - vb
  name: Create(Type)
  nameWithType: ModelEntityBaseJsonConverter.Create(Type)
  fullName: TimeCockpit.Data.JsonConverters.ModelEntityBaseJsonConverter.Create(System.Type)
  type: Method
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.JsonConverters
  summary: "\nCreates the specified object type.\n"
  syntax:
    content: public override ModelEntityBase Create(Type objectType)
    parameters:
    - id: objectType
      type: System.Type
      description: Type of the object.
    return:
      type: TimeCockpit.Data.DataModel.ModelEntityBase
      description: an instance of <xref href="TimeCockpit.Data.DataModel.ModelEntity" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Overrides Function Create(objectType As Type) As ModelEntityBase
  overload: TimeCockpit.Data.JsonConverters.ModelEntityBaseJsonConverter.Create*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: TimeCockpit.Data.JsonConverters.ModelEntityBaseJsonConverter.#ctor
  commentId: M:TimeCockpit.Data.JsonConverters.ModelEntityBaseJsonConverter.#ctor
  id: '#ctor'
  parent: TimeCockpit.Data.JsonConverters.ModelEntityBaseJsonConverter
  langs:
  - csharp
  - vb
  name: ModelEntityBaseJsonConverter()
  nameWithType: ModelEntityBaseJsonConverter.ModelEntityBaseJsonConverter()
  fullName: TimeCockpit.Data.JsonConverters.ModelEntityBaseJsonConverter.ModelEntityBaseJsonConverter()
  type: Constructor
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.JsonConverters
  syntax:
    content: public ModelEntityBaseJsonConverter()
    content.vb: Public Sub New
  overload: TimeCockpit.Data.JsonConverters.ModelEntityBaseJsonConverter.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: TimeCockpit.Data.JsonConverters
  commentId: N:TimeCockpit.Data.JsonConverters
  isExternal: true
  name: TimeCockpit.Data.JsonConverters
  nameWithType: TimeCockpit.Data.JsonConverters
  fullName: TimeCockpit.Data.JsonConverters
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TimeCockpit.Data.JsonConverters.ModelEntityBaseJsonConverter.WriteAnonymousTypeArray*
  commentId: Overload:TimeCockpit.Data.JsonConverters.ModelEntityBaseJsonConverter.WriteAnonymousTypeArray
  isExternal: true
  name: WriteAnonymousTypeArray
  nameWithType: ModelEntityBaseJsonConverter.WriteAnonymousTypeArray
  fullName: TimeCockpit.Data.JsonConverters.ModelEntityBaseJsonConverter.WriteAnonymousTypeArray
- uid: Newtonsoft.Json.JsonWriter
  isExternal: true
  name: JsonWriter
  nameWithType: JsonWriter
  fullName: Newtonsoft.Json.JsonWriter
- uid: TimeCockpit.Data.DataModel.Model
  commentId: T:TimeCockpit.Data.DataModel.Model
  parent: TimeCockpit.Data.DataModel
  isExternal: true
  name: Model
  nameWithType: Model
  fullName: TimeCockpit.Data.DataModel.Model
- uid: System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.ModelEntityBase}
  commentId: T:System.Collections.Generic.IEnumerable{TimeCockpit.Data.DataModel.ModelEntityBase}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<ModelEntityBase>
  nameWithType: IEnumerable<ModelEntityBase>
  fullName: System.Collections.Generic.IEnumerable<TimeCockpit.Data.DataModel.ModelEntityBase>
  nameWithType.vb: IEnumerable(Of ModelEntityBase)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TimeCockpit.Data.DataModel.ModelEntityBase)
  name.vb: IEnumerable(Of ModelEntityBase)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TimeCockpit.Data.DataModel.ModelEntityBase
    name: ModelEntityBase
    nameWithType: ModelEntityBase
    fullName: TimeCockpit.Data.DataModel.ModelEntityBase
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TimeCockpit.Data.DataModel.ModelEntityBase
    name: ModelEntityBase
    nameWithType: ModelEntityBase
    fullName: TimeCockpit.Data.DataModel.ModelEntityBase
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.DataModel
  commentId: N:TimeCockpit.Data.DataModel
  isExternal: true
  name: TimeCockpit.Data.DataModel
  nameWithType: TimeCockpit.Data.DataModel
  fullName: TimeCockpit.Data.DataModel
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: TimeCockpit.Data.JsonConverters.ModelEntityBaseJsonConverter.ReadAnonymousTypeArray*
  commentId: Overload:TimeCockpit.Data.JsonConverters.ModelEntityBaseJsonConverter.ReadAnonymousTypeArray
  isExternal: true
  name: ReadAnonymousTypeArray
  nameWithType: ModelEntityBaseJsonConverter.ReadAnonymousTypeArray
  fullName: TimeCockpit.Data.JsonConverters.ModelEntityBaseJsonConverter.ReadAnonymousTypeArray
- uid: Newtonsoft.Json.JsonReader
  isExternal: true
  name: JsonReader
  nameWithType: JsonReader
  fullName: Newtonsoft.Json.JsonReader
- uid: TimeCockpit.Data.JsonConverters.ModelEntityBaseJsonConverter.Create*
  commentId: Overload:TimeCockpit.Data.JsonConverters.ModelEntityBaseJsonConverter.Create
  isExternal: true
  name: Create
  nameWithType: ModelEntityBaseJsonConverter.Create
  fullName: TimeCockpit.Data.JsonConverters.ModelEntityBaseJsonConverter.Create
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: TimeCockpit.Data.DataModel.ModelEntityBase
  commentId: T:TimeCockpit.Data.DataModel.ModelEntityBase
  parent: TimeCockpit.Data.DataModel
  isExternal: true
  name: ModelEntityBase
  nameWithType: ModelEntityBase
  fullName: TimeCockpit.Data.DataModel.ModelEntityBase
- uid: TimeCockpit.Data.JsonConverters.ModelEntityBaseJsonConverter.#ctor*
  commentId: Overload:TimeCockpit.Data.JsonConverters.ModelEntityBaseJsonConverter.#ctor
  isExternal: true
  name: ModelEntityBaseJsonConverter
  nameWithType: ModelEntityBaseJsonConverter.ModelEntityBaseJsonConverter
  fullName: TimeCockpit.Data.JsonConverters.ModelEntityBaseJsonConverter.ModelEntityBaseJsonConverter
