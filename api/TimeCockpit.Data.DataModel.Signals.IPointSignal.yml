### YamlMime:ManagedReference
items:
- uid: TimeCockpit.Data.DataModel.Signals.IPointSignal
  commentId: T:TimeCockpit.Data.DataModel.Signals.IPointSignal
  id: IPointSignal
  parent: TimeCockpit.Data.DataModel.Signals
  children:
  - TimeCockpit.Data.DataModel.Signals.IPointSignal.EventTime
  langs:
  - csharp
  - vb
  name: IPointSignal
  nameWithType: IPointSignal
  fullName: TimeCockpit.Data.DataModel.Signals.IPointSignal
  type: Interface
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/Signals/IPointSignal.cs
    id: IPointSignal
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/Signals/IPointSignal.cs
    startLine: 16
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel.Signals
  summary: "\nInterface for point signals\n"
  example: []
  syntax:
    content: public interface IPointSignal
    content.vb: Public Interface IPointSignal
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: TimeCockpit.Data.DataModel.Signals.IPointSignal.EventTime
  commentId: P:TimeCockpit.Data.DataModel.Signals.IPointSignal.EventTime
  id: EventTime
  parent: TimeCockpit.Data.DataModel.Signals.IPointSignal
  langs:
  - csharp
  - vb
  name: EventTime
  nameWithType: IPointSignal.EventTime
  fullName: TimeCockpit.Data.DataModel.Signals.IPointSignal.EventTime
  type: Property
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/Signals/IPointSignal.cs
    id: EventTime
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/Signals/IPointSignal.cs
    startLine: 21
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel.Signals
  summary: "\nGets or sets the time the signal happened.\n"
  example: []
  syntax:
    content: DateTime EventTime { get; set; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Property EventTime As Date
  overload: TimeCockpit.Data.DataModel.Signals.IPointSignal.EventTime*
  modifiers.csharp:
  - get
  - set
references:
- uid: TimeCockpit.Data.DataModel.Signals
  commentId: N:TimeCockpit.Data.DataModel.Signals
  isExternal: false
  name: TimeCockpit.Data.DataModel.Signals
  nameWithType: TimeCockpit.Data.DataModel.Signals
  fullName: TimeCockpit.Data.DataModel.Signals
- uid: TimeCockpit.Data.DataModel.Signals.IPointSignal.EventTime*
  commentId: Overload:TimeCockpit.Data.DataModel.Signals.IPointSignal.EventTime
  isExternal: false
  name: EventTime
  nameWithType: IPointSignal.EventTime
  fullName: TimeCockpit.Data.DataModel.Signals.IPointSignal.EventTime
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
