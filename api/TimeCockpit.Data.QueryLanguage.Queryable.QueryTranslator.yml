### YamlMime:ManagedReference
items:
- uid: TimeCockpit.Data.QueryLanguage.Queryable.QueryTranslator
  commentId: T:TimeCockpit.Data.QueryLanguage.Queryable.QueryTranslator
  id: QueryTranslator
  parent: TimeCockpit.Data.QueryLanguage.Queryable
  children:
  - TimeCockpit.Data.QueryLanguage.Queryable.QueryTranslator.TranslateQuery(System.Linq.Expressions.Expression,TimeCockpit.Data.DataModel.Model,System.String)
  - TimeCockpit.Data.QueryLanguage.Queryable.QueryTranslator.VisitBinary(System.Linq.Expressions.BinaryExpression)
  - TimeCockpit.Data.QueryLanguage.Queryable.QueryTranslator.VisitConstant(System.Linq.Expressions.ConstantExpression)
  - TimeCockpit.Data.QueryLanguage.Queryable.QueryTranslator.VisitMember(System.Linq.Expressions.MemberExpression)
  - TimeCockpit.Data.QueryLanguage.Queryable.QueryTranslator.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)
  langs:
  - csharp
  - vb
  name: QueryTranslator
  nameWithType: QueryTranslator
  fullName: TimeCockpit.Data.QueryLanguage.Queryable.QueryTranslator
  type: Class
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/QueryLanguage/Queryable/QueryTranslator.cs
    id: QueryTranslator
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/QueryLanguage/Queryable/QueryTranslator.cs
    startLine: 20
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.QueryLanguage.Queryable
  summary: "\nTranslates Expression trees to TCQL.\n"
  example: []
  syntax:
    content: 'public class QueryTranslator : ExpressionVisitor'
    content.vb: >-
      Public Class QueryTranslator
          Inherits ExpressionVisitor
  inheritance:
  - System.Object
  - System.Linq.Expressions.ExpressionVisitor
  inheritedMembers:
  - System.Linq.Expressions.ExpressionVisitor.Visit(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.ExpressionVisitor.Visit(System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.ExpressionVisitor.Visit``1(System.Collections.ObjectModel.ReadOnlyCollection{{T}},System.Func{{T},{T}})
  - System.Linq.Expressions.ExpressionVisitor.VisitAndConvert``1({T},System.String)
  - System.Linq.Expressions.ExpressionVisitor.VisitAndConvert``1(System.Collections.ObjectModel.ReadOnlyCollection{{T}},System.String)
  - System.Linq.Expressions.ExpressionVisitor.VisitBlock(System.Linq.Expressions.BlockExpression)
  - System.Linq.Expressions.ExpressionVisitor.VisitConditional(System.Linq.Expressions.ConditionalExpression)
  - System.Linq.Expressions.ExpressionVisitor.VisitDebugInfo(System.Linq.Expressions.DebugInfoExpression)
  - System.Linq.Expressions.ExpressionVisitor.VisitDynamic(System.Linq.Expressions.DynamicExpression)
  - System.Linq.Expressions.ExpressionVisitor.VisitDefault(System.Linq.Expressions.DefaultExpression)
  - System.Linq.Expressions.ExpressionVisitor.VisitExtension(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.ExpressionVisitor.VisitGoto(System.Linq.Expressions.GotoExpression)
  - System.Linq.Expressions.ExpressionVisitor.VisitInvocation(System.Linq.Expressions.InvocationExpression)
  - System.Linq.Expressions.ExpressionVisitor.VisitLabelTarget(System.Linq.Expressions.LabelTarget)
  - System.Linq.Expressions.ExpressionVisitor.VisitLabel(System.Linq.Expressions.LabelExpression)
  - System.Linq.Expressions.ExpressionVisitor.VisitLambda``1(System.Linq.Expressions.Expression{{T}})
  - System.Linq.Expressions.ExpressionVisitor.VisitLoop(System.Linq.Expressions.LoopExpression)
  - System.Linq.Expressions.ExpressionVisitor.VisitIndex(System.Linq.Expressions.IndexExpression)
  - System.Linq.Expressions.ExpressionVisitor.VisitNewArray(System.Linq.Expressions.NewArrayExpression)
  - System.Linq.Expressions.ExpressionVisitor.VisitNew(System.Linq.Expressions.NewExpression)
  - System.Linq.Expressions.ExpressionVisitor.VisitParameter(System.Linq.Expressions.ParameterExpression)
  - System.Linq.Expressions.ExpressionVisitor.VisitRuntimeVariables(System.Linq.Expressions.RuntimeVariablesExpression)
  - System.Linq.Expressions.ExpressionVisitor.VisitSwitchCase(System.Linq.Expressions.SwitchCase)
  - System.Linq.Expressions.ExpressionVisitor.VisitSwitch(System.Linq.Expressions.SwitchExpression)
  - System.Linq.Expressions.ExpressionVisitor.VisitCatchBlock(System.Linq.Expressions.CatchBlock)
  - System.Linq.Expressions.ExpressionVisitor.VisitTry(System.Linq.Expressions.TryExpression)
  - System.Linq.Expressions.ExpressionVisitor.VisitTypeBinary(System.Linq.Expressions.TypeBinaryExpression)
  - System.Linq.Expressions.ExpressionVisitor.VisitUnary(System.Linq.Expressions.UnaryExpression)
  - System.Linq.Expressions.ExpressionVisitor.VisitMemberInit(System.Linq.Expressions.MemberInitExpression)
  - System.Linq.Expressions.ExpressionVisitor.VisitListInit(System.Linq.Expressions.ListInitExpression)
  - System.Linq.Expressions.ExpressionVisitor.VisitElementInit(System.Linq.Expressions.ElementInit)
  - System.Linq.Expressions.ExpressionVisitor.VisitMemberBinding(System.Linq.Expressions.MemberBinding)
  - System.Linq.Expressions.ExpressionVisitor.VisitMemberAssignment(System.Linq.Expressions.MemberAssignment)
  - System.Linq.Expressions.ExpressionVisitor.VisitMemberMemberBinding(System.Linq.Expressions.MemberMemberBinding)
  - System.Linq.Expressions.ExpressionVisitor.VisitMemberListBinding(System.Linq.Expressions.MemberListBinding)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TimeCockpit.Data.QueryLanguage.Queryable.QueryTranslator.TranslateQuery(System.Linq.Expressions.Expression,TimeCockpit.Data.DataModel.Model,System.String)
  commentId: M:TimeCockpit.Data.QueryLanguage.Queryable.QueryTranslator.TranslateQuery(System.Linq.Expressions.Expression,TimeCockpit.Data.DataModel.Model,System.String)
  id: TranslateQuery(System.Linq.Expressions.Expression,TimeCockpit.Data.DataModel.Model,System.String)
  parent: TimeCockpit.Data.QueryLanguage.Queryable.QueryTranslator
  langs:
  - csharp
  - vb
  name: TranslateQuery(Expression, Model, String)
  nameWithType: QueryTranslator.TranslateQuery(Expression, Model, String)
  fullName: TimeCockpit.Data.QueryLanguage.Queryable.QueryTranslator.TranslateQuery(System.Linq.Expressions.Expression, TimeCockpit.Data.DataModel.Model, System.String)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/QueryLanguage/Queryable/QueryTranslator.cs
    id: TranslateQuery
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/QueryLanguage/Queryable/QueryTranslator.cs
    startLine: 34
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.QueryLanguage.Queryable
  summary: "\nTranslates a expression to TCQL.\n"
  example: []
  syntax:
    content: public static string TranslateQuery(Expression expression, Model model, string sourceEntityName)
    parameters:
    - id: expression
      type: System.Linq.Expressions.Expression
      description: The expression to translate.
    - id: model
      type: TimeCockpit.Data.DataModel.Model
      description: The model.
    - id: sourceEntityName
      type: System.String
      description: The name of the source entity.
    return:
      type: System.String
      description: Returns the TCQL Expression.
    content.vb: Public Shared Function TranslateQuery(expression As Expression, model As Model, sourceEntityName As String) As String
  overload: TimeCockpit.Data.QueryLanguage.Queryable.QueryTranslator.TranslateQuery*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: TimeCockpit.Data.QueryLanguage.Queryable.QueryTranslator.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)
  commentId: M:TimeCockpit.Data.QueryLanguage.Queryable.QueryTranslator.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)
  id: VisitMethodCall(System.Linq.Expressions.MethodCallExpression)
  parent: TimeCockpit.Data.QueryLanguage.Queryable.QueryTranslator
  langs:
  - csharp
  - vb
  name: VisitMethodCall(MethodCallExpression)
  nameWithType: QueryTranslator.VisitMethodCall(MethodCallExpression)
  fullName: TimeCockpit.Data.QueryLanguage.Queryable.QueryTranslator.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/QueryLanguage/Queryable/QueryTranslator.cs
    id: VisitMethodCall
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/QueryLanguage/Queryable/QueryTranslator.cs
    startLine: 42
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.QueryLanguage.Queryable
  example: []
  syntax:
    content: protected override Expression VisitMethodCall(MethodCallExpression m)
    parameters:
    - id: m
      type: System.Linq.Expressions.MethodCallExpression
    return:
      type: System.Linq.Expressions.Expression
    content.vb: Protected Overrides Function VisitMethodCall(m As MethodCallExpression) As Expression
  overridden: System.Linq.Expressions.ExpressionVisitor.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)
  overload: TimeCockpit.Data.QueryLanguage.Queryable.QueryTranslator.VisitMethodCall*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: TimeCockpit.Data.QueryLanguage.Queryable.QueryTranslator.VisitBinary(System.Linq.Expressions.BinaryExpression)
  commentId: M:TimeCockpit.Data.QueryLanguage.Queryable.QueryTranslator.VisitBinary(System.Linq.Expressions.BinaryExpression)
  id: VisitBinary(System.Linq.Expressions.BinaryExpression)
  parent: TimeCockpit.Data.QueryLanguage.Queryable.QueryTranslator
  langs:
  - csharp
  - vb
  name: VisitBinary(BinaryExpression)
  nameWithType: QueryTranslator.VisitBinary(BinaryExpression)
  fullName: TimeCockpit.Data.QueryLanguage.Queryable.QueryTranslator.VisitBinary(System.Linq.Expressions.BinaryExpression)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/QueryLanguage/Queryable/QueryTranslator.cs
    id: VisitBinary
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/QueryLanguage/Queryable/QueryTranslator.cs
    startLine: 56
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.QueryLanguage.Queryable
  example: []
  syntax:
    content: protected override Expression VisitBinary(BinaryExpression b)
    parameters:
    - id: b
      type: System.Linq.Expressions.BinaryExpression
    return:
      type: System.Linq.Expressions.Expression
    content.vb: Protected Overrides Function VisitBinary(b As BinaryExpression) As Expression
  overridden: System.Linq.Expressions.ExpressionVisitor.VisitBinary(System.Linq.Expressions.BinaryExpression)
  overload: TimeCockpit.Data.QueryLanguage.Queryable.QueryTranslator.VisitBinary*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: TimeCockpit.Data.QueryLanguage.Queryable.QueryTranslator.VisitConstant(System.Linq.Expressions.ConstantExpression)
  commentId: M:TimeCockpit.Data.QueryLanguage.Queryable.QueryTranslator.VisitConstant(System.Linq.Expressions.ConstantExpression)
  id: VisitConstant(System.Linq.Expressions.ConstantExpression)
  parent: TimeCockpit.Data.QueryLanguage.Queryable.QueryTranslator
  langs:
  - csharp
  - vb
  name: VisitConstant(ConstantExpression)
  nameWithType: QueryTranslator.VisitConstant(ConstantExpression)
  fullName: TimeCockpit.Data.QueryLanguage.Queryable.QueryTranslator.VisitConstant(System.Linq.Expressions.ConstantExpression)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/QueryLanguage/Queryable/QueryTranslator.cs
    id: VisitConstant
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/QueryLanguage/Queryable/QueryTranslator.cs
    startLine: 100
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.QueryLanguage.Queryable
  example: []
  syntax:
    content: protected override Expression VisitConstant(ConstantExpression c)
    parameters:
    - id: c
      type: System.Linq.Expressions.ConstantExpression
    return:
      type: System.Linq.Expressions.Expression
    content.vb: Protected Overrides Function VisitConstant(c As ConstantExpression) As Expression
  overridden: System.Linq.Expressions.ExpressionVisitor.VisitConstant(System.Linq.Expressions.ConstantExpression)
  overload: TimeCockpit.Data.QueryLanguage.Queryable.QueryTranslator.VisitConstant*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: TimeCockpit.Data.QueryLanguage.Queryable.QueryTranslator.VisitMember(System.Linq.Expressions.MemberExpression)
  commentId: M:TimeCockpit.Data.QueryLanguage.Queryable.QueryTranslator.VisitMember(System.Linq.Expressions.MemberExpression)
  id: VisitMember(System.Linq.Expressions.MemberExpression)
  parent: TimeCockpit.Data.QueryLanguage.Queryable.QueryTranslator
  langs:
  - csharp
  - vb
  name: VisitMember(MemberExpression)
  nameWithType: QueryTranslator.VisitMember(MemberExpression)
  fullName: TimeCockpit.Data.QueryLanguage.Queryable.QueryTranslator.VisitMember(System.Linq.Expressions.MemberExpression)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/QueryLanguage/Queryable/QueryTranslator.cs
    id: VisitMember
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/QueryLanguage/Queryable/QueryTranslator.cs
    startLine: 134
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.QueryLanguage.Queryable
  example: []
  syntax:
    content: protected override Expression VisitMember(MemberExpression m)
    parameters:
    - id: m
      type: System.Linq.Expressions.MemberExpression
    return:
      type: System.Linq.Expressions.Expression
    content.vb: Protected Overrides Function VisitMember(m As MemberExpression) As Expression
  overridden: System.Linq.Expressions.ExpressionVisitor.VisitMember(System.Linq.Expressions.MemberExpression)
  overload: TimeCockpit.Data.QueryLanguage.Queryable.QueryTranslator.VisitMember*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: TimeCockpit.Data.QueryLanguage.Queryable
  commentId: N:TimeCockpit.Data.QueryLanguage.Queryable
  isExternal: false
  name: TimeCockpit.Data.QueryLanguage.Queryable
  nameWithType: TimeCockpit.Data.QueryLanguage.Queryable
  fullName: TimeCockpit.Data.QueryLanguage.Queryable
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Linq.Expressions.ExpressionVisitor
  commentId: T:System.Linq.Expressions.ExpressionVisitor
  parent: System.Linq.Expressions
  isExternal: true
  name: ExpressionVisitor
  nameWithType: ExpressionVisitor
  fullName: System.Linq.Expressions.ExpressionVisitor
- uid: System.Linq.Expressions.ExpressionVisitor.Visit(System.Linq.Expressions.Expression)
  commentId: M:System.Linq.Expressions.ExpressionVisitor.Visit(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.ExpressionVisitor
  isExternal: true
  name: Visit(Expression)
  nameWithType: ExpressionVisitor.Visit(Expression)
  fullName: System.Linq.Expressions.ExpressionVisitor.Visit(System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.ExpressionVisitor.Visit(System.Linq.Expressions.Expression)
    name: Visit
    nameWithType: ExpressionVisitor.Visit
    fullName: System.Linq.Expressions.ExpressionVisitor.Visit
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.ExpressionVisitor.Visit(System.Linq.Expressions.Expression)
    name: Visit
    nameWithType: ExpressionVisitor.Visit
    fullName: System.Linq.Expressions.ExpressionVisitor.Visit
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions.ExpressionVisitor.Visit(System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.Expression})
  commentId: M:System.Linq.Expressions.ExpressionVisitor.Visit(System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.ExpressionVisitor
  isExternal: true
  name: Visit(ReadOnlyCollection<Expression>)
  nameWithType: ExpressionVisitor.Visit(ReadOnlyCollection<Expression>)
  fullName: System.Linq.Expressions.ExpressionVisitor.Visit(System.Collections.ObjectModel.ReadOnlyCollection<System.Linq.Expressions.Expression>)
  nameWithType.vb: ExpressionVisitor.Visit(ReadOnlyCollection(Of Expression))
  fullName.vb: System.Linq.Expressions.ExpressionVisitor.Visit(System.Collections.ObjectModel.ReadOnlyCollection(Of System.Linq.Expressions.Expression))
  name.vb: Visit(ReadOnlyCollection(Of Expression))
  spec.csharp:
  - uid: System.Linq.Expressions.ExpressionVisitor.Visit(System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.Expression})
    name: Visit
    nameWithType: ExpressionVisitor.Visit
    fullName: System.Linq.Expressions.ExpressionVisitor.Visit
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Linq.Expressions.Expression
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.ExpressionVisitor.Visit(System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.Expression})
    name: Visit
    nameWithType: ExpressionVisitor.Visit
    fullName: System.Linq.Expressions.ExpressionVisitor.Visit
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions.ExpressionVisitor.Visit``1(System.Collections.ObjectModel.ReadOnlyCollection{{T}},System.Func{{T},{T}})
  commentId: M:System.Linq.Expressions.ExpressionVisitor.Visit``1(System.Collections.ObjectModel.ReadOnlyCollection{``0},System.Func{``0,``0})
  parent: System.Linq.Expressions.ExpressionVisitor
  definition: System.Linq.Expressions.ExpressionVisitor.Visit``1(System.Collections.ObjectModel.ReadOnlyCollection{``0},System.Func{``0,``0})
  name: Visit<T>(ReadOnlyCollection<T>, Func<T, T>)
  nameWithType: ExpressionVisitor.Visit<T>(ReadOnlyCollection<T>, Func<T, T>)
  fullName: System.Linq.Expressions.ExpressionVisitor.Visit<T>(System.Collections.ObjectModel.ReadOnlyCollection<T>, System.Func<T, T>)
  nameWithType.vb: ExpressionVisitor.Visit(Of T)(ReadOnlyCollection(Of T), Func(Of T, T))
  fullName.vb: System.Linq.Expressions.ExpressionVisitor.Visit(Of T)(System.Collections.ObjectModel.ReadOnlyCollection(Of T), System.Func(Of T, T))
  name.vb: Visit(Of T)(ReadOnlyCollection(Of T), Func(Of T, T))
  spec.csharp:
  - uid: System.Linq.Expressions.ExpressionVisitor.Visit``1(System.Collections.ObjectModel.ReadOnlyCollection{``0},System.Func{``0,``0})
    name: Visit<T>
    nameWithType: ExpressionVisitor.Visit<T>
    fullName: System.Linq.Expressions.ExpressionVisitor.Visit<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.ExpressionVisitor.Visit``1(System.Collections.ObjectModel.ReadOnlyCollection{``0},System.Func{``0,``0})
    name: Visit(Of T)
    nameWithType: ExpressionVisitor.Visit(Of T)
    fullName: System.Linq.Expressions.ExpressionVisitor.Visit(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert``1({T},System.String)
  commentId: M:System.Linq.Expressions.ExpressionVisitor.VisitAndConvert``1(``0,System.String)
  parent: System.Linq.Expressions.ExpressionVisitor
  definition: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert``1(``0,System.String)
  name: VisitAndConvert<T>(T, String)
  nameWithType: ExpressionVisitor.VisitAndConvert<T>(T, String)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert<T>(T, System.String)
  nameWithType.vb: ExpressionVisitor.VisitAndConvert(Of T)(T, String)
  fullName.vb: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert(Of T)(T, System.String)
  name.vb: VisitAndConvert(Of T)(T, String)
  spec.csharp:
  - uid: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert``1(``0,System.String)
    name: VisitAndConvert<T>
    nameWithType: ExpressionVisitor.VisitAndConvert<T>
    fullName: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert``1(``0,System.String)
    name: VisitAndConvert(Of T)
    nameWithType: ExpressionVisitor.VisitAndConvert(Of T)
    fullName: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert``1(System.Collections.ObjectModel.ReadOnlyCollection{{T}},System.String)
  commentId: M:System.Linq.Expressions.ExpressionVisitor.VisitAndConvert``1(System.Collections.ObjectModel.ReadOnlyCollection{``0},System.String)
  parent: System.Linq.Expressions.ExpressionVisitor
  definition: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert``1(System.Collections.ObjectModel.ReadOnlyCollection{``0},System.String)
  name: VisitAndConvert<T>(ReadOnlyCollection<T>, String)
  nameWithType: ExpressionVisitor.VisitAndConvert<T>(ReadOnlyCollection<T>, String)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert<T>(System.Collections.ObjectModel.ReadOnlyCollection<T>, System.String)
  nameWithType.vb: ExpressionVisitor.VisitAndConvert(Of T)(ReadOnlyCollection(Of T), String)
  fullName.vb: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert(Of T)(System.Collections.ObjectModel.ReadOnlyCollection(Of T), System.String)
  name.vb: VisitAndConvert(Of T)(ReadOnlyCollection(Of T), String)
  spec.csharp:
  - uid: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert``1(System.Collections.ObjectModel.ReadOnlyCollection{``0},System.String)
    name: VisitAndConvert<T>
    nameWithType: ExpressionVisitor.VisitAndConvert<T>
    fullName: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert``1(System.Collections.ObjectModel.ReadOnlyCollection{``0},System.String)
    name: VisitAndConvert(Of T)
    nameWithType: ExpressionVisitor.VisitAndConvert(Of T)
    fullName: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions.ExpressionVisitor.VisitBlock(System.Linq.Expressions.BlockExpression)
  commentId: M:System.Linq.Expressions.ExpressionVisitor.VisitBlock(System.Linq.Expressions.BlockExpression)
  parent: System.Linq.Expressions.ExpressionVisitor
  isExternal: true
  name: VisitBlock(BlockExpression)
  nameWithType: ExpressionVisitor.VisitBlock(BlockExpression)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitBlock(System.Linq.Expressions.BlockExpression)
  spec.csharp:
  - uid: System.Linq.Expressions.ExpressionVisitor.VisitBlock(System.Linq.Expressions.BlockExpression)
    name: VisitBlock
    nameWithType: ExpressionVisitor.VisitBlock
    fullName: System.Linq.Expressions.ExpressionVisitor.VisitBlock
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.BlockExpression
    name: BlockExpression
    nameWithType: BlockExpression
    fullName: System.Linq.Expressions.BlockExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.ExpressionVisitor.VisitBlock(System.Linq.Expressions.BlockExpression)
    name: VisitBlock
    nameWithType: ExpressionVisitor.VisitBlock
    fullName: System.Linq.Expressions.ExpressionVisitor.VisitBlock
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.BlockExpression
    name: BlockExpression
    nameWithType: BlockExpression
    fullName: System.Linq.Expressions.BlockExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions.ExpressionVisitor.VisitConditional(System.Linq.Expressions.ConditionalExpression)
  commentId: M:System.Linq.Expressions.ExpressionVisitor.VisitConditional(System.Linq.Expressions.ConditionalExpression)
  parent: System.Linq.Expressions.ExpressionVisitor
  isExternal: true
  name: VisitConditional(ConditionalExpression)
  nameWithType: ExpressionVisitor.VisitConditional(ConditionalExpression)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitConditional(System.Linq.Expressions.ConditionalExpression)
  spec.csharp:
  - uid: System.Linq.Expressions.ExpressionVisitor.VisitConditional(System.Linq.Expressions.ConditionalExpression)
    name: VisitConditional
    nameWithType: ExpressionVisitor.VisitConditional
    fullName: System.Linq.Expressions.ExpressionVisitor.VisitConditional
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.ConditionalExpression
    name: ConditionalExpression
    nameWithType: ConditionalExpression
    fullName: System.Linq.Expressions.ConditionalExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.ExpressionVisitor.VisitConditional(System.Linq.Expressions.ConditionalExpression)
    name: VisitConditional
    nameWithType: ExpressionVisitor.VisitConditional
    fullName: System.Linq.Expressions.ExpressionVisitor.VisitConditional
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.ConditionalExpression
    name: ConditionalExpression
    nameWithType: ConditionalExpression
    fullName: System.Linq.Expressions.ConditionalExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions.ExpressionVisitor.VisitDebugInfo(System.Linq.Expressions.DebugInfoExpression)
  commentId: M:System.Linq.Expressions.ExpressionVisitor.VisitDebugInfo(System.Linq.Expressions.DebugInfoExpression)
  parent: System.Linq.Expressions.ExpressionVisitor
  isExternal: true
  name: VisitDebugInfo(DebugInfoExpression)
  nameWithType: ExpressionVisitor.VisitDebugInfo(DebugInfoExpression)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitDebugInfo(System.Linq.Expressions.DebugInfoExpression)
  spec.csharp:
  - uid: System.Linq.Expressions.ExpressionVisitor.VisitDebugInfo(System.Linq.Expressions.DebugInfoExpression)
    name: VisitDebugInfo
    nameWithType: ExpressionVisitor.VisitDebugInfo
    fullName: System.Linq.Expressions.ExpressionVisitor.VisitDebugInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.DebugInfoExpression
    name: DebugInfoExpression
    nameWithType: DebugInfoExpression
    fullName: System.Linq.Expressions.DebugInfoExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.ExpressionVisitor.VisitDebugInfo(System.Linq.Expressions.DebugInfoExpression)
    name: VisitDebugInfo
    nameWithType: ExpressionVisitor.VisitDebugInfo
    fullName: System.Linq.Expressions.ExpressionVisitor.VisitDebugInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.DebugInfoExpression
    name: DebugInfoExpression
    nameWithType: DebugInfoExpression
    fullName: System.Linq.Expressions.DebugInfoExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions.ExpressionVisitor.VisitDynamic(System.Linq.Expressions.DynamicExpression)
  commentId: M:System.Linq.Expressions.ExpressionVisitor.VisitDynamic(System.Linq.Expressions.DynamicExpression)
  parent: System.Linq.Expressions.ExpressionVisitor
  isExternal: true
  name: VisitDynamic(DynamicExpression)
  nameWithType: ExpressionVisitor.VisitDynamic(DynamicExpression)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitDynamic(System.Linq.Expressions.DynamicExpression)
  spec.csharp:
  - uid: System.Linq.Expressions.ExpressionVisitor.VisitDynamic(System.Linq.Expressions.DynamicExpression)
    name: VisitDynamic
    nameWithType: ExpressionVisitor.VisitDynamic
    fullName: System.Linq.Expressions.ExpressionVisitor.VisitDynamic
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.DynamicExpression
    name: DynamicExpression
    nameWithType: DynamicExpression
    fullName: System.Linq.Expressions.DynamicExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.ExpressionVisitor.VisitDynamic(System.Linq.Expressions.DynamicExpression)
    name: VisitDynamic
    nameWithType: ExpressionVisitor.VisitDynamic
    fullName: System.Linq.Expressions.ExpressionVisitor.VisitDynamic
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.DynamicExpression
    name: DynamicExpression
    nameWithType: DynamicExpression
    fullName: System.Linq.Expressions.DynamicExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions.ExpressionVisitor.VisitDefault(System.Linq.Expressions.DefaultExpression)
  commentId: M:System.Linq.Expressions.ExpressionVisitor.VisitDefault(System.Linq.Expressions.DefaultExpression)
  parent: System.Linq.Expressions.ExpressionVisitor
  isExternal: true
  name: VisitDefault(DefaultExpression)
  nameWithType: ExpressionVisitor.VisitDefault(DefaultExpression)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitDefault(System.Linq.Expressions.DefaultExpression)
  spec.csharp:
  - uid: System.Linq.Expressions.ExpressionVisitor.VisitDefault(System.Linq.Expressions.DefaultExpression)
    name: VisitDefault
    nameWithType: ExpressionVisitor.VisitDefault
    fullName: System.Linq.Expressions.ExpressionVisitor.VisitDefault
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.DefaultExpression
    name: DefaultExpression
    nameWithType: DefaultExpression
    fullName: System.Linq.Expressions.DefaultExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.ExpressionVisitor.VisitDefault(System.Linq.Expressions.DefaultExpression)
    name: VisitDefault
    nameWithType: ExpressionVisitor.VisitDefault
    fullName: System.Linq.Expressions.ExpressionVisitor.VisitDefault
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.DefaultExpression
    name: DefaultExpression
    nameWithType: DefaultExpression
    fullName: System.Linq.Expressions.DefaultExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions.ExpressionVisitor.VisitExtension(System.Linq.Expressions.Expression)
  commentId: M:System.Linq.Expressions.ExpressionVisitor.VisitExtension(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.ExpressionVisitor
  isExternal: true
  name: VisitExtension(Expression)
  nameWithType: ExpressionVisitor.VisitExtension(Expression)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitExtension(System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.ExpressionVisitor.VisitExtension(System.Linq.Expressions.Expression)
    name: VisitExtension
    nameWithType: ExpressionVisitor.VisitExtension
    fullName: System.Linq.Expressions.ExpressionVisitor.VisitExtension
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.ExpressionVisitor.VisitExtension(System.Linq.Expressions.Expression)
    name: VisitExtension
    nameWithType: ExpressionVisitor.VisitExtension
    fullName: System.Linq.Expressions.ExpressionVisitor.VisitExtension
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions.ExpressionVisitor.VisitGoto(System.Linq.Expressions.GotoExpression)
  commentId: M:System.Linq.Expressions.ExpressionVisitor.VisitGoto(System.Linq.Expressions.GotoExpression)
  parent: System.Linq.Expressions.ExpressionVisitor
  isExternal: true
  name: VisitGoto(GotoExpression)
  nameWithType: ExpressionVisitor.VisitGoto(GotoExpression)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitGoto(System.Linq.Expressions.GotoExpression)
  spec.csharp:
  - uid: System.Linq.Expressions.ExpressionVisitor.VisitGoto(System.Linq.Expressions.GotoExpression)
    name: VisitGoto
    nameWithType: ExpressionVisitor.VisitGoto
    fullName: System.Linq.Expressions.ExpressionVisitor.VisitGoto
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.GotoExpression
    name: GotoExpression
    nameWithType: GotoExpression
    fullName: System.Linq.Expressions.GotoExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.ExpressionVisitor.VisitGoto(System.Linq.Expressions.GotoExpression)
    name: VisitGoto
    nameWithType: ExpressionVisitor.VisitGoto
    fullName: System.Linq.Expressions.ExpressionVisitor.VisitGoto
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.GotoExpression
    name: GotoExpression
    nameWithType: GotoExpression
    fullName: System.Linq.Expressions.GotoExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions.ExpressionVisitor.VisitInvocation(System.Linq.Expressions.InvocationExpression)
  commentId: M:System.Linq.Expressions.ExpressionVisitor.VisitInvocation(System.Linq.Expressions.InvocationExpression)
  parent: System.Linq.Expressions.ExpressionVisitor
  isExternal: true
  name: VisitInvocation(InvocationExpression)
  nameWithType: ExpressionVisitor.VisitInvocation(InvocationExpression)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitInvocation(System.Linq.Expressions.InvocationExpression)
  spec.csharp:
  - uid: System.Linq.Expressions.ExpressionVisitor.VisitInvocation(System.Linq.Expressions.InvocationExpression)
    name: VisitInvocation
    nameWithType: ExpressionVisitor.VisitInvocation
    fullName: System.Linq.Expressions.ExpressionVisitor.VisitInvocation
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.InvocationExpression
    name: InvocationExpression
    nameWithType: InvocationExpression
    fullName: System.Linq.Expressions.InvocationExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.ExpressionVisitor.VisitInvocation(System.Linq.Expressions.InvocationExpression)
    name: VisitInvocation
    nameWithType: ExpressionVisitor.VisitInvocation
    fullName: System.Linq.Expressions.ExpressionVisitor.VisitInvocation
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.InvocationExpression
    name: InvocationExpression
    nameWithType: InvocationExpression
    fullName: System.Linq.Expressions.InvocationExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions.ExpressionVisitor.VisitLabelTarget(System.Linq.Expressions.LabelTarget)
  commentId: M:System.Linq.Expressions.ExpressionVisitor.VisitLabelTarget(System.Linq.Expressions.LabelTarget)
  parent: System.Linq.Expressions.ExpressionVisitor
  isExternal: true
  name: VisitLabelTarget(LabelTarget)
  nameWithType: ExpressionVisitor.VisitLabelTarget(LabelTarget)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitLabelTarget(System.Linq.Expressions.LabelTarget)
  spec.csharp:
  - uid: System.Linq.Expressions.ExpressionVisitor.VisitLabelTarget(System.Linq.Expressions.LabelTarget)
    name: VisitLabelTarget
    nameWithType: ExpressionVisitor.VisitLabelTarget
    fullName: System.Linq.Expressions.ExpressionVisitor.VisitLabelTarget
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.LabelTarget
    name: LabelTarget
    nameWithType: LabelTarget
    fullName: System.Linq.Expressions.LabelTarget
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.ExpressionVisitor.VisitLabelTarget(System.Linq.Expressions.LabelTarget)
    name: VisitLabelTarget
    nameWithType: ExpressionVisitor.VisitLabelTarget
    fullName: System.Linq.Expressions.ExpressionVisitor.VisitLabelTarget
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.LabelTarget
    name: LabelTarget
    nameWithType: LabelTarget
    fullName: System.Linq.Expressions.LabelTarget
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions.ExpressionVisitor.VisitLabel(System.Linq.Expressions.LabelExpression)
  commentId: M:System.Linq.Expressions.ExpressionVisitor.VisitLabel(System.Linq.Expressions.LabelExpression)
  parent: System.Linq.Expressions.ExpressionVisitor
  isExternal: true
  name: VisitLabel(LabelExpression)
  nameWithType: ExpressionVisitor.VisitLabel(LabelExpression)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitLabel(System.Linq.Expressions.LabelExpression)
  spec.csharp:
  - uid: System.Linq.Expressions.ExpressionVisitor.VisitLabel(System.Linq.Expressions.LabelExpression)
    name: VisitLabel
    nameWithType: ExpressionVisitor.VisitLabel
    fullName: System.Linq.Expressions.ExpressionVisitor.VisitLabel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.LabelExpression
    name: LabelExpression
    nameWithType: LabelExpression
    fullName: System.Linq.Expressions.LabelExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.ExpressionVisitor.VisitLabel(System.Linq.Expressions.LabelExpression)
    name: VisitLabel
    nameWithType: ExpressionVisitor.VisitLabel
    fullName: System.Linq.Expressions.ExpressionVisitor.VisitLabel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.LabelExpression
    name: LabelExpression
    nameWithType: LabelExpression
    fullName: System.Linq.Expressions.LabelExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions.ExpressionVisitor.VisitLambda``1(System.Linq.Expressions.Expression{{T}})
  commentId: M:System.Linq.Expressions.ExpressionVisitor.VisitLambda``1(System.Linq.Expressions.Expression{``0})
  parent: System.Linq.Expressions.ExpressionVisitor
  definition: System.Linq.Expressions.ExpressionVisitor.VisitLambda``1(System.Linq.Expressions.Expression{``0})
  name: VisitLambda<T>(Expression<T>)
  nameWithType: ExpressionVisitor.VisitLambda<T>(Expression<T>)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitLambda<T>(System.Linq.Expressions.Expression<T>)
  nameWithType.vb: ExpressionVisitor.VisitLambda(Of T)(Expression(Of T))
  fullName.vb: System.Linq.Expressions.ExpressionVisitor.VisitLambda(Of T)(System.Linq.Expressions.Expression(Of T))
  name.vb: VisitLambda(Of T)(Expression(Of T))
  spec.csharp:
  - uid: System.Linq.Expressions.ExpressionVisitor.VisitLambda``1(System.Linq.Expressions.Expression{``0})
    name: VisitLambda<T>
    nameWithType: ExpressionVisitor.VisitLambda<T>
    fullName: System.Linq.Expressions.ExpressionVisitor.VisitLambda<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.ExpressionVisitor.VisitLambda``1(System.Linq.Expressions.Expression{``0})
    name: VisitLambda(Of T)
    nameWithType: ExpressionVisitor.VisitLambda(Of T)
    fullName: System.Linq.Expressions.ExpressionVisitor.VisitLambda(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions.ExpressionVisitor.VisitLoop(System.Linq.Expressions.LoopExpression)
  commentId: M:System.Linq.Expressions.ExpressionVisitor.VisitLoop(System.Linq.Expressions.LoopExpression)
  parent: System.Linq.Expressions.ExpressionVisitor
  isExternal: true
  name: VisitLoop(LoopExpression)
  nameWithType: ExpressionVisitor.VisitLoop(LoopExpression)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitLoop(System.Linq.Expressions.LoopExpression)
  spec.csharp:
  - uid: System.Linq.Expressions.ExpressionVisitor.VisitLoop(System.Linq.Expressions.LoopExpression)
    name: VisitLoop
    nameWithType: ExpressionVisitor.VisitLoop
    fullName: System.Linq.Expressions.ExpressionVisitor.VisitLoop
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.LoopExpression
    name: LoopExpression
    nameWithType: LoopExpression
    fullName: System.Linq.Expressions.LoopExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.ExpressionVisitor.VisitLoop(System.Linq.Expressions.LoopExpression)
    name: VisitLoop
    nameWithType: ExpressionVisitor.VisitLoop
    fullName: System.Linq.Expressions.ExpressionVisitor.VisitLoop
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.LoopExpression
    name: LoopExpression
    nameWithType: LoopExpression
    fullName: System.Linq.Expressions.LoopExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions.ExpressionVisitor.VisitIndex(System.Linq.Expressions.IndexExpression)
  commentId: M:System.Linq.Expressions.ExpressionVisitor.VisitIndex(System.Linq.Expressions.IndexExpression)
  parent: System.Linq.Expressions.ExpressionVisitor
  isExternal: true
  name: VisitIndex(IndexExpression)
  nameWithType: ExpressionVisitor.VisitIndex(IndexExpression)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitIndex(System.Linq.Expressions.IndexExpression)
  spec.csharp:
  - uid: System.Linq.Expressions.ExpressionVisitor.VisitIndex(System.Linq.Expressions.IndexExpression)
    name: VisitIndex
    nameWithType: ExpressionVisitor.VisitIndex
    fullName: System.Linq.Expressions.ExpressionVisitor.VisitIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.IndexExpression
    name: IndexExpression
    nameWithType: IndexExpression
    fullName: System.Linq.Expressions.IndexExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.ExpressionVisitor.VisitIndex(System.Linq.Expressions.IndexExpression)
    name: VisitIndex
    nameWithType: ExpressionVisitor.VisitIndex
    fullName: System.Linq.Expressions.ExpressionVisitor.VisitIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.IndexExpression
    name: IndexExpression
    nameWithType: IndexExpression
    fullName: System.Linq.Expressions.IndexExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions.ExpressionVisitor.VisitNewArray(System.Linq.Expressions.NewArrayExpression)
  commentId: M:System.Linq.Expressions.ExpressionVisitor.VisitNewArray(System.Linq.Expressions.NewArrayExpression)
  parent: System.Linq.Expressions.ExpressionVisitor
  isExternal: true
  name: VisitNewArray(NewArrayExpression)
  nameWithType: ExpressionVisitor.VisitNewArray(NewArrayExpression)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitNewArray(System.Linq.Expressions.NewArrayExpression)
  spec.csharp:
  - uid: System.Linq.Expressions.ExpressionVisitor.VisitNewArray(System.Linq.Expressions.NewArrayExpression)
    name: VisitNewArray
    nameWithType: ExpressionVisitor.VisitNewArray
    fullName: System.Linq.Expressions.ExpressionVisitor.VisitNewArray
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.NewArrayExpression
    name: NewArrayExpression
    nameWithType: NewArrayExpression
    fullName: System.Linq.Expressions.NewArrayExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.ExpressionVisitor.VisitNewArray(System.Linq.Expressions.NewArrayExpression)
    name: VisitNewArray
    nameWithType: ExpressionVisitor.VisitNewArray
    fullName: System.Linq.Expressions.ExpressionVisitor.VisitNewArray
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.NewArrayExpression
    name: NewArrayExpression
    nameWithType: NewArrayExpression
    fullName: System.Linq.Expressions.NewArrayExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions.ExpressionVisitor.VisitNew(System.Linq.Expressions.NewExpression)
  commentId: M:System.Linq.Expressions.ExpressionVisitor.VisitNew(System.Linq.Expressions.NewExpression)
  parent: System.Linq.Expressions.ExpressionVisitor
  isExternal: true
  name: VisitNew(NewExpression)
  nameWithType: ExpressionVisitor.VisitNew(NewExpression)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitNew(System.Linq.Expressions.NewExpression)
  spec.csharp:
  - uid: System.Linq.Expressions.ExpressionVisitor.VisitNew(System.Linq.Expressions.NewExpression)
    name: VisitNew
    nameWithType: ExpressionVisitor.VisitNew
    fullName: System.Linq.Expressions.ExpressionVisitor.VisitNew
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.NewExpression
    name: NewExpression
    nameWithType: NewExpression
    fullName: System.Linq.Expressions.NewExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.ExpressionVisitor.VisitNew(System.Linq.Expressions.NewExpression)
    name: VisitNew
    nameWithType: ExpressionVisitor.VisitNew
    fullName: System.Linq.Expressions.ExpressionVisitor.VisitNew
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.NewExpression
    name: NewExpression
    nameWithType: NewExpression
    fullName: System.Linq.Expressions.NewExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions.ExpressionVisitor.VisitParameter(System.Linq.Expressions.ParameterExpression)
  commentId: M:System.Linq.Expressions.ExpressionVisitor.VisitParameter(System.Linq.Expressions.ParameterExpression)
  parent: System.Linq.Expressions.ExpressionVisitor
  isExternal: true
  name: VisitParameter(ParameterExpression)
  nameWithType: ExpressionVisitor.VisitParameter(ParameterExpression)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitParameter(System.Linq.Expressions.ParameterExpression)
  spec.csharp:
  - uid: System.Linq.Expressions.ExpressionVisitor.VisitParameter(System.Linq.Expressions.ParameterExpression)
    name: VisitParameter
    nameWithType: ExpressionVisitor.VisitParameter
    fullName: System.Linq.Expressions.ExpressionVisitor.VisitParameter
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.ParameterExpression
    name: ParameterExpression
    nameWithType: ParameterExpression
    fullName: System.Linq.Expressions.ParameterExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.ExpressionVisitor.VisitParameter(System.Linq.Expressions.ParameterExpression)
    name: VisitParameter
    nameWithType: ExpressionVisitor.VisitParameter
    fullName: System.Linq.Expressions.ExpressionVisitor.VisitParameter
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.ParameterExpression
    name: ParameterExpression
    nameWithType: ParameterExpression
    fullName: System.Linq.Expressions.ParameterExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions.ExpressionVisitor.VisitRuntimeVariables(System.Linq.Expressions.RuntimeVariablesExpression)
  commentId: M:System.Linq.Expressions.ExpressionVisitor.VisitRuntimeVariables(System.Linq.Expressions.RuntimeVariablesExpression)
  parent: System.Linq.Expressions.ExpressionVisitor
  isExternal: true
  name: VisitRuntimeVariables(RuntimeVariablesExpression)
  nameWithType: ExpressionVisitor.VisitRuntimeVariables(RuntimeVariablesExpression)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitRuntimeVariables(System.Linq.Expressions.RuntimeVariablesExpression)
  spec.csharp:
  - uid: System.Linq.Expressions.ExpressionVisitor.VisitRuntimeVariables(System.Linq.Expressions.RuntimeVariablesExpression)
    name: VisitRuntimeVariables
    nameWithType: ExpressionVisitor.VisitRuntimeVariables
    fullName: System.Linq.Expressions.ExpressionVisitor.VisitRuntimeVariables
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.RuntimeVariablesExpression
    name: RuntimeVariablesExpression
    nameWithType: RuntimeVariablesExpression
    fullName: System.Linq.Expressions.RuntimeVariablesExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.ExpressionVisitor.VisitRuntimeVariables(System.Linq.Expressions.RuntimeVariablesExpression)
    name: VisitRuntimeVariables
    nameWithType: ExpressionVisitor.VisitRuntimeVariables
    fullName: System.Linq.Expressions.ExpressionVisitor.VisitRuntimeVariables
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.RuntimeVariablesExpression
    name: RuntimeVariablesExpression
    nameWithType: RuntimeVariablesExpression
    fullName: System.Linq.Expressions.RuntimeVariablesExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions.ExpressionVisitor.VisitSwitchCase(System.Linq.Expressions.SwitchCase)
  commentId: M:System.Linq.Expressions.ExpressionVisitor.VisitSwitchCase(System.Linq.Expressions.SwitchCase)
  parent: System.Linq.Expressions.ExpressionVisitor
  isExternal: true
  name: VisitSwitchCase(SwitchCase)
  nameWithType: ExpressionVisitor.VisitSwitchCase(SwitchCase)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitSwitchCase(System.Linq.Expressions.SwitchCase)
  spec.csharp:
  - uid: System.Linq.Expressions.ExpressionVisitor.VisitSwitchCase(System.Linq.Expressions.SwitchCase)
    name: VisitSwitchCase
    nameWithType: ExpressionVisitor.VisitSwitchCase
    fullName: System.Linq.Expressions.ExpressionVisitor.VisitSwitchCase
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.SwitchCase
    name: SwitchCase
    nameWithType: SwitchCase
    fullName: System.Linq.Expressions.SwitchCase
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.ExpressionVisitor.VisitSwitchCase(System.Linq.Expressions.SwitchCase)
    name: VisitSwitchCase
    nameWithType: ExpressionVisitor.VisitSwitchCase
    fullName: System.Linq.Expressions.ExpressionVisitor.VisitSwitchCase
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.SwitchCase
    name: SwitchCase
    nameWithType: SwitchCase
    fullName: System.Linq.Expressions.SwitchCase
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions.ExpressionVisitor.VisitSwitch(System.Linq.Expressions.SwitchExpression)
  commentId: M:System.Linq.Expressions.ExpressionVisitor.VisitSwitch(System.Linq.Expressions.SwitchExpression)
  parent: System.Linq.Expressions.ExpressionVisitor
  isExternal: true
  name: VisitSwitch(SwitchExpression)
  nameWithType: ExpressionVisitor.VisitSwitch(SwitchExpression)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitSwitch(System.Linq.Expressions.SwitchExpression)
  spec.csharp:
  - uid: System.Linq.Expressions.ExpressionVisitor.VisitSwitch(System.Linq.Expressions.SwitchExpression)
    name: VisitSwitch
    nameWithType: ExpressionVisitor.VisitSwitch
    fullName: System.Linq.Expressions.ExpressionVisitor.VisitSwitch
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.SwitchExpression
    name: SwitchExpression
    nameWithType: SwitchExpression
    fullName: System.Linq.Expressions.SwitchExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.ExpressionVisitor.VisitSwitch(System.Linq.Expressions.SwitchExpression)
    name: VisitSwitch
    nameWithType: ExpressionVisitor.VisitSwitch
    fullName: System.Linq.Expressions.ExpressionVisitor.VisitSwitch
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.SwitchExpression
    name: SwitchExpression
    nameWithType: SwitchExpression
    fullName: System.Linq.Expressions.SwitchExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions.ExpressionVisitor.VisitCatchBlock(System.Linq.Expressions.CatchBlock)
  commentId: M:System.Linq.Expressions.ExpressionVisitor.VisitCatchBlock(System.Linq.Expressions.CatchBlock)
  parent: System.Linq.Expressions.ExpressionVisitor
  isExternal: true
  name: VisitCatchBlock(CatchBlock)
  nameWithType: ExpressionVisitor.VisitCatchBlock(CatchBlock)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitCatchBlock(System.Linq.Expressions.CatchBlock)
  spec.csharp:
  - uid: System.Linq.Expressions.ExpressionVisitor.VisitCatchBlock(System.Linq.Expressions.CatchBlock)
    name: VisitCatchBlock
    nameWithType: ExpressionVisitor.VisitCatchBlock
    fullName: System.Linq.Expressions.ExpressionVisitor.VisitCatchBlock
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.CatchBlock
    name: CatchBlock
    nameWithType: CatchBlock
    fullName: System.Linq.Expressions.CatchBlock
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.ExpressionVisitor.VisitCatchBlock(System.Linq.Expressions.CatchBlock)
    name: VisitCatchBlock
    nameWithType: ExpressionVisitor.VisitCatchBlock
    fullName: System.Linq.Expressions.ExpressionVisitor.VisitCatchBlock
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.CatchBlock
    name: CatchBlock
    nameWithType: CatchBlock
    fullName: System.Linq.Expressions.CatchBlock
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions.ExpressionVisitor.VisitTry(System.Linq.Expressions.TryExpression)
  commentId: M:System.Linq.Expressions.ExpressionVisitor.VisitTry(System.Linq.Expressions.TryExpression)
  parent: System.Linq.Expressions.ExpressionVisitor
  isExternal: true
  name: VisitTry(TryExpression)
  nameWithType: ExpressionVisitor.VisitTry(TryExpression)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitTry(System.Linq.Expressions.TryExpression)
  spec.csharp:
  - uid: System.Linq.Expressions.ExpressionVisitor.VisitTry(System.Linq.Expressions.TryExpression)
    name: VisitTry
    nameWithType: ExpressionVisitor.VisitTry
    fullName: System.Linq.Expressions.ExpressionVisitor.VisitTry
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.TryExpression
    name: TryExpression
    nameWithType: TryExpression
    fullName: System.Linq.Expressions.TryExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.ExpressionVisitor.VisitTry(System.Linq.Expressions.TryExpression)
    name: VisitTry
    nameWithType: ExpressionVisitor.VisitTry
    fullName: System.Linq.Expressions.ExpressionVisitor.VisitTry
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.TryExpression
    name: TryExpression
    nameWithType: TryExpression
    fullName: System.Linq.Expressions.TryExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions.ExpressionVisitor.VisitTypeBinary(System.Linq.Expressions.TypeBinaryExpression)
  commentId: M:System.Linq.Expressions.ExpressionVisitor.VisitTypeBinary(System.Linq.Expressions.TypeBinaryExpression)
  parent: System.Linq.Expressions.ExpressionVisitor
  isExternal: true
  name: VisitTypeBinary(TypeBinaryExpression)
  nameWithType: ExpressionVisitor.VisitTypeBinary(TypeBinaryExpression)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitTypeBinary(System.Linq.Expressions.TypeBinaryExpression)
  spec.csharp:
  - uid: System.Linq.Expressions.ExpressionVisitor.VisitTypeBinary(System.Linq.Expressions.TypeBinaryExpression)
    name: VisitTypeBinary
    nameWithType: ExpressionVisitor.VisitTypeBinary
    fullName: System.Linq.Expressions.ExpressionVisitor.VisitTypeBinary
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.TypeBinaryExpression
    name: TypeBinaryExpression
    nameWithType: TypeBinaryExpression
    fullName: System.Linq.Expressions.TypeBinaryExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.ExpressionVisitor.VisitTypeBinary(System.Linq.Expressions.TypeBinaryExpression)
    name: VisitTypeBinary
    nameWithType: ExpressionVisitor.VisitTypeBinary
    fullName: System.Linq.Expressions.ExpressionVisitor.VisitTypeBinary
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.TypeBinaryExpression
    name: TypeBinaryExpression
    nameWithType: TypeBinaryExpression
    fullName: System.Linq.Expressions.TypeBinaryExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions.ExpressionVisitor.VisitUnary(System.Linq.Expressions.UnaryExpression)
  commentId: M:System.Linq.Expressions.ExpressionVisitor.VisitUnary(System.Linq.Expressions.UnaryExpression)
  parent: System.Linq.Expressions.ExpressionVisitor
  isExternal: true
  name: VisitUnary(UnaryExpression)
  nameWithType: ExpressionVisitor.VisitUnary(UnaryExpression)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitUnary(System.Linq.Expressions.UnaryExpression)
  spec.csharp:
  - uid: System.Linq.Expressions.ExpressionVisitor.VisitUnary(System.Linq.Expressions.UnaryExpression)
    name: VisitUnary
    nameWithType: ExpressionVisitor.VisitUnary
    fullName: System.Linq.Expressions.ExpressionVisitor.VisitUnary
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.UnaryExpression
    name: UnaryExpression
    nameWithType: UnaryExpression
    fullName: System.Linq.Expressions.UnaryExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.ExpressionVisitor.VisitUnary(System.Linq.Expressions.UnaryExpression)
    name: VisitUnary
    nameWithType: ExpressionVisitor.VisitUnary
    fullName: System.Linq.Expressions.ExpressionVisitor.VisitUnary
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.UnaryExpression
    name: UnaryExpression
    nameWithType: UnaryExpression
    fullName: System.Linq.Expressions.UnaryExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions.ExpressionVisitor.VisitMemberInit(System.Linq.Expressions.MemberInitExpression)
  commentId: M:System.Linq.Expressions.ExpressionVisitor.VisitMemberInit(System.Linq.Expressions.MemberInitExpression)
  parent: System.Linq.Expressions.ExpressionVisitor
  isExternal: true
  name: VisitMemberInit(MemberInitExpression)
  nameWithType: ExpressionVisitor.VisitMemberInit(MemberInitExpression)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitMemberInit(System.Linq.Expressions.MemberInitExpression)
  spec.csharp:
  - uid: System.Linq.Expressions.ExpressionVisitor.VisitMemberInit(System.Linq.Expressions.MemberInitExpression)
    name: VisitMemberInit
    nameWithType: ExpressionVisitor.VisitMemberInit
    fullName: System.Linq.Expressions.ExpressionVisitor.VisitMemberInit
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.MemberInitExpression
    name: MemberInitExpression
    nameWithType: MemberInitExpression
    fullName: System.Linq.Expressions.MemberInitExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.ExpressionVisitor.VisitMemberInit(System.Linq.Expressions.MemberInitExpression)
    name: VisitMemberInit
    nameWithType: ExpressionVisitor.VisitMemberInit
    fullName: System.Linq.Expressions.ExpressionVisitor.VisitMemberInit
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.MemberInitExpression
    name: MemberInitExpression
    nameWithType: MemberInitExpression
    fullName: System.Linq.Expressions.MemberInitExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions.ExpressionVisitor.VisitListInit(System.Linq.Expressions.ListInitExpression)
  commentId: M:System.Linq.Expressions.ExpressionVisitor.VisitListInit(System.Linq.Expressions.ListInitExpression)
  parent: System.Linq.Expressions.ExpressionVisitor
  isExternal: true
  name: VisitListInit(ListInitExpression)
  nameWithType: ExpressionVisitor.VisitListInit(ListInitExpression)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitListInit(System.Linq.Expressions.ListInitExpression)
  spec.csharp:
  - uid: System.Linq.Expressions.ExpressionVisitor.VisitListInit(System.Linq.Expressions.ListInitExpression)
    name: VisitListInit
    nameWithType: ExpressionVisitor.VisitListInit
    fullName: System.Linq.Expressions.ExpressionVisitor.VisitListInit
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.ListInitExpression
    name: ListInitExpression
    nameWithType: ListInitExpression
    fullName: System.Linq.Expressions.ListInitExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.ExpressionVisitor.VisitListInit(System.Linq.Expressions.ListInitExpression)
    name: VisitListInit
    nameWithType: ExpressionVisitor.VisitListInit
    fullName: System.Linq.Expressions.ExpressionVisitor.VisitListInit
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.ListInitExpression
    name: ListInitExpression
    nameWithType: ListInitExpression
    fullName: System.Linq.Expressions.ListInitExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions.ExpressionVisitor.VisitElementInit(System.Linq.Expressions.ElementInit)
  commentId: M:System.Linq.Expressions.ExpressionVisitor.VisitElementInit(System.Linq.Expressions.ElementInit)
  parent: System.Linq.Expressions.ExpressionVisitor
  isExternal: true
  name: VisitElementInit(ElementInit)
  nameWithType: ExpressionVisitor.VisitElementInit(ElementInit)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitElementInit(System.Linq.Expressions.ElementInit)
  spec.csharp:
  - uid: System.Linq.Expressions.ExpressionVisitor.VisitElementInit(System.Linq.Expressions.ElementInit)
    name: VisitElementInit
    nameWithType: ExpressionVisitor.VisitElementInit
    fullName: System.Linq.Expressions.ExpressionVisitor.VisitElementInit
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.ElementInit
    name: ElementInit
    nameWithType: ElementInit
    fullName: System.Linq.Expressions.ElementInit
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.ExpressionVisitor.VisitElementInit(System.Linq.Expressions.ElementInit)
    name: VisitElementInit
    nameWithType: ExpressionVisitor.VisitElementInit
    fullName: System.Linq.Expressions.ExpressionVisitor.VisitElementInit
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.ElementInit
    name: ElementInit
    nameWithType: ElementInit
    fullName: System.Linq.Expressions.ElementInit
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions.ExpressionVisitor.VisitMemberBinding(System.Linq.Expressions.MemberBinding)
  commentId: M:System.Linq.Expressions.ExpressionVisitor.VisitMemberBinding(System.Linq.Expressions.MemberBinding)
  parent: System.Linq.Expressions.ExpressionVisitor
  isExternal: true
  name: VisitMemberBinding(MemberBinding)
  nameWithType: ExpressionVisitor.VisitMemberBinding(MemberBinding)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitMemberBinding(System.Linq.Expressions.MemberBinding)
  spec.csharp:
  - uid: System.Linq.Expressions.ExpressionVisitor.VisitMemberBinding(System.Linq.Expressions.MemberBinding)
    name: VisitMemberBinding
    nameWithType: ExpressionVisitor.VisitMemberBinding
    fullName: System.Linq.Expressions.ExpressionVisitor.VisitMemberBinding
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.MemberBinding
    name: MemberBinding
    nameWithType: MemberBinding
    fullName: System.Linq.Expressions.MemberBinding
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.ExpressionVisitor.VisitMemberBinding(System.Linq.Expressions.MemberBinding)
    name: VisitMemberBinding
    nameWithType: ExpressionVisitor.VisitMemberBinding
    fullName: System.Linq.Expressions.ExpressionVisitor.VisitMemberBinding
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.MemberBinding
    name: MemberBinding
    nameWithType: MemberBinding
    fullName: System.Linq.Expressions.MemberBinding
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions.ExpressionVisitor.VisitMemberAssignment(System.Linq.Expressions.MemberAssignment)
  commentId: M:System.Linq.Expressions.ExpressionVisitor.VisitMemberAssignment(System.Linq.Expressions.MemberAssignment)
  parent: System.Linq.Expressions.ExpressionVisitor
  isExternal: true
  name: VisitMemberAssignment(MemberAssignment)
  nameWithType: ExpressionVisitor.VisitMemberAssignment(MemberAssignment)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitMemberAssignment(System.Linq.Expressions.MemberAssignment)
  spec.csharp:
  - uid: System.Linq.Expressions.ExpressionVisitor.VisitMemberAssignment(System.Linq.Expressions.MemberAssignment)
    name: VisitMemberAssignment
    nameWithType: ExpressionVisitor.VisitMemberAssignment
    fullName: System.Linq.Expressions.ExpressionVisitor.VisitMemberAssignment
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.MemberAssignment
    name: MemberAssignment
    nameWithType: MemberAssignment
    fullName: System.Linq.Expressions.MemberAssignment
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.ExpressionVisitor.VisitMemberAssignment(System.Linq.Expressions.MemberAssignment)
    name: VisitMemberAssignment
    nameWithType: ExpressionVisitor.VisitMemberAssignment
    fullName: System.Linq.Expressions.ExpressionVisitor.VisitMemberAssignment
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.MemberAssignment
    name: MemberAssignment
    nameWithType: MemberAssignment
    fullName: System.Linq.Expressions.MemberAssignment
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions.ExpressionVisitor.VisitMemberMemberBinding(System.Linq.Expressions.MemberMemberBinding)
  commentId: M:System.Linq.Expressions.ExpressionVisitor.VisitMemberMemberBinding(System.Linq.Expressions.MemberMemberBinding)
  parent: System.Linq.Expressions.ExpressionVisitor
  isExternal: true
  name: VisitMemberMemberBinding(MemberMemberBinding)
  nameWithType: ExpressionVisitor.VisitMemberMemberBinding(MemberMemberBinding)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitMemberMemberBinding(System.Linq.Expressions.MemberMemberBinding)
  spec.csharp:
  - uid: System.Linq.Expressions.ExpressionVisitor.VisitMemberMemberBinding(System.Linq.Expressions.MemberMemberBinding)
    name: VisitMemberMemberBinding
    nameWithType: ExpressionVisitor.VisitMemberMemberBinding
    fullName: System.Linq.Expressions.ExpressionVisitor.VisitMemberMemberBinding
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.MemberMemberBinding
    name: MemberMemberBinding
    nameWithType: MemberMemberBinding
    fullName: System.Linq.Expressions.MemberMemberBinding
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.ExpressionVisitor.VisitMemberMemberBinding(System.Linq.Expressions.MemberMemberBinding)
    name: VisitMemberMemberBinding
    nameWithType: ExpressionVisitor.VisitMemberMemberBinding
    fullName: System.Linq.Expressions.ExpressionVisitor.VisitMemberMemberBinding
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.MemberMemberBinding
    name: MemberMemberBinding
    nameWithType: MemberMemberBinding
    fullName: System.Linq.Expressions.MemberMemberBinding
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions.ExpressionVisitor.VisitMemberListBinding(System.Linq.Expressions.MemberListBinding)
  commentId: M:System.Linq.Expressions.ExpressionVisitor.VisitMemberListBinding(System.Linq.Expressions.MemberListBinding)
  parent: System.Linq.Expressions.ExpressionVisitor
  isExternal: true
  name: VisitMemberListBinding(MemberListBinding)
  nameWithType: ExpressionVisitor.VisitMemberListBinding(MemberListBinding)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitMemberListBinding(System.Linq.Expressions.MemberListBinding)
  spec.csharp:
  - uid: System.Linq.Expressions.ExpressionVisitor.VisitMemberListBinding(System.Linq.Expressions.MemberListBinding)
    name: VisitMemberListBinding
    nameWithType: ExpressionVisitor.VisitMemberListBinding
    fullName: System.Linq.Expressions.ExpressionVisitor.VisitMemberListBinding
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.MemberListBinding
    name: MemberListBinding
    nameWithType: MemberListBinding
    fullName: System.Linq.Expressions.MemberListBinding
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.ExpressionVisitor.VisitMemberListBinding(System.Linq.Expressions.MemberListBinding)
    name: VisitMemberListBinding
    nameWithType: ExpressionVisitor.VisitMemberListBinding
    fullName: System.Linq.Expressions.ExpressionVisitor.VisitMemberListBinding
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.MemberListBinding
    name: MemberListBinding
    nameWithType: MemberListBinding
    fullName: System.Linq.Expressions.MemberListBinding
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Linq.Expressions
  commentId: N:System.Linq.Expressions
  isExternal: false
  name: System.Linq.Expressions
  nameWithType: System.Linq.Expressions
  fullName: System.Linq.Expressions
- uid: System.Linq.Expressions.ExpressionVisitor.Visit``1(System.Collections.ObjectModel.ReadOnlyCollection{``0},System.Func{``0,``0})
  commentId: M:System.Linq.Expressions.ExpressionVisitor.Visit``1(System.Collections.ObjectModel.ReadOnlyCollection{``0},System.Func{``0,``0})
  isExternal: true
  name: Visit<T>(ReadOnlyCollection<T>, Func<T, T>)
  nameWithType: ExpressionVisitor.Visit<T>(ReadOnlyCollection<T>, Func<T, T>)
  fullName: System.Linq.Expressions.ExpressionVisitor.Visit<T>(System.Collections.ObjectModel.ReadOnlyCollection<T>, System.Func<T, T>)
  nameWithType.vb: ExpressionVisitor.Visit(Of T)(ReadOnlyCollection(Of T), Func(Of T, T))
  fullName.vb: System.Linq.Expressions.ExpressionVisitor.Visit(Of T)(System.Collections.ObjectModel.ReadOnlyCollection(Of T), System.Func(Of T, T))
  name.vb: Visit(Of T)(ReadOnlyCollection(Of T), Func(Of T, T))
  spec.csharp:
  - uid: System.Linq.Expressions.ExpressionVisitor.Visit``1(System.Collections.ObjectModel.ReadOnlyCollection{``0},System.Func{``0,``0})
    name: Visit<T>
    nameWithType: ExpressionVisitor.Visit<T>
    fullName: System.Linq.Expressions.ExpressionVisitor.Visit<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.ExpressionVisitor.Visit``1(System.Collections.ObjectModel.ReadOnlyCollection{``0},System.Func{``0,``0})
    name: Visit(Of T)
    nameWithType: ExpressionVisitor.Visit(Of T)
    fullName: System.Linq.Expressions.ExpressionVisitor.Visit(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert``1(``0,System.String)
  commentId: M:System.Linq.Expressions.ExpressionVisitor.VisitAndConvert``1(``0,System.String)
  isExternal: true
  name: VisitAndConvert<T>(T, String)
  nameWithType: ExpressionVisitor.VisitAndConvert<T>(T, String)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert<T>(T, System.String)
  nameWithType.vb: ExpressionVisitor.VisitAndConvert(Of T)(T, String)
  fullName.vb: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert(Of T)(T, System.String)
  name.vb: VisitAndConvert(Of T)(T, String)
  spec.csharp:
  - uid: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert``1(``0,System.String)
    name: VisitAndConvert<T>
    nameWithType: ExpressionVisitor.VisitAndConvert<T>
    fullName: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert``1(``0,System.String)
    name: VisitAndConvert(Of T)
    nameWithType: ExpressionVisitor.VisitAndConvert(Of T)
    fullName: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert``1(System.Collections.ObjectModel.ReadOnlyCollection{``0},System.String)
  commentId: M:System.Linq.Expressions.ExpressionVisitor.VisitAndConvert``1(System.Collections.ObjectModel.ReadOnlyCollection{``0},System.String)
  isExternal: true
  name: VisitAndConvert<T>(ReadOnlyCollection<T>, String)
  nameWithType: ExpressionVisitor.VisitAndConvert<T>(ReadOnlyCollection<T>, String)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert<T>(System.Collections.ObjectModel.ReadOnlyCollection<T>, System.String)
  nameWithType.vb: ExpressionVisitor.VisitAndConvert(Of T)(ReadOnlyCollection(Of T), String)
  fullName.vb: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert(Of T)(System.Collections.ObjectModel.ReadOnlyCollection(Of T), System.String)
  name.vb: VisitAndConvert(Of T)(ReadOnlyCollection(Of T), String)
  spec.csharp:
  - uid: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert``1(System.Collections.ObjectModel.ReadOnlyCollection{``0},System.String)
    name: VisitAndConvert<T>
    nameWithType: ExpressionVisitor.VisitAndConvert<T>
    fullName: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert``1(System.Collections.ObjectModel.ReadOnlyCollection{``0},System.String)
    name: VisitAndConvert(Of T)
    nameWithType: ExpressionVisitor.VisitAndConvert(Of T)
    fullName: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions.ExpressionVisitor.VisitLambda``1(System.Linq.Expressions.Expression{``0})
  commentId: M:System.Linq.Expressions.ExpressionVisitor.VisitLambda``1(System.Linq.Expressions.Expression{``0})
  isExternal: true
  name: VisitLambda<T>(Expression<T>)
  nameWithType: ExpressionVisitor.VisitLambda<T>(Expression<T>)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitLambda<T>(System.Linq.Expressions.Expression<T>)
  nameWithType.vb: ExpressionVisitor.VisitLambda(Of T)(Expression(Of T))
  fullName.vb: System.Linq.Expressions.ExpressionVisitor.VisitLambda(Of T)(System.Linq.Expressions.Expression(Of T))
  name.vb: VisitLambda(Of T)(Expression(Of T))
  spec.csharp:
  - uid: System.Linq.Expressions.ExpressionVisitor.VisitLambda``1(System.Linq.Expressions.Expression{``0})
    name: VisitLambda<T>
    nameWithType: ExpressionVisitor.VisitLambda<T>
    fullName: System.Linq.Expressions.ExpressionVisitor.VisitLambda<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.ExpressionVisitor.VisitLambda``1(System.Linq.Expressions.Expression{``0})
    name: VisitLambda(Of T)
    nameWithType: ExpressionVisitor.VisitLambda(Of T)
    fullName: System.Linq.Expressions.ExpressionVisitor.VisitLambda(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.QueryLanguage.Queryable.QueryTranslator.TranslateQuery*
  commentId: Overload:TimeCockpit.Data.QueryLanguage.Queryable.QueryTranslator.TranslateQuery
  isExternal: false
  name: TranslateQuery
  nameWithType: QueryTranslator.TranslateQuery
  fullName: TimeCockpit.Data.QueryLanguage.Queryable.QueryTranslator.TranslateQuery
- uid: System.Linq.Expressions.Expression
  commentId: T:System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: true
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: TimeCockpit.Data.DataModel.Model
  commentId: T:TimeCockpit.Data.DataModel.Model
  parent: TimeCockpit.Data.DataModel
  isExternal: false
  name: Model
  nameWithType: Model
  fullName: TimeCockpit.Data.DataModel.Model
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: TimeCockpit.Data.DataModel
  commentId: N:TimeCockpit.Data.DataModel
  isExternal: false
  name: TimeCockpit.Data.DataModel
  nameWithType: TimeCockpit.Data.DataModel
  fullName: TimeCockpit.Data.DataModel
- uid: System.Linq.Expressions.ExpressionVisitor.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)
  commentId: M:System.Linq.Expressions.ExpressionVisitor.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)
  parent: System.Linq.Expressions.ExpressionVisitor
  isExternal: true
  name: VisitMethodCall(MethodCallExpression)
  nameWithType: ExpressionVisitor.VisitMethodCall(MethodCallExpression)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)
  spec.csharp:
  - uid: System.Linq.Expressions.ExpressionVisitor.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)
    name: VisitMethodCall
    nameWithType: ExpressionVisitor.VisitMethodCall
    fullName: System.Linq.Expressions.ExpressionVisitor.VisitMethodCall
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.MethodCallExpression
    name: MethodCallExpression
    nameWithType: MethodCallExpression
    fullName: System.Linq.Expressions.MethodCallExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.ExpressionVisitor.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)
    name: VisitMethodCall
    nameWithType: ExpressionVisitor.VisitMethodCall
    fullName: System.Linq.Expressions.ExpressionVisitor.VisitMethodCall
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.MethodCallExpression
    name: MethodCallExpression
    nameWithType: MethodCallExpression
    fullName: System.Linq.Expressions.MethodCallExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.QueryLanguage.Queryable.QueryTranslator.VisitMethodCall*
  commentId: Overload:TimeCockpit.Data.QueryLanguage.Queryable.QueryTranslator.VisitMethodCall
  isExternal: false
  name: VisitMethodCall
  nameWithType: QueryTranslator.VisitMethodCall
  fullName: TimeCockpit.Data.QueryLanguage.Queryable.QueryTranslator.VisitMethodCall
- uid: System.Linq.Expressions.MethodCallExpression
  commentId: T:System.Linq.Expressions.MethodCallExpression
  parent: System.Linq.Expressions
  isExternal: true
  name: MethodCallExpression
  nameWithType: MethodCallExpression
  fullName: System.Linq.Expressions.MethodCallExpression
- uid: System.Linq.Expressions.ExpressionVisitor.VisitBinary(System.Linq.Expressions.BinaryExpression)
  commentId: M:System.Linq.Expressions.ExpressionVisitor.VisitBinary(System.Linq.Expressions.BinaryExpression)
  parent: System.Linq.Expressions.ExpressionVisitor
  isExternal: true
  name: VisitBinary(BinaryExpression)
  nameWithType: ExpressionVisitor.VisitBinary(BinaryExpression)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitBinary(System.Linq.Expressions.BinaryExpression)
  spec.csharp:
  - uid: System.Linq.Expressions.ExpressionVisitor.VisitBinary(System.Linq.Expressions.BinaryExpression)
    name: VisitBinary
    nameWithType: ExpressionVisitor.VisitBinary
    fullName: System.Linq.Expressions.ExpressionVisitor.VisitBinary
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.BinaryExpression
    name: BinaryExpression
    nameWithType: BinaryExpression
    fullName: System.Linq.Expressions.BinaryExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.ExpressionVisitor.VisitBinary(System.Linq.Expressions.BinaryExpression)
    name: VisitBinary
    nameWithType: ExpressionVisitor.VisitBinary
    fullName: System.Linq.Expressions.ExpressionVisitor.VisitBinary
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.BinaryExpression
    name: BinaryExpression
    nameWithType: BinaryExpression
    fullName: System.Linq.Expressions.BinaryExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.QueryLanguage.Queryable.QueryTranslator.VisitBinary*
  commentId: Overload:TimeCockpit.Data.QueryLanguage.Queryable.QueryTranslator.VisitBinary
  isExternal: false
  name: VisitBinary
  nameWithType: QueryTranslator.VisitBinary
  fullName: TimeCockpit.Data.QueryLanguage.Queryable.QueryTranslator.VisitBinary
- uid: System.Linq.Expressions.BinaryExpression
  commentId: T:System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: true
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.ExpressionVisitor.VisitConstant(System.Linq.Expressions.ConstantExpression)
  commentId: M:System.Linq.Expressions.ExpressionVisitor.VisitConstant(System.Linq.Expressions.ConstantExpression)
  parent: System.Linq.Expressions.ExpressionVisitor
  isExternal: true
  name: VisitConstant(ConstantExpression)
  nameWithType: ExpressionVisitor.VisitConstant(ConstantExpression)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitConstant(System.Linq.Expressions.ConstantExpression)
  spec.csharp:
  - uid: System.Linq.Expressions.ExpressionVisitor.VisitConstant(System.Linq.Expressions.ConstantExpression)
    name: VisitConstant
    nameWithType: ExpressionVisitor.VisitConstant
    fullName: System.Linq.Expressions.ExpressionVisitor.VisitConstant
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.ConstantExpression
    name: ConstantExpression
    nameWithType: ConstantExpression
    fullName: System.Linq.Expressions.ConstantExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.ExpressionVisitor.VisitConstant(System.Linq.Expressions.ConstantExpression)
    name: VisitConstant
    nameWithType: ExpressionVisitor.VisitConstant
    fullName: System.Linq.Expressions.ExpressionVisitor.VisitConstant
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.ConstantExpression
    name: ConstantExpression
    nameWithType: ConstantExpression
    fullName: System.Linq.Expressions.ConstantExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.QueryLanguage.Queryable.QueryTranslator.VisitConstant*
  commentId: Overload:TimeCockpit.Data.QueryLanguage.Queryable.QueryTranslator.VisitConstant
  isExternal: false
  name: VisitConstant
  nameWithType: QueryTranslator.VisitConstant
  fullName: TimeCockpit.Data.QueryLanguage.Queryable.QueryTranslator.VisitConstant
- uid: System.Linq.Expressions.ConstantExpression
  commentId: T:System.Linq.Expressions.ConstantExpression
  parent: System.Linq.Expressions
  isExternal: true
  name: ConstantExpression
  nameWithType: ConstantExpression
  fullName: System.Linq.Expressions.ConstantExpression
- uid: System.Linq.Expressions.ExpressionVisitor.VisitMember(System.Linq.Expressions.MemberExpression)
  commentId: M:System.Linq.Expressions.ExpressionVisitor.VisitMember(System.Linq.Expressions.MemberExpression)
  parent: System.Linq.Expressions.ExpressionVisitor
  isExternal: true
  name: VisitMember(MemberExpression)
  nameWithType: ExpressionVisitor.VisitMember(MemberExpression)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitMember(System.Linq.Expressions.MemberExpression)
  spec.csharp:
  - uid: System.Linq.Expressions.ExpressionVisitor.VisitMember(System.Linq.Expressions.MemberExpression)
    name: VisitMember
    nameWithType: ExpressionVisitor.VisitMember
    fullName: System.Linq.Expressions.ExpressionVisitor.VisitMember
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.MemberExpression
    name: MemberExpression
    nameWithType: MemberExpression
    fullName: System.Linq.Expressions.MemberExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.ExpressionVisitor.VisitMember(System.Linq.Expressions.MemberExpression)
    name: VisitMember
    nameWithType: ExpressionVisitor.VisitMember
    fullName: System.Linq.Expressions.ExpressionVisitor.VisitMember
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.MemberExpression
    name: MemberExpression
    nameWithType: MemberExpression
    fullName: System.Linq.Expressions.MemberExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.QueryLanguage.Queryable.QueryTranslator.VisitMember*
  commentId: Overload:TimeCockpit.Data.QueryLanguage.Queryable.QueryTranslator.VisitMember
  isExternal: false
  name: VisitMember
  nameWithType: QueryTranslator.VisitMember
  fullName: TimeCockpit.Data.QueryLanguage.Queryable.QueryTranslator.VisitMember
- uid: System.Linq.Expressions.MemberExpression
  commentId: T:System.Linq.Expressions.MemberExpression
  parent: System.Linq.Expressions
  isExternal: true
  name: MemberExpression
  nameWithType: MemberExpression
  fullName: System.Linq.Expressions.MemberExpression
