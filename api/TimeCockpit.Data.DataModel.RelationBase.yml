### YamlMime:ManagedReference
items:
- uid: TimeCockpit.Data.DataModel.RelationBase
  commentId: T:TimeCockpit.Data.DataModel.RelationBase
  id: RelationBase
  parent: TimeCockpit.Data.DataModel
  children:
  - TimeCockpit.Data.DataModel.RelationBase.#ctor
  - TimeCockpit.Data.DataModel.RelationBase.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Object,System.Object}})
  - TimeCockpit.Data.DataModel.RelationBase.#ctor(TimeCockpit.Data.DataModel.Relation)
  - TimeCockpit.Data.DataModel.RelationBase.Attach(TimeCockpit.Data.DataModel.ModelElement)
  - TimeCockpit.Data.DataModel.RelationBase.DataType
  - TimeCockpit.Data.DataModel.RelationBase.InitializeObject
  - TimeCockpit.Data.DataModel.RelationBase.IsNullable
  - TimeCockpit.Data.DataModel.RelationBase.Permissions
  - TimeCockpit.Data.DataModel.RelationBase.RemovePermissions
  - TimeCockpit.Data.DataModel.RelationBase.ShallowCopy
  - TimeCockpit.Data.DataModel.RelationBase.ShallowCopy(System.String,TimeCockpit.Data.DataModel.PersistBehavior,TimeCockpit.Data.DataModel.Ownership,System.Boolean,System.Boolean)
  - TimeCockpit.Data.DataModel.RelationBase.Target
  langs:
  - csharp
  - vb
  name: RelationBase
  nameWithType: RelationBase
  fullName: TimeCockpit.Data.DataModel.RelationBase
  type: Class
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/RelationBase.cs
    id: RelationBase
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/RelationBase.cs
    startLine: 25
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel
  summary: "\nBase class for relations (with storage) and virtual relations (with conditions).\n"
  example: []
  syntax:
    content: >-
      [DataContract]

      [JsonObject(MemberSerialization.OptIn)]

      public abstract class RelationBase : ModelElement, IDynamicMetaObjectProvider, INotifyPropertyChanged, IDataErrorInfo, INullable
    content.vb: >-
      <DataContract>

      <JsonObject(MemberSerialization.OptIn)>

      Public MustInherit Class RelationBase
          Inherits ModelElement
          Implements IDynamicMetaObjectProvider, INotifyPropertyChanged, IDataErrorInfo, INullable
  inheritance:
  - System.Object
  - TimeCockpit.Data.DynamicObject
  - TimeCockpit.Data.DataModel.NamedDynamicObject
  - TimeCockpit.Data.DataModel.ModelElement
  derivedClasses:
  - TimeCockpit.Data.DataModel.LogicalRelation
  - TimeCockpit.Data.DataModel.Relation
  implements:
  - System.Dynamic.IDynamicMetaObjectProvider
  - System.ComponentModel.INotifyPropertyChanged
  - System.ComponentModel.IDataErrorInfo
  - TimeCockpit.Data.DataModel.INullable
  inheritedMembers:
  - TimeCockpit.Data.DataModel.ModelElement.ElementGuid
  - TimeCockpit.Data.DataModel.ModelElement.Name
  - TimeCockpit.Data.DataModel.ModelElement.Parent
  - TimeCockpit.Data.DataModel.ModelElement.Children
  - TimeCockpit.Data.DataModel.ModelElement.PersistBehavior
  - TimeCockpit.Data.DataModel.ModelElement.IsFullPersistBehavior
  - TimeCockpit.Data.DataModel.ModelElement.IsNonePersistBehavior
  - TimeCockpit.Data.DataModel.ModelElement.IsSystemElement
  - TimeCockpit.Data.DataModel.ModelElement.IsApplicationSpecificElement
  - TimeCockpit.Data.DataModel.ModelElement.IsUserElement
  - TimeCockpit.Data.DataModel.ModelElement.IsSystemOrApplicationSpecificElement
  - TimeCockpit.Data.DataModel.ModelElement.InvariantFriendlyName
  - TimeCockpit.Data.DataModel.ModelElement.CreationVersion
  - TimeCockpit.Data.DataModel.ModelElement.LastUpdateVersion
  - TimeCockpit.Data.DataModel.ModelElement.Error
  - TimeCockpit.Data.DataModel.ModelElement.ErrorSummary
  - TimeCockpit.Data.DataModel.ModelElement.IsValid
  - TimeCockpit.Data.DataModel.ModelElement.Ownership
  - TimeCockpit.Data.DataModel.ModelElement.OwnershipPrefix
  - TimeCockpit.Data.DataModel.ModelElement.NonPrefixedName
  - TimeCockpit.Data.DataModel.ModelElement.System#ComponentModel#IDataErrorInfo#Item(System.String)
  - TimeCockpit.Data.DataModel.ModelElement.IsValidIdentifier(System.String)
  - TimeCockpit.Data.DataModel.ModelElement.OnDeserializing(System.Runtime.Serialization.StreamingContext)
  - TimeCockpit.Data.DataModel.ModelElement.Accept(TimeCockpit.Data.DataModel.ModelElementVisitor)
  - TimeCockpit.Data.DataModel.ModelElement.Detach
  - TimeCockpit.Data.DataModel.ModelElement.Validate(System.Collections.Generic.IList{TimeCockpit.Data.DataModel.PropertyValidationMessage}@,System.Boolean)
  - TimeCockpit.Data.DataModel.ModelElement.SetOwnershipPrefix(System.String)
  - TimeCockpit.Data.DataModel.ModelElement.UpdateChildren(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  - TimeCockpit.Data.DataModel.ModelElement.SetPersistBehavior(TimeCockpit.Data.DataModel.PersistBehavior)
  - TimeCockpit.Data.DataModel.ModelElement.SetName(System.String)
  - TimeCockpit.Data.DataModel.ModelElement.SetOwnership(TimeCockpit.Data.DataModel.Ownership)
  - TimeCockpit.Data.DataModel.NamedDynamicObject.PropertyChanged
  - TimeCockpit.Data.DataModel.NamedDynamicObject.OnPropertyChanged(System.String)
  - TimeCockpit.Data.DynamicObject.GetMember(System.String)
  - TimeCockpit.Data.DynamicObject.SetMember(System.String,System.Object)
  - TimeCockpit.Data.DynamicObject.GetMetaObject(System.Linq.Expressions.Expression)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
  - type: Newtonsoft.Json.JsonObjectAttribute
    ctor: Newtonsoft.Json.JsonObjectAttribute.#ctor(Newtonsoft.Json.MemberSerialization)
    arguments:
    - type: Newtonsoft.Json.MemberSerialization
      value: 1
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: TimeCockpit.Data.DataModel.RelationBase.#ctor
  commentId: M:TimeCockpit.Data.DataModel.RelationBase.#ctor
  id: '#ctor'
  parent: TimeCockpit.Data.DataModel.RelationBase
  langs:
  - csharp
  - vb
  name: RelationBase()
  nameWithType: RelationBase.RelationBase()
  fullName: TimeCockpit.Data.DataModel.RelationBase.RelationBase()
  type: Constructor
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/RelationBase.cs
    id: .ctor
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/RelationBase.cs
    startLine: 52
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel
  summary: "\nInitializes a new instance of the RelationBase class.\n"
  example: []
  syntax:
    content: public RelationBase()
    content.vb: Public Sub New
  overload: TimeCockpit.Data.DataModel.RelationBase.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.DataModel.RelationBase.#ctor(TimeCockpit.Data.DataModel.Relation)
  commentId: M:TimeCockpit.Data.DataModel.RelationBase.#ctor(TimeCockpit.Data.DataModel.Relation)
  id: '#ctor(TimeCockpit.Data.DataModel.Relation)'
  parent: TimeCockpit.Data.DataModel.RelationBase
  langs:
  - csharp
  - vb
  name: RelationBase(Relation)
  nameWithType: RelationBase.RelationBase(Relation)
  fullName: TimeCockpit.Data.DataModel.RelationBase.RelationBase(TimeCockpit.Data.DataModel.Relation)
  type: Constructor
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/RelationBase.cs
    id: .ctor
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/RelationBase.cs
    startLine: 67
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel
  summary: "\nInitializes a new instance of the RelationBase class.\n"
  remarks: "\nThis copy constructor creates copies of all value-typed properties.\n<xref href=\"TimeCockpit.Data.DataModel.StorageColumn\" data-throw-if-not-resolved=\"false\"></xref>s and <xref href=\"TimeCockpit.Data.Security.Permission\" data-throw-if-not-resolved=\"false\"></xref>s from element\nare just added to the corresponding collections of the new <xref href=\"TimeCockpit.Data.DataModel.Relation\" data-throw-if-not-resolved=\"false\"></xref>.\nNo copying is performed.\n"
  example: []
  syntax:
    content: public RelationBase(Relation element)
    parameters:
    - id: element
      type: TimeCockpit.Data.DataModel.Relation
      description: The relation to copy.
    content.vb: Public Sub New(element As Relation)
  overload: TimeCockpit.Data.DataModel.RelationBase.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.DataModel.RelationBase.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Object,System.Object}})
  commentId: M:TimeCockpit.Data.DataModel.RelationBase.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Object,System.Object}})
  id: '#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Object,System.Object}})'
  parent: TimeCockpit.Data.DataModel.RelationBase
  langs:
  - csharp
  - vb
  name: RelationBase(IEnumerable<KeyValuePair<Object, Object>>)
  nameWithType: RelationBase.RelationBase(IEnumerable<KeyValuePair<Object, Object>>)
  fullName: TimeCockpit.Data.DataModel.RelationBase.RelationBase(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.Object, System.Object>>)
  type: Constructor
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/RelationBase.cs
    id: .ctor
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/RelationBase.cs
    startLine: 81
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel
  summary: "\nInitializes a new instance of the RelationBase class.\n"
  remarks: "\n<p>You can use this constructor to initialize a new instance of the\nRelationBase class by specifying its properties in a list of key/value\npairs. This is especially useful for dynamic languages like python.</p>\n"
  example: []
  syntax:
    content: public RelationBase(IEnumerable<KeyValuePair<object, object>> properties)
    parameters:
    - id: properties
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Object,System.Object}}
      description: Collection of properties.
    content.vb: Public Sub New(properties As IEnumerable(Of KeyValuePair(Of Object, Object)))
  overload: TimeCockpit.Data.DataModel.RelationBase.#ctor*
  nameWithType.vb: RelationBase.RelationBase(IEnumerable(Of KeyValuePair(Of Object, Object)))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TimeCockpit.Data.DataModel.RelationBase.RelationBase(System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.Object, System.Object)))
  name.vb: RelationBase(IEnumerable(Of KeyValuePair(Of Object, Object)))
- uid: TimeCockpit.Data.DataModel.RelationBase.Permissions
  commentId: P:TimeCockpit.Data.DataModel.RelationBase.Permissions
  id: Permissions
  parent: TimeCockpit.Data.DataModel.RelationBase
  langs:
  - csharp
  - vb
  name: Permissions
  nameWithType: RelationBase.Permissions
  fullName: TimeCockpit.Data.DataModel.RelationBase.Permissions
  type: Property
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/RelationBase.cs
    id: Permissions
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/RelationBase.cs
    startLine: 90
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel
  summary: "\nGets the deny read write permissions of the <xref href=\"TimeCockpit.Data.DataModel.ModelProperty\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty]

      public ModelCollection<Permission> Permissions { get; }
    parameters: []
    return:
      type: TimeCockpit.Data.DataModel.ModelCollection{TimeCockpit.Data.Security.Permission}
    content.vb: >-
      <JsonProperty>

      Public ReadOnly Property Permissions As ModelCollection(Of Permission)
  overload: TimeCockpit.Data.DataModel.RelationBase.Permissions*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TimeCockpit.Data.DataModel.RelationBase.Target
  commentId: P:TimeCockpit.Data.DataModel.RelationBase.Target
  id: Target
  parent: TimeCockpit.Data.DataModel.RelationBase
  langs:
  - csharp
  - vb
  name: Target
  nameWithType: RelationBase.Target
  fullName: TimeCockpit.Data.DataModel.RelationBase.Target
  type: Property
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/RelationBase.cs
    id: Target
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/RelationBase.cs
    startLine: 99
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel
  summary: "\nGets or sets the target of the relation.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public abstract ModelEntityBase Target { get; set; }
    parameters: []
    return:
      type: TimeCockpit.Data.DataModel.ModelEntityBase
    content.vb: >-
      <DataMember>

      Public MustOverride Property Target As ModelEntityBase
  overload: TimeCockpit.Data.DataModel.RelationBase.Target*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - abstract
  - get
  - set
  modifiers.vb:
  - Public
  - MustOverride
- uid: TimeCockpit.Data.DataModel.RelationBase.IsNullable
  commentId: P:TimeCockpit.Data.DataModel.RelationBase.IsNullable
  id: IsNullable
  parent: TimeCockpit.Data.DataModel.RelationBase
  langs:
  - csharp
  - vb
  name: IsNullable
  nameWithType: RelationBase.IsNullable
  fullName: TimeCockpit.Data.DataModel.RelationBase.IsNullable
  type: Property
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/RelationBase.cs
    id: IsNullable
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/RelationBase.cs
    startLine: 103
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel
  summary: "\nGets or sets a value indicating whether either <xref href=\"TimeCockpit.Data.DataModel.Relation\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"TimeCockpit.Data.DataModel.ModelProperty\" data-throw-if-not-resolved=\"false\"></xref> can be null or not.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty]

      public abstract bool IsNullable { get; set; }
    parameters: []
    return:
      type: System.Boolean
      description: "\n<code>true</code> if a <xref href=\"TimeCockpit.Data.DataModel.Relation\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"TimeCockpit.Data.DataModel.ModelProperty\" data-throw-if-not-resolved=\"false\"></xref> can be null; otherwise, <code>false</code>.\n"
    content.vb: >-
      <JsonProperty>

      Public MustOverride Property IsNullable As Boolean
  overload: TimeCockpit.Data.DataModel.RelationBase.IsNullable*
  implements:
  - TimeCockpit.Data.DataModel.INullable.IsNullable
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - abstract
  - get
  - set
  modifiers.vb:
  - Public
  - MustOverride
- uid: TimeCockpit.Data.DataModel.RelationBase.DataType
  commentId: P:TimeCockpit.Data.DataModel.RelationBase.DataType
  id: DataType
  parent: TimeCockpit.Data.DataModel.RelationBase
  langs:
  - csharp
  - vb
  name: DataType
  nameWithType: RelationBase.DataType
  fullName: TimeCockpit.Data.DataModel.RelationBase.DataType
  type: Property
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/RelationBase.cs
    id: DataType
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/RelationBase.cs
    startLine: 109
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel
  summary: "\nGets the type of the relation.\n"
  example: []
  syntax:
    content: >-
      [JsonIgnore]

      public Type DataType { get; }
    parameters: []
    return:
      type: System.Type
    content.vb: >-
      <JsonIgnore>

      Public ReadOnly Property DataType As Type
  overload: TimeCockpit.Data.DataModel.RelationBase.DataType*
  attributes:
  - type: Newtonsoft.Json.JsonIgnoreAttribute
    ctor: Newtonsoft.Json.JsonIgnoreAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TimeCockpit.Data.DataModel.RelationBase.ShallowCopy
  commentId: M:TimeCockpit.Data.DataModel.RelationBase.ShallowCopy
  id: ShallowCopy
  parent: TimeCockpit.Data.DataModel.RelationBase
  langs:
  - csharp
  - vb
  name: ShallowCopy()
  nameWithType: RelationBase.ShallowCopy()
  fullName: TimeCockpit.Data.DataModel.RelationBase.ShallowCopy()
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/RelationBase.cs
    id: ShallowCopy
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/RelationBase.cs
    startLine: 200
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel
  summary: "\nPerforms a shallow copy of the current <xref href=\"TimeCockpit.Data.DataModel.RelationBase\" data-throw-if-not-resolved=\"false\"></xref>/the derived class.\n"
  example: []
  syntax:
    content: public abstract RelationBase ShallowCopy()
    return:
      type: TimeCockpit.Data.DataModel.RelationBase
      description: A shallow copy of the current <xref href="TimeCockpit.Data.DataModel.RelationBase" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public MustOverride Function ShallowCopy As RelationBase
  overload: TimeCockpit.Data.DataModel.RelationBase.ShallowCopy*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: TimeCockpit.Data.DataModel.RelationBase.ShallowCopy(System.String,TimeCockpit.Data.DataModel.PersistBehavior,TimeCockpit.Data.DataModel.Ownership,System.Boolean,System.Boolean)
  commentId: M:TimeCockpit.Data.DataModel.RelationBase.ShallowCopy(System.String,TimeCockpit.Data.DataModel.PersistBehavior,TimeCockpit.Data.DataModel.Ownership,System.Boolean,System.Boolean)
  id: ShallowCopy(System.String,TimeCockpit.Data.DataModel.PersistBehavior,TimeCockpit.Data.DataModel.Ownership,System.Boolean,System.Boolean)
  parent: TimeCockpit.Data.DataModel.RelationBase
  langs:
  - csharp
  - vb
  name: ShallowCopy(String, PersistBehavior, Ownership, Boolean, Boolean)
  nameWithType: RelationBase.ShallowCopy(String, PersistBehavior, Ownership, Boolean, Boolean)
  fullName: TimeCockpit.Data.DataModel.RelationBase.ShallowCopy(System.String, TimeCockpit.Data.DataModel.PersistBehavior, TimeCockpit.Data.DataModel.Ownership, System.Boolean, System.Boolean)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/RelationBase.cs
    id: ShallowCopy
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/RelationBase.cs
    startLine: 211
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel
  summary: "\nPerforms a shallow copy of the current <xref href=\"TimeCockpit.Data.DataModel.RelationBase\" data-throw-if-not-resolved=\"false\"></xref>/the derived class.\n"
  example: []
  syntax:
    content: public abstract RelationBase ShallowCopy(string name, PersistBehavior persistBehavior, Ownership ownership, bool ignorePermissions = false, bool ignoreDefaultValues = false)
    parameters:
    - id: name
      type: System.String
      description: Overridden model element name.
    - id: persistBehavior
      type: TimeCockpit.Data.DataModel.PersistBehavior
      description: Overridden persist behavior.
    - id: ownership
      type: TimeCockpit.Data.DataModel.Ownership
      description: Overridden ownership.
    - id: ignorePermissions
      type: System.Boolean
      description: if set to <code>true</code> [ignore permissions].
    - id: ignoreDefaultValues
      type: System.Boolean
      description: if set to <code>true</code> [ignore default values].
    return:
      type: TimeCockpit.Data.DataModel.RelationBase
      description: A shallow copy of the current <xref href="TimeCockpit.Data.DataModel.RelationBase" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public MustOverride Function ShallowCopy(name As String, persistBehavior As PersistBehavior, ownership As Ownership, ignorePermissions As Boolean = False, ignoreDefaultValues As Boolean = False) As RelationBase
  overload: TimeCockpit.Data.DataModel.RelationBase.ShallowCopy*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: TimeCockpit.Data.DataModel.RelationBase.Attach(TimeCockpit.Data.DataModel.ModelElement)
  commentId: M:TimeCockpit.Data.DataModel.RelationBase.Attach(TimeCockpit.Data.DataModel.ModelElement)
  id: Attach(TimeCockpit.Data.DataModel.ModelElement)
  parent: TimeCockpit.Data.DataModel.RelationBase
  langs:
  - csharp
  - vb
  name: Attach(ModelElement)
  nameWithType: RelationBase.Attach(ModelElement)
  fullName: TimeCockpit.Data.DataModel.RelationBase.Attach(TimeCockpit.Data.DataModel.ModelElement)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/RelationBase.cs
    id: Attach
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/RelationBase.cs
    startLine: 227
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel
  summary: "\nAttaches a model element to a parent model element.\n"
  remarks: "\nNote to implementers: If your model element has sub-elements, your implementation of <code>Attach</code>\nshould call the base class&apos; implementation and afterwards attach all sub-elements.\n"
  example: []
  syntax:
    content: protected override void Attach(ModelElement newParent)
    parameters:
    - id: newParent
      type: TimeCockpit.Data.DataModel.ModelElement
      description: Parent model element.
    content.vb: Protected Overrides Sub Attach(newParent As ModelElement)
  overridden: TimeCockpit.Data.DataModel.ModelElement.Attach(TimeCockpit.Data.DataModel.ModelElement)
  overload: TimeCockpit.Data.DataModel.RelationBase.Attach*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<code>newParent</code> is null.\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nThrown in case of a recursion in the model element tree.\n"
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: TimeCockpit.Data.DataModel.RelationBase.RemovePermissions
  commentId: M:TimeCockpit.Data.DataModel.RelationBase.RemovePermissions
  id: RemovePermissions
  parent: TimeCockpit.Data.DataModel.RelationBase
  langs:
  - csharp
  - vb
  name: RemovePermissions()
  nameWithType: RelationBase.RemovePermissions()
  fullName: TimeCockpit.Data.DataModel.RelationBase.RemovePermissions()
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/RelationBase.cs
    id: RemovePermissions
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/RelationBase.cs
    startLine: 240
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel
  summary: "\nEmpty the Permissions and EnabledPermissions.\n"
  example: []
  syntax:
    content: protected void RemovePermissions()
    content.vb: Protected Sub RemovePermissions
  overload: TimeCockpit.Data.DataModel.RelationBase.RemovePermissions*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: TimeCockpit.Data.DataModel.RelationBase.InitializeObject
  commentId: M:TimeCockpit.Data.DataModel.RelationBase.InitializeObject
  id: InitializeObject
  parent: TimeCockpit.Data.DataModel.RelationBase
  langs:
  - csharp
  - vb
  name: InitializeObject()
  nameWithType: RelationBase.InitializeObject()
  fullName: TimeCockpit.Data.DataModel.RelationBase.InitializeObject()
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/RelationBase.cs
    id: InitializeObject
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/RelationBase.cs
    startLine: 250
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel
  summary: "\nInitializes the <xref href=\"TimeCockpit.Data.DataModel.RelationBase\" data-throw-if-not-resolved=\"false\"></xref> object\nsetting fields of the object to their default values.\n"
  example: []
  syntax:
    content: protected virtual void InitializeObject()
    content.vb: Protected Overridable Sub InitializeObject
  overload: TimeCockpit.Data.DataModel.RelationBase.InitializeObject*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
references:
- uid: TimeCockpit.Data.DataModel
  commentId: N:TimeCockpit.Data.DataModel
  isExternal: false
  name: TimeCockpit.Data.DataModel
  nameWithType: TimeCockpit.Data.DataModel
  fullName: TimeCockpit.Data.DataModel
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: TimeCockpit.Data.DynamicObject
  commentId: T:TimeCockpit.Data.DynamicObject
  parent: TimeCockpit.Data
  isExternal: false
  name: DynamicObject
  nameWithType: DynamicObject
  fullName: TimeCockpit.Data.DynamicObject
- uid: TimeCockpit.Data.DataModel.NamedDynamicObject
  commentId: T:TimeCockpit.Data.DataModel.NamedDynamicObject
  parent: TimeCockpit.Data.DataModel
  isExternal: false
  name: NamedDynamicObject
  nameWithType: NamedDynamicObject
  fullName: TimeCockpit.Data.DataModel.NamedDynamicObject
- uid: TimeCockpit.Data.DataModel.ModelElement
  commentId: T:TimeCockpit.Data.DataModel.ModelElement
  parent: TimeCockpit.Data.DataModel
  isExternal: false
  name: ModelElement
  nameWithType: ModelElement
  fullName: TimeCockpit.Data.DataModel.ModelElement
- uid: System.Dynamic.IDynamicMetaObjectProvider
  commentId: T:System.Dynamic.IDynamicMetaObjectProvider
  parent: System.Dynamic
  isExternal: true
  name: IDynamicMetaObjectProvider
  nameWithType: IDynamicMetaObjectProvider
  fullName: System.Dynamic.IDynamicMetaObjectProvider
- uid: System.ComponentModel.INotifyPropertyChanged
  commentId: T:System.ComponentModel.INotifyPropertyChanged
  parent: System.ComponentModel
  isExternal: true
  name: INotifyPropertyChanged
  nameWithType: INotifyPropertyChanged
  fullName: System.ComponentModel.INotifyPropertyChanged
- uid: System.ComponentModel.IDataErrorInfo
  commentId: T:System.ComponentModel.IDataErrorInfo
  parent: System.ComponentModel
  isExternal: true
  name: IDataErrorInfo
  nameWithType: IDataErrorInfo
  fullName: System.ComponentModel.IDataErrorInfo
- uid: TimeCockpit.Data.DataModel.INullable
  commentId: T:TimeCockpit.Data.DataModel.INullable
  parent: TimeCockpit.Data.DataModel
  isExternal: false
  name: INullable
  nameWithType: INullable
  fullName: TimeCockpit.Data.DataModel.INullable
- uid: TimeCockpit.Data.DataModel.ModelElement.ElementGuid
  commentId: P:TimeCockpit.Data.DataModel.ModelElement.ElementGuid
  parent: TimeCockpit.Data.DataModel.ModelElement
  isExternal: false
  name: ElementGuid
  nameWithType: ModelElement.ElementGuid
  fullName: TimeCockpit.Data.DataModel.ModelElement.ElementGuid
- uid: TimeCockpit.Data.DataModel.ModelElement.Name
  commentId: P:TimeCockpit.Data.DataModel.ModelElement.Name
  parent: TimeCockpit.Data.DataModel.ModelElement
  isExternal: false
  name: Name
  nameWithType: ModelElement.Name
  fullName: TimeCockpit.Data.DataModel.ModelElement.Name
- uid: TimeCockpit.Data.DataModel.ModelElement.Parent
  commentId: P:TimeCockpit.Data.DataModel.ModelElement.Parent
  parent: TimeCockpit.Data.DataModel.ModelElement
  isExternal: false
  name: Parent
  nameWithType: ModelElement.Parent
  fullName: TimeCockpit.Data.DataModel.ModelElement.Parent
- uid: TimeCockpit.Data.DataModel.ModelElement.Children
  commentId: P:TimeCockpit.Data.DataModel.ModelElement.Children
  parent: TimeCockpit.Data.DataModel.ModelElement
  isExternal: false
  name: Children
  nameWithType: ModelElement.Children
  fullName: TimeCockpit.Data.DataModel.ModelElement.Children
- uid: TimeCockpit.Data.DataModel.ModelElement.PersistBehavior
  commentId: P:TimeCockpit.Data.DataModel.ModelElement.PersistBehavior
  parent: TimeCockpit.Data.DataModel.ModelElement
  isExternal: false
  name: PersistBehavior
  nameWithType: ModelElement.PersistBehavior
  fullName: TimeCockpit.Data.DataModel.ModelElement.PersistBehavior
- uid: TimeCockpit.Data.DataModel.ModelElement.IsFullPersistBehavior
  commentId: P:TimeCockpit.Data.DataModel.ModelElement.IsFullPersistBehavior
  parent: TimeCockpit.Data.DataModel.ModelElement
  isExternal: false
  name: IsFullPersistBehavior
  nameWithType: ModelElement.IsFullPersistBehavior
  fullName: TimeCockpit.Data.DataModel.ModelElement.IsFullPersistBehavior
- uid: TimeCockpit.Data.DataModel.ModelElement.IsNonePersistBehavior
  commentId: P:TimeCockpit.Data.DataModel.ModelElement.IsNonePersistBehavior
  parent: TimeCockpit.Data.DataModel.ModelElement
  isExternal: false
  name: IsNonePersistBehavior
  nameWithType: ModelElement.IsNonePersistBehavior
  fullName: TimeCockpit.Data.DataModel.ModelElement.IsNonePersistBehavior
- uid: TimeCockpit.Data.DataModel.ModelElement.IsSystemElement
  commentId: P:TimeCockpit.Data.DataModel.ModelElement.IsSystemElement
  parent: TimeCockpit.Data.DataModel.ModelElement
  isExternal: false
  name: IsSystemElement
  nameWithType: ModelElement.IsSystemElement
  fullName: TimeCockpit.Data.DataModel.ModelElement.IsSystemElement
- uid: TimeCockpit.Data.DataModel.ModelElement.IsApplicationSpecificElement
  commentId: P:TimeCockpit.Data.DataModel.ModelElement.IsApplicationSpecificElement
  parent: TimeCockpit.Data.DataModel.ModelElement
  isExternal: false
  name: IsApplicationSpecificElement
  nameWithType: ModelElement.IsApplicationSpecificElement
  fullName: TimeCockpit.Data.DataModel.ModelElement.IsApplicationSpecificElement
- uid: TimeCockpit.Data.DataModel.ModelElement.IsUserElement
  commentId: P:TimeCockpit.Data.DataModel.ModelElement.IsUserElement
  parent: TimeCockpit.Data.DataModel.ModelElement
  isExternal: false
  name: IsUserElement
  nameWithType: ModelElement.IsUserElement
  fullName: TimeCockpit.Data.DataModel.ModelElement.IsUserElement
- uid: TimeCockpit.Data.DataModel.ModelElement.IsSystemOrApplicationSpecificElement
  commentId: P:TimeCockpit.Data.DataModel.ModelElement.IsSystemOrApplicationSpecificElement
  parent: TimeCockpit.Data.DataModel.ModelElement
  isExternal: false
  name: IsSystemOrApplicationSpecificElement
  nameWithType: ModelElement.IsSystemOrApplicationSpecificElement
  fullName: TimeCockpit.Data.DataModel.ModelElement.IsSystemOrApplicationSpecificElement
- uid: TimeCockpit.Data.DataModel.ModelElement.InvariantFriendlyName
  commentId: P:TimeCockpit.Data.DataModel.ModelElement.InvariantFriendlyName
  parent: TimeCockpit.Data.DataModel.ModelElement
  isExternal: false
  name: InvariantFriendlyName
  nameWithType: ModelElement.InvariantFriendlyName
  fullName: TimeCockpit.Data.DataModel.ModelElement.InvariantFriendlyName
- uid: TimeCockpit.Data.DataModel.ModelElement.CreationVersion
  commentId: P:TimeCockpit.Data.DataModel.ModelElement.CreationVersion
  parent: TimeCockpit.Data.DataModel.ModelElement
  isExternal: false
  name: CreationVersion
  nameWithType: ModelElement.CreationVersion
  fullName: TimeCockpit.Data.DataModel.ModelElement.CreationVersion
- uid: TimeCockpit.Data.DataModel.ModelElement.LastUpdateVersion
  commentId: P:TimeCockpit.Data.DataModel.ModelElement.LastUpdateVersion
  parent: TimeCockpit.Data.DataModel.ModelElement
  isExternal: false
  name: LastUpdateVersion
  nameWithType: ModelElement.LastUpdateVersion
  fullName: TimeCockpit.Data.DataModel.ModelElement.LastUpdateVersion
- uid: TimeCockpit.Data.DataModel.ModelElement.Error
  commentId: P:TimeCockpit.Data.DataModel.ModelElement.Error
  parent: TimeCockpit.Data.DataModel.ModelElement
  isExternal: false
  name: Error
  nameWithType: ModelElement.Error
  fullName: TimeCockpit.Data.DataModel.ModelElement.Error
- uid: TimeCockpit.Data.DataModel.ModelElement.ErrorSummary
  commentId: P:TimeCockpit.Data.DataModel.ModelElement.ErrorSummary
  parent: TimeCockpit.Data.DataModel.ModelElement
  isExternal: false
  name: ErrorSummary
  nameWithType: ModelElement.ErrorSummary
  fullName: TimeCockpit.Data.DataModel.ModelElement.ErrorSummary
- uid: TimeCockpit.Data.DataModel.ModelElement.IsValid
  commentId: P:TimeCockpit.Data.DataModel.ModelElement.IsValid
  parent: TimeCockpit.Data.DataModel.ModelElement
  isExternal: false
  name: IsValid
  nameWithType: ModelElement.IsValid
  fullName: TimeCockpit.Data.DataModel.ModelElement.IsValid
- uid: TimeCockpit.Data.DataModel.ModelElement.Ownership
  commentId: P:TimeCockpit.Data.DataModel.ModelElement.Ownership
  parent: TimeCockpit.Data.DataModel.ModelElement
  isExternal: false
  name: Ownership
  nameWithType: ModelElement.Ownership
  fullName: TimeCockpit.Data.DataModel.ModelElement.Ownership
- uid: TimeCockpit.Data.DataModel.ModelElement.OwnershipPrefix
  commentId: P:TimeCockpit.Data.DataModel.ModelElement.OwnershipPrefix
  parent: TimeCockpit.Data.DataModel.ModelElement
  isExternal: false
  name: OwnershipPrefix
  nameWithType: ModelElement.OwnershipPrefix
  fullName: TimeCockpit.Data.DataModel.ModelElement.OwnershipPrefix
- uid: TimeCockpit.Data.DataModel.ModelElement.NonPrefixedName
  commentId: P:TimeCockpit.Data.DataModel.ModelElement.NonPrefixedName
  parent: TimeCockpit.Data.DataModel.ModelElement
  isExternal: false
  name: NonPrefixedName
  nameWithType: ModelElement.NonPrefixedName
  fullName: TimeCockpit.Data.DataModel.ModelElement.NonPrefixedName
- uid: TimeCockpit.Data.DataModel.ModelElement.System#ComponentModel#IDataErrorInfo#Item(System.String)
  commentId: P:TimeCockpit.Data.DataModel.ModelElement.System#ComponentModel#IDataErrorInfo#Item(System.String)
  parent: TimeCockpit.Data.DataModel.ModelElement
  isExternal: true
  name: IDataErrorInfo.Item[String]
  nameWithType: ModelElement.IDataErrorInfo.Item[String]
  fullName: TimeCockpit.Data.DataModel.ModelElement.System.ComponentModel.IDataErrorInfo.Item[System.String]
  nameWithType.vb: ModelElement.System.ComponentModel.IDataErrorInfo.Item(String)
  fullName.vb: TimeCockpit.Data.DataModel.ModelElement.System.ComponentModel.IDataErrorInfo.Item(System.String)
  name.vb: System.ComponentModel.IDataErrorInfo.Item(String)
  spec.csharp:
  - uid: TimeCockpit.Data.DataModel.ModelElement.System#ComponentModel#IDataErrorInfo#Item(System.String)
    name: IDataErrorInfo.Item
    nameWithType: ModelElement.IDataErrorInfo.Item
    fullName: TimeCockpit.Data.DataModel.ModelElement.System.ComponentModel.IDataErrorInfo.Item
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: TimeCockpit.Data.DataModel.ModelElement.System#ComponentModel#IDataErrorInfo#Item(System.String)
    name: System.ComponentModel.IDataErrorInfo.Item
    nameWithType: ModelElement.System.ComponentModel.IDataErrorInfo.Item
    fullName: TimeCockpit.Data.DataModel.ModelElement.System.ComponentModel.IDataErrorInfo.Item
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.DataModel.ModelElement.IsValidIdentifier(System.String)
  commentId: M:TimeCockpit.Data.DataModel.ModelElement.IsValidIdentifier(System.String)
  parent: TimeCockpit.Data.DataModel.ModelElement
  isExternal: true
  name: IsValidIdentifier(String)
  nameWithType: ModelElement.IsValidIdentifier(String)
  fullName: TimeCockpit.Data.DataModel.ModelElement.IsValidIdentifier(System.String)
  spec.csharp:
  - uid: TimeCockpit.Data.DataModel.ModelElement.IsValidIdentifier(System.String)
    name: IsValidIdentifier
    nameWithType: ModelElement.IsValidIdentifier
    fullName: TimeCockpit.Data.DataModel.ModelElement.IsValidIdentifier
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TimeCockpit.Data.DataModel.ModelElement.IsValidIdentifier(System.String)
    name: IsValidIdentifier
    nameWithType: ModelElement.IsValidIdentifier
    fullName: TimeCockpit.Data.DataModel.ModelElement.IsValidIdentifier
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.DataModel.ModelElement.OnDeserializing(System.Runtime.Serialization.StreamingContext)
  commentId: M:TimeCockpit.Data.DataModel.ModelElement.OnDeserializing(System.Runtime.Serialization.StreamingContext)
  parent: TimeCockpit.Data.DataModel.ModelElement
  isExternal: true
  name: OnDeserializing(StreamingContext)
  nameWithType: ModelElement.OnDeserializing(StreamingContext)
  fullName: TimeCockpit.Data.DataModel.ModelElement.OnDeserializing(System.Runtime.Serialization.StreamingContext)
  spec.csharp:
  - uid: TimeCockpit.Data.DataModel.ModelElement.OnDeserializing(System.Runtime.Serialization.StreamingContext)
    name: OnDeserializing
    nameWithType: ModelElement.OnDeserializing
    fullName: TimeCockpit.Data.DataModel.ModelElement.OnDeserializing
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    nameWithType: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TimeCockpit.Data.DataModel.ModelElement.OnDeserializing(System.Runtime.Serialization.StreamingContext)
    name: OnDeserializing
    nameWithType: ModelElement.OnDeserializing
    fullName: TimeCockpit.Data.DataModel.ModelElement.OnDeserializing
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    nameWithType: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.DataModel.ModelElement.Accept(TimeCockpit.Data.DataModel.ModelElementVisitor)
  commentId: M:TimeCockpit.Data.DataModel.ModelElement.Accept(TimeCockpit.Data.DataModel.ModelElementVisitor)
  parent: TimeCockpit.Data.DataModel.ModelElement
  isExternal: false
  name: Accept(ModelElementVisitor)
  nameWithType: ModelElement.Accept(ModelElementVisitor)
  fullName: TimeCockpit.Data.DataModel.ModelElement.Accept(TimeCockpit.Data.DataModel.ModelElementVisitor)
  spec.csharp:
  - uid: TimeCockpit.Data.DataModel.ModelElement.Accept(TimeCockpit.Data.DataModel.ModelElementVisitor)
    name: Accept
    nameWithType: ModelElement.Accept
    fullName: TimeCockpit.Data.DataModel.ModelElement.Accept
  - name: (
    nameWithType: (
    fullName: (
  - uid: TimeCockpit.Data.DataModel.ModelElementVisitor
    name: ModelElementVisitor
    nameWithType: ModelElementVisitor
    fullName: TimeCockpit.Data.DataModel.ModelElementVisitor
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TimeCockpit.Data.DataModel.ModelElement.Accept(TimeCockpit.Data.DataModel.ModelElementVisitor)
    name: Accept
    nameWithType: ModelElement.Accept
    fullName: TimeCockpit.Data.DataModel.ModelElement.Accept
  - name: (
    nameWithType: (
    fullName: (
  - uid: TimeCockpit.Data.DataModel.ModelElementVisitor
    name: ModelElementVisitor
    nameWithType: ModelElementVisitor
    fullName: TimeCockpit.Data.DataModel.ModelElementVisitor
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.DataModel.ModelElement.Detach
  commentId: M:TimeCockpit.Data.DataModel.ModelElement.Detach
  parent: TimeCockpit.Data.DataModel.ModelElement
  isExternal: false
  name: Detach()
  nameWithType: ModelElement.Detach()
  fullName: TimeCockpit.Data.DataModel.ModelElement.Detach()
  spec.csharp:
  - uid: TimeCockpit.Data.DataModel.ModelElement.Detach
    name: Detach
    nameWithType: ModelElement.Detach
    fullName: TimeCockpit.Data.DataModel.ModelElement.Detach
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TimeCockpit.Data.DataModel.ModelElement.Detach
    name: Detach
    nameWithType: ModelElement.Detach
    fullName: TimeCockpit.Data.DataModel.ModelElement.Detach
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.DataModel.ModelElement.Validate(System.Collections.Generic.IList{TimeCockpit.Data.DataModel.PropertyValidationMessage}@,System.Boolean)
  commentId: M:TimeCockpit.Data.DataModel.ModelElement.Validate(System.Collections.Generic.IList{TimeCockpit.Data.DataModel.PropertyValidationMessage}@,System.Boolean)
  parent: TimeCockpit.Data.DataModel.ModelElement
  isExternal: true
  name: Validate(IList<PropertyValidationMessage>, Boolean)
  nameWithType: ModelElement.Validate(IList<PropertyValidationMessage>, Boolean)
  fullName: TimeCockpit.Data.DataModel.ModelElement.Validate(System.Collections.Generic.IList<TimeCockpit.Data.DataModel.PropertyValidationMessage>, System.Boolean)
  nameWithType.vb: ModelElement.Validate(IList(Of PropertyValidationMessage), Boolean)
  fullName.vb: TimeCockpit.Data.DataModel.ModelElement.Validate(System.Collections.Generic.IList(Of TimeCockpit.Data.DataModel.PropertyValidationMessage), System.Boolean)
  name.vb: Validate(IList(Of PropertyValidationMessage), Boolean)
  spec.csharp:
  - uid: TimeCockpit.Data.DataModel.ModelElement.Validate(System.Collections.Generic.IList{TimeCockpit.Data.DataModel.PropertyValidationMessage}@,System.Boolean)
    name: Validate
    nameWithType: ModelElement.Validate
    fullName: TimeCockpit.Data.DataModel.ModelElement.Validate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TimeCockpit.Data.DataModel.PropertyValidationMessage
    name: PropertyValidationMessage
    nameWithType: PropertyValidationMessage
    fullName: TimeCockpit.Data.DataModel.PropertyValidationMessage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TimeCockpit.Data.DataModel.ModelElement.Validate(System.Collections.Generic.IList{TimeCockpit.Data.DataModel.PropertyValidationMessage}@,System.Boolean)
    name: Validate
    nameWithType: ModelElement.Validate
    fullName: TimeCockpit.Data.DataModel.ModelElement.Validate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TimeCockpit.Data.DataModel.PropertyValidationMessage
    name: PropertyValidationMessage
    nameWithType: PropertyValidationMessage
    fullName: TimeCockpit.Data.DataModel.PropertyValidationMessage
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.DataModel.ModelElement.SetOwnershipPrefix(System.String)
  commentId: M:TimeCockpit.Data.DataModel.ModelElement.SetOwnershipPrefix(System.String)
  parent: TimeCockpit.Data.DataModel.ModelElement
  isExternal: true
  name: SetOwnershipPrefix(String)
  nameWithType: ModelElement.SetOwnershipPrefix(String)
  fullName: TimeCockpit.Data.DataModel.ModelElement.SetOwnershipPrefix(System.String)
  spec.csharp:
  - uid: TimeCockpit.Data.DataModel.ModelElement.SetOwnershipPrefix(System.String)
    name: SetOwnershipPrefix
    nameWithType: ModelElement.SetOwnershipPrefix
    fullName: TimeCockpit.Data.DataModel.ModelElement.SetOwnershipPrefix
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TimeCockpit.Data.DataModel.ModelElement.SetOwnershipPrefix(System.String)
    name: SetOwnershipPrefix
    nameWithType: ModelElement.SetOwnershipPrefix
    fullName: TimeCockpit.Data.DataModel.ModelElement.SetOwnershipPrefix
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.DataModel.ModelElement.UpdateChildren(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  commentId: M:TimeCockpit.Data.DataModel.ModelElement.UpdateChildren(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  parent: TimeCockpit.Data.DataModel.ModelElement
  isExternal: true
  name: UpdateChildren(NotifyCollectionChangedEventArgs)
  nameWithType: ModelElement.UpdateChildren(NotifyCollectionChangedEventArgs)
  fullName: TimeCockpit.Data.DataModel.ModelElement.UpdateChildren(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  spec.csharp:
  - uid: TimeCockpit.Data.DataModel.ModelElement.UpdateChildren(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
    name: UpdateChildren
    nameWithType: ModelElement.UpdateChildren
    fullName: TimeCockpit.Data.DataModel.ModelElement.UpdateChildren
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    name: NotifyCollectionChangedEventArgs
    nameWithType: NotifyCollectionChangedEventArgs
    fullName: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TimeCockpit.Data.DataModel.ModelElement.UpdateChildren(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
    name: UpdateChildren
    nameWithType: ModelElement.UpdateChildren
    fullName: TimeCockpit.Data.DataModel.ModelElement.UpdateChildren
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    name: NotifyCollectionChangedEventArgs
    nameWithType: NotifyCollectionChangedEventArgs
    fullName: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.DataModel.ModelElement.SetPersistBehavior(TimeCockpit.Data.DataModel.PersistBehavior)
  commentId: M:TimeCockpit.Data.DataModel.ModelElement.SetPersistBehavior(TimeCockpit.Data.DataModel.PersistBehavior)
  parent: TimeCockpit.Data.DataModel.ModelElement
  isExternal: false
  name: SetPersistBehavior(PersistBehavior)
  nameWithType: ModelElement.SetPersistBehavior(PersistBehavior)
  fullName: TimeCockpit.Data.DataModel.ModelElement.SetPersistBehavior(TimeCockpit.Data.DataModel.PersistBehavior)
  spec.csharp:
  - uid: TimeCockpit.Data.DataModel.ModelElement.SetPersistBehavior(TimeCockpit.Data.DataModel.PersistBehavior)
    name: SetPersistBehavior
    nameWithType: ModelElement.SetPersistBehavior
    fullName: TimeCockpit.Data.DataModel.ModelElement.SetPersistBehavior
  - name: (
    nameWithType: (
    fullName: (
  - uid: TimeCockpit.Data.DataModel.PersistBehavior
    name: PersistBehavior
    nameWithType: PersistBehavior
    fullName: TimeCockpit.Data.DataModel.PersistBehavior
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TimeCockpit.Data.DataModel.ModelElement.SetPersistBehavior(TimeCockpit.Data.DataModel.PersistBehavior)
    name: SetPersistBehavior
    nameWithType: ModelElement.SetPersistBehavior
    fullName: TimeCockpit.Data.DataModel.ModelElement.SetPersistBehavior
  - name: (
    nameWithType: (
    fullName: (
  - uid: TimeCockpit.Data.DataModel.PersistBehavior
    name: PersistBehavior
    nameWithType: PersistBehavior
    fullName: TimeCockpit.Data.DataModel.PersistBehavior
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.DataModel.ModelElement.SetName(System.String)
  commentId: M:TimeCockpit.Data.DataModel.ModelElement.SetName(System.String)
  parent: TimeCockpit.Data.DataModel.ModelElement
  isExternal: true
  name: SetName(String)
  nameWithType: ModelElement.SetName(String)
  fullName: TimeCockpit.Data.DataModel.ModelElement.SetName(System.String)
  spec.csharp:
  - uid: TimeCockpit.Data.DataModel.ModelElement.SetName(System.String)
    name: SetName
    nameWithType: ModelElement.SetName
    fullName: TimeCockpit.Data.DataModel.ModelElement.SetName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TimeCockpit.Data.DataModel.ModelElement.SetName(System.String)
    name: SetName
    nameWithType: ModelElement.SetName
    fullName: TimeCockpit.Data.DataModel.ModelElement.SetName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.DataModel.ModelElement.SetOwnership(TimeCockpit.Data.DataModel.Ownership)
  commentId: M:TimeCockpit.Data.DataModel.ModelElement.SetOwnership(TimeCockpit.Data.DataModel.Ownership)
  parent: TimeCockpit.Data.DataModel.ModelElement
  isExternal: false
  name: SetOwnership(Ownership)
  nameWithType: ModelElement.SetOwnership(Ownership)
  fullName: TimeCockpit.Data.DataModel.ModelElement.SetOwnership(TimeCockpit.Data.DataModel.Ownership)
  spec.csharp:
  - uid: TimeCockpit.Data.DataModel.ModelElement.SetOwnership(TimeCockpit.Data.DataModel.Ownership)
    name: SetOwnership
    nameWithType: ModelElement.SetOwnership
    fullName: TimeCockpit.Data.DataModel.ModelElement.SetOwnership
  - name: (
    nameWithType: (
    fullName: (
  - uid: TimeCockpit.Data.DataModel.Ownership
    name: Ownership
    nameWithType: Ownership
    fullName: TimeCockpit.Data.DataModel.Ownership
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TimeCockpit.Data.DataModel.ModelElement.SetOwnership(TimeCockpit.Data.DataModel.Ownership)
    name: SetOwnership
    nameWithType: ModelElement.SetOwnership
    fullName: TimeCockpit.Data.DataModel.ModelElement.SetOwnership
  - name: (
    nameWithType: (
    fullName: (
  - uid: TimeCockpit.Data.DataModel.Ownership
    name: Ownership
    nameWithType: Ownership
    fullName: TimeCockpit.Data.DataModel.Ownership
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.DataModel.NamedDynamicObject.PropertyChanged
  commentId: E:TimeCockpit.Data.DataModel.NamedDynamicObject.PropertyChanged
  parent: TimeCockpit.Data.DataModel.NamedDynamicObject
  isExternal: false
  name: PropertyChanged
  nameWithType: NamedDynamicObject.PropertyChanged
  fullName: TimeCockpit.Data.DataModel.NamedDynamicObject.PropertyChanged
- uid: TimeCockpit.Data.DataModel.NamedDynamicObject.OnPropertyChanged(System.String)
  commentId: M:TimeCockpit.Data.DataModel.NamedDynamicObject.OnPropertyChanged(System.String)
  parent: TimeCockpit.Data.DataModel.NamedDynamicObject
  isExternal: true
  name: OnPropertyChanged(String)
  nameWithType: NamedDynamicObject.OnPropertyChanged(String)
  fullName: TimeCockpit.Data.DataModel.NamedDynamicObject.OnPropertyChanged(System.String)
  spec.csharp:
  - uid: TimeCockpit.Data.DataModel.NamedDynamicObject.OnPropertyChanged(System.String)
    name: OnPropertyChanged
    nameWithType: NamedDynamicObject.OnPropertyChanged
    fullName: TimeCockpit.Data.DataModel.NamedDynamicObject.OnPropertyChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TimeCockpit.Data.DataModel.NamedDynamicObject.OnPropertyChanged(System.String)
    name: OnPropertyChanged
    nameWithType: NamedDynamicObject.OnPropertyChanged
    fullName: TimeCockpit.Data.DataModel.NamedDynamicObject.OnPropertyChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.DynamicObject.GetMember(System.String)
  commentId: M:TimeCockpit.Data.DynamicObject.GetMember(System.String)
  parent: TimeCockpit.Data.DynamicObject
  isExternal: true
  name: GetMember(String)
  nameWithType: DynamicObject.GetMember(String)
  fullName: TimeCockpit.Data.DynamicObject.GetMember(System.String)
  spec.csharp:
  - uid: TimeCockpit.Data.DynamicObject.GetMember(System.String)
    name: GetMember
    nameWithType: DynamicObject.GetMember
    fullName: TimeCockpit.Data.DynamicObject.GetMember
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TimeCockpit.Data.DynamicObject.GetMember(System.String)
    name: GetMember
    nameWithType: DynamicObject.GetMember
    fullName: TimeCockpit.Data.DynamicObject.GetMember
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.DynamicObject.SetMember(System.String,System.Object)
  commentId: M:TimeCockpit.Data.DynamicObject.SetMember(System.String,System.Object)
  parent: TimeCockpit.Data.DynamicObject
  isExternal: true
  name: SetMember(String, Object)
  nameWithType: DynamicObject.SetMember(String, Object)
  fullName: TimeCockpit.Data.DynamicObject.SetMember(System.String, System.Object)
  spec.csharp:
  - uid: TimeCockpit.Data.DynamicObject.SetMember(System.String,System.Object)
    name: SetMember
    nameWithType: DynamicObject.SetMember
    fullName: TimeCockpit.Data.DynamicObject.SetMember
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TimeCockpit.Data.DynamicObject.SetMember(System.String,System.Object)
    name: SetMember
    nameWithType: DynamicObject.SetMember
    fullName: TimeCockpit.Data.DynamicObject.SetMember
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.DynamicObject.GetMetaObject(System.Linq.Expressions.Expression)
  commentId: M:TimeCockpit.Data.DynamicObject.GetMetaObject(System.Linq.Expressions.Expression)
  parent: TimeCockpit.Data.DynamicObject
  isExternal: true
  name: GetMetaObject(Expression)
  nameWithType: DynamicObject.GetMetaObject(Expression)
  fullName: TimeCockpit.Data.DynamicObject.GetMetaObject(System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: TimeCockpit.Data.DynamicObject.GetMetaObject(System.Linq.Expressions.Expression)
    name: GetMetaObject
    nameWithType: DynamicObject.GetMetaObject
    fullName: TimeCockpit.Data.DynamicObject.GetMetaObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TimeCockpit.Data.DynamicObject.GetMetaObject(System.Linq.Expressions.Expression)
    name: GetMetaObject
    nameWithType: DynamicObject.GetMetaObject
    fullName: TimeCockpit.Data.DynamicObject.GetMetaObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: TimeCockpit.Data
  commentId: N:TimeCockpit.Data
  isExternal: false
  name: TimeCockpit.Data
  nameWithType: TimeCockpit.Data
  fullName: TimeCockpit.Data
- uid: System.Dynamic
  commentId: N:System.Dynamic
  isExternal: false
  name: System.Dynamic
  nameWithType: System.Dynamic
  fullName: System.Dynamic
- uid: System.ComponentModel
  commentId: N:System.ComponentModel
  isExternal: false
  name: System.ComponentModel
  nameWithType: System.ComponentModel
  fullName: System.ComponentModel
- uid: TimeCockpit.Data.DataModel.RelationBase.#ctor*
  commentId: Overload:TimeCockpit.Data.DataModel.RelationBase.#ctor
  isExternal: false
  name: RelationBase
  nameWithType: RelationBase.RelationBase
  fullName: TimeCockpit.Data.DataModel.RelationBase.RelationBase
- uid: TimeCockpit.Data.DataModel.StorageColumn
  commentId: T:TimeCockpit.Data.DataModel.StorageColumn
  parent: TimeCockpit.Data.DataModel
  isExternal: false
  name: StorageColumn
  nameWithType: StorageColumn
  fullName: TimeCockpit.Data.DataModel.StorageColumn
- uid: TimeCockpit.Data.Security.Permission
  commentId: T:TimeCockpit.Data.Security.Permission
  parent: TimeCockpit.Data.Security
  isExternal: false
  name: Permission
  nameWithType: Permission
  fullName: TimeCockpit.Data.Security.Permission
- uid: TimeCockpit.Data.DataModel.Relation
  commentId: T:TimeCockpit.Data.DataModel.Relation
  parent: TimeCockpit.Data.DataModel
  isExternal: false
  name: Relation
  nameWithType: Relation
  fullName: TimeCockpit.Data.DataModel.Relation
- uid: TimeCockpit.Data.Security
  commentId: N:TimeCockpit.Data.Security
  isExternal: false
  name: TimeCockpit.Data.Security
  nameWithType: TimeCockpit.Data.Security
  fullName: TimeCockpit.Data.Security
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Object,System.Object}}
  commentId: T:System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Object,System.Object}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<KeyValuePair<Object, Object>>
  nameWithType: IEnumerable<KeyValuePair<Object, Object>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.Object, System.Object>>
  nameWithType.vb: IEnumerable(Of KeyValuePair(Of Object, Object))
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.Object, System.Object))
  name.vb: IEnumerable(Of KeyValuePair(Of Object, Object))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: TimeCockpit.Data.DataModel.ModelProperty
  commentId: T:TimeCockpit.Data.DataModel.ModelProperty
  parent: TimeCockpit.Data.DataModel
  isExternal: false
  name: ModelProperty
  nameWithType: ModelProperty
  fullName: TimeCockpit.Data.DataModel.ModelProperty
- uid: TimeCockpit.Data.DataModel.RelationBase.Permissions*
  commentId: Overload:TimeCockpit.Data.DataModel.RelationBase.Permissions
  isExternal: false
  name: Permissions
  nameWithType: RelationBase.Permissions
  fullName: TimeCockpit.Data.DataModel.RelationBase.Permissions
- uid: TimeCockpit.Data.DataModel.ModelCollection{TimeCockpit.Data.Security.Permission}
  commentId: T:TimeCockpit.Data.DataModel.ModelCollection{TimeCockpit.Data.Security.Permission}
  parent: TimeCockpit.Data.DataModel
  definition: TimeCockpit.Data.DataModel.ModelCollection`1
  name: ModelCollection<Permission>
  nameWithType: ModelCollection<Permission>
  fullName: TimeCockpit.Data.DataModel.ModelCollection<TimeCockpit.Data.Security.Permission>
  nameWithType.vb: ModelCollection(Of Permission)
  fullName.vb: TimeCockpit.Data.DataModel.ModelCollection(Of TimeCockpit.Data.Security.Permission)
  name.vb: ModelCollection(Of Permission)
  spec.csharp:
  - uid: TimeCockpit.Data.DataModel.ModelCollection`1
    name: ModelCollection
    nameWithType: ModelCollection
    fullName: TimeCockpit.Data.DataModel.ModelCollection
  - name: <
    nameWithType: <
    fullName: <
  - uid: TimeCockpit.Data.Security.Permission
    name: Permission
    nameWithType: Permission
    fullName: TimeCockpit.Data.Security.Permission
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: TimeCockpit.Data.DataModel.ModelCollection`1
    name: ModelCollection
    nameWithType: ModelCollection
    fullName: TimeCockpit.Data.DataModel.ModelCollection
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TimeCockpit.Data.Security.Permission
    name: Permission
    nameWithType: Permission
    fullName: TimeCockpit.Data.Security.Permission
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.DataModel.ModelCollection`1
  commentId: T:TimeCockpit.Data.DataModel.ModelCollection`1
  isExternal: false
  name: ModelCollection<T>
  nameWithType: ModelCollection<T>
  fullName: TimeCockpit.Data.DataModel.ModelCollection<T>
  nameWithType.vb: ModelCollection(Of T)
  fullName.vb: TimeCockpit.Data.DataModel.ModelCollection(Of T)
  name.vb: ModelCollection(Of T)
  spec.csharp:
  - uid: TimeCockpit.Data.DataModel.ModelCollection`1
    name: ModelCollection
    nameWithType: ModelCollection
    fullName: TimeCockpit.Data.DataModel.ModelCollection
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: TimeCockpit.Data.DataModel.ModelCollection`1
    name: ModelCollection
    nameWithType: ModelCollection
    fullName: TimeCockpit.Data.DataModel.ModelCollection
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.DataModel.RelationBase.Target*
  commentId: Overload:TimeCockpit.Data.DataModel.RelationBase.Target
  isExternal: false
  name: Target
  nameWithType: RelationBase.Target
  fullName: TimeCockpit.Data.DataModel.RelationBase.Target
- uid: TimeCockpit.Data.DataModel.ModelEntityBase
  commentId: T:TimeCockpit.Data.DataModel.ModelEntityBase
  parent: TimeCockpit.Data.DataModel
  isExternal: false
  name: ModelEntityBase
  nameWithType: ModelEntityBase
  fullName: TimeCockpit.Data.DataModel.ModelEntityBase
- uid: TimeCockpit.Data.DataModel.RelationBase.IsNullable*
  commentId: Overload:TimeCockpit.Data.DataModel.RelationBase.IsNullable
  isExternal: false
  name: IsNullable
  nameWithType: RelationBase.IsNullable
  fullName: TimeCockpit.Data.DataModel.RelationBase.IsNullable
- uid: TimeCockpit.Data.DataModel.INullable.IsNullable
  commentId: P:TimeCockpit.Data.DataModel.INullable.IsNullable
  parent: TimeCockpit.Data.DataModel.INullable
  isExternal: false
  name: IsNullable
  nameWithType: INullable.IsNullable
  fullName: TimeCockpit.Data.DataModel.INullable.IsNullable
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: TimeCockpit.Data.DataModel.RelationBase.DataType*
  commentId: Overload:TimeCockpit.Data.DataModel.RelationBase.DataType
  isExternal: false
  name: DataType
  nameWithType: RelationBase.DataType
  fullName: TimeCockpit.Data.DataModel.RelationBase.DataType
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: TimeCockpit.Data.DataModel.RelationBase
  commentId: T:TimeCockpit.Data.DataModel.RelationBase
  parent: TimeCockpit.Data.DataModel
  isExternal: false
  name: RelationBase
  nameWithType: RelationBase
  fullName: TimeCockpit.Data.DataModel.RelationBase
- uid: TimeCockpit.Data.DataModel.RelationBase.ShallowCopy*
  commentId: Overload:TimeCockpit.Data.DataModel.RelationBase.ShallowCopy
  isExternal: false
  name: ShallowCopy
  nameWithType: RelationBase.ShallowCopy
  fullName: TimeCockpit.Data.DataModel.RelationBase.ShallowCopy
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: TimeCockpit.Data.DataModel.PersistBehavior
  commentId: T:TimeCockpit.Data.DataModel.PersistBehavior
  parent: TimeCockpit.Data.DataModel
  isExternal: false
  name: PersistBehavior
  nameWithType: PersistBehavior
  fullName: TimeCockpit.Data.DataModel.PersistBehavior
- uid: TimeCockpit.Data.DataModel.Ownership
  commentId: T:TimeCockpit.Data.DataModel.Ownership
  parent: TimeCockpit.Data.DataModel
  isExternal: false
  name: Ownership
  nameWithType: Ownership
  fullName: TimeCockpit.Data.DataModel.Ownership
- uid: TimeCockpit.Data.DataModel.ModelElement.Attach(TimeCockpit.Data.DataModel.ModelElement)
  commentId: M:TimeCockpit.Data.DataModel.ModelElement.Attach(TimeCockpit.Data.DataModel.ModelElement)
  parent: TimeCockpit.Data.DataModel.ModelElement
  isExternal: false
  name: Attach(ModelElement)
  nameWithType: ModelElement.Attach(ModelElement)
  fullName: TimeCockpit.Data.DataModel.ModelElement.Attach(TimeCockpit.Data.DataModel.ModelElement)
  spec.csharp:
  - uid: TimeCockpit.Data.DataModel.ModelElement.Attach(TimeCockpit.Data.DataModel.ModelElement)
    name: Attach
    nameWithType: ModelElement.Attach
    fullName: TimeCockpit.Data.DataModel.ModelElement.Attach
  - name: (
    nameWithType: (
    fullName: (
  - uid: TimeCockpit.Data.DataModel.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: TimeCockpit.Data.DataModel.ModelElement
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TimeCockpit.Data.DataModel.ModelElement.Attach(TimeCockpit.Data.DataModel.ModelElement)
    name: Attach
    nameWithType: ModelElement.Attach
    fullName: TimeCockpit.Data.DataModel.ModelElement.Attach
  - name: (
    nameWithType: (
    fullName: (
  - uid: TimeCockpit.Data.DataModel.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: TimeCockpit.Data.DataModel.ModelElement
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.DataModel.RelationBase.Attach*
  commentId: Overload:TimeCockpit.Data.DataModel.RelationBase.Attach
  isExternal: false
  name: Attach
  nameWithType: RelationBase.Attach
  fullName: TimeCockpit.Data.DataModel.RelationBase.Attach
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
- uid: TimeCockpit.Data.DataModel.RelationBase.RemovePermissions*
  commentId: Overload:TimeCockpit.Data.DataModel.RelationBase.RemovePermissions
  isExternal: false
  name: RemovePermissions
  nameWithType: RelationBase.RemovePermissions
  fullName: TimeCockpit.Data.DataModel.RelationBase.RemovePermissions
- uid: TimeCockpit.Data.DataModel.RelationBase.InitializeObject*
  commentId: Overload:TimeCockpit.Data.DataModel.RelationBase.InitializeObject
  isExternal: false
  name: InitializeObject
  nameWithType: RelationBase.InitializeObject
  fullName: TimeCockpit.Data.DataModel.RelationBase.InitializeObject
