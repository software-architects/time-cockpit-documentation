### YamlMime:ManagedReference
items:
- uid: TimeCockpit.Data.DataModel.Actions.IronPythonCondition
  commentId: T:TimeCockpit.Data.DataModel.Actions.IronPythonCondition
  id: IronPythonCondition
  parent: TimeCockpit.Data.DataModel.Actions
  children:
  - TimeCockpit.Data.DataModel.Actions.IronPythonCondition.#ctor
  - TimeCockpit.Data.DataModel.Actions.IronPythonCondition.Clone
  - TimeCockpit.Data.DataModel.Actions.IronPythonCondition.GetStatus(TimeCockpit.Data.DataModel.Actions.ModelActionContext)
  - TimeCockpit.Data.DataModel.Actions.IronPythonCondition.SourceCode
  langs:
  - csharp
  - vb
  name: IronPythonCondition
  nameWithType: IronPythonCondition
  fullName: TimeCockpit.Data.DataModel.Actions.IronPythonCondition
  type: Class
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel.Actions
  summary: "\nEncapsulates information about a condition which determines if the code of a <xref href=\"TimeCockpit.Data.DataModel.Actions.ModelAction\" data-throw-if-not-resolved=\"false\"></xref>&apos;s <xref href=\"ModelAction.Binding\" data-throw-if-not-resolved=\"false\"></xref> is executable.\nAn instance of <xref href=\"TimeCockpit.Data.DataModel.Actions.IronPythonCondition\" data-throw-if-not-resolved=\"false\"></xref> executes IronPython code to determine if a <xref href=\"TimeCockpit.Data.DataModel.Actions.ModelAction\" data-throw-if-not-resolved=\"false\"></xref> is <xref href=\"TimeCockpit.Data.DataModel.Actions.Status.NotValid\" data-throw-if-not-resolved=\"false\"></xref>,\n<xref href=\"TimeCockpit.Data.DataModel.Actions.Status.Disabled\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"TimeCockpit.Data.DataModel.Actions.Status.Executable\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\nUp to now, the <xref href=\"TimeCockpit.Data.DataModel.Actions.IronPythonCondition\" data-throw-if-not-resolved=\"false\"></xref> is not supported!\n"
  syntax:
    content: 'public class IronPythonCondition : Condition, IDynamicMetaObjectProvider, INotifyPropertyChanged'
    content.vb: >-
      Public Class IronPythonCondition
          Inherits Condition
          Implements IDynamicMetaObjectProvider, INotifyPropertyChanged
  inheritance:
  - System.Object
  - TimeCockpit.Data.DynamicObject
  - TimeCockpit.Data.DataModel.NamedDynamicObject
  - TimeCockpit.Data.DataModel.Condition
  implements:
  - System.Dynamic.IDynamicMetaObjectProvider
  - System.ComponentModel.INotifyPropertyChanged
  inheritedMembers:
  - TimeCockpit.Data.DataModel.NamedDynamicObject.OnPropertyChanged(System.String)
  - TimeCockpit.Data.DataModel.NamedDynamicObject.Name
  - TimeCockpit.Data.DataModel.NamedDynamicObject.PropertyChanged
  - TimeCockpit.Data.DynamicObject.GetMember(System.String)
  - TimeCockpit.Data.DynamicObject.SetMember(System.String,System.Object)
  - TimeCockpit.Data.DynamicObject.GetMetaObject(System.Linq.Expressions.Expression)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TimeCockpit.Data.DataModel.Actions.IronPythonCondition.#ctor
  commentId: M:TimeCockpit.Data.DataModel.Actions.IronPythonCondition.#ctor
  id: '#ctor'
  parent: TimeCockpit.Data.DataModel.Actions.IronPythonCondition
  langs:
  - csharp
  - vb
  name: IronPythonCondition()
  nameWithType: IronPythonCondition.IronPythonCondition()
  fullName: TimeCockpit.Data.DataModel.Actions.IronPythonCondition.IronPythonCondition()
  type: Constructor
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel.Actions
  summary: "\nInitializes a new instance of the IronPythonCondition class\n"
  syntax:
    content: public IronPythonCondition()
    content.vb: Public Sub New
  overload: TimeCockpit.Data.DataModel.Actions.IronPythonCondition.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.DataModel.Actions.IronPythonCondition.Clone
  commentId: M:TimeCockpit.Data.DataModel.Actions.IronPythonCondition.Clone
  id: Clone
  parent: TimeCockpit.Data.DataModel.Actions.IronPythonCondition
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: IronPythonCondition.Clone()
  fullName: TimeCockpit.Data.DataModel.Actions.IronPythonCondition.Clone()
  type: Method
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel.Actions
  summary: "\nCreates a deep copy of the condition.\n"
  syntax:
    content: public override Condition Clone()
    return:
      type: TimeCockpit.Data.DataModel.Condition
      description: Create a deep copy of the condition.
    content.vb: Public Overrides Function Clone As Condition
  overridden: TimeCockpit.Data.DataModel.Condition.Clone
  overload: TimeCockpit.Data.DataModel.Actions.IronPythonCondition.Clone*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: TimeCockpit.Data.DataModel.Actions.IronPythonCondition.GetStatus(TimeCockpit.Data.DataModel.Actions.ModelActionContext)
  commentId: M:TimeCockpit.Data.DataModel.Actions.IronPythonCondition.GetStatus(TimeCockpit.Data.DataModel.Actions.ModelActionContext)
  id: GetStatus(TimeCockpit.Data.DataModel.Actions.ModelActionContext)
  parent: TimeCockpit.Data.DataModel.Actions.IronPythonCondition
  langs:
  - csharp
  - vb
  name: GetStatus(ModelActionContext)
  nameWithType: IronPythonCondition.GetStatus(ModelActionContext)
  fullName: TimeCockpit.Data.DataModel.Actions.IronPythonCondition.GetStatus(TimeCockpit.Data.DataModel.Actions.ModelActionContext)
  type: Method
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel.Actions
  summary: "\nChecks the status a <xref href=\"TimeCockpit.Data.DataModel.Condition\" data-throw-if-not-resolved=\"false\"></xref> has in respect to an <xref href=\"TimeCockpit.Data.DataModel.Actions.ModelActionContext\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected override Status GetStatus(ModelActionContext context)
    parameters:
    - id: context
      type: TimeCockpit.Data.DataModel.Actions.ModelActionContext
      description: The <xref href="TimeCockpit.Data.DataModel.Actions.ModelActionContext" data-throw-if-not-resolved="false"></xref> the <xref href="TimeCockpit.Data.DataModel.Actions.ModelAction" data-throw-if-not-resolved="false"></xref> is to be executed in.
    return:
      type: TimeCockpit.Data.DataModel.Actions.Status
      description: The <xref href="TimeCockpit.Data.DataModel.Actions.Status" data-throw-if-not-resolved="false"></xref> the <xref href="TimeCockpit.Data.DataModel.Condition" data-throw-if-not-resolved="false"></xref> has in respect to the given <xref href="TimeCockpit.Data.DataModel.Actions.ModelActionContext" data-throw-if-not-resolved="false"></xref>.
    content.vb: Protected Overrides Function GetStatus(context As ModelActionContext) As Status
  overridden: TimeCockpit.Data.DataModel.Condition.GetStatus(TimeCockpit.Data.DataModel.Actions.ModelActionContext)
  overload: TimeCockpit.Data.DataModel.Actions.IronPythonCondition.GetStatus*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: TimeCockpit.Data.DataModel.Actions.IronPythonCondition.SourceCode
  commentId: P:TimeCockpit.Data.DataModel.Actions.IronPythonCondition.SourceCode
  id: SourceCode
  parent: TimeCockpit.Data.DataModel.Actions.IronPythonCondition
  langs:
  - csharp
  - vb
  name: SourceCode
  nameWithType: IronPythonCondition.SourceCode
  fullName: TimeCockpit.Data.DataModel.Actions.IronPythonCondition.SourceCode
  type: Property
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel.Actions
  summary: "\nGets or sets the source code that is used to evaluate if the <xref href=\"TimeCockpit.Data.DataModel.Condition\" data-throw-if-not-resolved=\"false\"></xref> is satisfied or not\n"
  syntax:
    content: public string SourceCode { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property SourceCode As String
  overload: TimeCockpit.Data.DataModel.Actions.IronPythonCondition.SourceCode*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: TimeCockpit.Data.DataModel.Actions
  commentId: N:TimeCockpit.Data.DataModel.Actions
  isExternal: true
  name: TimeCockpit.Data.DataModel.Actions
  nameWithType: TimeCockpit.Data.DataModel.Actions
  fullName: TimeCockpit.Data.DataModel.Actions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: TimeCockpit.Data.DynamicObject
  commentId: T:TimeCockpit.Data.DynamicObject
  parent: TimeCockpit.Data
  isExternal: true
  name: DynamicObject
  nameWithType: DynamicObject
  fullName: TimeCockpit.Data.DynamicObject
- uid: TimeCockpit.Data.DataModel.NamedDynamicObject
  commentId: T:TimeCockpit.Data.DataModel.NamedDynamicObject
  parent: TimeCockpit.Data.DataModel
  isExternal: true
  name: NamedDynamicObject
  nameWithType: NamedDynamicObject
  fullName: TimeCockpit.Data.DataModel.NamedDynamicObject
- uid: TimeCockpit.Data.DataModel.Condition
  commentId: T:TimeCockpit.Data.DataModel.Condition
  parent: TimeCockpit.Data.DataModel
  isExternal: true
  name: Condition
  nameWithType: Condition
  fullName: TimeCockpit.Data.DataModel.Condition
- uid: System.Dynamic.IDynamicMetaObjectProvider
  isExternal: true
  name: IDynamicMetaObjectProvider
  nameWithType: IDynamicMetaObjectProvider
  fullName: System.Dynamic.IDynamicMetaObjectProvider
- uid: System.ComponentModel.INotifyPropertyChanged
  isExternal: true
  name: INotifyPropertyChanged
  nameWithType: INotifyPropertyChanged
  fullName: System.ComponentModel.INotifyPropertyChanged
- uid: TimeCockpit.Data.DataModel.NamedDynamicObject.OnPropertyChanged(System.String)
  commentId: M:TimeCockpit.Data.DataModel.NamedDynamicObject.OnPropertyChanged(System.String)
  parent: TimeCockpit.Data.DataModel.NamedDynamicObject
  isExternal: true
  name: OnPropertyChanged(String)
  nameWithType: NamedDynamicObject.OnPropertyChanged(String)
  fullName: TimeCockpit.Data.DataModel.NamedDynamicObject.OnPropertyChanged(System.String)
  spec.csharp:
  - uid: TimeCockpit.Data.DataModel.NamedDynamicObject.OnPropertyChanged(System.String)
    name: OnPropertyChanged
    nameWithType: NamedDynamicObject.OnPropertyChanged
    fullName: TimeCockpit.Data.DataModel.NamedDynamicObject.OnPropertyChanged
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TimeCockpit.Data.DataModel.NamedDynamicObject.OnPropertyChanged(System.String)
    name: OnPropertyChanged
    nameWithType: NamedDynamicObject.OnPropertyChanged
    fullName: TimeCockpit.Data.DataModel.NamedDynamicObject.OnPropertyChanged
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.DataModel.NamedDynamicObject.Name
  commentId: P:TimeCockpit.Data.DataModel.NamedDynamicObject.Name
  parent: TimeCockpit.Data.DataModel.NamedDynamicObject
  isExternal: true
  name: Name
  nameWithType: NamedDynamicObject.Name
  fullName: TimeCockpit.Data.DataModel.NamedDynamicObject.Name
- uid: TimeCockpit.Data.DataModel.NamedDynamicObject.PropertyChanged
  commentId: E:TimeCockpit.Data.DataModel.NamedDynamicObject.PropertyChanged
  parent: TimeCockpit.Data.DataModel.NamedDynamicObject
  isExternal: true
  name: PropertyChanged
  nameWithType: NamedDynamicObject.PropertyChanged
  fullName: TimeCockpit.Data.DataModel.NamedDynamicObject.PropertyChanged
- uid: TimeCockpit.Data.DynamicObject.GetMember(System.String)
  commentId: M:TimeCockpit.Data.DynamicObject.GetMember(System.String)
  parent: TimeCockpit.Data.DynamicObject
  isExternal: true
  name: GetMember(String)
  nameWithType: DynamicObject.GetMember(String)
  fullName: TimeCockpit.Data.DynamicObject.GetMember(System.String)
  spec.csharp:
  - uid: TimeCockpit.Data.DynamicObject.GetMember(System.String)
    name: GetMember
    nameWithType: DynamicObject.GetMember
    fullName: TimeCockpit.Data.DynamicObject.GetMember
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TimeCockpit.Data.DynamicObject.GetMember(System.String)
    name: GetMember
    nameWithType: DynamicObject.GetMember
    fullName: TimeCockpit.Data.DynamicObject.GetMember
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.DynamicObject.SetMember(System.String,System.Object)
  commentId: M:TimeCockpit.Data.DynamicObject.SetMember(System.String,System.Object)
  parent: TimeCockpit.Data.DynamicObject
  isExternal: true
  name: SetMember(String, Object)
  nameWithType: DynamicObject.SetMember(String, Object)
  fullName: TimeCockpit.Data.DynamicObject.SetMember(System.String, System.Object)
  spec.csharp:
  - uid: TimeCockpit.Data.DynamicObject.SetMember(System.String,System.Object)
    name: SetMember
    nameWithType: DynamicObject.SetMember
    fullName: TimeCockpit.Data.DynamicObject.SetMember
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TimeCockpit.Data.DynamicObject.SetMember(System.String,System.Object)
    name: SetMember
    nameWithType: DynamicObject.SetMember
    fullName: TimeCockpit.Data.DynamicObject.SetMember
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.DynamicObject.GetMetaObject(System.Linq.Expressions.Expression)
  commentId: M:TimeCockpit.Data.DynamicObject.GetMetaObject(System.Linq.Expressions.Expression)
  parent: TimeCockpit.Data.DynamicObject
  isExternal: true
  name: GetMetaObject(Expression)
  nameWithType: DynamicObject.GetMetaObject(Expression)
  fullName: TimeCockpit.Data.DynamicObject.GetMetaObject(System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: TimeCockpit.Data.DynamicObject.GetMetaObject(System.Linq.Expressions.Expression)
    name: GetMetaObject
    nameWithType: DynamicObject.GetMetaObject
    fullName: TimeCockpit.Data.DynamicObject.GetMetaObject
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TimeCockpit.Data.DynamicObject.GetMetaObject(System.Linq.Expressions.Expression)
    name: GetMetaObject
    nameWithType: DynamicObject.GetMetaObject
    fullName: TimeCockpit.Data.DynamicObject.GetMetaObject
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TimeCockpit.Data
  commentId: N:TimeCockpit.Data
  isExternal: true
  name: TimeCockpit.Data
  nameWithType: TimeCockpit.Data
  fullName: TimeCockpit.Data
- uid: TimeCockpit.Data.DataModel
  commentId: N:TimeCockpit.Data.DataModel
  isExternal: true
  name: TimeCockpit.Data.DataModel
  nameWithType: TimeCockpit.Data.DataModel
  fullName: TimeCockpit.Data.DataModel
- uid: TimeCockpit.Data.DataModel.Actions.IronPythonCondition.#ctor*
  commentId: Overload:TimeCockpit.Data.DataModel.Actions.IronPythonCondition.#ctor
  isExternal: true
  name: IronPythonCondition
  nameWithType: IronPythonCondition.IronPythonCondition
  fullName: TimeCockpit.Data.DataModel.Actions.IronPythonCondition.IronPythonCondition
- uid: TimeCockpit.Data.DataModel.Condition.Clone
  commentId: M:TimeCockpit.Data.DataModel.Condition.Clone
  parent: TimeCockpit.Data.DataModel.Condition
  isExternal: true
  name: Clone()
  nameWithType: Condition.Clone()
  fullName: TimeCockpit.Data.DataModel.Condition.Clone()
  spec.csharp:
  - uid: TimeCockpit.Data.DataModel.Condition.Clone
    name: Clone
    nameWithType: Condition.Clone
    fullName: TimeCockpit.Data.DataModel.Condition.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TimeCockpit.Data.DataModel.Condition.Clone
    name: Clone
    nameWithType: Condition.Clone
    fullName: TimeCockpit.Data.DataModel.Condition.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.DataModel.Actions.IronPythonCondition.Clone*
  commentId: Overload:TimeCockpit.Data.DataModel.Actions.IronPythonCondition.Clone
  isExternal: true
  name: Clone
  nameWithType: IronPythonCondition.Clone
  fullName: TimeCockpit.Data.DataModel.Actions.IronPythonCondition.Clone
- uid: TimeCockpit.Data.DataModel.Condition.GetStatus(TimeCockpit.Data.DataModel.Actions.ModelActionContext)
  commentId: M:TimeCockpit.Data.DataModel.Condition.GetStatus(TimeCockpit.Data.DataModel.Actions.ModelActionContext)
  parent: TimeCockpit.Data.DataModel.Condition
  isExternal: true
  name: GetStatus(ModelActionContext)
  nameWithType: Condition.GetStatus(ModelActionContext)
  fullName: TimeCockpit.Data.DataModel.Condition.GetStatus(TimeCockpit.Data.DataModel.Actions.ModelActionContext)
  spec.csharp:
  - uid: TimeCockpit.Data.DataModel.Condition.GetStatus(TimeCockpit.Data.DataModel.Actions.ModelActionContext)
    name: GetStatus
    nameWithType: Condition.GetStatus
    fullName: TimeCockpit.Data.DataModel.Condition.GetStatus
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: TimeCockpit.Data.DataModel.Actions.ModelActionContext
    name: ModelActionContext
    nameWithType: ModelActionContext
    fullName: TimeCockpit.Data.DataModel.Actions.ModelActionContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TimeCockpit.Data.DataModel.Condition.GetStatus(TimeCockpit.Data.DataModel.Actions.ModelActionContext)
    name: GetStatus
    nameWithType: Condition.GetStatus
    fullName: TimeCockpit.Data.DataModel.Condition.GetStatus
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: TimeCockpit.Data.DataModel.Actions.ModelActionContext
    name: ModelActionContext
    nameWithType: ModelActionContext
    fullName: TimeCockpit.Data.DataModel.Actions.ModelActionContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.DataModel.Actions.IronPythonCondition.GetStatus*
  commentId: Overload:TimeCockpit.Data.DataModel.Actions.IronPythonCondition.GetStatus
  isExternal: true
  name: GetStatus
  nameWithType: IronPythonCondition.GetStatus
  fullName: TimeCockpit.Data.DataModel.Actions.IronPythonCondition.GetStatus
- uid: TimeCockpit.Data.DataModel.Actions.ModelActionContext
  commentId: T:TimeCockpit.Data.DataModel.Actions.ModelActionContext
  parent: TimeCockpit.Data.DataModel.Actions
  isExternal: true
  name: ModelActionContext
  nameWithType: ModelActionContext
  fullName: TimeCockpit.Data.DataModel.Actions.ModelActionContext
- uid: TimeCockpit.Data.DataModel.Actions.Status
  commentId: T:TimeCockpit.Data.DataModel.Actions.Status
  parent: TimeCockpit.Data.DataModel.Actions
  isExternal: true
  name: Status
  nameWithType: Status
  fullName: TimeCockpit.Data.DataModel.Actions.Status
- uid: TimeCockpit.Data.DataModel.Actions.IronPythonCondition.SourceCode*
  commentId: Overload:TimeCockpit.Data.DataModel.Actions.IronPythonCondition.SourceCode
  isExternal: true
  name: SourceCode
  nameWithType: IronPythonCondition.SourceCode
  fullName: TimeCockpit.Data.DataModel.Actions.IronPythonCondition.SourceCode
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
