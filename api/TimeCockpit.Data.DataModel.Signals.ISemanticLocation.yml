### YamlMime:ManagedReference
items:
- uid: TimeCockpit.Data.DataModel.Signals.ISemanticLocation
  commentId: T:TimeCockpit.Data.DataModel.Signals.ISemanticLocation
  id: ISemanticLocation
  parent: TimeCockpit.Data.DataModel.Signals
  children:
  - TimeCockpit.Data.DataModel.Signals.ISemanticLocation.Location
  langs:
  - csharp
  - vb
  name: ISemanticLocation
  nameWithType: ISemanticLocation
  fullName: TimeCockpit.Data.DataModel.Signals.ISemanticLocation
  type: Interface
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/Signals/ISemanticLocation.cs
    id: ISemanticLocation
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/Signals/ISemanticLocation.cs
    startLine: 16
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel.Signals
  summary: "\nInterface providing a semantic location information such as Outlook location.\n"
  example: []
  syntax:
    content: public interface ISemanticLocation
    content.vb: Public Interface ISemanticLocation
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: TimeCockpit.Data.DataModel.Signals.ISemanticLocation.Location
  commentId: P:TimeCockpit.Data.DataModel.Signals.ISemanticLocation.Location
  id: Location
  parent: TimeCockpit.Data.DataModel.Signals.ISemanticLocation
  langs:
  - csharp
  - vb
  name: Location
  nameWithType: ISemanticLocation.Location
  fullName: TimeCockpit.Data.DataModel.Signals.ISemanticLocation.Location
  type: Property
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/Signals/ISemanticLocation.cs
    id: Location
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/Signals/ISemanticLocation.cs
    startLine: 21
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel.Signals
  summary: "\nGets or sets the location.\n"
  example: []
  syntax:
    content: string Location { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property Location As String
  overload: TimeCockpit.Data.DataModel.Signals.ISemanticLocation.Location*
  modifiers.csharp:
  - get
  - set
references:
- uid: TimeCockpit.Data.DataModel.Signals
  commentId: N:TimeCockpit.Data.DataModel.Signals
  isExternal: false
  name: TimeCockpit.Data.DataModel.Signals
  nameWithType: TimeCockpit.Data.DataModel.Signals
  fullName: TimeCockpit.Data.DataModel.Signals
- uid: TimeCockpit.Data.DataModel.Signals.ISemanticLocation.Location*
  commentId: Overload:TimeCockpit.Data.DataModel.Signals.ISemanticLocation.Location
  isExternal: false
  name: Location
  nameWithType: ISemanticLocation.Location
  fullName: TimeCockpit.Data.DataModel.Signals.ISemanticLocation.Location
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
