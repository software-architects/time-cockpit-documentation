### YamlMime:ManagedReference
items:
- uid: TimeCockpit.Data.QueryLanguage.QueryHelper
  commentId: T:TimeCockpit.Data.QueryLanguage.QueryHelper
  id: QueryHelper
  parent: TimeCockpit.Data.QueryLanguage
  children:
  - TimeCockpit.Data.QueryLanguage.QueryHelper.GetResultEntityAndIncludedRelations(System.String,TimeCockpit.Data.DataModel.Model,TimeCockpit.Data.Database.SelectSettings,System.Collections.Generic.IEnumerable{TimeCockpit.Data.QueryLanguage.QueryParameter},System.Boolean)
  - TimeCockpit.Data.QueryLanguage.QueryHelper.GetResultModelEntity(System.String,TimeCockpit.Data.DataModel.Model,System.Collections.Generic.IEnumerable{TimeCockpit.Data.QueryLanguage.QueryParameter},TimeCockpit.Data.Environment)
  langs:
  - csharp
  - vb
  name: QueryHelper
  nameWithType: QueryHelper
  fullName: TimeCockpit.Data.QueryLanguage.QueryHelper
  type: Class
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.QueryLanguage
  summary: "\nHelper classes for dealing with TCQL queries.\n"
  syntax:
    content: public static class QueryHelper
    content.vb: Public Module QueryHelper
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: TimeCockpit.Data.QueryLanguage.QueryHelper.GetResultModelEntity(System.String,TimeCockpit.Data.DataModel.Model,System.Collections.Generic.IEnumerable{TimeCockpit.Data.QueryLanguage.QueryParameter},TimeCockpit.Data.Environment)
  commentId: M:TimeCockpit.Data.QueryLanguage.QueryHelper.GetResultModelEntity(System.String,TimeCockpit.Data.DataModel.Model,System.Collections.Generic.IEnumerable{TimeCockpit.Data.QueryLanguage.QueryParameter},TimeCockpit.Data.Environment)
  id: GetResultModelEntity(System.String,TimeCockpit.Data.DataModel.Model,System.Collections.Generic.IEnumerable{TimeCockpit.Data.QueryLanguage.QueryParameter},TimeCockpit.Data.Environment)
  parent: TimeCockpit.Data.QueryLanguage.QueryHelper
  langs:
  - csharp
  - vb
  name: GetResultModelEntity(String, Model, IEnumerable<QueryParameter>, Environment)
  nameWithType: QueryHelper.GetResultModelEntity(String, Model, IEnumerable<QueryParameter>, Environment)
  fullName: TimeCockpit.Data.QueryLanguage.QueryHelper.GetResultModelEntity(System.String, TimeCockpit.Data.DataModel.Model, System.Collections.Generic.IEnumerable<TimeCockpit.Data.QueryLanguage.QueryParameter>, TimeCockpit.Data.Environment)
  type: Method
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.QueryLanguage
  summary: "\nGets the resulting entity of a TCQL query.\n"
  syntax:
    content: public static ModelEntityBase GetResultModelEntity(string query, Model model, IEnumerable<QueryParameter> parameters = null, Environment environment = null)
    parameters:
    - id: query
      type: System.String
      description: The query to parse.
    - id: model
      type: TimeCockpit.Data.DataModel.Model
      description: The model.
    - id: parameters
      type: System.Collections.Generic.IEnumerable{TimeCockpit.Data.QueryLanguage.QueryParameter}
      description: The parameters to pass.
    - id: environment
      type: TimeCockpit.Data.Environment
      description: The environment to pass to the AST.
    return:
      type: TimeCockpit.Data.DataModel.ModelEntityBase
      description: Returns the model entity describing the result type.
    content.vb: Public Shared Function GetResultModelEntity(query As String, model As Model, parameters As IEnumerable(Of QueryParameter) = Nothing, environment As Environment = Nothing) As ModelEntityBase
  overload: TimeCockpit.Data.QueryLanguage.QueryHelper.GetResultModelEntity*
  nameWithType.vb: QueryHelper.GetResultModelEntity(String, Model, IEnumerable(Of QueryParameter), Environment)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TimeCockpit.Data.QueryLanguage.QueryHelper.GetResultModelEntity(System.String, TimeCockpit.Data.DataModel.Model, System.Collections.Generic.IEnumerable(Of TimeCockpit.Data.QueryLanguage.QueryParameter), TimeCockpit.Data.Environment)
  name.vb: GetResultModelEntity(String, Model, IEnumerable(Of QueryParameter), Environment)
- uid: TimeCockpit.Data.QueryLanguage.QueryHelper.GetResultEntityAndIncludedRelations(System.String,TimeCockpit.Data.DataModel.Model,TimeCockpit.Data.Database.SelectSettings,System.Collections.Generic.IEnumerable{TimeCockpit.Data.QueryLanguage.QueryParameter},System.Boolean)
  commentId: M:TimeCockpit.Data.QueryLanguage.QueryHelper.GetResultEntityAndIncludedRelations(System.String,TimeCockpit.Data.DataModel.Model,TimeCockpit.Data.Database.SelectSettings,System.Collections.Generic.IEnumerable{TimeCockpit.Data.QueryLanguage.QueryParameter},System.Boolean)
  id: GetResultEntityAndIncludedRelations(System.String,TimeCockpit.Data.DataModel.Model,TimeCockpit.Data.Database.SelectSettings,System.Collections.Generic.IEnumerable{TimeCockpit.Data.QueryLanguage.QueryParameter},System.Boolean)
  parent: TimeCockpit.Data.QueryLanguage.QueryHelper
  langs:
  - csharp
  - vb
  name: GetResultEntityAndIncludedRelations(String, Model, SelectSettings, IEnumerable<QueryParameter>, Boolean)
  nameWithType: QueryHelper.GetResultEntityAndIncludedRelations(String, Model, SelectSettings, IEnumerable<QueryParameter>, Boolean)
  fullName: TimeCockpit.Data.QueryLanguage.QueryHelper.GetResultEntityAndIncludedRelations(System.String, TimeCockpit.Data.DataModel.Model, TimeCockpit.Data.Database.SelectSettings, System.Collections.Generic.IEnumerable<TimeCockpit.Data.QueryLanguage.QueryParameter>, System.Boolean)
  type: Method
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.QueryLanguage
  summary: "\nGets the result entity and the path of the included relations.\n"
  syntax:
    content: public static Tuple<ModelEntityBase, IEnumerable<string>> GetResultEntityAndIncludedRelations(string query, Model model, SelectSettings settings, IEnumerable<QueryParameter> parameters, bool supportsTVP)
    parameters:
    - id: query
      type: System.String
      description: The query to analyze.
    - id: model
      type: TimeCockpit.Data.DataModel.Model
      description: The model.
    - id: settings
      type: TimeCockpit.Data.Database.SelectSettings
      description: The select settings.
    - id: parameters
      type: System.Collections.Generic.IEnumerable{TimeCockpit.Data.QueryLanguage.QueryParameter}
      description: The query parameters.
    - id: supportsTVP
      type: System.Boolean
      description: True if the target supports table valued parameters, false otherwise.
    return:
      type: System.Tuple{TimeCockpit.Data.DataModel.ModelEntityBase,System.Collections.Generic.IEnumerable{System.String}}
      description: Returns the result entity.
    content.vb: Public Shared Function GetResultEntityAndIncludedRelations(query As String, model As Model, settings As SelectSettings, parameters As IEnumerable(Of QueryParameter), supportsTVP As Boolean) As Tuple(Of ModelEntityBase, IEnumerable(Of String))
  overload: TimeCockpit.Data.QueryLanguage.QueryHelper.GetResultEntityAndIncludedRelations*
  nameWithType.vb: QueryHelper.GetResultEntityAndIncludedRelations(String, Model, SelectSettings, IEnumerable(Of QueryParameter), Boolean)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TimeCockpit.Data.QueryLanguage.QueryHelper.GetResultEntityAndIncludedRelations(System.String, TimeCockpit.Data.DataModel.Model, TimeCockpit.Data.Database.SelectSettings, System.Collections.Generic.IEnumerable(Of TimeCockpit.Data.QueryLanguage.QueryParameter), System.Boolean)
  name.vb: GetResultEntityAndIncludedRelations(String, Model, SelectSettings, IEnumerable(Of QueryParameter), Boolean)
references:
- uid: TimeCockpit.Data.QueryLanguage
  commentId: N:TimeCockpit.Data.QueryLanguage
  isExternal: true
  name: TimeCockpit.Data.QueryLanguage
  nameWithType: TimeCockpit.Data.QueryLanguage
  fullName: TimeCockpit.Data.QueryLanguage
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TimeCockpit.Data.QueryLanguage.QueryHelper.GetResultModelEntity*
  commentId: Overload:TimeCockpit.Data.QueryLanguage.QueryHelper.GetResultModelEntity
  isExternal: true
  name: GetResultModelEntity
  nameWithType: QueryHelper.GetResultModelEntity
  fullName: TimeCockpit.Data.QueryLanguage.QueryHelper.GetResultModelEntity
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: TimeCockpit.Data.DataModel.Model
  commentId: T:TimeCockpit.Data.DataModel.Model
  parent: TimeCockpit.Data.DataModel
  isExternal: true
  name: Model
  nameWithType: Model
  fullName: TimeCockpit.Data.DataModel.Model
- uid: System.Collections.Generic.IEnumerable{TimeCockpit.Data.QueryLanguage.QueryParameter}
  commentId: T:System.Collections.Generic.IEnumerable{TimeCockpit.Data.QueryLanguage.QueryParameter}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<QueryParameter>
  nameWithType: IEnumerable<QueryParameter>
  fullName: System.Collections.Generic.IEnumerable<TimeCockpit.Data.QueryLanguage.QueryParameter>
  nameWithType.vb: IEnumerable(Of QueryParameter)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TimeCockpit.Data.QueryLanguage.QueryParameter)
  name.vb: IEnumerable(Of QueryParameter)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TimeCockpit.Data.QueryLanguage.QueryParameter
    name: QueryParameter
    nameWithType: QueryParameter
    fullName: TimeCockpit.Data.QueryLanguage.QueryParameter
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TimeCockpit.Data.QueryLanguage.QueryParameter
    name: QueryParameter
    nameWithType: QueryParameter
    fullName: TimeCockpit.Data.QueryLanguage.QueryParameter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.Environment
  commentId: T:TimeCockpit.Data.Environment
  parent: TimeCockpit.Data
  isExternal: true
  name: Environment
  nameWithType: Environment
  fullName: TimeCockpit.Data.Environment
- uid: TimeCockpit.Data.DataModel.ModelEntityBase
  commentId: T:TimeCockpit.Data.DataModel.ModelEntityBase
  parent: TimeCockpit.Data.DataModel
  isExternal: true
  name: ModelEntityBase
  nameWithType: ModelEntityBase
  fullName: TimeCockpit.Data.DataModel.ModelEntityBase
- uid: TimeCockpit.Data.DataModel
  commentId: N:TimeCockpit.Data.DataModel
  isExternal: true
  name: TimeCockpit.Data.DataModel
  nameWithType: TimeCockpit.Data.DataModel
  fullName: TimeCockpit.Data.DataModel
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: TimeCockpit.Data
  commentId: N:TimeCockpit.Data
  isExternal: true
  name: TimeCockpit.Data
  nameWithType: TimeCockpit.Data
  fullName: TimeCockpit.Data
- uid: TimeCockpit.Data.QueryLanguage.QueryHelper.GetResultEntityAndIncludedRelations*
  commentId: Overload:TimeCockpit.Data.QueryLanguage.QueryHelper.GetResultEntityAndIncludedRelations
  isExternal: true
  name: GetResultEntityAndIncludedRelations
  nameWithType: QueryHelper.GetResultEntityAndIncludedRelations
  fullName: TimeCockpit.Data.QueryLanguage.QueryHelper.GetResultEntityAndIncludedRelations
- uid: TimeCockpit.Data.Database.SelectSettings
  commentId: T:TimeCockpit.Data.Database.SelectSettings
  parent: TimeCockpit.Data.Database
  isExternal: true
  name: SelectSettings
  nameWithType: SelectSettings
  fullName: TimeCockpit.Data.Database.SelectSettings
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Tuple{TimeCockpit.Data.DataModel.ModelEntityBase,System.Collections.Generic.IEnumerable{System.String}}
  commentId: T:System.Tuple{TimeCockpit.Data.DataModel.ModelEntityBase,System.Collections.Generic.IEnumerable{System.String}}
  parent: System
  definition: System.Tuple`2
  name: Tuple<ModelEntityBase, IEnumerable<String>>
  nameWithType: Tuple<ModelEntityBase, IEnumerable<String>>
  fullName: System.Tuple<TimeCockpit.Data.DataModel.ModelEntityBase, System.Collections.Generic.IEnumerable<System.String>>
  nameWithType.vb: Tuple(Of ModelEntityBase, IEnumerable(Of String))
  fullName.vb: System.Tuple(Of TimeCockpit.Data.DataModel.ModelEntityBase, System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: Tuple(Of ModelEntityBase, IEnumerable(Of String))
  spec.csharp:
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TimeCockpit.Data.DataModel.ModelEntityBase
    name: ModelEntityBase
    nameWithType: ModelEntityBase
    fullName: TimeCockpit.Data.DataModel.ModelEntityBase
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TimeCockpit.Data.DataModel.ModelEntityBase
    name: ModelEntityBase
    nameWithType: ModelEntityBase
    fullName: TimeCockpit.Data.DataModel.ModelEntityBase
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.Database
  commentId: N:TimeCockpit.Data.Database
  isExternal: true
  name: TimeCockpit.Data.Database
  nameWithType: TimeCockpit.Data.Database
  fullName: TimeCockpit.Data.Database
- uid: System.Tuple`2
  commentId: T:System.Tuple`2
  isExternal: true
  name: Tuple<T1, T2>
  nameWithType: Tuple<T1, T2>
  fullName: System.Tuple<T1, T2>
  nameWithType.vb: Tuple(Of T1, T2)
  fullName.vb: System.Tuple(Of T1, T2)
  name.vb: Tuple(Of T1, T2)
  spec.csharp:
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: )
    nameWithType: )
    fullName: )
