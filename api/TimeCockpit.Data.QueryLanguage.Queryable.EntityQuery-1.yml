### YamlMime:ManagedReference
items:
- uid: TimeCockpit.Data.QueryLanguage.Queryable.EntityQuery`1
  commentId: T:TimeCockpit.Data.QueryLanguage.Queryable.EntityQuery`1
  id: EntityQuery`1
  parent: TimeCockpit.Data.QueryLanguage.Queryable
  children:
  - TimeCockpit.Data.QueryLanguage.Queryable.EntityQuery`1.#ctor(TimeCockpit.Data.QueryLanguage.Queryable.EntityQueryProvider)
  - TimeCockpit.Data.QueryLanguage.Queryable.EntityQuery`1.#ctor(TimeCockpit.Data.QueryLanguage.Queryable.EntityQueryProvider,System.Linq.Expressions.Expression)
  - TimeCockpit.Data.QueryLanguage.Queryable.EntityQuery`1.ElementType
  - TimeCockpit.Data.QueryLanguage.Queryable.EntityQuery`1.Expression
  - TimeCockpit.Data.QueryLanguage.Queryable.EntityQuery`1.GetEnumerator
  - TimeCockpit.Data.QueryLanguage.Queryable.EntityQuery`1.Provider
  - TimeCockpit.Data.QueryLanguage.Queryable.EntityQuery`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator
  langs:
  - csharp
  - vb
  name: EntityQuery<T>
  nameWithType: EntityQuery<T>
  fullName: TimeCockpit.Data.QueryLanguage.Queryable.EntityQuery<T>
  type: Class
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/QueryLanguage/Queryable/EntityQuery.cs
    id: EntityQuery
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/QueryLanguage/Queryable/EntityQuery.cs
    startLine: 19
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.QueryLanguage.Queryable
  summary: "\nIQueryable implementation for entity queries.\n"
  example: []
  syntax:
    content: 'public class EntityQuery<T> : IOrderedQueryable<T>, IQueryable<T>, IEnumerable<T>, IOrderedQueryable, IQueryable, IEnumerable'
    typeParameters:
    - id: T
      description: The type, derived from EntityObject.
    content.vb: >-
      Public Class EntityQuery(Of T)
          Implements IOrderedQueryable(Of T), IQueryable(Of T), IEnumerable(Of T), IOrderedQueryable, IQueryable, IEnumerable
  inheritance:
  - System.Object
  implements:
  - System.Linq.IOrderedQueryable{{T}}
  - System.Linq.IQueryable{{T}}
  - System.Collections.Generic.IEnumerable{{T}}
  - System.Linq.IOrderedQueryable
  - System.Linq.IQueryable
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: EntityQuery(Of T)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: TimeCockpit.Data.QueryLanguage.Queryable.EntityQuery(Of T)
  name.vb: EntityQuery(Of T)
- uid: TimeCockpit.Data.QueryLanguage.Queryable.EntityQuery`1.#ctor(TimeCockpit.Data.QueryLanguage.Queryable.EntityQueryProvider)
  commentId: M:TimeCockpit.Data.QueryLanguage.Queryable.EntityQuery`1.#ctor(TimeCockpit.Data.QueryLanguage.Queryable.EntityQueryProvider)
  id: '#ctor(TimeCockpit.Data.QueryLanguage.Queryable.EntityQueryProvider)'
  parent: TimeCockpit.Data.QueryLanguage.Queryable.EntityQuery`1
  langs:
  - csharp
  - vb
  name: EntityQuery(EntityQueryProvider)
  nameWithType: EntityQuery<T>.EntityQuery(EntityQueryProvider)
  fullName: TimeCockpit.Data.QueryLanguage.Queryable.EntityQuery<T>.EntityQuery(TimeCockpit.Data.QueryLanguage.Queryable.EntityQueryProvider)
  type: Constructor
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/QueryLanguage/Queryable/EntityQuery.cs
    id: .ctor
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/QueryLanguage/Queryable/EntityQuery.cs
    startLine: 35
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.QueryLanguage.Queryable
  summary: "\nInitializes a new instance of the <xref href=\"TimeCockpit.Data.QueryLanguage.Queryable.EntityQuery%601\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public EntityQuery(EntityQueryProvider provider)
    parameters:
    - id: provider
      type: TimeCockpit.Data.QueryLanguage.Queryable.EntityQueryProvider
      description: The provider.
    content.vb: Public Sub New(provider As EntityQueryProvider)
  overload: TimeCockpit.Data.QueryLanguage.Queryable.EntityQuery`1.#ctor*
  nameWithType.vb: EntityQuery(Of T).EntityQuery(EntityQueryProvider)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TimeCockpit.Data.QueryLanguage.Queryable.EntityQuery(Of T).EntityQuery(TimeCockpit.Data.QueryLanguage.Queryable.EntityQueryProvider)
- uid: TimeCockpit.Data.QueryLanguage.Queryable.EntityQuery`1.#ctor(TimeCockpit.Data.QueryLanguage.Queryable.EntityQueryProvider,System.Linq.Expressions.Expression)
  commentId: M:TimeCockpit.Data.QueryLanguage.Queryable.EntityQuery`1.#ctor(TimeCockpit.Data.QueryLanguage.Queryable.EntityQueryProvider,System.Linq.Expressions.Expression)
  id: '#ctor(TimeCockpit.Data.QueryLanguage.Queryable.EntityQueryProvider,System.Linq.Expressions.Expression)'
  parent: TimeCockpit.Data.QueryLanguage.Queryable.EntityQuery`1
  langs:
  - csharp
  - vb
  name: EntityQuery(EntityQueryProvider, Expression)
  nameWithType: EntityQuery<T>.EntityQuery(EntityQueryProvider, Expression)
  fullName: TimeCockpit.Data.QueryLanguage.Queryable.EntityQuery<T>.EntityQuery(TimeCockpit.Data.QueryLanguage.Queryable.EntityQueryProvider, System.Linq.Expressions.Expression)
  type: Constructor
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/QueryLanguage/Queryable/EntityQuery.cs
    id: .ctor
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/QueryLanguage/Queryable/EntityQuery.cs
    startLine: 46
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.QueryLanguage.Queryable
  summary: "\nInitializes a new instance of the <xref href=\"TimeCockpit.Data.QueryLanguage.Queryable.EntityQuery%601\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public EntityQuery(EntityQueryProvider provider, Expression expression)
    parameters:
    - id: provider
      type: TimeCockpit.Data.QueryLanguage.Queryable.EntityQueryProvider
      description: The provider.
    - id: expression
      type: System.Linq.Expressions.Expression
      description: The expression.
    content.vb: Public Sub New(provider As EntityQueryProvider, expression As Expression)
  overload: TimeCockpit.Data.QueryLanguage.Queryable.EntityQuery`1.#ctor*
  nameWithType.vb: EntityQuery(Of T).EntityQuery(EntityQueryProvider, Expression)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TimeCockpit.Data.QueryLanguage.Queryable.EntityQuery(Of T).EntityQuery(TimeCockpit.Data.QueryLanguage.Queryable.EntityQueryProvider, System.Linq.Expressions.Expression)
- uid: TimeCockpit.Data.QueryLanguage.Queryable.EntityQuery`1.ElementType
  commentId: P:TimeCockpit.Data.QueryLanguage.Queryable.EntityQuery`1.ElementType
  id: ElementType
  parent: TimeCockpit.Data.QueryLanguage.Queryable.EntityQuery`1
  langs:
  - csharp
  - vb
  name: ElementType
  nameWithType: EntityQuery<T>.ElementType
  fullName: TimeCockpit.Data.QueryLanguage.Queryable.EntityQuery<T>.ElementType
  type: Property
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/QueryLanguage/Queryable/EntityQuery.cs
    id: ElementType
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/QueryLanguage/Queryable/EntityQuery.cs
    startLine: 55
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.QueryLanguage.Queryable
  summary: "\nGets the element type.\n"
  example: []
  syntax:
    content: public Type ElementType { get; }
    parameters: []
    return:
      type: System.Type
    content.vb: Public ReadOnly Property ElementType As Type
  overload: TimeCockpit.Data.QueryLanguage.Queryable.EntityQuery`1.ElementType*
  implements:
  - System.Linq.IQueryable.ElementType
  nameWithType.vb: EntityQuery(Of T).ElementType
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: TimeCockpit.Data.QueryLanguage.Queryable.EntityQuery(Of T).ElementType
- uid: TimeCockpit.Data.QueryLanguage.Queryable.EntityQuery`1.Expression
  commentId: P:TimeCockpit.Data.QueryLanguage.Queryable.EntityQuery`1.Expression
  id: Expression
  parent: TimeCockpit.Data.QueryLanguage.Queryable.EntityQuery`1
  langs:
  - csharp
  - vb
  name: Expression
  nameWithType: EntityQuery<T>.Expression
  fullName: TimeCockpit.Data.QueryLanguage.Queryable.EntityQuery<T>.Expression
  type: Property
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/QueryLanguage/Queryable/EntityQuery.cs
    id: Expression
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/QueryLanguage/Queryable/EntityQuery.cs
    startLine: 63
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.QueryLanguage.Queryable
  summary: "\nGets the expression of the query.\n"
  example: []
  syntax:
    content: public Expression Expression { get; }
    parameters: []
    return:
      type: System.Linq.Expressions.Expression
    content.vb: Public ReadOnly Property Expression As Expression
  overload: TimeCockpit.Data.QueryLanguage.Queryable.EntityQuery`1.Expression*
  implements:
  - System.Linq.IQueryable.Expression
  nameWithType.vb: EntityQuery(Of T).Expression
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: TimeCockpit.Data.QueryLanguage.Queryable.EntityQuery(Of T).Expression
- uid: TimeCockpit.Data.QueryLanguage.Queryable.EntityQuery`1.Provider
  commentId: P:TimeCockpit.Data.QueryLanguage.Queryable.EntityQuery`1.Provider
  id: Provider
  parent: TimeCockpit.Data.QueryLanguage.Queryable.EntityQuery`1
  langs:
  - csharp
  - vb
  name: Provider
  nameWithType: EntityQuery<T>.Provider
  fullName: TimeCockpit.Data.QueryLanguage.Queryable.EntityQuery<T>.Provider
  type: Property
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/QueryLanguage/Queryable/EntityQuery.cs
    id: Provider
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/QueryLanguage/Queryable/EntityQuery.cs
    startLine: 71
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.QueryLanguage.Queryable
  summary: "\nGets the query provider.\n"
  example: []
  syntax:
    content: public IQueryProvider Provider { get; }
    parameters: []
    return:
      type: System.Linq.IQueryProvider
    content.vb: Public ReadOnly Property Provider As IQueryProvider
  overload: TimeCockpit.Data.QueryLanguage.Queryable.EntityQuery`1.Provider*
  implements:
  - System.Linq.IQueryable.Provider
  nameWithType.vb: EntityQuery(Of T).Provider
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: TimeCockpit.Data.QueryLanguage.Queryable.EntityQuery(Of T).Provider
- uid: TimeCockpit.Data.QueryLanguage.Queryable.EntityQuery`1.GetEnumerator
  commentId: M:TimeCockpit.Data.QueryLanguage.Queryable.EntityQuery`1.GetEnumerator
  id: GetEnumerator
  parent: TimeCockpit.Data.QueryLanguage.Queryable.EntityQuery`1
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: EntityQuery<T>.GetEnumerator()
  fullName: TimeCockpit.Data.QueryLanguage.Queryable.EntityQuery<T>.GetEnumerator()
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/QueryLanguage/Queryable/EntityQuery.cs
    id: GetEnumerator
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/QueryLanguage/Queryable/EntityQuery.cs
    startLine: 80
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.QueryLanguage.Queryable
  summary: "\nGets the enumerator.\n"
  example: []
  syntax:
    content: public IEnumerator GetEnumerator()
    return:
      type: System.Collections.IEnumerator
      description: Returns an enumerator producing the result.
    content.vb: Public Function GetEnumerator As IEnumerator
  overload: TimeCockpit.Data.QueryLanguage.Queryable.EntityQuery`1.GetEnumerator*
  implements:
  - System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: EntityQuery(Of T).GetEnumerator()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TimeCockpit.Data.QueryLanguage.Queryable.EntityQuery(Of T).GetEnumerator()
- uid: TimeCockpit.Data.QueryLanguage.Queryable.EntityQuery`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator
  commentId: M:TimeCockpit.Data.QueryLanguage.Queryable.EntityQuery`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator
  id: System#Collections#Generic#IEnumerable{T}#GetEnumerator
  isEii: true
  parent: TimeCockpit.Data.QueryLanguage.Queryable.EntityQuery`1
  langs:
  - csharp
  - vb
  name: IEnumerable<T>.GetEnumerator()
  nameWithType: EntityQuery<T>.IEnumerable<T>.GetEnumerator()
  fullName: TimeCockpit.Data.QueryLanguage.Queryable.EntityQuery<T>.System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/QueryLanguage/Queryable/EntityQuery.cs
    id: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/QueryLanguage/Queryable/EntityQuery.cs
    startLine: 89
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.QueryLanguage.Queryable
  summary: "\nGets the enumerator.\n"
  example: []
  syntax:
    content: IEnumerator<T> IEnumerable<T>.GetEnumerator()
    return:
      type: System.Collections.Generic.IEnumerator{{T}}
      description: Returns an enumerator producing the result.
    content.vb: Function System.Collections.Generic.IEnumerable<T>.GetEnumerator As IEnumerator(Of T) Implements IEnumerable(Of T).GetEnumerator
  overload: TimeCockpit.Data.QueryLanguage.Queryable.EntityQuery`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator*
  implements:
  - System.Collections.Generic.IEnumerable{{T}}.GetEnumerator
  nameWithType.vb: EntityQuery(Of T).System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  fullName.vb: TimeCockpit.Data.QueryLanguage.Queryable.EntityQuery(Of T).System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  name.vb: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
references:
- uid: TimeCockpit.Data.QueryLanguage.Queryable
  commentId: N:TimeCockpit.Data.QueryLanguage.Queryable
  isExternal: false
  name: TimeCockpit.Data.QueryLanguage.Queryable
  nameWithType: TimeCockpit.Data.QueryLanguage.Queryable
  fullName: TimeCockpit.Data.QueryLanguage.Queryable
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Linq.IOrderedQueryable{{T}}
  commentId: T:System.Linq.IOrderedQueryable{`0}
  parent: System.Linq
  definition: System.Linq.IOrderedQueryable`1
  name: IOrderedQueryable<T>
  nameWithType: IOrderedQueryable<T>
  fullName: System.Linq.IOrderedQueryable<T>
  nameWithType.vb: IOrderedQueryable(Of T)
  fullName.vb: System.Linq.IOrderedQueryable(Of T)
  name.vb: IOrderedQueryable(Of T)
  spec.csharp:
  - uid: System.Linq.IOrderedQueryable`1
    name: IOrderedQueryable
    nameWithType: IOrderedQueryable
    fullName: System.Linq.IOrderedQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.IOrderedQueryable`1
    name: IOrderedQueryable
    nameWithType: IOrderedQueryable
    fullName: System.Linq.IOrderedQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.IQueryable{{T}}
  commentId: T:System.Linq.IQueryable{`0}
  parent: System.Linq
  definition: System.Linq.IQueryable`1
  name: IQueryable<T>
  nameWithType: IQueryable<T>
  fullName: System.Linq.IQueryable<T>
  nameWithType.vb: IQueryable(Of T)
  fullName.vb: System.Linq.IQueryable(Of T)
  name.vb: IQueryable(Of T)
  spec.csharp:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{{T}}
  commentId: T:System.Collections.Generic.IEnumerable{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.IOrderedQueryable
  commentId: T:System.Linq.IOrderedQueryable
  parent: System.Linq
  isExternal: true
  name: IOrderedQueryable
  nameWithType: IOrderedQueryable
  fullName: System.Linq.IOrderedQueryable
- uid: System.Linq.IQueryable
  commentId: T:System.Linq.IQueryable
  parent: System.Linq
  isExternal: true
  name: IQueryable
  nameWithType: IQueryable
  fullName: System.Linq.IQueryable
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Linq.IOrderedQueryable`1
  commentId: T:System.Linq.IOrderedQueryable`1
  isExternal: true
  name: IOrderedQueryable<T>
  nameWithType: IOrderedQueryable<T>
  fullName: System.Linq.IOrderedQueryable<T>
  nameWithType.vb: IOrderedQueryable(Of T)
  fullName.vb: System.Linq.IOrderedQueryable(Of T)
  name.vb: IOrderedQueryable(Of T)
  spec.csharp:
  - uid: System.Linq.IOrderedQueryable`1
    name: IOrderedQueryable
    nameWithType: IOrderedQueryable
    fullName: System.Linq.IOrderedQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.IOrderedQueryable`1
    name: IOrderedQueryable
    nameWithType: IOrderedQueryable
    fullName: System.Linq.IOrderedQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq
  commentId: N:System.Linq
  isExternal: false
  name: System.Linq
  nameWithType: System.Linq
  fullName: System.Linq
- uid: System.Linq.IQueryable`1
  commentId: T:System.Linq.IQueryable`1
  isExternal: true
  name: IQueryable<T>
  nameWithType: IQueryable<T>
  fullName: System.Linq.IQueryable<T>
  nameWithType.vb: IQueryable(Of T)
  fullName.vb: System.Linq.IQueryable(Of T)
  name.vb: IQueryable(Of T)
  spec.csharp:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: false
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: TimeCockpit.Data.QueryLanguage.Queryable.EntityQuery`1
  commentId: T:TimeCockpit.Data.QueryLanguage.Queryable.EntityQuery`1
  isExternal: false
  name: EntityQuery<T>
  nameWithType: EntityQuery<T>
  fullName: TimeCockpit.Data.QueryLanguage.Queryable.EntityQuery<T>
  nameWithType.vb: EntityQuery(Of T)
  fullName.vb: TimeCockpit.Data.QueryLanguage.Queryable.EntityQuery(Of T)
  name.vb: EntityQuery(Of T)
  spec.csharp:
  - uid: TimeCockpit.Data.QueryLanguage.Queryable.EntityQuery`1
    name: EntityQuery
    nameWithType: EntityQuery
    fullName: TimeCockpit.Data.QueryLanguage.Queryable.EntityQuery
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: TimeCockpit.Data.QueryLanguage.Queryable.EntityQuery`1
    name: EntityQuery
    nameWithType: EntityQuery
    fullName: TimeCockpit.Data.QueryLanguage.Queryable.EntityQuery
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.QueryLanguage.Queryable.EntityQuery`1.#ctor*
  commentId: Overload:TimeCockpit.Data.QueryLanguage.Queryable.EntityQuery`1.#ctor
  isExternal: false
  name: EntityQuery
  nameWithType: EntityQuery<T>.EntityQuery
  fullName: TimeCockpit.Data.QueryLanguage.Queryable.EntityQuery<T>.EntityQuery
  nameWithType.vb: EntityQuery(Of T).EntityQuery
  fullName.vb: TimeCockpit.Data.QueryLanguage.Queryable.EntityQuery(Of T).EntityQuery
- uid: TimeCockpit.Data.QueryLanguage.Queryable.EntityQueryProvider
  commentId: T:TimeCockpit.Data.QueryLanguage.Queryable.EntityQueryProvider
  parent: TimeCockpit.Data.QueryLanguage.Queryable
  isExternal: false
  name: EntityQueryProvider
  nameWithType: EntityQueryProvider
  fullName: TimeCockpit.Data.QueryLanguage.Queryable.EntityQueryProvider
- uid: System.Linq.Expressions.Expression
  commentId: T:System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: true
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions
  commentId: N:System.Linq.Expressions
  isExternal: false
  name: System.Linq.Expressions
  nameWithType: System.Linq.Expressions
  fullName: System.Linq.Expressions
- uid: TimeCockpit.Data.QueryLanguage.Queryable.EntityQuery`1.ElementType*
  commentId: Overload:TimeCockpit.Data.QueryLanguage.Queryable.EntityQuery`1.ElementType
  isExternal: false
  name: ElementType
  nameWithType: EntityQuery<T>.ElementType
  fullName: TimeCockpit.Data.QueryLanguage.Queryable.EntityQuery<T>.ElementType
  nameWithType.vb: EntityQuery(Of T).ElementType
  fullName.vb: TimeCockpit.Data.QueryLanguage.Queryable.EntityQuery(Of T).ElementType
- uid: System.Linq.IQueryable.ElementType
  commentId: P:System.Linq.IQueryable.ElementType
  parent: System.Linq.IQueryable
  isExternal: true
  name: ElementType
  nameWithType: IQueryable.ElementType
  fullName: System.Linq.IQueryable.ElementType
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: TimeCockpit.Data.QueryLanguage.Queryable.EntityQuery`1.Expression*
  commentId: Overload:TimeCockpit.Data.QueryLanguage.Queryable.EntityQuery`1.Expression
  isExternal: false
  name: Expression
  nameWithType: EntityQuery<T>.Expression
  fullName: TimeCockpit.Data.QueryLanguage.Queryable.EntityQuery<T>.Expression
  nameWithType.vb: EntityQuery(Of T).Expression
  fullName.vb: TimeCockpit.Data.QueryLanguage.Queryable.EntityQuery(Of T).Expression
- uid: System.Linq.IQueryable.Expression
  commentId: P:System.Linq.IQueryable.Expression
  parent: System.Linq.IQueryable
  isExternal: true
  name: Expression
  nameWithType: IQueryable.Expression
  fullName: System.Linq.IQueryable.Expression
- uid: TimeCockpit.Data.QueryLanguage.Queryable.EntityQuery`1.Provider*
  commentId: Overload:TimeCockpit.Data.QueryLanguage.Queryable.EntityQuery`1.Provider
  isExternal: false
  name: Provider
  nameWithType: EntityQuery<T>.Provider
  fullName: TimeCockpit.Data.QueryLanguage.Queryable.EntityQuery<T>.Provider
  nameWithType.vb: EntityQuery(Of T).Provider
  fullName.vb: TimeCockpit.Data.QueryLanguage.Queryable.EntityQuery(Of T).Provider
- uid: System.Linq.IQueryable.Provider
  commentId: P:System.Linq.IQueryable.Provider
  parent: System.Linq.IQueryable
  isExternal: true
  name: Provider
  nameWithType: IQueryable.Provider
  fullName: System.Linq.IQueryable.Provider
- uid: System.Linq.IQueryProvider
  commentId: T:System.Linq.IQueryProvider
  parent: System.Linq
  isExternal: true
  name: IQueryProvider
  nameWithType: IQueryProvider
  fullName: System.Linq.IQueryProvider
- uid: TimeCockpit.Data.QueryLanguage.Queryable.EntityQuery`1.GetEnumerator*
  commentId: Overload:TimeCockpit.Data.QueryLanguage.Queryable.EntityQuery`1.GetEnumerator
  isExternal: false
  name: GetEnumerator
  nameWithType: EntityQuery<T>.GetEnumerator
  fullName: TimeCockpit.Data.QueryLanguage.Queryable.EntityQuery<T>.GetEnumerator
  nameWithType.vb: EntityQuery(Of T).GetEnumerator
  fullName.vb: TimeCockpit.Data.QueryLanguage.Queryable.EntityQuery(Of T).GetEnumerator
- uid: System.Collections.IEnumerable.GetEnumerator
  commentId: M:System.Collections.IEnumerable.GetEnumerator
  parent: System.Collections.IEnumerable
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable.GetEnumerator()
  fullName: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerator
  commentId: T:System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: TimeCockpit.Data.QueryLanguage.Queryable.EntityQuery`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator*
  commentId: Overload:TimeCockpit.Data.QueryLanguage.Queryable.EntityQuery`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator
  isExternal: false
  name: IEnumerable<T>.GetEnumerator
  nameWithType: EntityQuery<T>.IEnumerable<T>.GetEnumerator
  fullName: TimeCockpit.Data.QueryLanguage.Queryable.EntityQuery<T>.System.Collections.Generic.IEnumerable<T>.GetEnumerator
  nameWithType.vb: EntityQuery(Of T).System.Collections.Generic.IEnumerable<T>.GetEnumerator
  fullName.vb: TimeCockpit.Data.QueryLanguage.Queryable.EntityQuery(Of T).System.Collections.Generic.IEnumerable<T>.GetEnumerator
  name.vb: System.Collections.Generic.IEnumerable<T>.GetEnumerator
- uid: System.Collections.Generic.IEnumerable{{T}}.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable{`0}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{{T}}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of T).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator{{T}}
  commentId: T:System.Collections.Generic.IEnumerator{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of T).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
