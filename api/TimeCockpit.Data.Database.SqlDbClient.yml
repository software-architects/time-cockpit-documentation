### YamlMime:ManagedReference
items:
- uid: TimeCockpit.Data.Database.SqlDbClient
  commentId: T:TimeCockpit.Data.Database.SqlDbClient
  id: SqlDbClient
  parent: TimeCockpit.Data.Database
  children:
  - TimeCockpit.Data.Database.SqlDbClient.DeleteBlobGarbage(System.Data.Common.DbConnection,System.Collections.Generic.IEnumerable{TimeCockpit.Data.Database.BlobGarbageRow})
  - TimeCockpit.Data.Database.SqlDbClient.ExecuteDatabaseOperation(System.Func{System.Data.Common.DbConnection,System.UInt64,System.Data.Common.DbCommand},System.Boolean)
  - TimeCockpit.Data.Database.SqlDbClient.FindOrCreateCommand(System.String,System.Data.Common.DbConnection)
  - TimeCockpit.Data.Database.SqlDbClient.FinishCommand(System.Data.Common.DbCommand)
  - TimeCockpit.Data.Database.SqlDbClient.OpenConnectionAsync(System.Threading.CancellationToken)
  - TimeCockpit.Data.Database.SqlDbClient.SupportsNoCheckConstraint
  - TimeCockpit.Data.Database.SqlDbClient.SupportsTableValuedParameters
  langs:
  - csharp
  - vb
  name: SqlDbClient
  nameWithType: SqlDbClient
  fullName: TimeCockpit.Data.Database.SqlDbClient
  type: Class
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/SqlDbClient.cs
    id: SqlDbClient
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/SqlDbClient.cs
    startLine: 26
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Database
  summary: "\nProvides the database client class for SQL Server\n"
  example: []
  syntax:
    content: 'public sealed class SqlDbClient : DbClient, IDisposable'
    content.vb: >-
      Public NotInheritable Class SqlDbClient
          Inherits DbClient
          Implements IDisposable
  inheritance:
  - System.Object
  - TimeCockpit.Data.Database.DbClient
  implements:
  - System.IDisposable
  inheritedMembers:
  - TimeCockpit.Data.Database.DbClient.AddSqlParameters(System.Collections.Generic.IEnumerable{TimeCockpit.Data.QueryLanguage.QueryParameter},System.Data.Common.DbCommand)
  - TimeCockpit.Data.Database.DbClient.BlobGarbageCleanupFinished
  - TimeCockpit.Data.Database.DbClient.TenantSchema
  - TimeCockpit.Data.Database.DbClient.DatabaseConnectionMode
  - TimeCockpit.Data.Database.DbClient.TransactionCount
  - TimeCockpit.Data.Database.DbClient.ConnectionName
  - TimeCockpit.Data.Database.DbClient.BlobEncryptionKey
  - TimeCockpit.Data.Database.DbClient.UserAccountId
  - TimeCockpit.Data.Database.DbClient.CurrentTransaction
  - TimeCockpit.Data.Database.DbClient.SkipBlobGarbageCollection
  - TimeCockpit.Data.Database.DbClient.DbConnectionLockObject
  - TimeCockpit.Data.Database.DbClient.Create(TimeCockpit.Data.Database.DbClientSettings)
  - TimeCockpit.Data.Database.DbClient.ExecuteOperation(TimeCockpit.Data.DataModel.Operation,System.Nullable{System.Guid})
  - TimeCockpit.Data.Database.DbClient.Dispose
  - TimeCockpit.Data.Database.DbClient.BeginTransaction
  - TimeCockpit.Data.Database.DbClient.CommitTransaction
  - TimeCockpit.Data.Database.DbClient.RollbackTransaction
  - TimeCockpit.Data.Database.DbClient.TryCommitTransaction
  - TimeCockpit.Data.Database.DbClient.TryRollbackTransaction
  - TimeCockpit.Data.Database.DbClient.GetConnection
  - TimeCockpit.Data.Database.DbClient.CreateAndOpenConnection
  - TimeCockpit.Data.Database.DbClient.ReleaseConnection(System.Boolean)
  - TimeCockpit.Data.Database.DbClient.GetConnectionString(TimeCockpit.Data.Database.DbClientSettings)
  - TimeCockpit.Data.Database.DbClient.GetDataAdapter
  - TimeCockpit.Data.Database.DbClient.SplitAndExecuteCommandsInTransaction(System.Data.Common.DbCommand)
  - TimeCockpit.Data.Database.DbClient.BeginTransactionInternal
  - TimeCockpit.Data.Database.DbClient.TryCommitTransactionInternal
  - TimeCockpit.Data.Database.DbClient.TryRollbackTransactionInternal
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: TimeCockpit.Data.Database.SqlDbClient.SupportsTableValuedParameters
  commentId: P:TimeCockpit.Data.Database.SqlDbClient.SupportsTableValuedParameters
  id: SupportsTableValuedParameters
  parent: TimeCockpit.Data.Database.SqlDbClient
  langs:
  - csharp
  - vb
  name: SupportsTableValuedParameters
  nameWithType: SqlDbClient.SupportsTableValuedParameters
  fullName: TimeCockpit.Data.Database.SqlDbClient.SupportsTableValuedParameters
  type: Property
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/SqlDbClient.cs
    id: SupportsTableValuedParameters
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/SqlDbClient.cs
    startLine: 43
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Database
  summary: "\nGets a value indicating whether this db client supports TVPs.\n"
  example: []
  syntax:
    content: public override bool SupportsTableValuedParameters { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overrides ReadOnly Property SupportsTableValuedParameters As Boolean
  overridden: TimeCockpit.Data.Database.DbClient.SupportsTableValuedParameters
  overload: TimeCockpit.Data.Database.SqlDbClient.SupportsTableValuedParameters*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: TimeCockpit.Data.Database.SqlDbClient.SupportsNoCheckConstraint
  commentId: P:TimeCockpit.Data.Database.SqlDbClient.SupportsNoCheckConstraint
  id: SupportsNoCheckConstraint
  parent: TimeCockpit.Data.Database.SqlDbClient
  langs:
  - csharp
  - vb
  name: SupportsNoCheckConstraint
  nameWithType: SqlDbClient.SupportsNoCheckConstraint
  fullName: TimeCockpit.Data.Database.SqlDbClient.SupportsNoCheckConstraint
  type: Property
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/SqlDbClient.cs
    id: SupportsNoCheckConstraint
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/SqlDbClient.cs
    startLine: 49
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Database
  summary: "\nGets a value indicating whether this db client supports disabling constraints.\n"
  example: []
  syntax:
    content: public override bool SupportsNoCheckConstraint { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overrides ReadOnly Property SupportsNoCheckConstraint As Boolean
  overridden: TimeCockpit.Data.Database.DbClient.SupportsNoCheckConstraint
  overload: TimeCockpit.Data.Database.SqlDbClient.SupportsNoCheckConstraint*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: TimeCockpit.Data.Database.SqlDbClient.OpenConnectionAsync(System.Threading.CancellationToken)
  commentId: M:TimeCockpit.Data.Database.SqlDbClient.OpenConnectionAsync(System.Threading.CancellationToken)
  id: OpenConnectionAsync(System.Threading.CancellationToken)
  parent: TimeCockpit.Data.Database.SqlDbClient
  langs:
  - csharp
  - vb
  name: OpenConnectionAsync(CancellationToken)
  nameWithType: SqlDbClient.OpenConnectionAsync(CancellationToken)
  fullName: TimeCockpit.Data.Database.SqlDbClient.OpenConnectionAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/SqlDbClient.cs
    id: OpenConnectionAsync
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/SqlDbClient.cs
    startLine: 87
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Database
  summary: "\nOpens a new connection.\n"
  example: []
  syntax:
    content: protected override Task<DbConnection> OpenConnectionAsync(CancellationToken cancellationToken)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    return:
      type: System.Threading.Tasks.Task{System.Data.Common.DbConnection}
      description: Returns the newly opened connection.
    content.vb: Protected Overrides Function OpenConnectionAsync(cancellationToken As CancellationToken) As Task(Of DbConnection)
  overridden: TimeCockpit.Data.Database.DbClient.OpenConnectionAsync(System.Threading.CancellationToken)
  overload: TimeCockpit.Data.Database.SqlDbClient.OpenConnectionAsync*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: TimeCockpit.Data.Database.SqlDbClient.ExecuteDatabaseOperation(System.Func{System.Data.Common.DbConnection,System.UInt64,System.Data.Common.DbCommand},System.Boolean)
  commentId: M:TimeCockpit.Data.Database.SqlDbClient.ExecuteDatabaseOperation(System.Func{System.Data.Common.DbConnection,System.UInt64,System.Data.Common.DbCommand},System.Boolean)
  id: ExecuteDatabaseOperation(System.Func{System.Data.Common.DbConnection,System.UInt64,System.Data.Common.DbCommand},System.Boolean)
  parent: TimeCockpit.Data.Database.SqlDbClient
  langs:
  - csharp
  - vb
  name: ExecuteDatabaseOperation(Func<DbConnection, UInt64, DbCommand>, Boolean)
  nameWithType: SqlDbClient.ExecuteDatabaseOperation(Func<DbConnection, UInt64, DbCommand>, Boolean)
  fullName: TimeCockpit.Data.Database.SqlDbClient.ExecuteDatabaseOperation(System.Func<System.Data.Common.DbConnection, System.UInt64, System.Data.Common.DbCommand>, System.Boolean)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/SqlDbClient.cs
    id: ExecuteDatabaseOperation
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/SqlDbClient.cs
    startLine: 101
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Database
  summary: "\nExecutes a database operation.\n"
  example: []
  syntax:
    content: >-
      [CLSCompliant(false)]

      protected override ulong ExecuteDatabaseOperation(Func<DbConnection, ulong, DbCommand> commandCreator, bool syncContent)
    parameters:
    - id: commandCreator
      type: System.Func{System.Data.Common.DbConnection,System.UInt64,System.Data.Common.DbCommand}
      description: Function that is used to create the database command object.
    - id: syncContent
      type: System.Boolean
      description: Indicates how and if the <xref href="TimeCockpit.Data.DataModel.ModelElement" data-throw-if-not-resolved="false"></xref> that is targeted is synced.
    return:
      type: System.UInt64
      description: Version of the database operation
    content.vb: >-
      <CLSCompliant(False)>

      Protected Overrides Function ExecuteDatabaseOperation(commandCreator As Func(Of DbConnection, ULong, DbCommand), syncContent As Boolean) As ULong
  overridden: TimeCockpit.Data.Database.DbClient.ExecuteDatabaseOperation(System.Func{System.Data.Common.DbConnection,System.UInt64,System.Data.Common.DbCommand},System.Boolean)
  overload: TimeCockpit.Data.Database.SqlDbClient.ExecuteDatabaseOperation*
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  nameWithType.vb: SqlDbClient.ExecuteDatabaseOperation(Func(Of DbConnection, UInt64, DbCommand), Boolean)
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: TimeCockpit.Data.Database.SqlDbClient.ExecuteDatabaseOperation(System.Func(Of System.Data.Common.DbConnection, System.UInt64, System.Data.Common.DbCommand), System.Boolean)
  name.vb: ExecuteDatabaseOperation(Func(Of DbConnection, UInt64, DbCommand), Boolean)
- uid: TimeCockpit.Data.Database.SqlDbClient.DeleteBlobGarbage(System.Data.Common.DbConnection,System.Collections.Generic.IEnumerable{TimeCockpit.Data.Database.BlobGarbageRow})
  commentId: M:TimeCockpit.Data.Database.SqlDbClient.DeleteBlobGarbage(System.Data.Common.DbConnection,System.Collections.Generic.IEnumerable{TimeCockpit.Data.Database.BlobGarbageRow})
  id: DeleteBlobGarbage(System.Data.Common.DbConnection,System.Collections.Generic.IEnumerable{TimeCockpit.Data.Database.BlobGarbageRow})
  parent: TimeCockpit.Data.Database.SqlDbClient
  langs:
  - csharp
  - vb
  name: DeleteBlobGarbage(DbConnection, IEnumerable<BlobGarbageRow>)
  nameWithType: SqlDbClient.DeleteBlobGarbage(DbConnection, IEnumerable<BlobGarbageRow>)
  fullName: TimeCockpit.Data.Database.SqlDbClient.DeleteBlobGarbage(System.Data.Common.DbConnection, System.Collections.Generic.IEnumerable<TimeCockpit.Data.Database.BlobGarbageRow>)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/SqlDbClient.cs
    id: DeleteBlobGarbage
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/SqlDbClient.cs
    startLine: 155
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Database
  summary: "\nDeletes rows from the blob garbage collection\n"
  example: []
  syntax:
    content: protected override void DeleteBlobGarbage(DbConnection conn, IEnumerable<BlobGarbageRow> blobGarbageCollection)
    parameters:
    - id: conn
      type: System.Data.Common.DbConnection
      description: Database connection used to access the database
    - id: blobGarbageCollection
      type: System.Collections.Generic.IEnumerable{TimeCockpit.Data.Database.BlobGarbageRow}
      description: Guids of the blob that should be deleted
    content.vb: Protected Overrides Sub DeleteBlobGarbage(conn As DbConnection, blobGarbageCollection As IEnumerable(Of BlobGarbageRow))
  overridden: TimeCockpit.Data.Database.DbClient.DeleteBlobGarbage(System.Data.Common.DbConnection,System.Collections.Generic.IEnumerable{TimeCockpit.Data.Database.BlobGarbageRow})
  overload: TimeCockpit.Data.Database.SqlDbClient.DeleteBlobGarbage*
  nameWithType.vb: SqlDbClient.DeleteBlobGarbage(DbConnection, IEnumerable(Of BlobGarbageRow))
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: TimeCockpit.Data.Database.SqlDbClient.DeleteBlobGarbage(System.Data.Common.DbConnection, System.Collections.Generic.IEnumerable(Of TimeCockpit.Data.Database.BlobGarbageRow))
  name.vb: DeleteBlobGarbage(DbConnection, IEnumerable(Of BlobGarbageRow))
- uid: TimeCockpit.Data.Database.SqlDbClient.FindOrCreateCommand(System.String,System.Data.Common.DbConnection)
  commentId: M:TimeCockpit.Data.Database.SqlDbClient.FindOrCreateCommand(System.String,System.Data.Common.DbConnection)
  id: FindOrCreateCommand(System.String,System.Data.Common.DbConnection)
  parent: TimeCockpit.Data.Database.SqlDbClient
  langs:
  - csharp
  - vb
  name: FindOrCreateCommand(String, DbConnection)
  nameWithType: SqlDbClient.FindOrCreateCommand(String, DbConnection)
  fullName: TimeCockpit.Data.Database.SqlDbClient.FindOrCreateCommand(System.String, System.Data.Common.DbConnection)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/SqlDbClient.cs
    id: FindOrCreateCommand
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/SqlDbClient.cs
    startLine: 187
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Database
  summary: "\nCreate DB command by looking it up in a cache of prepared commands or creating it.\n"
  remarks: Command caching for SQL server is disabled.
  example: []
  syntax:
    content: protected override DbCommand FindOrCreateCommand(string sqlText, DbConnection connection)
    parameters:
    - id: sqlText
      type: System.String
      description: The SQL command text; always a SELECT statement.
    - id: connection
      type: System.Data.Common.DbConnection
      description: The database connection on which the command will be executed.
    return:
      type: System.Data.Common.DbCommand
      description: DB command from the cache or newly created command.
    content.vb: Protected Overrides Function FindOrCreateCommand(sqlText As String, connection As DbConnection) As DbCommand
  overridden: TimeCockpit.Data.Database.DbClient.FindOrCreateCommand(System.String,System.Data.Common.DbConnection)
  overload: TimeCockpit.Data.Database.SqlDbClient.FindOrCreateCommand*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: TimeCockpit.Data.Database.SqlDbClient.FinishCommand(System.Data.Common.DbCommand)
  commentId: M:TimeCockpit.Data.Database.SqlDbClient.FinishCommand(System.Data.Common.DbCommand)
  id: FinishCommand(System.Data.Common.DbCommand)
  parent: TimeCockpit.Data.Database.SqlDbClient
  langs:
  - csharp
  - vb
  name: FinishCommand(DbCommand)
  nameWithType: SqlDbClient.FinishCommand(DbCommand)
  fullName: TimeCockpit.Data.Database.SqlDbClient.FinishCommand(System.Data.Common.DbCommand)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/SqlDbClient.cs
    id: FinishCommand
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/SqlDbClient.cs
    startLine: 198
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Database
  summary: "\nCalled after <xref href=\"TimeCockpit.Data.Database.DbClient\" data-throw-if-not-resolved=\"false\"></xref> is done with the <code data-dev-comment-type=\"paramref\" class=\"paramref\">command</code>.\n"
  remarks: The SQL Server does not cache commands -> command is immediately disposed.
  example: []
  syntax:
    content: protected override void FinishCommand(DbCommand command)
    parameters:
    - id: command
      type: System.Data.Common.DbCommand
      description: A command previously returned by <xref href="TimeCockpit.Data.Database.DbClient.FindOrCreateCommand(System.String%2cSystem.Data.Common.DbConnection)" data-throw-if-not-resolved="false"></xref>.
    content.vb: Protected Overrides Sub FinishCommand(command As DbCommand)
  overridden: TimeCockpit.Data.Database.DbClient.FinishCommand(System.Data.Common.DbCommand)
  overload: TimeCockpit.Data.Database.SqlDbClient.FinishCommand*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: TimeCockpit.Data.Database
  commentId: N:TimeCockpit.Data.Database
  isExternal: false
  name: TimeCockpit.Data.Database
  nameWithType: TimeCockpit.Data.Database
  fullName: TimeCockpit.Data.Database
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: TimeCockpit.Data.Database.DbClient
  commentId: T:TimeCockpit.Data.Database.DbClient
  parent: TimeCockpit.Data.Database
  isExternal: false
  name: DbClient
  nameWithType: DbClient
  fullName: TimeCockpit.Data.Database.DbClient
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: TimeCockpit.Data.Database.DbClient.AddSqlParameters(System.Collections.Generic.IEnumerable{TimeCockpit.Data.QueryLanguage.QueryParameter},System.Data.Common.DbCommand)
  commentId: M:TimeCockpit.Data.Database.DbClient.AddSqlParameters(System.Collections.Generic.IEnumerable{TimeCockpit.Data.QueryLanguage.QueryParameter},System.Data.Common.DbCommand)
  parent: TimeCockpit.Data.Database.DbClient
  isExternal: true
  name: AddSqlParameters(IEnumerable<QueryParameter>, DbCommand)
  nameWithType: DbClient.AddSqlParameters(IEnumerable<QueryParameter>, DbCommand)
  fullName: TimeCockpit.Data.Database.DbClient.AddSqlParameters(System.Collections.Generic.IEnumerable<TimeCockpit.Data.QueryLanguage.QueryParameter>, System.Data.Common.DbCommand)
  nameWithType.vb: DbClient.AddSqlParameters(IEnumerable(Of QueryParameter), DbCommand)
  fullName.vb: TimeCockpit.Data.Database.DbClient.AddSqlParameters(System.Collections.Generic.IEnumerable(Of TimeCockpit.Data.QueryLanguage.QueryParameter), System.Data.Common.DbCommand)
  name.vb: AddSqlParameters(IEnumerable(Of QueryParameter), DbCommand)
  spec.csharp:
  - uid: TimeCockpit.Data.Database.DbClient.AddSqlParameters(System.Collections.Generic.IEnumerable{TimeCockpit.Data.QueryLanguage.QueryParameter},System.Data.Common.DbCommand)
    name: AddSqlParameters
    nameWithType: DbClient.AddSqlParameters
    fullName: TimeCockpit.Data.Database.DbClient.AddSqlParameters
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TimeCockpit.Data.QueryLanguage.QueryParameter
    name: QueryParameter
    nameWithType: QueryParameter
    fullName: TimeCockpit.Data.QueryLanguage.QueryParameter
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Data.Common.DbCommand
    name: DbCommand
    nameWithType: DbCommand
    fullName: System.Data.Common.DbCommand
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TimeCockpit.Data.Database.DbClient.AddSqlParameters(System.Collections.Generic.IEnumerable{TimeCockpit.Data.QueryLanguage.QueryParameter},System.Data.Common.DbCommand)
    name: AddSqlParameters
    nameWithType: DbClient.AddSqlParameters
    fullName: TimeCockpit.Data.Database.DbClient.AddSqlParameters
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TimeCockpit.Data.QueryLanguage.QueryParameter
    name: QueryParameter
    nameWithType: QueryParameter
    fullName: TimeCockpit.Data.QueryLanguage.QueryParameter
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Data.Common.DbCommand
    name: DbCommand
    nameWithType: DbCommand
    fullName: System.Data.Common.DbCommand
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.Database.DbClient.BlobGarbageCleanupFinished
  commentId: E:TimeCockpit.Data.Database.DbClient.BlobGarbageCleanupFinished
  parent: TimeCockpit.Data.Database.DbClient
  isExternal: false
  name: BlobGarbageCleanupFinished
  nameWithType: DbClient.BlobGarbageCleanupFinished
  fullName: TimeCockpit.Data.Database.DbClient.BlobGarbageCleanupFinished
- uid: TimeCockpit.Data.Database.DbClient.TenantSchema
  commentId: P:TimeCockpit.Data.Database.DbClient.TenantSchema
  parent: TimeCockpit.Data.Database.DbClient
  isExternal: false
  name: TenantSchema
  nameWithType: DbClient.TenantSchema
  fullName: TimeCockpit.Data.Database.DbClient.TenantSchema
- uid: TimeCockpit.Data.Database.DbClient.DatabaseConnectionMode
  commentId: P:TimeCockpit.Data.Database.DbClient.DatabaseConnectionMode
  parent: TimeCockpit.Data.Database.DbClient
  isExternal: false
  name: DatabaseConnectionMode
  nameWithType: DbClient.DatabaseConnectionMode
  fullName: TimeCockpit.Data.Database.DbClient.DatabaseConnectionMode
- uid: TimeCockpit.Data.Database.DbClient.TransactionCount
  commentId: P:TimeCockpit.Data.Database.DbClient.TransactionCount
  parent: TimeCockpit.Data.Database.DbClient
  isExternal: false
  name: TransactionCount
  nameWithType: DbClient.TransactionCount
  fullName: TimeCockpit.Data.Database.DbClient.TransactionCount
- uid: TimeCockpit.Data.Database.DbClient.ConnectionName
  commentId: P:TimeCockpit.Data.Database.DbClient.ConnectionName
  parent: TimeCockpit.Data.Database.DbClient
  isExternal: false
  name: ConnectionName
  nameWithType: DbClient.ConnectionName
  fullName: TimeCockpit.Data.Database.DbClient.ConnectionName
- uid: TimeCockpit.Data.Database.DbClient.BlobEncryptionKey
  commentId: P:TimeCockpit.Data.Database.DbClient.BlobEncryptionKey
  parent: TimeCockpit.Data.Database.DbClient
  isExternal: false
  name: BlobEncryptionKey
  nameWithType: DbClient.BlobEncryptionKey
  fullName: TimeCockpit.Data.Database.DbClient.BlobEncryptionKey
- uid: TimeCockpit.Data.Database.DbClient.UserAccountId
  commentId: P:TimeCockpit.Data.Database.DbClient.UserAccountId
  parent: TimeCockpit.Data.Database.DbClient
  isExternal: false
  name: UserAccountId
  nameWithType: DbClient.UserAccountId
  fullName: TimeCockpit.Data.Database.DbClient.UserAccountId
- uid: TimeCockpit.Data.Database.DbClient.CurrentTransaction
  commentId: P:TimeCockpit.Data.Database.DbClient.CurrentTransaction
  parent: TimeCockpit.Data.Database.DbClient
  isExternal: false
  name: CurrentTransaction
  nameWithType: DbClient.CurrentTransaction
  fullName: TimeCockpit.Data.Database.DbClient.CurrentTransaction
- uid: TimeCockpit.Data.Database.DbClient.SkipBlobGarbageCollection
  commentId: P:TimeCockpit.Data.Database.DbClient.SkipBlobGarbageCollection
  parent: TimeCockpit.Data.Database.DbClient
  isExternal: false
  name: SkipBlobGarbageCollection
  nameWithType: DbClient.SkipBlobGarbageCollection
  fullName: TimeCockpit.Data.Database.DbClient.SkipBlobGarbageCollection
- uid: TimeCockpit.Data.Database.DbClient.DbConnectionLockObject
  commentId: P:TimeCockpit.Data.Database.DbClient.DbConnectionLockObject
  parent: TimeCockpit.Data.Database.DbClient
  isExternal: false
  name: DbConnectionLockObject
  nameWithType: DbClient.DbConnectionLockObject
  fullName: TimeCockpit.Data.Database.DbClient.DbConnectionLockObject
- uid: TimeCockpit.Data.Database.DbClient.Create(TimeCockpit.Data.Database.DbClientSettings)
  commentId: M:TimeCockpit.Data.Database.DbClient.Create(TimeCockpit.Data.Database.DbClientSettings)
  parent: TimeCockpit.Data.Database.DbClient
  isExternal: false
  name: Create(DbClientSettings)
  nameWithType: DbClient.Create(DbClientSettings)
  fullName: TimeCockpit.Data.Database.DbClient.Create(TimeCockpit.Data.Database.DbClientSettings)
  spec.csharp:
  - uid: TimeCockpit.Data.Database.DbClient.Create(TimeCockpit.Data.Database.DbClientSettings)
    name: Create
    nameWithType: DbClient.Create
    fullName: TimeCockpit.Data.Database.DbClient.Create
  - name: (
    nameWithType: (
    fullName: (
  - uid: TimeCockpit.Data.Database.DbClientSettings
    name: DbClientSettings
    nameWithType: DbClientSettings
    fullName: TimeCockpit.Data.Database.DbClientSettings
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TimeCockpit.Data.Database.DbClient.Create(TimeCockpit.Data.Database.DbClientSettings)
    name: Create
    nameWithType: DbClient.Create
    fullName: TimeCockpit.Data.Database.DbClient.Create
  - name: (
    nameWithType: (
    fullName: (
  - uid: TimeCockpit.Data.Database.DbClientSettings
    name: DbClientSettings
    nameWithType: DbClientSettings
    fullName: TimeCockpit.Data.Database.DbClientSettings
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.Database.DbClient.ExecuteOperation(TimeCockpit.Data.DataModel.Operation,System.Nullable{System.Guid})
  commentId: M:TimeCockpit.Data.Database.DbClient.ExecuteOperation(TimeCockpit.Data.DataModel.Operation,System.Nullable{System.Guid})
  parent: TimeCockpit.Data.Database.DbClient
  isExternal: true
  name: ExecuteOperation(Operation, Nullable<Guid>)
  nameWithType: DbClient.ExecuteOperation(Operation, Nullable<Guid>)
  fullName: TimeCockpit.Data.Database.DbClient.ExecuteOperation(TimeCockpit.Data.DataModel.Operation, System.Nullable<System.Guid>)
  nameWithType.vb: DbClient.ExecuteOperation(Operation, Nullable(Of Guid))
  fullName.vb: TimeCockpit.Data.Database.DbClient.ExecuteOperation(TimeCockpit.Data.DataModel.Operation, System.Nullable(Of System.Guid))
  name.vb: ExecuteOperation(Operation, Nullable(Of Guid))
  spec.csharp:
  - uid: TimeCockpit.Data.Database.DbClient.ExecuteOperation(TimeCockpit.Data.DataModel.Operation,System.Nullable{System.Guid})
    name: ExecuteOperation
    nameWithType: DbClient.ExecuteOperation
    fullName: TimeCockpit.Data.Database.DbClient.ExecuteOperation
  - name: (
    nameWithType: (
    fullName: (
  - uid: TimeCockpit.Data.DataModel.Operation
    name: Operation
    nameWithType: Operation
    fullName: TimeCockpit.Data.DataModel.Operation
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TimeCockpit.Data.Database.DbClient.ExecuteOperation(TimeCockpit.Data.DataModel.Operation,System.Nullable{System.Guid})
    name: ExecuteOperation
    nameWithType: DbClient.ExecuteOperation
    fullName: TimeCockpit.Data.Database.DbClient.ExecuteOperation
  - name: (
    nameWithType: (
    fullName: (
  - uid: TimeCockpit.Data.DataModel.Operation
    name: Operation
    nameWithType: Operation
    fullName: TimeCockpit.Data.DataModel.Operation
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.Database.DbClient.Dispose
  commentId: M:TimeCockpit.Data.Database.DbClient.Dispose
  parent: TimeCockpit.Data.Database.DbClient
  isExternal: false
  name: Dispose()
  nameWithType: DbClient.Dispose()
  fullName: TimeCockpit.Data.Database.DbClient.Dispose()
  spec.csharp:
  - uid: TimeCockpit.Data.Database.DbClient.Dispose
    name: Dispose
    nameWithType: DbClient.Dispose
    fullName: TimeCockpit.Data.Database.DbClient.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TimeCockpit.Data.Database.DbClient.Dispose
    name: Dispose
    nameWithType: DbClient.Dispose
    fullName: TimeCockpit.Data.Database.DbClient.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.Database.DbClient.BeginTransaction
  commentId: M:TimeCockpit.Data.Database.DbClient.BeginTransaction
  parent: TimeCockpit.Data.Database.DbClient
  isExternal: false
  name: BeginTransaction()
  nameWithType: DbClient.BeginTransaction()
  fullName: TimeCockpit.Data.Database.DbClient.BeginTransaction()
  spec.csharp:
  - uid: TimeCockpit.Data.Database.DbClient.BeginTransaction
    name: BeginTransaction
    nameWithType: DbClient.BeginTransaction
    fullName: TimeCockpit.Data.Database.DbClient.BeginTransaction
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TimeCockpit.Data.Database.DbClient.BeginTransaction
    name: BeginTransaction
    nameWithType: DbClient.BeginTransaction
    fullName: TimeCockpit.Data.Database.DbClient.BeginTransaction
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.Database.DbClient.CommitTransaction
  commentId: M:TimeCockpit.Data.Database.DbClient.CommitTransaction
  parent: TimeCockpit.Data.Database.DbClient
  isExternal: false
  name: CommitTransaction()
  nameWithType: DbClient.CommitTransaction()
  fullName: TimeCockpit.Data.Database.DbClient.CommitTransaction()
  spec.csharp:
  - uid: TimeCockpit.Data.Database.DbClient.CommitTransaction
    name: CommitTransaction
    nameWithType: DbClient.CommitTransaction
    fullName: TimeCockpit.Data.Database.DbClient.CommitTransaction
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TimeCockpit.Data.Database.DbClient.CommitTransaction
    name: CommitTransaction
    nameWithType: DbClient.CommitTransaction
    fullName: TimeCockpit.Data.Database.DbClient.CommitTransaction
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.Database.DbClient.RollbackTransaction
  commentId: M:TimeCockpit.Data.Database.DbClient.RollbackTransaction
  parent: TimeCockpit.Data.Database.DbClient
  isExternal: false
  name: RollbackTransaction()
  nameWithType: DbClient.RollbackTransaction()
  fullName: TimeCockpit.Data.Database.DbClient.RollbackTransaction()
  spec.csharp:
  - uid: TimeCockpit.Data.Database.DbClient.RollbackTransaction
    name: RollbackTransaction
    nameWithType: DbClient.RollbackTransaction
    fullName: TimeCockpit.Data.Database.DbClient.RollbackTransaction
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TimeCockpit.Data.Database.DbClient.RollbackTransaction
    name: RollbackTransaction
    nameWithType: DbClient.RollbackTransaction
    fullName: TimeCockpit.Data.Database.DbClient.RollbackTransaction
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.Database.DbClient.TryCommitTransaction
  commentId: M:TimeCockpit.Data.Database.DbClient.TryCommitTransaction
  parent: TimeCockpit.Data.Database.DbClient
  isExternal: false
  name: TryCommitTransaction()
  nameWithType: DbClient.TryCommitTransaction()
  fullName: TimeCockpit.Data.Database.DbClient.TryCommitTransaction()
  spec.csharp:
  - uid: TimeCockpit.Data.Database.DbClient.TryCommitTransaction
    name: TryCommitTransaction
    nameWithType: DbClient.TryCommitTransaction
    fullName: TimeCockpit.Data.Database.DbClient.TryCommitTransaction
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TimeCockpit.Data.Database.DbClient.TryCommitTransaction
    name: TryCommitTransaction
    nameWithType: DbClient.TryCommitTransaction
    fullName: TimeCockpit.Data.Database.DbClient.TryCommitTransaction
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.Database.DbClient.TryRollbackTransaction
  commentId: M:TimeCockpit.Data.Database.DbClient.TryRollbackTransaction
  parent: TimeCockpit.Data.Database.DbClient
  isExternal: false
  name: TryRollbackTransaction()
  nameWithType: DbClient.TryRollbackTransaction()
  fullName: TimeCockpit.Data.Database.DbClient.TryRollbackTransaction()
  spec.csharp:
  - uid: TimeCockpit.Data.Database.DbClient.TryRollbackTransaction
    name: TryRollbackTransaction
    nameWithType: DbClient.TryRollbackTransaction
    fullName: TimeCockpit.Data.Database.DbClient.TryRollbackTransaction
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TimeCockpit.Data.Database.DbClient.TryRollbackTransaction
    name: TryRollbackTransaction
    nameWithType: DbClient.TryRollbackTransaction
    fullName: TimeCockpit.Data.Database.DbClient.TryRollbackTransaction
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.Database.DbClient.GetConnection
  commentId: M:TimeCockpit.Data.Database.DbClient.GetConnection
  parent: TimeCockpit.Data.Database.DbClient
  isExternal: false
  name: GetConnection()
  nameWithType: DbClient.GetConnection()
  fullName: TimeCockpit.Data.Database.DbClient.GetConnection()
  spec.csharp:
  - uid: TimeCockpit.Data.Database.DbClient.GetConnection
    name: GetConnection
    nameWithType: DbClient.GetConnection
    fullName: TimeCockpit.Data.Database.DbClient.GetConnection
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TimeCockpit.Data.Database.DbClient.GetConnection
    name: GetConnection
    nameWithType: DbClient.GetConnection
    fullName: TimeCockpit.Data.Database.DbClient.GetConnection
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.Database.DbClient.CreateAndOpenConnection
  commentId: M:TimeCockpit.Data.Database.DbClient.CreateAndOpenConnection
  parent: TimeCockpit.Data.Database.DbClient
  isExternal: false
  name: CreateAndOpenConnection()
  nameWithType: DbClient.CreateAndOpenConnection()
  fullName: TimeCockpit.Data.Database.DbClient.CreateAndOpenConnection()
  spec.csharp:
  - uid: TimeCockpit.Data.Database.DbClient.CreateAndOpenConnection
    name: CreateAndOpenConnection
    nameWithType: DbClient.CreateAndOpenConnection
    fullName: TimeCockpit.Data.Database.DbClient.CreateAndOpenConnection
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TimeCockpit.Data.Database.DbClient.CreateAndOpenConnection
    name: CreateAndOpenConnection
    nameWithType: DbClient.CreateAndOpenConnection
    fullName: TimeCockpit.Data.Database.DbClient.CreateAndOpenConnection
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.Database.DbClient.ReleaseConnection(System.Boolean)
  commentId: M:TimeCockpit.Data.Database.DbClient.ReleaseConnection(System.Boolean)
  parent: TimeCockpit.Data.Database.DbClient
  isExternal: true
  name: ReleaseConnection(Boolean)
  nameWithType: DbClient.ReleaseConnection(Boolean)
  fullName: TimeCockpit.Data.Database.DbClient.ReleaseConnection(System.Boolean)
  spec.csharp:
  - uid: TimeCockpit.Data.Database.DbClient.ReleaseConnection(System.Boolean)
    name: ReleaseConnection
    nameWithType: DbClient.ReleaseConnection
    fullName: TimeCockpit.Data.Database.DbClient.ReleaseConnection
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TimeCockpit.Data.Database.DbClient.ReleaseConnection(System.Boolean)
    name: ReleaseConnection
    nameWithType: DbClient.ReleaseConnection
    fullName: TimeCockpit.Data.Database.DbClient.ReleaseConnection
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.Database.DbClient.GetConnectionString(TimeCockpit.Data.Database.DbClientSettings)
  commentId: M:TimeCockpit.Data.Database.DbClient.GetConnectionString(TimeCockpit.Data.Database.DbClientSettings)
  parent: TimeCockpit.Data.Database.DbClient
  isExternal: false
  name: GetConnectionString(DbClientSettings)
  nameWithType: DbClient.GetConnectionString(DbClientSettings)
  fullName: TimeCockpit.Data.Database.DbClient.GetConnectionString(TimeCockpit.Data.Database.DbClientSettings)
  spec.csharp:
  - uid: TimeCockpit.Data.Database.DbClient.GetConnectionString(TimeCockpit.Data.Database.DbClientSettings)
    name: GetConnectionString
    nameWithType: DbClient.GetConnectionString
    fullName: TimeCockpit.Data.Database.DbClient.GetConnectionString
  - name: (
    nameWithType: (
    fullName: (
  - uid: TimeCockpit.Data.Database.DbClientSettings
    name: DbClientSettings
    nameWithType: DbClientSettings
    fullName: TimeCockpit.Data.Database.DbClientSettings
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TimeCockpit.Data.Database.DbClient.GetConnectionString(TimeCockpit.Data.Database.DbClientSettings)
    name: GetConnectionString
    nameWithType: DbClient.GetConnectionString
    fullName: TimeCockpit.Data.Database.DbClient.GetConnectionString
  - name: (
    nameWithType: (
    fullName: (
  - uid: TimeCockpit.Data.Database.DbClientSettings
    name: DbClientSettings
    nameWithType: DbClientSettings
    fullName: TimeCockpit.Data.Database.DbClientSettings
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.Database.DbClient.GetDataAdapter
  commentId: M:TimeCockpit.Data.Database.DbClient.GetDataAdapter
  parent: TimeCockpit.Data.Database.DbClient
  isExternal: false
  name: GetDataAdapter()
  nameWithType: DbClient.GetDataAdapter()
  fullName: TimeCockpit.Data.Database.DbClient.GetDataAdapter()
  spec.csharp:
  - uid: TimeCockpit.Data.Database.DbClient.GetDataAdapter
    name: GetDataAdapter
    nameWithType: DbClient.GetDataAdapter
    fullName: TimeCockpit.Data.Database.DbClient.GetDataAdapter
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TimeCockpit.Data.Database.DbClient.GetDataAdapter
    name: GetDataAdapter
    nameWithType: DbClient.GetDataAdapter
    fullName: TimeCockpit.Data.Database.DbClient.GetDataAdapter
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.Database.DbClient.SplitAndExecuteCommandsInTransaction(System.Data.Common.DbCommand)
  commentId: M:TimeCockpit.Data.Database.DbClient.SplitAndExecuteCommandsInTransaction(System.Data.Common.DbCommand)
  parent: TimeCockpit.Data.Database.DbClient
  isExternal: true
  name: SplitAndExecuteCommandsInTransaction(DbCommand)
  nameWithType: DbClient.SplitAndExecuteCommandsInTransaction(DbCommand)
  fullName: TimeCockpit.Data.Database.DbClient.SplitAndExecuteCommandsInTransaction(System.Data.Common.DbCommand)
  spec.csharp:
  - uid: TimeCockpit.Data.Database.DbClient.SplitAndExecuteCommandsInTransaction(System.Data.Common.DbCommand)
    name: SplitAndExecuteCommandsInTransaction
    nameWithType: DbClient.SplitAndExecuteCommandsInTransaction
    fullName: TimeCockpit.Data.Database.DbClient.SplitAndExecuteCommandsInTransaction
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Data.Common.DbCommand
    name: DbCommand
    nameWithType: DbCommand
    fullName: System.Data.Common.DbCommand
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TimeCockpit.Data.Database.DbClient.SplitAndExecuteCommandsInTransaction(System.Data.Common.DbCommand)
    name: SplitAndExecuteCommandsInTransaction
    nameWithType: DbClient.SplitAndExecuteCommandsInTransaction
    fullName: TimeCockpit.Data.Database.DbClient.SplitAndExecuteCommandsInTransaction
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Data.Common.DbCommand
    name: DbCommand
    nameWithType: DbCommand
    fullName: System.Data.Common.DbCommand
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.Database.DbClient.BeginTransactionInternal
  commentId: M:TimeCockpit.Data.Database.DbClient.BeginTransactionInternal
  parent: TimeCockpit.Data.Database.DbClient
  isExternal: false
  name: BeginTransactionInternal()
  nameWithType: DbClient.BeginTransactionInternal()
  fullName: TimeCockpit.Data.Database.DbClient.BeginTransactionInternal()
  spec.csharp:
  - uid: TimeCockpit.Data.Database.DbClient.BeginTransactionInternal
    name: BeginTransactionInternal
    nameWithType: DbClient.BeginTransactionInternal
    fullName: TimeCockpit.Data.Database.DbClient.BeginTransactionInternal
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TimeCockpit.Data.Database.DbClient.BeginTransactionInternal
    name: BeginTransactionInternal
    nameWithType: DbClient.BeginTransactionInternal
    fullName: TimeCockpit.Data.Database.DbClient.BeginTransactionInternal
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.Database.DbClient.TryCommitTransactionInternal
  commentId: M:TimeCockpit.Data.Database.DbClient.TryCommitTransactionInternal
  parent: TimeCockpit.Data.Database.DbClient
  isExternal: false
  name: TryCommitTransactionInternal()
  nameWithType: DbClient.TryCommitTransactionInternal()
  fullName: TimeCockpit.Data.Database.DbClient.TryCommitTransactionInternal()
  spec.csharp:
  - uid: TimeCockpit.Data.Database.DbClient.TryCommitTransactionInternal
    name: TryCommitTransactionInternal
    nameWithType: DbClient.TryCommitTransactionInternal
    fullName: TimeCockpit.Data.Database.DbClient.TryCommitTransactionInternal
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TimeCockpit.Data.Database.DbClient.TryCommitTransactionInternal
    name: TryCommitTransactionInternal
    nameWithType: DbClient.TryCommitTransactionInternal
    fullName: TimeCockpit.Data.Database.DbClient.TryCommitTransactionInternal
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.Database.DbClient.TryRollbackTransactionInternal
  commentId: M:TimeCockpit.Data.Database.DbClient.TryRollbackTransactionInternal
  parent: TimeCockpit.Data.Database.DbClient
  isExternal: false
  name: TryRollbackTransactionInternal()
  nameWithType: DbClient.TryRollbackTransactionInternal()
  fullName: TimeCockpit.Data.Database.DbClient.TryRollbackTransactionInternal()
  spec.csharp:
  - uid: TimeCockpit.Data.Database.DbClient.TryRollbackTransactionInternal
    name: TryRollbackTransactionInternal
    nameWithType: DbClient.TryRollbackTransactionInternal
    fullName: TimeCockpit.Data.Database.DbClient.TryRollbackTransactionInternal
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TimeCockpit.Data.Database.DbClient.TryRollbackTransactionInternal
    name: TryRollbackTransactionInternal
    nameWithType: DbClient.TryRollbackTransactionInternal
    fullName: TimeCockpit.Data.Database.DbClient.TryRollbackTransactionInternal
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: TimeCockpit.Data.Database.DbClient.SupportsTableValuedParameters
  commentId: P:TimeCockpit.Data.Database.DbClient.SupportsTableValuedParameters
  parent: TimeCockpit.Data.Database.DbClient
  isExternal: false
  name: SupportsTableValuedParameters
  nameWithType: DbClient.SupportsTableValuedParameters
  fullName: TimeCockpit.Data.Database.DbClient.SupportsTableValuedParameters
- uid: TimeCockpit.Data.Database.SqlDbClient.SupportsTableValuedParameters*
  commentId: Overload:TimeCockpit.Data.Database.SqlDbClient.SupportsTableValuedParameters
  isExternal: false
  name: SupportsTableValuedParameters
  nameWithType: SqlDbClient.SupportsTableValuedParameters
  fullName: TimeCockpit.Data.Database.SqlDbClient.SupportsTableValuedParameters
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: TimeCockpit.Data.Database.DbClient.SupportsNoCheckConstraint
  commentId: P:TimeCockpit.Data.Database.DbClient.SupportsNoCheckConstraint
  parent: TimeCockpit.Data.Database.DbClient
  isExternal: false
  name: SupportsNoCheckConstraint
  nameWithType: DbClient.SupportsNoCheckConstraint
  fullName: TimeCockpit.Data.Database.DbClient.SupportsNoCheckConstraint
- uid: TimeCockpit.Data.Database.SqlDbClient.SupportsNoCheckConstraint*
  commentId: Overload:TimeCockpit.Data.Database.SqlDbClient.SupportsNoCheckConstraint
  isExternal: false
  name: SupportsNoCheckConstraint
  nameWithType: SqlDbClient.SupportsNoCheckConstraint
  fullName: TimeCockpit.Data.Database.SqlDbClient.SupportsNoCheckConstraint
- uid: TimeCockpit.Data.Database.DbClient.OpenConnectionAsync(System.Threading.CancellationToken)
  commentId: M:TimeCockpit.Data.Database.DbClient.OpenConnectionAsync(System.Threading.CancellationToken)
  parent: TimeCockpit.Data.Database.DbClient
  isExternal: true
  name: OpenConnectionAsync(CancellationToken)
  nameWithType: DbClient.OpenConnectionAsync(CancellationToken)
  fullName: TimeCockpit.Data.Database.DbClient.OpenConnectionAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: TimeCockpit.Data.Database.DbClient.OpenConnectionAsync(System.Threading.CancellationToken)
    name: OpenConnectionAsync
    nameWithType: DbClient.OpenConnectionAsync
    fullName: TimeCockpit.Data.Database.DbClient.OpenConnectionAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TimeCockpit.Data.Database.DbClient.OpenConnectionAsync(System.Threading.CancellationToken)
    name: OpenConnectionAsync
    nameWithType: DbClient.OpenConnectionAsync
    fullName: TimeCockpit.Data.Database.DbClient.OpenConnectionAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.Database.SqlDbClient.OpenConnectionAsync*
  commentId: Overload:TimeCockpit.Data.Database.SqlDbClient.OpenConnectionAsync
  isExternal: false
  name: OpenConnectionAsync
  nameWithType: SqlDbClient.OpenConnectionAsync
  fullName: TimeCockpit.Data.Database.SqlDbClient.OpenConnectionAsync
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{System.Data.Common.DbConnection}
  commentId: T:System.Threading.Tasks.Task{System.Data.Common.DbConnection}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<DbConnection>
  nameWithType: Task<DbConnection>
  fullName: System.Threading.Tasks.Task<System.Data.Common.DbConnection>
  nameWithType.vb: Task(Of DbConnection)
  fullName.vb: System.Threading.Tasks.Task(Of System.Data.Common.DbConnection)
  name.vb: Task(Of DbConnection)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Data.Common.DbConnection
    name: DbConnection
    nameWithType: DbConnection
    fullName: System.Data.Common.DbConnection
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Data.Common.DbConnection
    name: DbConnection
    nameWithType: DbConnection
    fullName: System.Data.Common.DbConnection
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: TimeCockpit.Data.DataModel.ModelElement
  commentId: T:TimeCockpit.Data.DataModel.ModelElement
  parent: TimeCockpit.Data.DataModel
  isExternal: false
  name: ModelElement
  nameWithType: ModelElement
  fullName: TimeCockpit.Data.DataModel.ModelElement
- uid: TimeCockpit.Data.Database.DbClient.ExecuteDatabaseOperation(System.Func{System.Data.Common.DbConnection,System.UInt64,System.Data.Common.DbCommand},System.Boolean)
  commentId: M:TimeCockpit.Data.Database.DbClient.ExecuteDatabaseOperation(System.Func{System.Data.Common.DbConnection,System.UInt64,System.Data.Common.DbCommand},System.Boolean)
  parent: TimeCockpit.Data.Database.DbClient
  isExternal: true
  name: ExecuteDatabaseOperation(Func<DbConnection, UInt64, DbCommand>, Boolean)
  nameWithType: DbClient.ExecuteDatabaseOperation(Func<DbConnection, UInt64, DbCommand>, Boolean)
  fullName: TimeCockpit.Data.Database.DbClient.ExecuteDatabaseOperation(System.Func<System.Data.Common.DbConnection, System.UInt64, System.Data.Common.DbCommand>, System.Boolean)
  nameWithType.vb: DbClient.ExecuteDatabaseOperation(Func(Of DbConnection, UInt64, DbCommand), Boolean)
  fullName.vb: TimeCockpit.Data.Database.DbClient.ExecuteDatabaseOperation(System.Func(Of System.Data.Common.DbConnection, System.UInt64, System.Data.Common.DbCommand), System.Boolean)
  name.vb: ExecuteDatabaseOperation(Func(Of DbConnection, UInt64, DbCommand), Boolean)
  spec.csharp:
  - uid: TimeCockpit.Data.Database.DbClient.ExecuteDatabaseOperation(System.Func{System.Data.Common.DbConnection,System.UInt64,System.Data.Common.DbCommand},System.Boolean)
    name: ExecuteDatabaseOperation
    nameWithType: DbClient.ExecuteDatabaseOperation
    fullName: TimeCockpit.Data.Database.DbClient.ExecuteDatabaseOperation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Data.Common.DbConnection
    name: DbConnection
    nameWithType: DbConnection
    fullName: System.Data.Common.DbConnection
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Data.Common.DbCommand
    name: DbCommand
    nameWithType: DbCommand
    fullName: System.Data.Common.DbCommand
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TimeCockpit.Data.Database.DbClient.ExecuteDatabaseOperation(System.Func{System.Data.Common.DbConnection,System.UInt64,System.Data.Common.DbCommand},System.Boolean)
    name: ExecuteDatabaseOperation
    nameWithType: DbClient.ExecuteDatabaseOperation
    fullName: TimeCockpit.Data.Database.DbClient.ExecuteDatabaseOperation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Data.Common.DbConnection
    name: DbConnection
    nameWithType: DbConnection
    fullName: System.Data.Common.DbConnection
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Data.Common.DbCommand
    name: DbCommand
    nameWithType: DbCommand
    fullName: System.Data.Common.DbCommand
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.Database.SqlDbClient.ExecuteDatabaseOperation*
  commentId: Overload:TimeCockpit.Data.Database.SqlDbClient.ExecuteDatabaseOperation
  isExternal: false
  name: ExecuteDatabaseOperation
  nameWithType: SqlDbClient.ExecuteDatabaseOperation
  fullName: TimeCockpit.Data.Database.SqlDbClient.ExecuteDatabaseOperation
- uid: System.Func{System.Data.Common.DbConnection,System.UInt64,System.Data.Common.DbCommand}
  commentId: T:System.Func{System.Data.Common.DbConnection,System.UInt64,System.Data.Common.DbCommand}
  parent: System
  definition: System.Func`3
  name: Func<DbConnection, UInt64, DbCommand>
  nameWithType: Func<DbConnection, UInt64, DbCommand>
  fullName: System.Func<System.Data.Common.DbConnection, System.UInt64, System.Data.Common.DbCommand>
  nameWithType.vb: Func(Of DbConnection, UInt64, DbCommand)
  fullName.vb: System.Func(Of System.Data.Common.DbConnection, System.UInt64, System.Data.Common.DbCommand)
  name.vb: Func(Of DbConnection, UInt64, DbCommand)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Data.Common.DbConnection
    name: DbConnection
    nameWithType: DbConnection
    fullName: System.Data.Common.DbConnection
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Data.Common.DbCommand
    name: DbCommand
    nameWithType: DbCommand
    fullName: System.Data.Common.DbCommand
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Data.Common.DbConnection
    name: DbConnection
    nameWithType: DbConnection
    fullName: System.Data.Common.DbConnection
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Data.Common.DbCommand
    name: DbCommand
    nameWithType: DbCommand
    fullName: System.Data.Common.DbCommand
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.UInt64
  commentId: T:System.UInt64
  parent: System
  isExternal: true
  name: UInt64
  nameWithType: UInt64
  fullName: System.UInt64
- uid: TimeCockpit.Data.DataModel
  commentId: N:TimeCockpit.Data.DataModel
  isExternal: false
  name: TimeCockpit.Data.DataModel
  nameWithType: TimeCockpit.Data.DataModel
  fullName: TimeCockpit.Data.DataModel
- uid: System.Func`3
  commentId: T:System.Func`3
  isExternal: true
  name: Func<T1, T2, TResult>
  nameWithType: Func<T1, T2, TResult>
  fullName: System.Func<T1, T2, TResult>
  nameWithType.vb: Func(Of T1, T2, TResult)
  fullName.vb: System.Func(Of T1, T2, TResult)
  name.vb: Func(Of T1, T2, TResult)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.Database.DbClient.DeleteBlobGarbage(System.Data.Common.DbConnection,System.Collections.Generic.IEnumerable{TimeCockpit.Data.Database.BlobGarbageRow})
  commentId: M:TimeCockpit.Data.Database.DbClient.DeleteBlobGarbage(System.Data.Common.DbConnection,System.Collections.Generic.IEnumerable{TimeCockpit.Data.Database.BlobGarbageRow})
  parent: TimeCockpit.Data.Database.DbClient
  isExternal: true
  name: DeleteBlobGarbage(DbConnection, IEnumerable<BlobGarbageRow>)
  nameWithType: DbClient.DeleteBlobGarbage(DbConnection, IEnumerable<BlobGarbageRow>)
  fullName: TimeCockpit.Data.Database.DbClient.DeleteBlobGarbage(System.Data.Common.DbConnection, System.Collections.Generic.IEnumerable<TimeCockpit.Data.Database.BlobGarbageRow>)
  nameWithType.vb: DbClient.DeleteBlobGarbage(DbConnection, IEnumerable(Of BlobGarbageRow))
  fullName.vb: TimeCockpit.Data.Database.DbClient.DeleteBlobGarbage(System.Data.Common.DbConnection, System.Collections.Generic.IEnumerable(Of TimeCockpit.Data.Database.BlobGarbageRow))
  name.vb: DeleteBlobGarbage(DbConnection, IEnumerable(Of BlobGarbageRow))
  spec.csharp:
  - uid: TimeCockpit.Data.Database.DbClient.DeleteBlobGarbage(System.Data.Common.DbConnection,System.Collections.Generic.IEnumerable{TimeCockpit.Data.Database.BlobGarbageRow})
    name: DeleteBlobGarbage
    nameWithType: DbClient.DeleteBlobGarbage
    fullName: TimeCockpit.Data.Database.DbClient.DeleteBlobGarbage
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Data.Common.DbConnection
    name: DbConnection
    nameWithType: DbConnection
    fullName: System.Data.Common.DbConnection
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TimeCockpit.Data.Database.BlobGarbageRow
    name: BlobGarbageRow
    nameWithType: BlobGarbageRow
    fullName: TimeCockpit.Data.Database.BlobGarbageRow
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TimeCockpit.Data.Database.DbClient.DeleteBlobGarbage(System.Data.Common.DbConnection,System.Collections.Generic.IEnumerable{TimeCockpit.Data.Database.BlobGarbageRow})
    name: DeleteBlobGarbage
    nameWithType: DbClient.DeleteBlobGarbage
    fullName: TimeCockpit.Data.Database.DbClient.DeleteBlobGarbage
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Data.Common.DbConnection
    name: DbConnection
    nameWithType: DbConnection
    fullName: System.Data.Common.DbConnection
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TimeCockpit.Data.Database.BlobGarbageRow
    name: BlobGarbageRow
    nameWithType: BlobGarbageRow
    fullName: TimeCockpit.Data.Database.BlobGarbageRow
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.Database.SqlDbClient.DeleteBlobGarbage*
  commentId: Overload:TimeCockpit.Data.Database.SqlDbClient.DeleteBlobGarbage
  isExternal: false
  name: DeleteBlobGarbage
  nameWithType: SqlDbClient.DeleteBlobGarbage
  fullName: TimeCockpit.Data.Database.SqlDbClient.DeleteBlobGarbage
- uid: System.Data.Common.DbConnection
  commentId: T:System.Data.Common.DbConnection
  parent: System.Data.Common
  isExternal: true
  name: DbConnection
  nameWithType: DbConnection
  fullName: System.Data.Common.DbConnection
- uid: System.Collections.Generic.IEnumerable{TimeCockpit.Data.Database.BlobGarbageRow}
  commentId: T:System.Collections.Generic.IEnumerable{TimeCockpit.Data.Database.BlobGarbageRow}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<BlobGarbageRow>
  nameWithType: IEnumerable<BlobGarbageRow>
  fullName: System.Collections.Generic.IEnumerable<TimeCockpit.Data.Database.BlobGarbageRow>
  nameWithType.vb: IEnumerable(Of BlobGarbageRow)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TimeCockpit.Data.Database.BlobGarbageRow)
  name.vb: IEnumerable(Of BlobGarbageRow)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TimeCockpit.Data.Database.BlobGarbageRow
    name: BlobGarbageRow
    nameWithType: BlobGarbageRow
    fullName: TimeCockpit.Data.Database.BlobGarbageRow
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TimeCockpit.Data.Database.BlobGarbageRow
    name: BlobGarbageRow
    nameWithType: BlobGarbageRow
    fullName: TimeCockpit.Data.Database.BlobGarbageRow
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Data.Common
  commentId: N:System.Data.Common
  isExternal: false
  name: System.Data.Common
  nameWithType: System.Data.Common
  fullName: System.Data.Common
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: TimeCockpit.Data.Database.DbClient.FindOrCreateCommand(System.String,System.Data.Common.DbConnection)
  commentId: M:TimeCockpit.Data.Database.DbClient.FindOrCreateCommand(System.String,System.Data.Common.DbConnection)
  parent: TimeCockpit.Data.Database.DbClient
  isExternal: true
  name: FindOrCreateCommand(String, DbConnection)
  nameWithType: DbClient.FindOrCreateCommand(String, DbConnection)
  fullName: TimeCockpit.Data.Database.DbClient.FindOrCreateCommand(System.String, System.Data.Common.DbConnection)
  spec.csharp:
  - uid: TimeCockpit.Data.Database.DbClient.FindOrCreateCommand(System.String,System.Data.Common.DbConnection)
    name: FindOrCreateCommand
    nameWithType: DbClient.FindOrCreateCommand
    fullName: TimeCockpit.Data.Database.DbClient.FindOrCreateCommand
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Data.Common.DbConnection
    name: DbConnection
    nameWithType: DbConnection
    fullName: System.Data.Common.DbConnection
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TimeCockpit.Data.Database.DbClient.FindOrCreateCommand(System.String,System.Data.Common.DbConnection)
    name: FindOrCreateCommand
    nameWithType: DbClient.FindOrCreateCommand
    fullName: TimeCockpit.Data.Database.DbClient.FindOrCreateCommand
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Data.Common.DbConnection
    name: DbConnection
    nameWithType: DbConnection
    fullName: System.Data.Common.DbConnection
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.Database.SqlDbClient.FindOrCreateCommand*
  commentId: Overload:TimeCockpit.Data.Database.SqlDbClient.FindOrCreateCommand
  isExternal: false
  name: FindOrCreateCommand
  nameWithType: SqlDbClient.FindOrCreateCommand
  fullName: TimeCockpit.Data.Database.SqlDbClient.FindOrCreateCommand
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Common.DbCommand
  commentId: T:System.Data.Common.DbCommand
  parent: System.Data.Common
  isExternal: true
  name: DbCommand
  nameWithType: DbCommand
  fullName: System.Data.Common.DbCommand
- uid: TimeCockpit.Data.Database.DbClient.FinishCommand(System.Data.Common.DbCommand)
  commentId: M:TimeCockpit.Data.Database.DbClient.FinishCommand(System.Data.Common.DbCommand)
  parent: TimeCockpit.Data.Database.DbClient
  isExternal: true
  name: FinishCommand(DbCommand)
  nameWithType: DbClient.FinishCommand(DbCommand)
  fullName: TimeCockpit.Data.Database.DbClient.FinishCommand(System.Data.Common.DbCommand)
  spec.csharp:
  - uid: TimeCockpit.Data.Database.DbClient.FinishCommand(System.Data.Common.DbCommand)
    name: FinishCommand
    nameWithType: DbClient.FinishCommand
    fullName: TimeCockpit.Data.Database.DbClient.FinishCommand
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Data.Common.DbCommand
    name: DbCommand
    nameWithType: DbCommand
    fullName: System.Data.Common.DbCommand
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TimeCockpit.Data.Database.DbClient.FinishCommand(System.Data.Common.DbCommand)
    name: FinishCommand
    nameWithType: DbClient.FinishCommand
    fullName: TimeCockpit.Data.Database.DbClient.FinishCommand
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Data.Common.DbCommand
    name: DbCommand
    nameWithType: DbCommand
    fullName: System.Data.Common.DbCommand
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.Database.SqlDbClient.FinishCommand*
  commentId: Overload:TimeCockpit.Data.Database.SqlDbClient.FinishCommand
  isExternal: false
  name: FinishCommand
  nameWithType: SqlDbClient.FinishCommand
  fullName: TimeCockpit.Data.Database.SqlDbClient.FinishCommand
