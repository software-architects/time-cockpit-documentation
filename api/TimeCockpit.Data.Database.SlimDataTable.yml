### YamlMime:ManagedReference
items:
- uid: TimeCockpit.Data.Database.SlimDataTable
  commentId: T:TimeCockpit.Data.Database.SlimDataTable
  id: SlimDataTable
  parent: TimeCockpit.Data.Database
  children:
  - TimeCockpit.Data.Database.SlimDataTable.#ctor(System.Collections.Generic.Dictionary{System.String,System.Int32},System.Object[][])
  - TimeCockpit.Data.Database.SlimDataTable.GetOrdinal(System.String)
  - TimeCockpit.Data.Database.SlimDataTable.GetRow(System.Int32)
  - TimeCockpit.Data.Database.SlimDataTable.GetValue(System.Int32,System.Int32)
  - TimeCockpit.Data.Database.SlimDataTable.GetValue``1(System.Int32,System.Int32)
  - TimeCockpit.Data.Database.SlimDataTable.MaxOrdinal
  - TimeCockpit.Data.Database.SlimDataTable.Ordinals
  - TimeCockpit.Data.Database.SlimDataTable.RowCount
  - TimeCockpit.Data.Database.SlimDataTable.Rows
  langs:
  - csharp
  - vb
  name: SlimDataTable
  nameWithType: SlimDataTable
  fullName: TimeCockpit.Data.Database.SlimDataTable
  type: Class
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/SlimDataTable.cs
    id: SlimDataTable
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/SlimDataTable.cs
    startLine: 16
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Database
  summary: "\nefficient replacement for DataTable.\n"
  example: []
  syntax:
    content: public class SlimDataTable
    content.vb: Public Class SlimDataTable
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TimeCockpit.Data.Database.SlimDataTable.#ctor(System.Collections.Generic.Dictionary{System.String,System.Int32},System.Object[][])
  commentId: M:TimeCockpit.Data.Database.SlimDataTable.#ctor(System.Collections.Generic.Dictionary{System.String,System.Int32},System.Object[][])
  id: '#ctor(System.Collections.Generic.Dictionary{System.String,System.Int32},System.Object[][])'
  parent: TimeCockpit.Data.Database.SlimDataTable
  langs:
  - csharp
  - vb
  name: SlimDataTable(Dictionary<String, Int32>, Object[][])
  nameWithType: SlimDataTable.SlimDataTable(Dictionary<String, Int32>, Object[][])
  fullName: TimeCockpit.Data.Database.SlimDataTable.SlimDataTable(System.Collections.Generic.Dictionary<System.String, System.Int32>, System.Object[][])
  type: Constructor
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/SlimDataTable.cs
    id: .ctor
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/SlimDataTable.cs
    startLine: 33
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Database
  summary: "\nInitializes a new instance of the <xref href=\"TimeCockpit.Data.Database.SlimDataTable\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public SlimDataTable(Dictionary<string, int> ordinals, object[][] rows)
    parameters:
    - id: ordinals
      type: System.Collections.Generic.Dictionary{System.String,System.Int32}
      description: The ordinals of the table.
    - id: rows
      type: System.Object[][]
      description: The rows of the table.
    content.vb: Public Sub New(ordinals As Dictionary(Of String, Integer), rows As Object()())
  overload: TimeCockpit.Data.Database.SlimDataTable.#ctor*
  nameWithType.vb: SlimDataTable.SlimDataTable(Dictionary(Of String, Int32), Object()())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TimeCockpit.Data.Database.SlimDataTable.SlimDataTable(System.Collections.Generic.Dictionary(Of System.String, System.Int32), System.Object()())
  name.vb: SlimDataTable(Dictionary(Of String, Int32), Object()())
- uid: TimeCockpit.Data.Database.SlimDataTable.Ordinals
  commentId: P:TimeCockpit.Data.Database.SlimDataTable.Ordinals
  id: Ordinals
  parent: TimeCockpit.Data.Database.SlimDataTable
  langs:
  - csharp
  - vb
  name: Ordinals
  nameWithType: SlimDataTable.Ordinals
  fullName: TimeCockpit.Data.Database.SlimDataTable.Ordinals
  type: Property
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/SlimDataTable.cs
    id: Ordinals
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/SlimDataTable.cs
    startLine: 42
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Database
  summary: "\nGets the ordinals, readonly.\n"
  example: []
  syntax:
    content: public IEnumerable<KeyValuePair<string, int>> Ordinals { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Int32}}
    content.vb: Public ReadOnly Property Ordinals As IEnumerable(Of KeyValuePair(Of String, Integer))
  overload: TimeCockpit.Data.Database.SlimDataTable.Ordinals*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TimeCockpit.Data.Database.SlimDataTable.MaxOrdinal
  commentId: P:TimeCockpit.Data.Database.SlimDataTable.MaxOrdinal
  id: MaxOrdinal
  parent: TimeCockpit.Data.Database.SlimDataTable
  langs:
  - csharp
  - vb
  name: MaxOrdinal
  nameWithType: SlimDataTable.MaxOrdinal
  fullName: TimeCockpit.Data.Database.SlimDataTable.MaxOrdinal
  type: Property
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/SlimDataTable.cs
    id: MaxOrdinal
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/SlimDataTable.cs
    startLine: 53
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Database
  summary: "\nGets the number of columns.\n"
  example: []
  syntax:
    content: public int MaxOrdinal { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property MaxOrdinal As Integer
  overload: TimeCockpit.Data.Database.SlimDataTable.MaxOrdinal*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TimeCockpit.Data.Database.SlimDataTable.RowCount
  commentId: P:TimeCockpit.Data.Database.SlimDataTable.RowCount
  id: RowCount
  parent: TimeCockpit.Data.Database.SlimDataTable
  langs:
  - csharp
  - vb
  name: RowCount
  nameWithType: SlimDataTable.RowCount
  fullName: TimeCockpit.Data.Database.SlimDataTable.RowCount
  type: Property
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/SlimDataTable.cs
    id: RowCount
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/SlimDataTable.cs
    startLine: 64
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Database
  summary: "\nGets the row count of the table.\n"
  example: []
  syntax:
    content: public int RowCount { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property RowCount As Integer
  overload: TimeCockpit.Data.Database.SlimDataTable.RowCount*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TimeCockpit.Data.Database.SlimDataTable.Rows
  commentId: P:TimeCockpit.Data.Database.SlimDataTable.Rows
  id: Rows
  parent: TimeCockpit.Data.Database.SlimDataTable
  langs:
  - csharp
  - vb
  name: Rows
  nameWithType: SlimDataTable.Rows
  fullName: TimeCockpit.Data.Database.SlimDataTable.Rows
  type: Property
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/SlimDataTable.cs
    id: Rows
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/SlimDataTable.cs
    startLine: 75
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Database
  summary: "\nGets the rows.\n"
  example: []
  syntax:
    content: public IEnumerable<object[]> Rows { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.Object[]}
    content.vb: Public ReadOnly Property Rows As IEnumerable(Of Object())
  overload: TimeCockpit.Data.Database.SlimDataTable.Rows*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TimeCockpit.Data.Database.SlimDataTable.GetOrdinal(System.String)
  commentId: M:TimeCockpit.Data.Database.SlimDataTable.GetOrdinal(System.String)
  id: GetOrdinal(System.String)
  parent: TimeCockpit.Data.Database.SlimDataTable
  langs:
  - csharp
  - vb
  name: GetOrdinal(String)
  nameWithType: SlimDataTable.GetOrdinal(String)
  fullName: TimeCockpit.Data.Database.SlimDataTable.GetOrdinal(System.String)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/SlimDataTable.cs
    id: GetOrdinal
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/SlimDataTable.cs
    startLine: 88
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Database
  summary: "\nGets the ordinal of a specific column name.\n"
  example: []
  syntax:
    content: public int GetOrdinal(string columnName)
    parameters:
    - id: columnName
      type: System.String
      description: The name of the column.
    return:
      type: System.Int32
      description: Returns the ordinal of the column.
    content.vb: Public Function GetOrdinal(columnName As String) As Integer
  overload: TimeCockpit.Data.Database.SlimDataTable.GetOrdinal*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Database.SlimDataTable.GetRow(System.Int32)
  commentId: M:TimeCockpit.Data.Database.SlimDataTable.GetRow(System.Int32)
  id: GetRow(System.Int32)
  parent: TimeCockpit.Data.Database.SlimDataTable
  langs:
  - csharp
  - vb
  name: GetRow(Int32)
  nameWithType: SlimDataTable.GetRow(Int32)
  fullName: TimeCockpit.Data.Database.SlimDataTable.GetRow(System.Int32)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/SlimDataTable.cs
    id: GetRow
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/SlimDataTable.cs
    startLine: 104
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Database
  summary: "\nGets the row at specified index.\n"
  example: []
  syntax:
    content: public object[] GetRow(int index)
    parameters:
    - id: index
      type: System.Int32
      description: The index of the row.
    return:
      type: System.Object[]
      description: Returns the row at given index.
    content.vb: Public Function GetRow(index As Integer) As Object()
  overload: TimeCockpit.Data.Database.SlimDataTable.GetRow*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Database.SlimDataTable.GetValue(System.Int32,System.Int32)
  commentId: M:TimeCockpit.Data.Database.SlimDataTable.GetValue(System.Int32,System.Int32)
  id: GetValue(System.Int32,System.Int32)
  parent: TimeCockpit.Data.Database.SlimDataTable
  langs:
  - csharp
  - vb
  name: GetValue(Int32, Int32)
  nameWithType: SlimDataTable.GetValue(Int32, Int32)
  fullName: TimeCockpit.Data.Database.SlimDataTable.GetValue(System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/SlimDataTable.cs
    id: GetValue
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/SlimDataTable.cs
    startLine: 115
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Database
  summary: "\nGets the value of the table.\n"
  example: []
  syntax:
    content: public object GetValue(int row, int ordinal)
    parameters:
    - id: row
      type: System.Int32
      description: The index of the row.
    - id: ordinal
      type: System.Int32
      description: The column index / ordinal.
    return:
      type: System.Object
      description: Returns the object at the given location.
    content.vb: Public Function GetValue(row As Integer, ordinal As Integer) As Object
  overload: TimeCockpit.Data.Database.SlimDataTable.GetValue*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Database.SlimDataTable.GetValue``1(System.Int32,System.Int32)
  commentId: M:TimeCockpit.Data.Database.SlimDataTable.GetValue``1(System.Int32,System.Int32)
  id: GetValue``1(System.Int32,System.Int32)
  parent: TimeCockpit.Data.Database.SlimDataTable
  langs:
  - csharp
  - vb
  name: GetValue<T>(Int32, Int32)
  nameWithType: SlimDataTable.GetValue<T>(Int32, Int32)
  fullName: TimeCockpit.Data.Database.SlimDataTable.GetValue<T>(System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/SlimDataTable.cs
    id: GetValue
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/SlimDataTable.cs
    startLine: 127
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Database
  summary: "\nGets the value at the specified location.\n"
  example: []
  syntax:
    content: public T GetValue<T>(int row, int ordinal)
    parameters:
    - id: row
      type: System.Int32
      description: the index of the row.
    - id: ordinal
      type: System.Int32
      description: the ordinal of the column.
    typeParameters:
    - id: T
      description: The type of the value.
    return:
      type: '{T}'
      description: Returns the value.
    content.vb: Public Function GetValue(Of T)(row As Integer, ordinal As Integer) As T
  overload: TimeCockpit.Data.Database.SlimDataTable.GetValue*
  nameWithType.vb: SlimDataTable.GetValue(Of T)(Int32, Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TimeCockpit.Data.Database.SlimDataTable.GetValue(Of T)(System.Int32, System.Int32)
  name.vb: GetValue(Of T)(Int32, Int32)
references:
- uid: TimeCockpit.Data.Database
  commentId: N:TimeCockpit.Data.Database
  isExternal: false
  name: TimeCockpit.Data.Database
  nameWithType: TimeCockpit.Data.Database
  fullName: TimeCockpit.Data.Database
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: TimeCockpit.Data.Database.SlimDataTable
  commentId: T:TimeCockpit.Data.Database.SlimDataTable
  isExternal: false
  name: SlimDataTable
  nameWithType: SlimDataTable
  fullName: TimeCockpit.Data.Database.SlimDataTable
- uid: TimeCockpit.Data.Database.SlimDataTable.#ctor*
  commentId: Overload:TimeCockpit.Data.Database.SlimDataTable.#ctor
  isExternal: false
  name: SlimDataTable
  nameWithType: SlimDataTable.SlimDataTable
  fullName: TimeCockpit.Data.Database.SlimDataTable.SlimDataTable
- uid: System.Collections.Generic.Dictionary{System.String,System.Int32}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.Int32}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, Int32>
  nameWithType: Dictionary<String, Int32>
  fullName: System.Collections.Generic.Dictionary<System.String, System.Int32>
  nameWithType.vb: Dictionary(Of String, Int32)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.Int32)
  name.vb: Dictionary(Of String, Int32)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object[][]
  name: Object[][]
  nameWithType: Object[][]
  fullName: System.Object[][]
  nameWithType.vb: Object()()
  fullName.vb: System.Object()()
  name.vb: Object()()
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: TimeCockpit.Data.Database.SlimDataTable.Ordinals*
  commentId: Overload:TimeCockpit.Data.Database.SlimDataTable.Ordinals
  isExternal: false
  name: Ordinals
  nameWithType: SlimDataTable.Ordinals
  fullName: TimeCockpit.Data.Database.SlimDataTable.Ordinals
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Int32}}
  commentId: T:System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Int32}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<KeyValuePair<String, Int32>>
  nameWithType: IEnumerable<KeyValuePair<String, Int32>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, System.Int32>>
  nameWithType.vb: IEnumerable(Of KeyValuePair(Of String, Int32))
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.String, System.Int32))
  name.vb: IEnumerable(Of KeyValuePair(Of String, Int32))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.Database.SlimDataTable.MaxOrdinal*
  commentId: Overload:TimeCockpit.Data.Database.SlimDataTable.MaxOrdinal
  isExternal: false
  name: MaxOrdinal
  nameWithType: SlimDataTable.MaxOrdinal
  fullName: TimeCockpit.Data.Database.SlimDataTable.MaxOrdinal
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: TimeCockpit.Data.Database.SlimDataTable.RowCount*
  commentId: Overload:TimeCockpit.Data.Database.SlimDataTable.RowCount
  isExternal: false
  name: RowCount
  nameWithType: SlimDataTable.RowCount
  fullName: TimeCockpit.Data.Database.SlimDataTable.RowCount
- uid: TimeCockpit.Data.Database.SlimDataTable.Rows*
  commentId: Overload:TimeCockpit.Data.Database.SlimDataTable.Rows
  isExternal: false
  name: Rows
  nameWithType: SlimDataTable.Rows
  fullName: TimeCockpit.Data.Database.SlimDataTable.Rows
- uid: System.Collections.Generic.IEnumerable{System.Object[]}
  commentId: T:System.Collections.Generic.IEnumerable{System.Object[]}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Object[]>
  nameWithType: IEnumerable<Object[]>
  fullName: System.Collections.Generic.IEnumerable<System.Object[]>
  nameWithType.vb: IEnumerable(Of Object())
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Object())
  name.vb: IEnumerable(Of Object())
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.Database.SlimDataTable.GetOrdinal*
  commentId: Overload:TimeCockpit.Data.Database.SlimDataTable.GetOrdinal
  isExternal: false
  name: GetOrdinal
  nameWithType: SlimDataTable.GetOrdinal
  fullName: TimeCockpit.Data.Database.SlimDataTable.GetOrdinal
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: TimeCockpit.Data.Database.SlimDataTable.GetRow*
  commentId: Overload:TimeCockpit.Data.Database.SlimDataTable.GetRow
  isExternal: false
  name: GetRow
  nameWithType: SlimDataTable.GetRow
  fullName: TimeCockpit.Data.Database.SlimDataTable.GetRow
- uid: System.Object[]
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  nameWithType.vb: Object()
  fullName.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: TimeCockpit.Data.Database.SlimDataTable.GetValue*
  commentId: Overload:TimeCockpit.Data.Database.SlimDataTable.GetValue
  isExternal: false
  name: GetValue
  nameWithType: SlimDataTable.GetValue
  fullName: TimeCockpit.Data.Database.SlimDataTable.GetValue
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  isExternal: false
  name: T
  nameWithType: T
  fullName: T
