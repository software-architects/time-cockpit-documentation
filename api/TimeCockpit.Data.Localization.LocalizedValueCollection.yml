### YamlMime:ManagedReference
items:
- uid: TimeCockpit.Data.Localization.LocalizedValueCollection
  commentId: T:TimeCockpit.Data.Localization.LocalizedValueCollection
  id: LocalizedValueCollection
  parent: TimeCockpit.Data.Localization
  children:
  - TimeCockpit.Data.Localization.LocalizedValueCollection.Add(System.Collections.Generic.KeyValuePair{System.String,TimeCockpit.Data.Localization.LocalizedValue})
  - TimeCockpit.Data.Localization.LocalizedValueCollection.Add(System.String,TimeCockpit.Data.Localization.LocalizedValue)
  - TimeCockpit.Data.Localization.LocalizedValueCollection.Clear
  - TimeCockpit.Data.Localization.LocalizedValueCollection.Contains(System.Collections.Generic.KeyValuePair{System.String,TimeCockpit.Data.Localization.LocalizedValue})
  - TimeCockpit.Data.Localization.LocalizedValueCollection.ContainsKey(System.String)
  - TimeCockpit.Data.Localization.LocalizedValueCollection.CopyTo(System.Collections.Generic.KeyValuePair{System.String,TimeCockpit.Data.Localization.LocalizedValue}[],System.Int32)
  - TimeCockpit.Data.Localization.LocalizedValueCollection.Count
  - TimeCockpit.Data.Localization.LocalizedValueCollection.GetEnumerator
  - TimeCockpit.Data.Localization.LocalizedValueCollection.GetMember(System.String)
  - TimeCockpit.Data.Localization.LocalizedValueCollection.IsReadOnly
  - TimeCockpit.Data.Localization.LocalizedValueCollection.Item(System.String)
  - TimeCockpit.Data.Localization.LocalizedValueCollection.Keys
  - TimeCockpit.Data.Localization.LocalizedValueCollection.Remove(System.Collections.Generic.KeyValuePair{System.String,TimeCockpit.Data.Localization.LocalizedValue})
  - TimeCockpit.Data.Localization.LocalizedValueCollection.Remove(System.String)
  - TimeCockpit.Data.Localization.LocalizedValueCollection.System#Collections#IEnumerable#GetEnumerator
  - TimeCockpit.Data.Localization.LocalizedValueCollection.TryGetValue(System.String,TimeCockpit.Data.Localization.LocalizedValue@)
  - TimeCockpit.Data.Localization.LocalizedValueCollection.Values
  langs:
  - csharp
  - vb
  name: LocalizedValueCollection
  nameWithType: LocalizedValueCollection
  fullName: TimeCockpit.Data.Localization.LocalizedValueCollection
  type: Class
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Localization
  summary: "\nRepresents a collection of <xref href=\"TimeCockpit.Data.Localization.LocalizedValue\" data-throw-if-not-resolved=\"false\"></xref> objects\n"
  syntax:
    content: 'public class LocalizedValueCollection : DynamicObject, IDynamicMetaObjectProvider, IDictionary<string, LocalizedValue>, ICollection<KeyValuePair<string, LocalizedValue>>, IEnumerable<KeyValuePair<string, LocalizedValue>>, IEnumerable'
    content.vb: >-
      Public Class LocalizedValueCollection
          Inherits DynamicObject
          Implements IDynamicMetaObjectProvider, IDictionary(Of String, LocalizedValue), ICollection(Of KeyValuePair(Of String, LocalizedValue)), IEnumerable(Of KeyValuePair(Of String, LocalizedValue)), IEnumerable
  inheritance:
  - System.Object
  - TimeCockpit.Data.DynamicObject
  implements:
  - System.Dynamic.IDynamicMetaObjectProvider
  - System.Collections.Generic.IDictionary{System.String,TimeCockpit.Data.Localization.LocalizedValue}
  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,TimeCockpit.Data.Localization.LocalizedValue}}
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,TimeCockpit.Data.Localization.LocalizedValue}}
  - System.Collections.IEnumerable
  inheritedMembers:
  - TimeCockpit.Data.DynamicObject.SetMember(System.String,System.Object)
  - TimeCockpit.Data.DynamicObject.GetMetaObject(System.Linq.Expressions.Expression)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TimeCockpit.Data.Localization.LocalizedValueCollection.GetMember(System.String)
  commentId: M:TimeCockpit.Data.Localization.LocalizedValueCollection.GetMember(System.String)
  id: GetMember(System.String)
  parent: TimeCockpit.Data.Localization.LocalizedValueCollection
  langs:
  - csharp
  - vb
  name: GetMember(String)
  nameWithType: LocalizedValueCollection.GetMember(String)
  fullName: TimeCockpit.Data.Localization.LocalizedValueCollection.GetMember(System.String)
  type: Method
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Localization
  summary: "\nGets the value of a CLR property.\n"
  syntax:
    content: public override object GetMember(string name)
    parameters:
    - id: name
      type: System.String
      description: Name of the member to get.
    return:
      type: System.Object
      description: "\nReference to the dynamic member.\n"
    content.vb: Public Overrides Function GetMember(name As String) As Object
  overridden: TimeCockpit.Data.DynamicObject.GetMember(System.String)
  overload: TimeCockpit.Data.Localization.LocalizedValueCollection.GetMember*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: TimeCockpit.Data.Localization.LocalizedValueCollection.Add(System.String,TimeCockpit.Data.Localization.LocalizedValue)
  commentId: M:TimeCockpit.Data.Localization.LocalizedValueCollection.Add(System.String,TimeCockpit.Data.Localization.LocalizedValue)
  id: Add(System.String,TimeCockpit.Data.Localization.LocalizedValue)
  parent: TimeCockpit.Data.Localization.LocalizedValueCollection
  langs:
  - csharp
  - vb
  name: Add(String, LocalizedValue)
  nameWithType: LocalizedValueCollection.Add(String, LocalizedValue)
  fullName: TimeCockpit.Data.Localization.LocalizedValueCollection.Add(System.String, TimeCockpit.Data.Localization.LocalizedValue)
  type: Method
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Localization
  summary: "\nAdds the specified key.\n"
  syntax:
    content: public void Add(string key, LocalizedValue value)
    parameters:
    - id: key
      type: System.String
      description: The key.
    - id: value
      type: TimeCockpit.Data.Localization.LocalizedValue
      description: The value.
    content.vb: Public Sub Add(key As String, value As LocalizedValue)
  overload: TimeCockpit.Data.Localization.LocalizedValueCollection.Add*
  implements:
  - System.Collections.Generic.IDictionary{System.String,TimeCockpit.Data.Localization.LocalizedValue}.Add(System.String,TimeCockpit.Data.Localization.LocalizedValue)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Localization.LocalizedValueCollection.ContainsKey(System.String)
  commentId: M:TimeCockpit.Data.Localization.LocalizedValueCollection.ContainsKey(System.String)
  id: ContainsKey(System.String)
  parent: TimeCockpit.Data.Localization.LocalizedValueCollection
  langs:
  - csharp
  - vb
  name: ContainsKey(String)
  nameWithType: LocalizedValueCollection.ContainsKey(String)
  fullName: TimeCockpit.Data.Localization.LocalizedValueCollection.ContainsKey(System.String)
  type: Method
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Localization
  summary: "\nDetermines whether the specified key contains key.\n"
  syntax:
    content: public bool ContainsKey(string key)
    parameters:
    - id: key
      type: System.String
      description: The key.
    return:
      type: System.Boolean
      description: "\n<code>true</code> if the specified key contains key; otherwise, <code>false</code>.\n"
    content.vb: Public Function ContainsKey(key As String) As Boolean
  overload: TimeCockpit.Data.Localization.LocalizedValueCollection.ContainsKey*
  implements:
  - System.Collections.Generic.IDictionary{System.String,TimeCockpit.Data.Localization.LocalizedValue}.ContainsKey(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Localization.LocalizedValueCollection.Remove(System.String)
  commentId: M:TimeCockpit.Data.Localization.LocalizedValueCollection.Remove(System.String)
  id: Remove(System.String)
  parent: TimeCockpit.Data.Localization.LocalizedValueCollection
  langs:
  - csharp
  - vb
  name: Remove(String)
  nameWithType: LocalizedValueCollection.Remove(String)
  fullName: TimeCockpit.Data.Localization.LocalizedValueCollection.Remove(System.String)
  type: Method
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Localization
  summary: "\nRemoves the specified key.\n"
  syntax:
    content: public bool Remove(string key)
    parameters:
    - id: key
      type: System.String
      description: The key.
    return:
      type: System.Boolean
      description: true if removed successfully, else false
    content.vb: Public Function Remove(key As String) As Boolean
  overload: TimeCockpit.Data.Localization.LocalizedValueCollection.Remove*
  implements:
  - System.Collections.Generic.IDictionary{System.String,TimeCockpit.Data.Localization.LocalizedValue}.Remove(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Localization.LocalizedValueCollection.TryGetValue(System.String,TimeCockpit.Data.Localization.LocalizedValue@)
  commentId: M:TimeCockpit.Data.Localization.LocalizedValueCollection.TryGetValue(System.String,TimeCockpit.Data.Localization.LocalizedValue@)
  id: TryGetValue(System.String,TimeCockpit.Data.Localization.LocalizedValue@)
  parent: TimeCockpit.Data.Localization.LocalizedValueCollection
  langs:
  - csharp
  - vb
  name: TryGetValue(String, out LocalizedValue)
  nameWithType: LocalizedValueCollection.TryGetValue(String, out LocalizedValue)
  fullName: TimeCockpit.Data.Localization.LocalizedValueCollection.TryGetValue(System.String, out TimeCockpit.Data.Localization.LocalizedValue)
  type: Method
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Localization
  summary: "\nTries the get value.\n"
  syntax:
    content: public bool TryGetValue(string key, out LocalizedValue value)
    parameters:
    - id: key
      type: System.String
      description: The key.
    - id: value
      type: TimeCockpit.Data.Localization.LocalizedValue
      description: The value.
    return:
      type: System.Boolean
      description: An instance of <xref href="TimeCockpit.Data.Localization.LocalizedValue" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Function TryGetValue(key As String, ByRef value As LocalizedValue) As Boolean
  overload: TimeCockpit.Data.Localization.LocalizedValueCollection.TryGetValue*
  implements:
  - System.Collections.Generic.IDictionary{System.String,TimeCockpit.Data.Localization.LocalizedValue}.TryGetValue(System.String,TimeCockpit.Data.Localization.LocalizedValue@)
  nameWithType.vb: LocalizedValueCollection.TryGetValue(String, ByRef LocalizedValue)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TimeCockpit.Data.Localization.LocalizedValueCollection.TryGetValue(System.String, ByRef TimeCockpit.Data.Localization.LocalizedValue)
  name.vb: TryGetValue(String, ByRef LocalizedValue)
- uid: TimeCockpit.Data.Localization.LocalizedValueCollection.Add(System.Collections.Generic.KeyValuePair{System.String,TimeCockpit.Data.Localization.LocalizedValue})
  commentId: M:TimeCockpit.Data.Localization.LocalizedValueCollection.Add(System.Collections.Generic.KeyValuePair{System.String,TimeCockpit.Data.Localization.LocalizedValue})
  id: Add(System.Collections.Generic.KeyValuePair{System.String,TimeCockpit.Data.Localization.LocalizedValue})
  parent: TimeCockpit.Data.Localization.LocalizedValueCollection
  langs:
  - csharp
  - vb
  name: Add(KeyValuePair<String, LocalizedValue>)
  nameWithType: LocalizedValueCollection.Add(KeyValuePair<String, LocalizedValue>)
  fullName: TimeCockpit.Data.Localization.LocalizedValueCollection.Add(System.Collections.Generic.KeyValuePair<System.String, TimeCockpit.Data.Localization.LocalizedValue>)
  type: Method
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Localization
  summary: "\nAdds the specified item.\n"
  syntax:
    content: public void Add(KeyValuePair<string, LocalizedValue> item)
    parameters:
    - id: item
      type: System.Collections.Generic.KeyValuePair{System.String,TimeCockpit.Data.Localization.LocalizedValue}
      description: The item.
    content.vb: Public Sub Add(item As KeyValuePair(Of String, LocalizedValue))
  overload: TimeCockpit.Data.Localization.LocalizedValueCollection.Add*
  implements:
  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,TimeCockpit.Data.Localization.LocalizedValue}}.Add(System.Collections.Generic.KeyValuePair{System.String,TimeCockpit.Data.Localization.LocalizedValue})
  nameWithType.vb: LocalizedValueCollection.Add(KeyValuePair(Of String, LocalizedValue))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TimeCockpit.Data.Localization.LocalizedValueCollection.Add(System.Collections.Generic.KeyValuePair(Of System.String, TimeCockpit.Data.Localization.LocalizedValue))
  name.vb: Add(KeyValuePair(Of String, LocalizedValue))
- uid: TimeCockpit.Data.Localization.LocalizedValueCollection.Clear
  commentId: M:TimeCockpit.Data.Localization.LocalizedValueCollection.Clear
  id: Clear
  parent: TimeCockpit.Data.Localization.LocalizedValueCollection
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: LocalizedValueCollection.Clear()
  fullName: TimeCockpit.Data.Localization.LocalizedValueCollection.Clear()
  type: Method
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Localization
  summary: "\nClears this instance.\n"
  syntax:
    content: public void Clear()
    content.vb: Public Sub Clear
  overload: TimeCockpit.Data.Localization.LocalizedValueCollection.Clear*
  implements:
  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,TimeCockpit.Data.Localization.LocalizedValue}}.Clear
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Localization.LocalizedValueCollection.Contains(System.Collections.Generic.KeyValuePair{System.String,TimeCockpit.Data.Localization.LocalizedValue})
  commentId: M:TimeCockpit.Data.Localization.LocalizedValueCollection.Contains(System.Collections.Generic.KeyValuePair{System.String,TimeCockpit.Data.Localization.LocalizedValue})
  id: Contains(System.Collections.Generic.KeyValuePair{System.String,TimeCockpit.Data.Localization.LocalizedValue})
  parent: TimeCockpit.Data.Localization.LocalizedValueCollection
  langs:
  - csharp
  - vb
  name: Contains(KeyValuePair<String, LocalizedValue>)
  nameWithType: LocalizedValueCollection.Contains(KeyValuePair<String, LocalizedValue>)
  fullName: TimeCockpit.Data.Localization.LocalizedValueCollection.Contains(System.Collections.Generic.KeyValuePair<System.String, TimeCockpit.Data.Localization.LocalizedValue>)
  type: Method
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Localization
  summary: "\nDetermines whether [contains] [the specified item].\n"
  syntax:
    content: public bool Contains(KeyValuePair<string, LocalizedValue> item)
    parameters:
    - id: item
      type: System.Collections.Generic.KeyValuePair{System.String,TimeCockpit.Data.Localization.LocalizedValue}
      description: The item.
    return:
      type: System.Boolean
      description: "\n<code>true</code> if [contains] [the specified item]; otherwise, <code>false</code>.\n"
    content.vb: Public Function Contains(item As KeyValuePair(Of String, LocalizedValue)) As Boolean
  overload: TimeCockpit.Data.Localization.LocalizedValueCollection.Contains*
  implements:
  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,TimeCockpit.Data.Localization.LocalizedValue}}.Contains(System.Collections.Generic.KeyValuePair{System.String,TimeCockpit.Data.Localization.LocalizedValue})
  nameWithType.vb: LocalizedValueCollection.Contains(KeyValuePair(Of String, LocalizedValue))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TimeCockpit.Data.Localization.LocalizedValueCollection.Contains(System.Collections.Generic.KeyValuePair(Of System.String, TimeCockpit.Data.Localization.LocalizedValue))
  name.vb: Contains(KeyValuePair(Of String, LocalizedValue))
- uid: TimeCockpit.Data.Localization.LocalizedValueCollection.CopyTo(System.Collections.Generic.KeyValuePair{System.String,TimeCockpit.Data.Localization.LocalizedValue}[],System.Int32)
  commentId: M:TimeCockpit.Data.Localization.LocalizedValueCollection.CopyTo(System.Collections.Generic.KeyValuePair{System.String,TimeCockpit.Data.Localization.LocalizedValue}[],System.Int32)
  id: CopyTo(System.Collections.Generic.KeyValuePair{System.String,TimeCockpit.Data.Localization.LocalizedValue}[],System.Int32)
  parent: TimeCockpit.Data.Localization.LocalizedValueCollection
  langs:
  - csharp
  - vb
  name: CopyTo(KeyValuePair<String, LocalizedValue>[], Int32)
  nameWithType: LocalizedValueCollection.CopyTo(KeyValuePair<String, LocalizedValue>[], Int32)
  fullName: TimeCockpit.Data.Localization.LocalizedValueCollection.CopyTo(System.Collections.Generic.KeyValuePair<System.String, TimeCockpit.Data.Localization.LocalizedValue>[], System.Int32)
  type: Method
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Localization
  summary: "\nCopies to.\n"
  syntax:
    content: public void CopyTo(KeyValuePair<string, LocalizedValue>[] array, int arrayIndex)
    parameters:
    - id: array
      type: System.Collections.Generic.KeyValuePair{System.String,TimeCockpit.Data.Localization.LocalizedValue}[]
      description: The array.
    - id: arrayIndex
      type: System.Int32
      description: Index of the array.
    content.vb: Public Sub CopyTo(array As KeyValuePair(Of String, LocalizedValue)(), arrayIndex As Integer)
  overload: TimeCockpit.Data.Localization.LocalizedValueCollection.CopyTo*
  implements:
  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,TimeCockpit.Data.Localization.LocalizedValue}}.CopyTo(System.Collections.Generic.KeyValuePair{System.String,TimeCockpit.Data.Localization.LocalizedValue}[],System.Int32)
  nameWithType.vb: LocalizedValueCollection.CopyTo(KeyValuePair(Of String, LocalizedValue)(), Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TimeCockpit.Data.Localization.LocalizedValueCollection.CopyTo(System.Collections.Generic.KeyValuePair(Of System.String, TimeCockpit.Data.Localization.LocalizedValue)(), System.Int32)
  name.vb: CopyTo(KeyValuePair(Of String, LocalizedValue)(), Int32)
- uid: TimeCockpit.Data.Localization.LocalizedValueCollection.Remove(System.Collections.Generic.KeyValuePair{System.String,TimeCockpit.Data.Localization.LocalizedValue})
  commentId: M:TimeCockpit.Data.Localization.LocalizedValueCollection.Remove(System.Collections.Generic.KeyValuePair{System.String,TimeCockpit.Data.Localization.LocalizedValue})
  id: Remove(System.Collections.Generic.KeyValuePair{System.String,TimeCockpit.Data.Localization.LocalizedValue})
  parent: TimeCockpit.Data.Localization.LocalizedValueCollection
  langs:
  - csharp
  - vb
  name: Remove(KeyValuePair<String, LocalizedValue>)
  nameWithType: LocalizedValueCollection.Remove(KeyValuePair<String, LocalizedValue>)
  fullName: TimeCockpit.Data.Localization.LocalizedValueCollection.Remove(System.Collections.Generic.KeyValuePair<System.String, TimeCockpit.Data.Localization.LocalizedValue>)
  type: Method
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Localization
  summary: "\nRemoves the specified item.\n"
  syntax:
    content: public bool Remove(KeyValuePair<string, LocalizedValue> item)
    parameters:
    - id: item
      type: System.Collections.Generic.KeyValuePair{System.String,TimeCockpit.Data.Localization.LocalizedValue}
      description: The item.
    return:
      type: System.Boolean
      description: a key value pair of string and <xref href="TimeCockpit.Data.Localization.LocalizedValue" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Function Remove(item As KeyValuePair(Of String, LocalizedValue)) As Boolean
  overload: TimeCockpit.Data.Localization.LocalizedValueCollection.Remove*
  implements:
  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,TimeCockpit.Data.Localization.LocalizedValue}}.Remove(System.Collections.Generic.KeyValuePair{System.String,TimeCockpit.Data.Localization.LocalizedValue})
  nameWithType.vb: LocalizedValueCollection.Remove(KeyValuePair(Of String, LocalizedValue))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TimeCockpit.Data.Localization.LocalizedValueCollection.Remove(System.Collections.Generic.KeyValuePair(Of System.String, TimeCockpit.Data.Localization.LocalizedValue))
  name.vb: Remove(KeyValuePair(Of String, LocalizedValue))
- uid: TimeCockpit.Data.Localization.LocalizedValueCollection.GetEnumerator
  commentId: M:TimeCockpit.Data.Localization.LocalizedValueCollection.GetEnumerator
  id: GetEnumerator
  parent: TimeCockpit.Data.Localization.LocalizedValueCollection
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: LocalizedValueCollection.GetEnumerator()
  fullName: TimeCockpit.Data.Localization.LocalizedValueCollection.GetEnumerator()
  type: Method
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Localization
  summary: "\nGets the enumerator.\n"
  syntax:
    content: public IEnumerator<KeyValuePair<string, LocalizedValue>> GetEnumerator()
    return:
      type: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{System.String,TimeCockpit.Data.Localization.LocalizedValue}}
      description: an enumerator
    content.vb: Public Function GetEnumerator As IEnumerator(Of KeyValuePair(Of String, LocalizedValue))
  overload: TimeCockpit.Data.Localization.LocalizedValueCollection.GetEnumerator*
  implements:
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,TimeCockpit.Data.Localization.LocalizedValue}}.GetEnumerator
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Localization.LocalizedValueCollection.System#Collections#IEnumerable#GetEnumerator
  commentId: M:TimeCockpit.Data.Localization.LocalizedValueCollection.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: TimeCockpit.Data.Localization.LocalizedValueCollection
  langs:
  - csharp
  - vb
  name: IEnumerable.GetEnumerator()
  nameWithType: LocalizedValueCollection.IEnumerable.GetEnumerator()
  fullName: TimeCockpit.Data.Localization.LocalizedValueCollection.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Localization
  summary: "\nReturns an enumerator that iterates through a collection.\n"
  syntax:
    content: IEnumerator IEnumerable.GetEnumerator()
    return:
      type: System.Collections.IEnumerator
      description: "\nAn <xref href=\"System.Collections.IEnumerator\" data-throw-if-not-resolved=\"false\"></xref> object that can be used to iterate through the collection.\n"
    content.vb: Function System.Collections.IEnumerable.GetEnumerator As IEnumerator Implements IEnumerable.GetEnumerator
  overload: TimeCockpit.Data.Localization.LocalizedValueCollection.System#Collections#IEnumerable#GetEnumerator*
  implements:
  - System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: LocalizedValueCollection.System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
- uid: TimeCockpit.Data.Localization.LocalizedValueCollection.Count
  commentId: P:TimeCockpit.Data.Localization.LocalizedValueCollection.Count
  id: Count
  parent: TimeCockpit.Data.Localization.LocalizedValueCollection
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: LocalizedValueCollection.Count
  fullName: TimeCockpit.Data.Localization.LocalizedValueCollection.Count
  type: Property
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Localization
  summary: "\nGets the count.\n"
  syntax:
    content: public int Count { get; }
    parameters: []
    return:
      type: System.Int32
      description: "\nThe count.\n"
    content.vb: Public ReadOnly Property Count As Integer
  overload: TimeCockpit.Data.Localization.LocalizedValueCollection.Count*
  implements:
  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,TimeCockpit.Data.Localization.LocalizedValue}}.Count
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TimeCockpit.Data.Localization.LocalizedValueCollection.IsReadOnly
  commentId: P:TimeCockpit.Data.Localization.LocalizedValueCollection.IsReadOnly
  id: IsReadOnly
  parent: TimeCockpit.Data.Localization.LocalizedValueCollection
  langs:
  - csharp
  - vb
  name: IsReadOnly
  nameWithType: LocalizedValueCollection.IsReadOnly
  fullName: TimeCockpit.Data.Localization.LocalizedValueCollection.IsReadOnly
  type: Property
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Localization
  summary: "\nGets a value indicating whether this instance is read only.\n"
  syntax:
    content: public bool IsReadOnly { get; }
    parameters: []
    return:
      type: System.Boolean
      description: "\n<code>true</code> if this instance is read only; otherwise, <code>false</code>.\n"
    content.vb: Public ReadOnly Property IsReadOnly As Boolean
  overload: TimeCockpit.Data.Localization.LocalizedValueCollection.IsReadOnly*
  implements:
  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,TimeCockpit.Data.Localization.LocalizedValue}}.IsReadOnly
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TimeCockpit.Data.Localization.LocalizedValueCollection.Keys
  commentId: P:TimeCockpit.Data.Localization.LocalizedValueCollection.Keys
  id: Keys
  parent: TimeCockpit.Data.Localization.LocalizedValueCollection
  langs:
  - csharp
  - vb
  name: Keys
  nameWithType: LocalizedValueCollection.Keys
  fullName: TimeCockpit.Data.Localization.LocalizedValueCollection.Keys
  type: Property
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Localization
  summary: "\nGets the keys.\n"
  syntax:
    content: public ICollection<string> Keys { get; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{System.String}
      description: "\nThe keys.\n"
    content.vb: Public ReadOnly Property Keys As ICollection(Of String)
  overload: TimeCockpit.Data.Localization.LocalizedValueCollection.Keys*
  implements:
  - System.Collections.Generic.IDictionary{System.String,TimeCockpit.Data.Localization.LocalizedValue}.Keys
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TimeCockpit.Data.Localization.LocalizedValueCollection.Values
  commentId: P:TimeCockpit.Data.Localization.LocalizedValueCollection.Values
  id: Values
  parent: TimeCockpit.Data.Localization.LocalizedValueCollection
  langs:
  - csharp
  - vb
  name: Values
  nameWithType: LocalizedValueCollection.Values
  fullName: TimeCockpit.Data.Localization.LocalizedValueCollection.Values
  type: Property
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Localization
  summary: "\nGets the values.\n"
  syntax:
    content: public ICollection<LocalizedValue> Values { get; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{TimeCockpit.Data.Localization.LocalizedValue}
      description: "\nThe values.\n"
    content.vb: Public ReadOnly Property Values As ICollection(Of LocalizedValue)
  overload: TimeCockpit.Data.Localization.LocalizedValueCollection.Values*
  implements:
  - System.Collections.Generic.IDictionary{System.String,TimeCockpit.Data.Localization.LocalizedValue}.Values
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TimeCockpit.Data.Localization.LocalizedValueCollection.Item(System.String)
  commentId: P:TimeCockpit.Data.Localization.LocalizedValueCollection.Item(System.String)
  id: Item(System.String)
  parent: TimeCockpit.Data.Localization.LocalizedValueCollection
  langs:
  - csharp
  - vb
  name: Item[String]
  nameWithType: LocalizedValueCollection.Item[String]
  fullName: TimeCockpit.Data.Localization.LocalizedValueCollection.Item[System.String]
  type: Property
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Localization
  summary: "\nGets or sets the <xref href=\"TimeCockpit.Data.Localization.LocalizedValue\" data-throw-if-not-resolved=\"false\"></xref> with the specified key.\n"
  syntax:
    content: public LocalizedValue this[string key] { get; set; }
    parameters:
    - id: key
      type: System.String
      description: The key.
    return:
      type: TimeCockpit.Data.Localization.LocalizedValue
      description: "\nThe <xref href=\"TimeCockpit.Data.Localization.LocalizedValue\" data-throw-if-not-resolved=\"false\"></xref>.\n"
    content.vb: Public Property Item(key As String) As LocalizedValue
  overload: TimeCockpit.Data.Localization.LocalizedValueCollection.Item*
  implements:
  - System.Collections.Generic.IDictionary{System.String,TimeCockpit.Data.Localization.LocalizedValue}.Item(System.String)
  nameWithType.vb: LocalizedValueCollection.Item(String)
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: TimeCockpit.Data.Localization.LocalizedValueCollection.Item(System.String)
  name.vb: Item(String)
references:
- uid: TimeCockpit.Data.Localization
  commentId: N:TimeCockpit.Data.Localization
  isExternal: true
  name: TimeCockpit.Data.Localization
  nameWithType: TimeCockpit.Data.Localization
  fullName: TimeCockpit.Data.Localization
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: TimeCockpit.Data.DynamicObject
  commentId: T:TimeCockpit.Data.DynamicObject
  parent: TimeCockpit.Data
  isExternal: true
  name: DynamicObject
  nameWithType: DynamicObject
  fullName: TimeCockpit.Data.DynamicObject
- uid: System.Dynamic.IDynamicMetaObjectProvider
  isExternal: true
  name: IDynamicMetaObjectProvider
  nameWithType: IDynamicMetaObjectProvider
  fullName: System.Dynamic.IDynamicMetaObjectProvider
- uid: System.Collections.Generic.IDictionary{System.String,TimeCockpit.Data.Localization.LocalizedValue}
  commentId: T:System.Collections.Generic.IDictionary{System.String,TimeCockpit.Data.Localization.LocalizedValue}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, LocalizedValue>
  nameWithType: IDictionary<String, LocalizedValue>
  fullName: System.Collections.Generic.IDictionary<System.String, TimeCockpit.Data.Localization.LocalizedValue>
  nameWithType.vb: IDictionary(Of String, LocalizedValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, TimeCockpit.Data.Localization.LocalizedValue)
  name.vb: IDictionary(Of String, LocalizedValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TimeCockpit.Data.Localization.LocalizedValue
    name: LocalizedValue
    nameWithType: LocalizedValue
    fullName: TimeCockpit.Data.Localization.LocalizedValue
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TimeCockpit.Data.Localization.LocalizedValue
    name: LocalizedValue
    nameWithType: LocalizedValue
    fullName: TimeCockpit.Data.Localization.LocalizedValue
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,TimeCockpit.Data.Localization.LocalizedValue}}
  commentId: T:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,TimeCockpit.Data.Localization.LocalizedValue}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<KeyValuePair<String, LocalizedValue>>
  nameWithType: ICollection<KeyValuePair<String, LocalizedValue>>
  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, TimeCockpit.Data.Localization.LocalizedValue>>
  nameWithType.vb: ICollection(Of KeyValuePair(Of String, LocalizedValue))
  fullName.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of System.String, TimeCockpit.Data.Localization.LocalizedValue))
  name.vb: ICollection(Of KeyValuePair(Of String, LocalizedValue))
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TimeCockpit.Data.Localization.LocalizedValue
    name: LocalizedValue
    nameWithType: LocalizedValue
    fullName: TimeCockpit.Data.Localization.LocalizedValue
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TimeCockpit.Data.Localization.LocalizedValue
    name: LocalizedValue
    nameWithType: LocalizedValue
    fullName: TimeCockpit.Data.Localization.LocalizedValue
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,TimeCockpit.Data.Localization.LocalizedValue}}
  commentId: T:System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,TimeCockpit.Data.Localization.LocalizedValue}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<KeyValuePair<String, LocalizedValue>>
  nameWithType: IEnumerable<KeyValuePair<String, LocalizedValue>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, TimeCockpit.Data.Localization.LocalizedValue>>
  nameWithType.vb: IEnumerable(Of KeyValuePair(Of String, LocalizedValue))
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.String, TimeCockpit.Data.Localization.LocalizedValue))
  name.vb: IEnumerable(Of KeyValuePair(Of String, LocalizedValue))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TimeCockpit.Data.Localization.LocalizedValue
    name: LocalizedValue
    nameWithType: LocalizedValue
    fullName: TimeCockpit.Data.Localization.LocalizedValue
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TimeCockpit.Data.Localization.LocalizedValue
    name: LocalizedValue
    nameWithType: LocalizedValue
    fullName: TimeCockpit.Data.Localization.LocalizedValue
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: TimeCockpit.Data.DynamicObject.SetMember(System.String,System.Object)
  commentId: M:TimeCockpit.Data.DynamicObject.SetMember(System.String,System.Object)
  parent: TimeCockpit.Data.DynamicObject
  isExternal: true
  name: SetMember(String, Object)
  nameWithType: DynamicObject.SetMember(String, Object)
  fullName: TimeCockpit.Data.DynamicObject.SetMember(System.String, System.Object)
  spec.csharp:
  - uid: TimeCockpit.Data.DynamicObject.SetMember(System.String,System.Object)
    name: SetMember
    nameWithType: DynamicObject.SetMember
    fullName: TimeCockpit.Data.DynamicObject.SetMember
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TimeCockpit.Data.DynamicObject.SetMember(System.String,System.Object)
    name: SetMember
    nameWithType: DynamicObject.SetMember
    fullName: TimeCockpit.Data.DynamicObject.SetMember
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.DynamicObject.GetMetaObject(System.Linq.Expressions.Expression)
  commentId: M:TimeCockpit.Data.DynamicObject.GetMetaObject(System.Linq.Expressions.Expression)
  parent: TimeCockpit.Data.DynamicObject
  isExternal: true
  name: GetMetaObject(Expression)
  nameWithType: DynamicObject.GetMetaObject(Expression)
  fullName: TimeCockpit.Data.DynamicObject.GetMetaObject(System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: TimeCockpit.Data.DynamicObject.GetMetaObject(System.Linq.Expressions.Expression)
    name: GetMetaObject
    nameWithType: DynamicObject.GetMetaObject
    fullName: TimeCockpit.Data.DynamicObject.GetMetaObject
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TimeCockpit.Data.DynamicObject.GetMetaObject(System.Linq.Expressions.Expression)
    name: GetMetaObject
    nameWithType: DynamicObject.GetMetaObject
    fullName: TimeCockpit.Data.DynamicObject.GetMetaObject
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TimeCockpit.Data
  commentId: N:TimeCockpit.Data
  isExternal: true
  name: TimeCockpit.Data
  nameWithType: TimeCockpit.Data
  fullName: TimeCockpit.Data
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: TimeCockpit.Data.DynamicObject.GetMember(System.String)
  commentId: M:TimeCockpit.Data.DynamicObject.GetMember(System.String)
  parent: TimeCockpit.Data.DynamicObject
  isExternal: true
  name: GetMember(String)
  nameWithType: DynamicObject.GetMember(String)
  fullName: TimeCockpit.Data.DynamicObject.GetMember(System.String)
  spec.csharp:
  - uid: TimeCockpit.Data.DynamicObject.GetMember(System.String)
    name: GetMember
    nameWithType: DynamicObject.GetMember
    fullName: TimeCockpit.Data.DynamicObject.GetMember
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TimeCockpit.Data.DynamicObject.GetMember(System.String)
    name: GetMember
    nameWithType: DynamicObject.GetMember
    fullName: TimeCockpit.Data.DynamicObject.GetMember
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.Localization.LocalizedValueCollection.GetMember*
  commentId: Overload:TimeCockpit.Data.Localization.LocalizedValueCollection.GetMember
  isExternal: true
  name: GetMember
  nameWithType: LocalizedValueCollection.GetMember
  fullName: TimeCockpit.Data.Localization.LocalizedValueCollection.GetMember
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: TimeCockpit.Data.Localization.LocalizedValueCollection.Add*
  commentId: Overload:TimeCockpit.Data.Localization.LocalizedValueCollection.Add
  isExternal: true
  name: Add
  nameWithType: LocalizedValueCollection.Add
  fullName: TimeCockpit.Data.Localization.LocalizedValueCollection.Add
- uid: System.Collections.Generic.IDictionary{System.String,TimeCockpit.Data.Localization.LocalizedValue}.Add(System.String,TimeCockpit.Data.Localization.LocalizedValue)
  commentId: M:System.Collections.Generic.IDictionary{System.String,TimeCockpit.Data.Localization.LocalizedValue}.Add(System.String,TimeCockpit.Data.Localization.LocalizedValue)
  parent: System.Collections.Generic.IDictionary{System.String,TimeCockpit.Data.Localization.LocalizedValue}
  definition: System.Collections.Generic.IDictionary`2.Add(`0,`1)
  name: Add(String, LocalizedValue)
  nameWithType: IDictionary<String, LocalizedValue>.Add(String, LocalizedValue)
  fullName: System.Collections.Generic.IDictionary<System.String, TimeCockpit.Data.Localization.LocalizedValue>.Add(System.String, TimeCockpit.Data.Localization.LocalizedValue)
  nameWithType.vb: IDictionary(Of String, LocalizedValue).Add(String, LocalizedValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, TimeCockpit.Data.Localization.LocalizedValue).Add(System.String, TimeCockpit.Data.Localization.LocalizedValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2.Add(`0,`1)
    name: Add
    nameWithType: IDictionary<String, LocalizedValue>.Add
    fullName: System.Collections.Generic.IDictionary<System.String, TimeCockpit.Data.Localization.LocalizedValue>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TimeCockpit.Data.Localization.LocalizedValue
    name: LocalizedValue
    nameWithType: LocalizedValue
    fullName: TimeCockpit.Data.Localization.LocalizedValue
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2.Add(`0,`1)
    name: Add
    nameWithType: IDictionary(Of String, LocalizedValue).Add
    fullName: System.Collections.Generic.IDictionary(Of System.String, TimeCockpit.Data.Localization.LocalizedValue).Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TimeCockpit.Data.Localization.LocalizedValue
    name: LocalizedValue
    nameWithType: LocalizedValue
    fullName: TimeCockpit.Data.Localization.LocalizedValue
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.Localization.LocalizedValue
  commentId: T:TimeCockpit.Data.Localization.LocalizedValue
  parent: TimeCockpit.Data.Localization
  isExternal: true
  name: LocalizedValue
  nameWithType: LocalizedValue
  fullName: TimeCockpit.Data.Localization.LocalizedValue
- uid: System.Collections.Generic.IDictionary`2.Add(`0,`1)
  commentId: M:System.Collections.Generic.IDictionary`2.Add(`0,`1)
  isExternal: true
  name: Add(TKey, TValue)
  nameWithType: IDictionary<TKey, TValue>.Add(TKey, TValue)
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)
  nameWithType.vb: IDictionary(Of TKey, TValue).Add(TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).Add(TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2.Add(`0,`1)
    name: Add
    nameWithType: IDictionary<TKey, TValue>.Add
    fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2.Add(`0,`1)
    name: Add
    nameWithType: IDictionary(Of TKey, TValue).Add
    fullName: System.Collections.Generic.IDictionary(Of TKey, TValue).Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.Localization.LocalizedValueCollection.ContainsKey*
  commentId: Overload:TimeCockpit.Data.Localization.LocalizedValueCollection.ContainsKey
  isExternal: true
  name: ContainsKey
  nameWithType: LocalizedValueCollection.ContainsKey
  fullName: TimeCockpit.Data.Localization.LocalizedValueCollection.ContainsKey
- uid: System.Collections.Generic.IDictionary{System.String,TimeCockpit.Data.Localization.LocalizedValue}.ContainsKey(System.String)
  commentId: M:System.Collections.Generic.IDictionary{System.String,TimeCockpit.Data.Localization.LocalizedValue}.ContainsKey(System.String)
  parent: System.Collections.Generic.IDictionary{System.String,TimeCockpit.Data.Localization.LocalizedValue}
  definition: System.Collections.Generic.IDictionary`2.ContainsKey(`0)
  name: ContainsKey(String)
  nameWithType: IDictionary<String, LocalizedValue>.ContainsKey(String)
  fullName: System.Collections.Generic.IDictionary<System.String, TimeCockpit.Data.Localization.LocalizedValue>.ContainsKey(System.String)
  nameWithType.vb: IDictionary(Of String, LocalizedValue).ContainsKey(String)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, TimeCockpit.Data.Localization.LocalizedValue).ContainsKey(System.String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2.ContainsKey(`0)
    name: ContainsKey
    nameWithType: IDictionary<String, LocalizedValue>.ContainsKey
    fullName: System.Collections.Generic.IDictionary<System.String, TimeCockpit.Data.Localization.LocalizedValue>.ContainsKey
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2.ContainsKey(`0)
    name: ContainsKey
    nameWithType: IDictionary(Of String, LocalizedValue).ContainsKey
    fullName: System.Collections.Generic.IDictionary(Of System.String, TimeCockpit.Data.Localization.LocalizedValue).ContainsKey
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.IDictionary`2.ContainsKey(`0)
  commentId: M:System.Collections.Generic.IDictionary`2.ContainsKey(`0)
  isExternal: true
  name: ContainsKey(TKey)
  nameWithType: IDictionary<TKey, TValue>.ContainsKey(TKey)
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)
  nameWithType.vb: IDictionary(Of TKey, TValue).ContainsKey(TKey)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).ContainsKey(TKey)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2.ContainsKey(`0)
    name: ContainsKey
    nameWithType: IDictionary<TKey, TValue>.ContainsKey
    fullName: System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2.ContainsKey(`0)
    name: ContainsKey
    nameWithType: IDictionary(Of TKey, TValue).ContainsKey
    fullName: System.Collections.Generic.IDictionary(Of TKey, TValue).ContainsKey
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.Localization.LocalizedValueCollection.Remove*
  commentId: Overload:TimeCockpit.Data.Localization.LocalizedValueCollection.Remove
  isExternal: true
  name: Remove
  nameWithType: LocalizedValueCollection.Remove
  fullName: TimeCockpit.Data.Localization.LocalizedValueCollection.Remove
- uid: System.Collections.Generic.IDictionary{System.String,TimeCockpit.Data.Localization.LocalizedValue}.Remove(System.String)
  commentId: M:System.Collections.Generic.IDictionary{System.String,TimeCockpit.Data.Localization.LocalizedValue}.Remove(System.String)
  parent: System.Collections.Generic.IDictionary{System.String,TimeCockpit.Data.Localization.LocalizedValue}
  definition: System.Collections.Generic.IDictionary`2.Remove(`0)
  name: Remove(String)
  nameWithType: IDictionary<String, LocalizedValue>.Remove(String)
  fullName: System.Collections.Generic.IDictionary<System.String, TimeCockpit.Data.Localization.LocalizedValue>.Remove(System.String)
  nameWithType.vb: IDictionary(Of String, LocalizedValue).Remove(String)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, TimeCockpit.Data.Localization.LocalizedValue).Remove(System.String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2.Remove(`0)
    name: Remove
    nameWithType: IDictionary<String, LocalizedValue>.Remove
    fullName: System.Collections.Generic.IDictionary<System.String, TimeCockpit.Data.Localization.LocalizedValue>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2.Remove(`0)
    name: Remove
    nameWithType: IDictionary(Of String, LocalizedValue).Remove
    fullName: System.Collections.Generic.IDictionary(Of System.String, TimeCockpit.Data.Localization.LocalizedValue).Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2.Remove(`0)
  commentId: M:System.Collections.Generic.IDictionary`2.Remove(`0)
  isExternal: true
  name: Remove(TKey)
  nameWithType: IDictionary<TKey, TValue>.Remove(TKey)
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Remove(TKey)
  nameWithType.vb: IDictionary(Of TKey, TValue).Remove(TKey)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).Remove(TKey)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2.Remove(`0)
    name: Remove
    nameWithType: IDictionary<TKey, TValue>.Remove
    fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2.Remove(`0)
    name: Remove
    nameWithType: IDictionary(Of TKey, TValue).Remove
    fullName: System.Collections.Generic.IDictionary(Of TKey, TValue).Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.Localization.LocalizedValueCollection.TryGetValue*
  commentId: Overload:TimeCockpit.Data.Localization.LocalizedValueCollection.TryGetValue
  isExternal: true
  name: TryGetValue
  nameWithType: LocalizedValueCollection.TryGetValue
  fullName: TimeCockpit.Data.Localization.LocalizedValueCollection.TryGetValue
- uid: System.Collections.Generic.IDictionary{System.String,TimeCockpit.Data.Localization.LocalizedValue}.TryGetValue(System.String,TimeCockpit.Data.Localization.LocalizedValue@)
  commentId: M:System.Collections.Generic.IDictionary{System.String,TimeCockpit.Data.Localization.LocalizedValue}.TryGetValue(System.String,TimeCockpit.Data.Localization.LocalizedValue@)
  parent: System.Collections.Generic.IDictionary{System.String,TimeCockpit.Data.Localization.LocalizedValue}
  definition: System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)
  name: TryGetValue(String, LocalizedValue)
  nameWithType: IDictionary<String, LocalizedValue>.TryGetValue(String, LocalizedValue)
  fullName: System.Collections.Generic.IDictionary<System.String, TimeCockpit.Data.Localization.LocalizedValue>.TryGetValue(System.String, TimeCockpit.Data.Localization.LocalizedValue)
  nameWithType.vb: IDictionary(Of String, LocalizedValue).TryGetValue(String, LocalizedValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, TimeCockpit.Data.Localization.LocalizedValue).TryGetValue(System.String, TimeCockpit.Data.Localization.LocalizedValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)
    name: TryGetValue
    nameWithType: IDictionary<String, LocalizedValue>.TryGetValue
    fullName: System.Collections.Generic.IDictionary<System.String, TimeCockpit.Data.Localization.LocalizedValue>.TryGetValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TimeCockpit.Data.Localization.LocalizedValue
    name: LocalizedValue
    nameWithType: LocalizedValue
    fullName: TimeCockpit.Data.Localization.LocalizedValue
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)
    name: TryGetValue
    nameWithType: IDictionary(Of String, LocalizedValue).TryGetValue
    fullName: System.Collections.Generic.IDictionary(Of System.String, TimeCockpit.Data.Localization.LocalizedValue).TryGetValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TimeCockpit.Data.Localization.LocalizedValue
    name: LocalizedValue
    nameWithType: LocalizedValue
    fullName: TimeCockpit.Data.Localization.LocalizedValue
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)
  commentId: M:System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)
  isExternal: true
  name: TryGetValue(TKey, TValue)
  nameWithType: IDictionary<TKey, TValue>.TryGetValue(TKey, TValue)
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.TryGetValue(TKey, TValue)
  nameWithType.vb: IDictionary(Of TKey, TValue).TryGetValue(TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).TryGetValue(TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)
    name: TryGetValue
    nameWithType: IDictionary<TKey, TValue>.TryGetValue
    fullName: System.Collections.Generic.IDictionary<TKey, TValue>.TryGetValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)
    name: TryGetValue
    nameWithType: IDictionary(Of TKey, TValue).TryGetValue
    fullName: System.Collections.Generic.IDictionary(Of TKey, TValue).TryGetValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,TimeCockpit.Data.Localization.LocalizedValue}}.Add(System.Collections.Generic.KeyValuePair{System.String,TimeCockpit.Data.Localization.LocalizedValue})
  commentId: M:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,TimeCockpit.Data.Localization.LocalizedValue}}.Add(System.Collections.Generic.KeyValuePair{System.String,TimeCockpit.Data.Localization.LocalizedValue})
  parent: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,TimeCockpit.Data.Localization.LocalizedValue}}
  definition: System.Collections.Generic.ICollection`1.Add(`0)
  name: Add(KeyValuePair<String, LocalizedValue>)
  nameWithType: ICollection<KeyValuePair<String, LocalizedValue>>.Add(KeyValuePair<String, LocalizedValue>)
  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, TimeCockpit.Data.Localization.LocalizedValue>>.Add(System.Collections.Generic.KeyValuePair<System.String, TimeCockpit.Data.Localization.LocalizedValue>)
  nameWithType.vb: ICollection(Of KeyValuePair(Of String, LocalizedValue)).Add(KeyValuePair(Of String, LocalizedValue))
  fullName.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of System.String, TimeCockpit.Data.Localization.LocalizedValue)).Add(System.Collections.Generic.KeyValuePair(Of System.String, TimeCockpit.Data.Localization.LocalizedValue))
  name.vb: Add(KeyValuePair(Of String, LocalizedValue))
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    nameWithType: ICollection<KeyValuePair<String, LocalizedValue>>.Add
    fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, TimeCockpit.Data.Localization.LocalizedValue>>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TimeCockpit.Data.Localization.LocalizedValue
    name: LocalizedValue
    nameWithType: LocalizedValue
    fullName: TimeCockpit.Data.Localization.LocalizedValue
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    nameWithType: ICollection(Of KeyValuePair(Of String, LocalizedValue)).Add
    fullName: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of System.String, TimeCockpit.Data.Localization.LocalizedValue)).Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TimeCockpit.Data.Localization.LocalizedValue
    name: LocalizedValue
    nameWithType: LocalizedValue
    fullName: TimeCockpit.Data.Localization.LocalizedValue
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.KeyValuePair{System.String,TimeCockpit.Data.Localization.LocalizedValue}
  commentId: T:System.Collections.Generic.KeyValuePair{System.String,TimeCockpit.Data.Localization.LocalizedValue}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.KeyValuePair`2
  name: KeyValuePair<String, LocalizedValue>
  nameWithType: KeyValuePair<String, LocalizedValue>
  fullName: System.Collections.Generic.KeyValuePair<System.String, TimeCockpit.Data.Localization.LocalizedValue>
  nameWithType.vb: KeyValuePair(Of String, LocalizedValue)
  fullName.vb: System.Collections.Generic.KeyValuePair(Of System.String, TimeCockpit.Data.Localization.LocalizedValue)
  name.vb: KeyValuePair(Of String, LocalizedValue)
  spec.csharp:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TimeCockpit.Data.Localization.LocalizedValue
    name: LocalizedValue
    nameWithType: LocalizedValue
    fullName: TimeCockpit.Data.Localization.LocalizedValue
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TimeCockpit.Data.Localization.LocalizedValue
    name: LocalizedValue
    nameWithType: LocalizedValue
    fullName: TimeCockpit.Data.Localization.LocalizedValue
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1.Add(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Add(`0)
  isExternal: true
  name: Add(T)
  nameWithType: ICollection<T>.Add(T)
  fullName: System.Collections.Generic.ICollection<T>.Add(T)
  nameWithType.vb: ICollection(Of T).Add(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Add(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    nameWithType: ICollection<T>.Add
    fullName: System.Collections.Generic.ICollection<T>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    nameWithType: ICollection(Of T).Add
    fullName: System.Collections.Generic.ICollection(Of T).Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.KeyValuePair`2
  commentId: T:System.Collections.Generic.KeyValuePair`2
  isExternal: true
  name: KeyValuePair<TKey, TValue>
  nameWithType: KeyValuePair<TKey, TValue>
  fullName: System.Collections.Generic.KeyValuePair<TKey, TValue>
  nameWithType.vb: KeyValuePair(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.KeyValuePair(Of TKey, TValue)
  name.vb: KeyValuePair(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.Localization.LocalizedValueCollection.Clear*
  commentId: Overload:TimeCockpit.Data.Localization.LocalizedValueCollection.Clear
  isExternal: true
  name: Clear
  nameWithType: LocalizedValueCollection.Clear
  fullName: TimeCockpit.Data.Localization.LocalizedValueCollection.Clear
- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,TimeCockpit.Data.Localization.LocalizedValue}}.Clear
  commentId: M:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,TimeCockpit.Data.Localization.LocalizedValue}}.Clear
  parent: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,TimeCockpit.Data.Localization.LocalizedValue}}
  definition: System.Collections.Generic.ICollection`1.Clear
  name: Clear()
  nameWithType: ICollection<KeyValuePair<String, LocalizedValue>>.Clear()
  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, TimeCockpit.Data.Localization.LocalizedValue>>.Clear()
  nameWithType.vb: ICollection(Of KeyValuePair(Of String, LocalizedValue)).Clear()
  fullName.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of System.String, TimeCockpit.Data.Localization.LocalizedValue)).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    nameWithType: ICollection<KeyValuePair<String, LocalizedValue>>.Clear
    fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, TimeCockpit.Data.Localization.LocalizedValue>>.Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    nameWithType: ICollection(Of KeyValuePair(Of String, LocalizedValue)).Clear
    fullName: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of System.String, TimeCockpit.Data.Localization.LocalizedValue)).Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1.Clear
  commentId: M:System.Collections.Generic.ICollection`1.Clear
  isExternal: true
  name: Clear()
  nameWithType: ICollection<T>.Clear()
  fullName: System.Collections.Generic.ICollection<T>.Clear()
  nameWithType.vb: ICollection(Of T).Clear()
  fullName.vb: System.Collections.Generic.ICollection(Of T).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    nameWithType: ICollection<T>.Clear
    fullName: System.Collections.Generic.ICollection<T>.Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    nameWithType: ICollection(Of T).Clear
    fullName: System.Collections.Generic.ICollection(Of T).Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.Localization.LocalizedValueCollection.Contains*
  commentId: Overload:TimeCockpit.Data.Localization.LocalizedValueCollection.Contains
  isExternal: true
  name: Contains
  nameWithType: LocalizedValueCollection.Contains
  fullName: TimeCockpit.Data.Localization.LocalizedValueCollection.Contains
- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,TimeCockpit.Data.Localization.LocalizedValue}}.Contains(System.Collections.Generic.KeyValuePair{System.String,TimeCockpit.Data.Localization.LocalizedValue})
  commentId: M:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,TimeCockpit.Data.Localization.LocalizedValue}}.Contains(System.Collections.Generic.KeyValuePair{System.String,TimeCockpit.Data.Localization.LocalizedValue})
  parent: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,TimeCockpit.Data.Localization.LocalizedValue}}
  definition: System.Collections.Generic.ICollection`1.Contains(`0)
  name: Contains(KeyValuePair<String, LocalizedValue>)
  nameWithType: ICollection<KeyValuePair<String, LocalizedValue>>.Contains(KeyValuePair<String, LocalizedValue>)
  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, TimeCockpit.Data.Localization.LocalizedValue>>.Contains(System.Collections.Generic.KeyValuePair<System.String, TimeCockpit.Data.Localization.LocalizedValue>)
  nameWithType.vb: ICollection(Of KeyValuePair(Of String, LocalizedValue)).Contains(KeyValuePair(Of String, LocalizedValue))
  fullName.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of System.String, TimeCockpit.Data.Localization.LocalizedValue)).Contains(System.Collections.Generic.KeyValuePair(Of System.String, TimeCockpit.Data.Localization.LocalizedValue))
  name.vb: Contains(KeyValuePair(Of String, LocalizedValue))
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    nameWithType: ICollection<KeyValuePair<String, LocalizedValue>>.Contains
    fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, TimeCockpit.Data.Localization.LocalizedValue>>.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TimeCockpit.Data.Localization.LocalizedValue
    name: LocalizedValue
    nameWithType: LocalizedValue
    fullName: TimeCockpit.Data.Localization.LocalizedValue
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    nameWithType: ICollection(Of KeyValuePair(Of String, LocalizedValue)).Contains
    fullName: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of System.String, TimeCockpit.Data.Localization.LocalizedValue)).Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TimeCockpit.Data.Localization.LocalizedValue
    name: LocalizedValue
    nameWithType: LocalizedValue
    fullName: TimeCockpit.Data.Localization.LocalizedValue
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1.Contains(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Contains(`0)
  isExternal: true
  name: Contains(T)
  nameWithType: ICollection<T>.Contains(T)
  fullName: System.Collections.Generic.ICollection<T>.Contains(T)
  nameWithType.vb: ICollection(Of T).Contains(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Contains(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    nameWithType: ICollection<T>.Contains
    fullName: System.Collections.Generic.ICollection<T>.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    nameWithType: ICollection(Of T).Contains
    fullName: System.Collections.Generic.ICollection(Of T).Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.Localization.LocalizedValueCollection.CopyTo*
  commentId: Overload:TimeCockpit.Data.Localization.LocalizedValueCollection.CopyTo
  isExternal: true
  name: CopyTo
  nameWithType: LocalizedValueCollection.CopyTo
  fullName: TimeCockpit.Data.Localization.LocalizedValueCollection.CopyTo
- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,TimeCockpit.Data.Localization.LocalizedValue}}.CopyTo(System.Collections.Generic.KeyValuePair{System.String,TimeCockpit.Data.Localization.LocalizedValue}[],System.Int32)
  commentId: M:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,TimeCockpit.Data.Localization.LocalizedValue}}.CopyTo(System.Collections.Generic.KeyValuePair{System.String,TimeCockpit.Data.Localization.LocalizedValue}[],System.Int32)
  parent: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,TimeCockpit.Data.Localization.LocalizedValue}}
  definition: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  name: CopyTo(KeyValuePair<String, LocalizedValue>[], Int32)
  nameWithType: ICollection<KeyValuePair<String, LocalizedValue>>.CopyTo(KeyValuePair<String, LocalizedValue>[], Int32)
  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, TimeCockpit.Data.Localization.LocalizedValue>>.CopyTo(System.Collections.Generic.KeyValuePair<System.String, TimeCockpit.Data.Localization.LocalizedValue>[], System.Int32)
  nameWithType.vb: ICollection(Of KeyValuePair(Of String, LocalizedValue)).CopyTo(KeyValuePair(Of String, LocalizedValue)(), Int32)
  fullName.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of System.String, TimeCockpit.Data.Localization.LocalizedValue)).CopyTo(System.Collections.Generic.KeyValuePair(Of System.String, TimeCockpit.Data.Localization.LocalizedValue)(), System.Int32)
  name.vb: CopyTo(KeyValuePair(Of String, LocalizedValue)(), Int32)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: ICollection<KeyValuePair<String, LocalizedValue>>.CopyTo
    fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, TimeCockpit.Data.Localization.LocalizedValue>>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TimeCockpit.Data.Localization.LocalizedValue
    name: LocalizedValue
    nameWithType: LocalizedValue
    fullName: TimeCockpit.Data.Localization.LocalizedValue
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: ICollection(Of KeyValuePair(Of String, LocalizedValue)).CopyTo
    fullName: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of System.String, TimeCockpit.Data.Localization.LocalizedValue)).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TimeCockpit.Data.Localization.LocalizedValue
    name: LocalizedValue
    nameWithType: LocalizedValue
    fullName: TimeCockpit.Data.Localization.LocalizedValue
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.KeyValuePair{System.String,TimeCockpit.Data.Localization.LocalizedValue}[]
  isExternal: true
  name: KeyValuePair<String, LocalizedValue>[]
  nameWithType: KeyValuePair<String, LocalizedValue>[]
  fullName: System.Collections.Generic.KeyValuePair<System.String, TimeCockpit.Data.Localization.LocalizedValue>[]
  nameWithType.vb: KeyValuePair(Of String, LocalizedValue)()
  fullName.vb: System.Collections.Generic.KeyValuePair(Of System.String, TimeCockpit.Data.Localization.LocalizedValue)()
  name.vb: KeyValuePair(Of String, LocalizedValue)()
  spec.csharp:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TimeCockpit.Data.Localization.LocalizedValue
    name: LocalizedValue
    nameWithType: LocalizedValue
    fullName: TimeCockpit.Data.Localization.LocalizedValue
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TimeCockpit.Data.Localization.LocalizedValue
    name: LocalizedValue
    nameWithType: LocalizedValue
    fullName: TimeCockpit.Data.Localization.LocalizedValue
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  commentId: M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  isExternal: true
  name: CopyTo(T[], Int32)
  nameWithType: ICollection<T>.CopyTo(T[], Int32)
  fullName: System.Collections.Generic.ICollection<T>.CopyTo(T[], System.Int32)
  nameWithType.vb: ICollection(Of T).CopyTo(T(), Int32)
  fullName.vb: System.Collections.Generic.ICollection(Of T).CopyTo(T(), System.Int32)
  name.vb: CopyTo(T(), Int32)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: ICollection<T>.CopyTo
    fullName: System.Collections.Generic.ICollection<T>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: ICollection(Of T).CopyTo
    fullName: System.Collections.Generic.ICollection(Of T).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,TimeCockpit.Data.Localization.LocalizedValue}}.Remove(System.Collections.Generic.KeyValuePair{System.String,TimeCockpit.Data.Localization.LocalizedValue})
  commentId: M:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,TimeCockpit.Data.Localization.LocalizedValue}}.Remove(System.Collections.Generic.KeyValuePair{System.String,TimeCockpit.Data.Localization.LocalizedValue})
  parent: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,TimeCockpit.Data.Localization.LocalizedValue}}
  definition: System.Collections.Generic.ICollection`1.Remove(`0)
  name: Remove(KeyValuePair<String, LocalizedValue>)
  nameWithType: ICollection<KeyValuePair<String, LocalizedValue>>.Remove(KeyValuePair<String, LocalizedValue>)
  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, TimeCockpit.Data.Localization.LocalizedValue>>.Remove(System.Collections.Generic.KeyValuePair<System.String, TimeCockpit.Data.Localization.LocalizedValue>)
  nameWithType.vb: ICollection(Of KeyValuePair(Of String, LocalizedValue)).Remove(KeyValuePair(Of String, LocalizedValue))
  fullName.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of System.String, TimeCockpit.Data.Localization.LocalizedValue)).Remove(System.Collections.Generic.KeyValuePair(Of System.String, TimeCockpit.Data.Localization.LocalizedValue))
  name.vb: Remove(KeyValuePair(Of String, LocalizedValue))
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    nameWithType: ICollection<KeyValuePair<String, LocalizedValue>>.Remove
    fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, TimeCockpit.Data.Localization.LocalizedValue>>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TimeCockpit.Data.Localization.LocalizedValue
    name: LocalizedValue
    nameWithType: LocalizedValue
    fullName: TimeCockpit.Data.Localization.LocalizedValue
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    nameWithType: ICollection(Of KeyValuePair(Of String, LocalizedValue)).Remove
    fullName: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of System.String, TimeCockpit.Data.Localization.LocalizedValue)).Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TimeCockpit.Data.Localization.LocalizedValue
    name: LocalizedValue
    nameWithType: LocalizedValue
    fullName: TimeCockpit.Data.Localization.LocalizedValue
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1.Remove(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Remove(`0)
  isExternal: true
  name: Remove(T)
  nameWithType: ICollection<T>.Remove(T)
  fullName: System.Collections.Generic.ICollection<T>.Remove(T)
  nameWithType.vb: ICollection(Of T).Remove(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Remove(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    nameWithType: ICollection<T>.Remove
    fullName: System.Collections.Generic.ICollection<T>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    nameWithType: ICollection(Of T).Remove
    fullName: System.Collections.Generic.ICollection(Of T).Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.Localization.LocalizedValueCollection.GetEnumerator*
  commentId: Overload:TimeCockpit.Data.Localization.LocalizedValueCollection.GetEnumerator
  isExternal: true
  name: GetEnumerator
  nameWithType: LocalizedValueCollection.GetEnumerator
  fullName: TimeCockpit.Data.Localization.LocalizedValueCollection.GetEnumerator
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,TimeCockpit.Data.Localization.LocalizedValue}}.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,TimeCockpit.Data.Localization.LocalizedValue}}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,TimeCockpit.Data.Localization.LocalizedValue}}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<KeyValuePair<String, LocalizedValue>>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, TimeCockpit.Data.Localization.LocalizedValue>>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of KeyValuePair(Of String, LocalizedValue)).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.String, TimeCockpit.Data.Localization.LocalizedValue)).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<KeyValuePair<String, LocalizedValue>>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, TimeCockpit.Data.Localization.LocalizedValue>>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of KeyValuePair(Of String, LocalizedValue)).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.String, TimeCockpit.Data.Localization.LocalizedValue)).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{System.String,TimeCockpit.Data.Localization.LocalizedValue}}
  commentId: T:System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{System.String,TimeCockpit.Data.Localization.LocalizedValue}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  name: IEnumerator<KeyValuePair<String, LocalizedValue>>
  nameWithType: IEnumerator<KeyValuePair<String, LocalizedValue>>
  fullName: System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<System.String, TimeCockpit.Data.Localization.LocalizedValue>>
  nameWithType.vb: IEnumerator(Of KeyValuePair(Of String, LocalizedValue))
  fullName.vb: System.Collections.Generic.IEnumerator(Of System.Collections.Generic.KeyValuePair(Of System.String, TimeCockpit.Data.Localization.LocalizedValue))
  name.vb: IEnumerator(Of KeyValuePair(Of String, LocalizedValue))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TimeCockpit.Data.Localization.LocalizedValue
    name: LocalizedValue
    nameWithType: LocalizedValue
    fullName: TimeCockpit.Data.Localization.LocalizedValue
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TimeCockpit.Data.Localization.LocalizedValue
    name: LocalizedValue
    nameWithType: LocalizedValue
    fullName: TimeCockpit.Data.Localization.LocalizedValue
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of T).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.Localization.LocalizedValueCollection.System#Collections#IEnumerable#GetEnumerator*
  commentId: Overload:TimeCockpit.Data.Localization.LocalizedValueCollection.System#Collections#IEnumerable#GetEnumerator
  isExternal: true
  name: IEnumerable.GetEnumerator
  nameWithType: LocalizedValueCollection.IEnumerable.GetEnumerator
  fullName: TimeCockpit.Data.Localization.LocalizedValueCollection.System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: LocalizedValueCollection.System.Collections.IEnumerable.GetEnumerator
  name.vb: System.Collections.IEnumerable.GetEnumerator
- uid: System.Collections.IEnumerable.GetEnumerator
  commentId: M:System.Collections.IEnumerable.GetEnumerator
  parent: System.Collections.IEnumerable
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable.GetEnumerator()
  fullName: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerator
  commentId: T:System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: TimeCockpit.Data.Localization.LocalizedValueCollection.Count*
  commentId: Overload:TimeCockpit.Data.Localization.LocalizedValueCollection.Count
  isExternal: true
  name: Count
  nameWithType: LocalizedValueCollection.Count
  fullName: TimeCockpit.Data.Localization.LocalizedValueCollection.Count
- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,TimeCockpit.Data.Localization.LocalizedValue}}.Count
  commentId: P:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,TimeCockpit.Data.Localization.LocalizedValue}}.Count
  parent: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,TimeCockpit.Data.Localization.LocalizedValue}}
  definition: System.Collections.Generic.ICollection`1.Count
  name: Count
  nameWithType: ICollection<KeyValuePair<String, LocalizedValue>>.Count
  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, TimeCockpit.Data.Localization.LocalizedValue>>.Count
  nameWithType.vb: ICollection(Of KeyValuePair(Of String, LocalizedValue)).Count
  fullName.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of System.String, TimeCockpit.Data.Localization.LocalizedValue)).Count
- uid: System.Collections.Generic.ICollection`1.Count
  commentId: P:System.Collections.Generic.ICollection`1.Count
  isExternal: true
  name: Count
  nameWithType: ICollection<T>.Count
  fullName: System.Collections.Generic.ICollection<T>.Count
  nameWithType.vb: ICollection(Of T).Count
  fullName.vb: System.Collections.Generic.ICollection(Of T).Count
- uid: TimeCockpit.Data.Localization.LocalizedValueCollection.IsReadOnly*
  commentId: Overload:TimeCockpit.Data.Localization.LocalizedValueCollection.IsReadOnly
  isExternal: true
  name: IsReadOnly
  nameWithType: LocalizedValueCollection.IsReadOnly
  fullName: TimeCockpit.Data.Localization.LocalizedValueCollection.IsReadOnly
- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,TimeCockpit.Data.Localization.LocalizedValue}}.IsReadOnly
  commentId: P:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,TimeCockpit.Data.Localization.LocalizedValue}}.IsReadOnly
  parent: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,TimeCockpit.Data.Localization.LocalizedValue}}
  definition: System.Collections.Generic.ICollection`1.IsReadOnly
  name: IsReadOnly
  nameWithType: ICollection<KeyValuePair<String, LocalizedValue>>.IsReadOnly
  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, TimeCockpit.Data.Localization.LocalizedValue>>.IsReadOnly
  nameWithType.vb: ICollection(Of KeyValuePair(Of String, LocalizedValue)).IsReadOnly
  fullName.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of System.String, TimeCockpit.Data.Localization.LocalizedValue)).IsReadOnly
- uid: System.Collections.Generic.ICollection`1.IsReadOnly
  commentId: P:System.Collections.Generic.ICollection`1.IsReadOnly
  isExternal: true
  name: IsReadOnly
  nameWithType: ICollection<T>.IsReadOnly
  fullName: System.Collections.Generic.ICollection<T>.IsReadOnly
  nameWithType.vb: ICollection(Of T).IsReadOnly
  fullName.vb: System.Collections.Generic.ICollection(Of T).IsReadOnly
- uid: TimeCockpit.Data.Localization.LocalizedValueCollection.Keys*
  commentId: Overload:TimeCockpit.Data.Localization.LocalizedValueCollection.Keys
  isExternal: true
  name: Keys
  nameWithType: LocalizedValueCollection.Keys
  fullName: TimeCockpit.Data.Localization.LocalizedValueCollection.Keys
- uid: System.Collections.Generic.IDictionary{System.String,TimeCockpit.Data.Localization.LocalizedValue}.Keys
  commentId: P:System.Collections.Generic.IDictionary{System.String,TimeCockpit.Data.Localization.LocalizedValue}.Keys
  parent: System.Collections.Generic.IDictionary{System.String,TimeCockpit.Data.Localization.LocalizedValue}
  definition: System.Collections.Generic.IDictionary`2.Keys
  name: Keys
  nameWithType: IDictionary<String, LocalizedValue>.Keys
  fullName: System.Collections.Generic.IDictionary<System.String, TimeCockpit.Data.Localization.LocalizedValue>.Keys
  nameWithType.vb: IDictionary(Of String, LocalizedValue).Keys
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, TimeCockpit.Data.Localization.LocalizedValue).Keys
- uid: System.Collections.Generic.ICollection{System.String}
  commentId: T:System.Collections.Generic.ICollection{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<String>
  nameWithType: ICollection<String>
  fullName: System.Collections.Generic.ICollection<System.String>
  nameWithType.vb: ICollection(Of String)
  fullName.vb: System.Collections.Generic.ICollection(Of System.String)
  name.vb: ICollection(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2.Keys
  commentId: P:System.Collections.Generic.IDictionary`2.Keys
  isExternal: true
  name: Keys
  nameWithType: IDictionary<TKey, TValue>.Keys
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Keys
  nameWithType.vb: IDictionary(Of TKey, TValue).Keys
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).Keys
- uid: TimeCockpit.Data.Localization.LocalizedValueCollection.Values*
  commentId: Overload:TimeCockpit.Data.Localization.LocalizedValueCollection.Values
  isExternal: true
  name: Values
  nameWithType: LocalizedValueCollection.Values
  fullName: TimeCockpit.Data.Localization.LocalizedValueCollection.Values
- uid: System.Collections.Generic.IDictionary{System.String,TimeCockpit.Data.Localization.LocalizedValue}.Values
  commentId: P:System.Collections.Generic.IDictionary{System.String,TimeCockpit.Data.Localization.LocalizedValue}.Values
  parent: System.Collections.Generic.IDictionary{System.String,TimeCockpit.Data.Localization.LocalizedValue}
  definition: System.Collections.Generic.IDictionary`2.Values
  name: Values
  nameWithType: IDictionary<String, LocalizedValue>.Values
  fullName: System.Collections.Generic.IDictionary<System.String, TimeCockpit.Data.Localization.LocalizedValue>.Values
  nameWithType.vb: IDictionary(Of String, LocalizedValue).Values
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, TimeCockpit.Data.Localization.LocalizedValue).Values
- uid: System.Collections.Generic.ICollection{TimeCockpit.Data.Localization.LocalizedValue}
  commentId: T:System.Collections.Generic.ICollection{TimeCockpit.Data.Localization.LocalizedValue}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<LocalizedValue>
  nameWithType: ICollection<LocalizedValue>
  fullName: System.Collections.Generic.ICollection<TimeCockpit.Data.Localization.LocalizedValue>
  nameWithType.vb: ICollection(Of LocalizedValue)
  fullName.vb: System.Collections.Generic.ICollection(Of TimeCockpit.Data.Localization.LocalizedValue)
  name.vb: ICollection(Of LocalizedValue)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TimeCockpit.Data.Localization.LocalizedValue
    name: LocalizedValue
    nameWithType: LocalizedValue
    fullName: TimeCockpit.Data.Localization.LocalizedValue
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TimeCockpit.Data.Localization.LocalizedValue
    name: LocalizedValue
    nameWithType: LocalizedValue
    fullName: TimeCockpit.Data.Localization.LocalizedValue
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2.Values
  commentId: P:System.Collections.Generic.IDictionary`2.Values
  isExternal: true
  name: Values
  nameWithType: IDictionary<TKey, TValue>.Values
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Values
  nameWithType.vb: IDictionary(Of TKey, TValue).Values
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).Values
- uid: TimeCockpit.Data.Localization.LocalizedValueCollection.Item*
  commentId: Overload:TimeCockpit.Data.Localization.LocalizedValueCollection.Item
  isExternal: true
  name: Item
  nameWithType: LocalizedValueCollection.Item
  fullName: TimeCockpit.Data.Localization.LocalizedValueCollection.Item
- uid: System.Collections.Generic.IDictionary{System.String,TimeCockpit.Data.Localization.LocalizedValue}.Item(System.String)
  commentId: P:System.Collections.Generic.IDictionary{System.String,TimeCockpit.Data.Localization.LocalizedValue}.Item(System.String)
  parent: System.Collections.Generic.IDictionary{System.String,TimeCockpit.Data.Localization.LocalizedValue}
  definition: System.Collections.Generic.IDictionary`2.Item(`0)
  name: Item[String]
  nameWithType: IDictionary<String, LocalizedValue>.Item[String]
  fullName: System.Collections.Generic.IDictionary<System.String, TimeCockpit.Data.Localization.LocalizedValue>.Item[System.String]
  nameWithType.vb: IDictionary(Of String, LocalizedValue).Item(String)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, TimeCockpit.Data.Localization.LocalizedValue).Item(System.String)
  name.vb: Item(String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2.Item(`0)
    name: Item
    nameWithType: IDictionary<String, LocalizedValue>.Item
    fullName: System.Collections.Generic.IDictionary<System.String, TimeCockpit.Data.Localization.LocalizedValue>.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2.Item(`0)
    name: Item
    nameWithType: IDictionary(Of String, LocalizedValue).Item
    fullName: System.Collections.Generic.IDictionary(Of System.String, TimeCockpit.Data.Localization.LocalizedValue).Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2.Item(`0)
  commentId: P:System.Collections.Generic.IDictionary`2.Item(`0)
  isExternal: true
  name: Item[TKey]
  nameWithType: IDictionary<TKey, TValue>.Item[TKey]
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Item[TKey]
  nameWithType.vb: IDictionary(Of TKey, TValue).Item(TKey)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).Item(TKey)
  name.vb: Item(TKey)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2.Item(`0)
    name: Item
    nameWithType: IDictionary<TKey, TValue>.Item
    fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2.Item(`0)
    name: Item
    nameWithType: IDictionary(Of TKey, TValue).Item
    fullName: System.Collections.Generic.IDictionary(Of TKey, TValue).Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
