### YamlMime:ManagedReference
items:
- uid: TimeCockpit.Data.JsonConverters.QueryParameterSerializer
  commentId: T:TimeCockpit.Data.JsonConverters.QueryParameterSerializer
  id: QueryParameterSerializer
  parent: TimeCockpit.Data.JsonConverters
  children:
  - TimeCockpit.Data.JsonConverters.QueryParameterSerializer.#ctor
  - TimeCockpit.Data.JsonConverters.QueryParameterSerializer.FromJSON(System.String,TimeCockpit.Data.DataModel.Model)
  - TimeCockpit.Data.JsonConverters.QueryParameterSerializer.GetJSONObjectType(System.Type,System.Boolean)
  - TimeCockpit.Data.JsonConverters.QueryParameterSerializer.GetObjectValue(System.String,Newtonsoft.Json.JsonReader,TimeCockpit.Data.DataModel.Model)
  - TimeCockpit.Data.JsonConverters.QueryParameterSerializer.ReadJSON(Newtonsoft.Json.JsonReader,TimeCockpit.Data.DataModel.Model)
  - TimeCockpit.Data.JsonConverters.QueryParameterSerializer.ToJSON(System.Collections.Generic.IEnumerable{TimeCockpit.Data.QueryLanguage.QueryParameter},TimeCockpit.Data.DataModel.Model,System.Boolean)
  - TimeCockpit.Data.JsonConverters.QueryParameterSerializer.WriteJSON(Newtonsoft.Json.JsonWriter,TimeCockpit.Data.DataModel.Model,System.Collections.Generic.IEnumerable{TimeCockpit.Data.QueryLanguage.QueryParameter},System.Boolean)
  - TimeCockpit.Data.JsonConverters.QueryParameterSerializer.WriteJSONObjectValue(System.Object,Newtonsoft.Json.JsonWriter,TimeCockpit.Data.DataModel.Model,System.Boolean)
  - TimeCockpit.Data.JsonConverters.QueryParameterSerializer.WriteJsonParameter(Newtonsoft.Json.JsonWriter,TimeCockpit.Data.DataModel.Model,TimeCockpit.Data.QueryLanguage.QueryParameter,System.Boolean)
  langs:
  - csharp
  - vb
  name: QueryParameterSerializer
  nameWithType: QueryParameterSerializer
  fullName: TimeCockpit.Data.JsonConverters.QueryParameterSerializer
  type: Class
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.JsonConverters
  summary: "\nclass having static members for serializing query parameters to / from JSON\n"
  syntax:
    content: public class QueryParameterSerializer
    content.vb: Public Class QueryParameterSerializer
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TimeCockpit.Data.JsonConverters.QueryParameterSerializer.WriteJSON(Newtonsoft.Json.JsonWriter,TimeCockpit.Data.DataModel.Model,System.Collections.Generic.IEnumerable{TimeCockpit.Data.QueryLanguage.QueryParameter},System.Boolean)
  commentId: M:TimeCockpit.Data.JsonConverters.QueryParameterSerializer.WriteJSON(Newtonsoft.Json.JsonWriter,TimeCockpit.Data.DataModel.Model,System.Collections.Generic.IEnumerable{TimeCockpit.Data.QueryLanguage.QueryParameter},System.Boolean)
  id: WriteJSON(Newtonsoft.Json.JsonWriter,TimeCockpit.Data.DataModel.Model,System.Collections.Generic.IEnumerable{TimeCockpit.Data.QueryLanguage.QueryParameter},System.Boolean)
  parent: TimeCockpit.Data.JsonConverters.QueryParameterSerializer
  langs:
  - csharp
  - vb
  name: WriteJSON(JsonWriter, Model, IEnumerable<QueryParameter>, Boolean)
  nameWithType: QueryParameterSerializer.WriteJSON(JsonWriter, Model, IEnumerable<QueryParameter>, Boolean)
  fullName: TimeCockpit.Data.JsonConverters.QueryParameterSerializer.WriteJSON(Newtonsoft.Json.JsonWriter, TimeCockpit.Data.DataModel.Model, System.Collections.Generic.IEnumerable<TimeCockpit.Data.QueryLanguage.QueryParameter>, System.Boolean)
  type: Method
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.JsonConverters
  summary: "\nconverts a collection of query parameters to json\n"
  syntax:
    content: public static void WriteJSON(JsonWriter jw, Model model, IEnumerable<QueryParameter> parameters, bool serializeEntityObjects = false)
    parameters:
    - id: jw
      type: Newtonsoft.Json.JsonWriter
      description: json writer to write parameters to.
    - id: model
      type: TimeCockpit.Data.DataModel.Model
      description: The base model.
    - id: parameters
      type: System.Collections.Generic.IEnumerable{TimeCockpit.Data.QueryLanguage.QueryParameter}
      description: the parameters to convert
    - id: serializeEntityObjects
      type: System.Boolean
      description: true if entity objects should be serialized, false to only serialize guids.
    content.vb: Public Shared Sub WriteJSON(jw As JsonWriter, model As Model, parameters As IEnumerable(Of QueryParameter), serializeEntityObjects As Boolean = False)
  overload: TimeCockpit.Data.JsonConverters.QueryParameterSerializer.WriteJSON*
  nameWithType.vb: QueryParameterSerializer.WriteJSON(JsonWriter, Model, IEnumerable(Of QueryParameter), Boolean)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TimeCockpit.Data.JsonConverters.QueryParameterSerializer.WriteJSON(Newtonsoft.Json.JsonWriter, TimeCockpit.Data.DataModel.Model, System.Collections.Generic.IEnumerable(Of TimeCockpit.Data.QueryLanguage.QueryParameter), System.Boolean)
  name.vb: WriteJSON(JsonWriter, Model, IEnumerable(Of QueryParameter), Boolean)
- uid: TimeCockpit.Data.JsonConverters.QueryParameterSerializer.WriteJsonParameter(Newtonsoft.Json.JsonWriter,TimeCockpit.Data.DataModel.Model,TimeCockpit.Data.QueryLanguage.QueryParameter,System.Boolean)
  commentId: M:TimeCockpit.Data.JsonConverters.QueryParameterSerializer.WriteJsonParameter(Newtonsoft.Json.JsonWriter,TimeCockpit.Data.DataModel.Model,TimeCockpit.Data.QueryLanguage.QueryParameter,System.Boolean)
  id: WriteJsonParameter(Newtonsoft.Json.JsonWriter,TimeCockpit.Data.DataModel.Model,TimeCockpit.Data.QueryLanguage.QueryParameter,System.Boolean)
  parent: TimeCockpit.Data.JsonConverters.QueryParameterSerializer
  langs:
  - csharp
  - vb
  name: WriteJsonParameter(JsonWriter, Model, QueryParameter, Boolean)
  nameWithType: QueryParameterSerializer.WriteJsonParameter(JsonWriter, Model, QueryParameter, Boolean)
  fullName: TimeCockpit.Data.JsonConverters.QueryParameterSerializer.WriteJsonParameter(Newtonsoft.Json.JsonWriter, TimeCockpit.Data.DataModel.Model, TimeCockpit.Data.QueryLanguage.QueryParameter, System.Boolean)
  type: Method
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.JsonConverters
  summary: "\nWrites the json parameter.\n"
  syntax:
    content: public static void WriteJsonParameter(JsonWriter jw, Model model, QueryParameter parameter, bool serializeEntityObjects)
    parameters:
    - id: jw
      type: Newtonsoft.Json.JsonWriter
      description: The json writer.
    - id: model
      type: TimeCockpit.Data.DataModel.Model
      description: The base model.
    - id: parameter
      type: TimeCockpit.Data.QueryLanguage.QueryParameter
      description: the parameter to write.
    - id: serializeEntityObjects
      type: System.Boolean
      description: true if entity objects should be serialized, false to only serialize guids.
    content.vb: Public Shared Sub WriteJsonParameter(jw As JsonWriter, model As Model, parameter As QueryParameter, serializeEntityObjects As Boolean)
  overload: TimeCockpit.Data.JsonConverters.QueryParameterSerializer.WriteJsonParameter*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: TimeCockpit.Data.JsonConverters.QueryParameterSerializer.ReadJSON(Newtonsoft.Json.JsonReader,TimeCockpit.Data.DataModel.Model)
  commentId: M:TimeCockpit.Data.JsonConverters.QueryParameterSerializer.ReadJSON(Newtonsoft.Json.JsonReader,TimeCockpit.Data.DataModel.Model)
  id: ReadJSON(Newtonsoft.Json.JsonReader,TimeCockpit.Data.DataModel.Model)
  parent: TimeCockpit.Data.JsonConverters.QueryParameterSerializer
  langs:
  - csharp
  - vb
  name: ReadJSON(JsonReader, Model)
  nameWithType: QueryParameterSerializer.ReadJSON(JsonReader, Model)
  fullName: TimeCockpit.Data.JsonConverters.QueryParameterSerializer.ReadJSON(Newtonsoft.Json.JsonReader, TimeCockpit.Data.DataModel.Model)
  type: Method
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.JsonConverters
  summary: "\nConverts a json string to a query parameter collection\n"
  syntax:
    content: public static IEnumerable<QueryParameter> ReadJSON(JsonReader jsonReader, Model model)
    parameters:
    - id: jsonReader
      type: Newtonsoft.Json.JsonReader
      description: the json string to parse
    - id: model
      type: TimeCockpit.Data.DataModel.Model
      description: The model.
    return:
      type: System.Collections.Generic.IEnumerable{TimeCockpit.Data.QueryLanguage.QueryParameter}
      description: returns an enumerable of QueryParameters
    content.vb: Public Shared Function ReadJSON(jsonReader As JsonReader, model As Model) As IEnumerable(Of QueryParameter)
  overload: TimeCockpit.Data.JsonConverters.QueryParameterSerializer.ReadJSON*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: TimeCockpit.Data.JsonConverters.QueryParameterSerializer.GetJSONObjectType(System.Type,System.Boolean)
  commentId: M:TimeCockpit.Data.JsonConverters.QueryParameterSerializer.GetJSONObjectType(System.Type,System.Boolean)
  id: GetJSONObjectType(System.Type,System.Boolean)
  parent: TimeCockpit.Data.JsonConverters.QueryParameterSerializer
  langs:
  - csharp
  - vb
  name: GetJSONObjectType(Type, Boolean)
  nameWithType: QueryParameterSerializer.GetJSONObjectType(Type, Boolean)
  fullName: TimeCockpit.Data.JsonConverters.QueryParameterSerializer.GetJSONObjectType(System.Type, System.Boolean)
  type: Method
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.JsonConverters
  summary: "\nreturns a string describing the object type\n"
  syntax:
    content: public static string GetJSONObjectType(Type type, bool serializeEntityObjects)
    parameters:
    - id: type
      type: System.Type
      description: the .net type.
    - id: serializeEntityObjects
      type: System.Boolean
      description: true if entity objects should be serialized, false to only serialize guids.
    return:
      type: System.String
      description: Returns the string representing the object type.
    content.vb: Public Shared Function GetJSONObjectType(type As Type, serializeEntityObjects As Boolean) As String
  overload: TimeCockpit.Data.JsonConverters.QueryParameterSerializer.GetJSONObjectType*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: TimeCockpit.Data.JsonConverters.QueryParameterSerializer.WriteJSONObjectValue(System.Object,Newtonsoft.Json.JsonWriter,TimeCockpit.Data.DataModel.Model,System.Boolean)
  commentId: M:TimeCockpit.Data.JsonConverters.QueryParameterSerializer.WriteJSONObjectValue(System.Object,Newtonsoft.Json.JsonWriter,TimeCockpit.Data.DataModel.Model,System.Boolean)
  id: WriteJSONObjectValue(System.Object,Newtonsoft.Json.JsonWriter,TimeCockpit.Data.DataModel.Model,System.Boolean)
  parent: TimeCockpit.Data.JsonConverters.QueryParameterSerializer
  langs:
  - csharp
  - vb
  name: WriteJSONObjectValue(Object, JsonWriter, Model, Boolean)
  nameWithType: QueryParameterSerializer.WriteJSONObjectValue(Object, JsonWriter, Model, Boolean)
  fullName: TimeCockpit.Data.JsonConverters.QueryParameterSerializer.WriteJSONObjectValue(System.Object, Newtonsoft.Json.JsonWriter, TimeCockpit.Data.DataModel.Model, System.Boolean)
  type: Method
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.JsonConverters
  summary: "\nGets a JSON compatible object value to store.\n"
  syntax:
    content: public static void WriteJSONObjectValue(object value, JsonWriter jw, Model model, bool serializeEntityObjects)
    parameters:
    - id: value
      type: System.Object
      description: the value to write.
    - id: jw
      type: Newtonsoft.Json.JsonWriter
      description: the writer to write the value to.
    - id: model
      type: TimeCockpit.Data.DataModel.Model
      description: The model.
    - id: serializeEntityObjects
      type: System.Boolean
      description: true if entity objects should be serialized, false to only serialize guids.
    content.vb: Public Shared Sub WriteJSONObjectValue(value As Object, jw As JsonWriter, model As Model, serializeEntityObjects As Boolean)
  overload: TimeCockpit.Data.JsonConverters.QueryParameterSerializer.WriteJSONObjectValue*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: TimeCockpit.Data.JsonConverters.QueryParameterSerializer.GetObjectValue(System.String,Newtonsoft.Json.JsonReader,TimeCockpit.Data.DataModel.Model)
  commentId: M:TimeCockpit.Data.JsonConverters.QueryParameterSerializer.GetObjectValue(System.String,Newtonsoft.Json.JsonReader,TimeCockpit.Data.DataModel.Model)
  id: GetObjectValue(System.String,Newtonsoft.Json.JsonReader,TimeCockpit.Data.DataModel.Model)
  parent: TimeCockpit.Data.JsonConverters.QueryParameterSerializer
  langs:
  - csharp
  - vb
  name: GetObjectValue(String, JsonReader, Model)
  nameWithType: QueryParameterSerializer.GetObjectValue(String, JsonReader, Model)
  fullName: TimeCockpit.Data.JsonConverters.QueryParameterSerializer.GetObjectValue(System.String, Newtonsoft.Json.JsonReader, TimeCockpit.Data.DataModel.Model)
  type: Method
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.JsonConverters
  summary: "\nReturns the value of a query parameter, given the type and the JToken value\n"
  syntax:
    content: public static object GetObjectValue(string type, JsonReader jr, Model model)
    parameters:
    - id: type
      type: System.String
      description: string type of the value
    - id: jr
      type: Newtonsoft.Json.JsonReader
      description: the reader to read from.
    - id: model
      type: TimeCockpit.Data.DataModel.Model
      description: The model.
    return:
      type: System.Object
      description: returns the .net object
    content.vb: Public Shared Function GetObjectValue(type As String, jr As JsonReader, model As Model) As Object
  overload: TimeCockpit.Data.JsonConverters.QueryParameterSerializer.GetObjectValue*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: TimeCockpit.Data.JsonConverters.QueryParameterSerializer.ToJSON(System.Collections.Generic.IEnumerable{TimeCockpit.Data.QueryLanguage.QueryParameter},TimeCockpit.Data.DataModel.Model,System.Boolean)
  commentId: M:TimeCockpit.Data.JsonConverters.QueryParameterSerializer.ToJSON(System.Collections.Generic.IEnumerable{TimeCockpit.Data.QueryLanguage.QueryParameter},TimeCockpit.Data.DataModel.Model,System.Boolean)
  id: ToJSON(System.Collections.Generic.IEnumerable{TimeCockpit.Data.QueryLanguage.QueryParameter},TimeCockpit.Data.DataModel.Model,System.Boolean)
  parent: TimeCockpit.Data.JsonConverters.QueryParameterSerializer
  langs:
  - csharp
  - vb
  name: ToJSON(IEnumerable<QueryParameter>, Model, Boolean)
  nameWithType: QueryParameterSerializer.ToJSON(IEnumerable<QueryParameter>, Model, Boolean)
  fullName: TimeCockpit.Data.JsonConverters.QueryParameterSerializer.ToJSON(System.Collections.Generic.IEnumerable<TimeCockpit.Data.QueryLanguage.QueryParameter>, TimeCockpit.Data.DataModel.Model, System.Boolean)
  type: Method
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.JsonConverters
  summary: "\nWrites query parameters to a string.\n"
  syntax:
    content: public static string ToJSON(IEnumerable<QueryParameter> queryParameters, Model model, bool serializeEntityObjects = false)
    parameters:
    - id: queryParameters
      type: System.Collections.Generic.IEnumerable{TimeCockpit.Data.QueryLanguage.QueryParameter}
      description: query parameters to serialize.
    - id: model
      type: TimeCockpit.Data.DataModel.Model
      description: The model.
    - id: serializeEntityObjects
      type: System.Boolean
      description: True if EntityObjects should be serialized completely, false to only serialize the GUID.
    return:
      type: System.String
      description: Returns a string representation in JSON notation of the query parameters.
    content.vb: Public Shared Function ToJSON(queryParameters As IEnumerable(Of QueryParameter), model As Model, serializeEntityObjects As Boolean = False) As String
  overload: TimeCockpit.Data.JsonConverters.QueryParameterSerializer.ToJSON*
  nameWithType.vb: QueryParameterSerializer.ToJSON(IEnumerable(Of QueryParameter), Model, Boolean)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TimeCockpit.Data.JsonConverters.QueryParameterSerializer.ToJSON(System.Collections.Generic.IEnumerable(Of TimeCockpit.Data.QueryLanguage.QueryParameter), TimeCockpit.Data.DataModel.Model, System.Boolean)
  name.vb: ToJSON(IEnumerable(Of QueryParameter), Model, Boolean)
- uid: TimeCockpit.Data.JsonConverters.QueryParameterSerializer.FromJSON(System.String,TimeCockpit.Data.DataModel.Model)
  commentId: M:TimeCockpit.Data.JsonConverters.QueryParameterSerializer.FromJSON(System.String,TimeCockpit.Data.DataModel.Model)
  id: FromJSON(System.String,TimeCockpit.Data.DataModel.Model)
  parent: TimeCockpit.Data.JsonConverters.QueryParameterSerializer
  langs:
  - csharp
  - vb
  name: FromJSON(String, Model)
  nameWithType: QueryParameterSerializer.FromJSON(String, Model)
  fullName: TimeCockpit.Data.JsonConverters.QueryParameterSerializer.FromJSON(System.String, TimeCockpit.Data.DataModel.Model)
  type: Method
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.JsonConverters
  summary: "\nReads query parameters from a json string.\n"
  syntax:
    content: public static IEnumerable<QueryParameter> FromJSON(string json, Model model)
    parameters:
    - id: json
      type: System.String
      description: the JSON string representation.
    - id: model
      type: TimeCockpit.Data.DataModel.Model
      description: The model.
    return:
      type: System.Collections.Generic.IEnumerable{TimeCockpit.Data.QueryLanguage.QueryParameter}
      description: Returns the collection of query parameters.
    content.vb: Public Shared Function FromJSON(json As String, model As Model) As IEnumerable(Of QueryParameter)
  overload: TimeCockpit.Data.JsonConverters.QueryParameterSerializer.FromJSON*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: TimeCockpit.Data.JsonConverters.QueryParameterSerializer.#ctor
  commentId: M:TimeCockpit.Data.JsonConverters.QueryParameterSerializer.#ctor
  id: '#ctor'
  parent: TimeCockpit.Data.JsonConverters.QueryParameterSerializer
  langs:
  - csharp
  - vb
  name: QueryParameterSerializer()
  nameWithType: QueryParameterSerializer.QueryParameterSerializer()
  fullName: TimeCockpit.Data.JsonConverters.QueryParameterSerializer.QueryParameterSerializer()
  type: Constructor
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.JsonConverters
  syntax:
    content: public QueryParameterSerializer()
    content.vb: Public Sub New
  overload: TimeCockpit.Data.JsonConverters.QueryParameterSerializer.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: TimeCockpit.Data.JsonConverters
  commentId: N:TimeCockpit.Data.JsonConverters
  isExternal: true
  name: TimeCockpit.Data.JsonConverters
  nameWithType: TimeCockpit.Data.JsonConverters
  fullName: TimeCockpit.Data.JsonConverters
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TimeCockpit.Data.JsonConverters.QueryParameterSerializer.WriteJSON*
  commentId: Overload:TimeCockpit.Data.JsonConverters.QueryParameterSerializer.WriteJSON
  isExternal: true
  name: WriteJSON
  nameWithType: QueryParameterSerializer.WriteJSON
  fullName: TimeCockpit.Data.JsonConverters.QueryParameterSerializer.WriteJSON
- uid: Newtonsoft.Json.JsonWriter
  isExternal: true
  name: JsonWriter
  nameWithType: JsonWriter
  fullName: Newtonsoft.Json.JsonWriter
- uid: TimeCockpit.Data.DataModel.Model
  commentId: T:TimeCockpit.Data.DataModel.Model
  parent: TimeCockpit.Data.DataModel
  isExternal: true
  name: Model
  nameWithType: Model
  fullName: TimeCockpit.Data.DataModel.Model
- uid: System.Collections.Generic.IEnumerable{TimeCockpit.Data.QueryLanguage.QueryParameter}
  commentId: T:System.Collections.Generic.IEnumerable{TimeCockpit.Data.QueryLanguage.QueryParameter}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<QueryParameter>
  nameWithType: IEnumerable<QueryParameter>
  fullName: System.Collections.Generic.IEnumerable<TimeCockpit.Data.QueryLanguage.QueryParameter>
  nameWithType.vb: IEnumerable(Of QueryParameter)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TimeCockpit.Data.QueryLanguage.QueryParameter)
  name.vb: IEnumerable(Of QueryParameter)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TimeCockpit.Data.QueryLanguage.QueryParameter
    name: QueryParameter
    nameWithType: QueryParameter
    fullName: TimeCockpit.Data.QueryLanguage.QueryParameter
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TimeCockpit.Data.QueryLanguage.QueryParameter
    name: QueryParameter
    nameWithType: QueryParameter
    fullName: TimeCockpit.Data.QueryLanguage.QueryParameter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: TimeCockpit.Data.DataModel
  commentId: N:TimeCockpit.Data.DataModel
  isExternal: true
  name: TimeCockpit.Data.DataModel
  nameWithType: TimeCockpit.Data.DataModel
  fullName: TimeCockpit.Data.DataModel
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: TimeCockpit.Data.JsonConverters.QueryParameterSerializer.WriteJsonParameter*
  commentId: Overload:TimeCockpit.Data.JsonConverters.QueryParameterSerializer.WriteJsonParameter
  isExternal: true
  name: WriteJsonParameter
  nameWithType: QueryParameterSerializer.WriteJsonParameter
  fullName: TimeCockpit.Data.JsonConverters.QueryParameterSerializer.WriteJsonParameter
- uid: TimeCockpit.Data.QueryLanguage.QueryParameter
  commentId: T:TimeCockpit.Data.QueryLanguage.QueryParameter
  parent: TimeCockpit.Data.QueryLanguage
  isExternal: true
  name: QueryParameter
  nameWithType: QueryParameter
  fullName: TimeCockpit.Data.QueryLanguage.QueryParameter
- uid: TimeCockpit.Data.QueryLanguage
  commentId: N:TimeCockpit.Data.QueryLanguage
  isExternal: true
  name: TimeCockpit.Data.QueryLanguage
  nameWithType: TimeCockpit.Data.QueryLanguage
  fullName: TimeCockpit.Data.QueryLanguage
- uid: TimeCockpit.Data.JsonConverters.QueryParameterSerializer.ReadJSON*
  commentId: Overload:TimeCockpit.Data.JsonConverters.QueryParameterSerializer.ReadJSON
  isExternal: true
  name: ReadJSON
  nameWithType: QueryParameterSerializer.ReadJSON
  fullName: TimeCockpit.Data.JsonConverters.QueryParameterSerializer.ReadJSON
- uid: Newtonsoft.Json.JsonReader
  isExternal: true
  name: JsonReader
  nameWithType: JsonReader
  fullName: Newtonsoft.Json.JsonReader
- uid: TimeCockpit.Data.JsonConverters.QueryParameterSerializer.GetJSONObjectType*
  commentId: Overload:TimeCockpit.Data.JsonConverters.QueryParameterSerializer.GetJSONObjectType
  isExternal: true
  name: GetJSONObjectType
  nameWithType: QueryParameterSerializer.GetJSONObjectType
  fullName: TimeCockpit.Data.JsonConverters.QueryParameterSerializer.GetJSONObjectType
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: TimeCockpit.Data.JsonConverters.QueryParameterSerializer.WriteJSONObjectValue*
  commentId: Overload:TimeCockpit.Data.JsonConverters.QueryParameterSerializer.WriteJSONObjectValue
  isExternal: true
  name: WriteJSONObjectValue
  nameWithType: QueryParameterSerializer.WriteJSONObjectValue
  fullName: TimeCockpit.Data.JsonConverters.QueryParameterSerializer.WriteJSONObjectValue
- uid: TimeCockpit.Data.JsonConverters.QueryParameterSerializer.GetObjectValue*
  commentId: Overload:TimeCockpit.Data.JsonConverters.QueryParameterSerializer.GetObjectValue
  isExternal: true
  name: GetObjectValue
  nameWithType: QueryParameterSerializer.GetObjectValue
  fullName: TimeCockpit.Data.JsonConverters.QueryParameterSerializer.GetObjectValue
- uid: TimeCockpit.Data.JsonConverters.QueryParameterSerializer.ToJSON*
  commentId: Overload:TimeCockpit.Data.JsonConverters.QueryParameterSerializer.ToJSON
  isExternal: true
  name: ToJSON
  nameWithType: QueryParameterSerializer.ToJSON
  fullName: TimeCockpit.Data.JsonConverters.QueryParameterSerializer.ToJSON
- uid: TimeCockpit.Data.JsonConverters.QueryParameterSerializer.FromJSON*
  commentId: Overload:TimeCockpit.Data.JsonConverters.QueryParameterSerializer.FromJSON
  isExternal: true
  name: FromJSON
  nameWithType: QueryParameterSerializer.FromJSON
  fullName: TimeCockpit.Data.JsonConverters.QueryParameterSerializer.FromJSON
- uid: TimeCockpit.Data.JsonConverters.QueryParameterSerializer.#ctor*
  commentId: Overload:TimeCockpit.Data.JsonConverters.QueryParameterSerializer.#ctor
  isExternal: true
  name: QueryParameterSerializer
  nameWithType: QueryParameterSerializer.QueryParameterSerializer
  fullName: TimeCockpit.Data.JsonConverters.QueryParameterSerializer.QueryParameterSerializer
