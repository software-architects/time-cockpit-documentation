### YamlMime:ManagedReference
items:
- uid: TimeCockpit.Data.Export.Excel.LocalizationExporter
  commentId: T:TimeCockpit.Data.Export.Excel.LocalizationExporter
  id: LocalizationExporter
  parent: TimeCockpit.Data.Export.Excel
  children:
  - TimeCockpit.Data.Export.Excel.LocalizationExporter.#ctor
  - TimeCockpit.Data.Export.Excel.LocalizationExporter.ExportToWorkbook(TimeCockpit.Data.Localization.Default.DefaultLocalizer)
  - TimeCockpit.Data.Export.Excel.LocalizationExporter.ExportToWorksheet(ClosedXML.Excel.IXLRow,TimeCockpit.Data.Localization.Default.GenericKeysCollection,System.Boolean)
  - TimeCockpit.Data.Export.Excel.LocalizationExporter.ExportToWorksheet``1(ClosedXML.Excel.IXLRow,TimeCockpit.Data.Localization.Default.LocalizerCollection{``0},System.Boolean)
  langs:
  - csharp
  - vb
  name: LocalizationExporter
  nameWithType: LocalizationExporter
  fullName: TimeCockpit.Data.Export.Excel.LocalizationExporter
  type: Class
  source:
    path: TimeCockpit.Data.Export
    isExternal: true
  assemblies:
  - TimeCockpit.Data.Export
  namespace: TimeCockpit.Data.Export.Excel
  syntax:
    content: public class LocalizationExporter
    content.vb: Public Class LocalizationExporter
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TimeCockpit.Data.Export.Excel.LocalizationExporter.ExportToWorkbook(TimeCockpit.Data.Localization.Default.DefaultLocalizer)
  commentId: M:TimeCockpit.Data.Export.Excel.LocalizationExporter.ExportToWorkbook(TimeCockpit.Data.Localization.Default.DefaultLocalizer)
  id: ExportToWorkbook(TimeCockpit.Data.Localization.Default.DefaultLocalizer)
  parent: TimeCockpit.Data.Export.Excel.LocalizationExporter
  langs:
  - csharp
  - vb
  name: ExportToWorkbook(DefaultLocalizer)
  nameWithType: LocalizationExporter.ExportToWorkbook(DefaultLocalizer)
  fullName: TimeCockpit.Data.Export.Excel.LocalizationExporter.ExportToWorkbook(TimeCockpit.Data.Localization.Default.DefaultLocalizer)
  type: Method
  source:
    path: TimeCockpit.Data.Export
    isExternal: true
  assemblies:
  - TimeCockpit.Data.Export
  namespace: TimeCockpit.Data.Export.Excel
  syntax:
    content: public static byte[] ExportToWorkbook(DefaultLocalizer localizer)
    parameters:
    - id: localizer
      type: TimeCockpit.Data.Localization.Default.DefaultLocalizer
    return:
      type: System.Byte[]
    content.vb: Public Shared Function ExportToWorkbook(localizer As DefaultLocalizer) As Byte()
  overload: TimeCockpit.Data.Export.Excel.LocalizationExporter.ExportToWorkbook*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: TimeCockpit.Data.Export.Excel.LocalizationExporter.ExportToWorksheet(ClosedXML.Excel.IXLRow,TimeCockpit.Data.Localization.Default.GenericKeysCollection,System.Boolean)
  commentId: M:TimeCockpit.Data.Export.Excel.LocalizationExporter.ExportToWorksheet(ClosedXML.Excel.IXLRow,TimeCockpit.Data.Localization.Default.GenericKeysCollection,System.Boolean)
  id: ExportToWorksheet(ClosedXML.Excel.IXLRow,TimeCockpit.Data.Localization.Default.GenericKeysCollection,System.Boolean)
  parent: TimeCockpit.Data.Export.Excel.LocalizationExporter
  langs:
  - csharp
  - vb
  name: ExportToWorksheet(IXLRow, GenericKeysCollection, Boolean)
  nameWithType: LocalizationExporter.ExportToWorksheet(IXLRow, GenericKeysCollection, Boolean)
  fullName: TimeCockpit.Data.Export.Excel.LocalizationExporter.ExportToWorksheet(ClosedXML.Excel.IXLRow, TimeCockpit.Data.Localization.Default.GenericKeysCollection, System.Boolean)
  type: Method
  source:
    path: TimeCockpit.Data.Export
    isExternal: true
  assemblies:
  - TimeCockpit.Data.Export
  namespace: TimeCockpit.Data.Export.Excel
  syntax:
    content: public static void ExportToWorksheet(IXLRow firstRow, GenericKeysCollection localizers, bool writeCultureHeader = false)
    parameters:
    - id: firstRow
      type: ClosedXML.Excel.IXLRow
    - id: localizers
      type: TimeCockpit.Data.Localization.Default.GenericKeysCollection
    - id: writeCultureHeader
      type: System.Boolean
    content.vb: Public Shared Sub ExportToWorksheet(firstRow As IXLRow, localizers As GenericKeysCollection, writeCultureHeader As Boolean = False)
  overload: TimeCockpit.Data.Export.Excel.LocalizationExporter.ExportToWorksheet*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: TimeCockpit.Data.Export.Excel.LocalizationExporter.ExportToWorksheet``1(ClosedXML.Excel.IXLRow,TimeCockpit.Data.Localization.Default.LocalizerCollection{``0},System.Boolean)
  commentId: M:TimeCockpit.Data.Export.Excel.LocalizationExporter.ExportToWorksheet``1(ClosedXML.Excel.IXLRow,TimeCockpit.Data.Localization.Default.LocalizerCollection{``0},System.Boolean)
  id: ExportToWorksheet``1(ClosedXML.Excel.IXLRow,TimeCockpit.Data.Localization.Default.LocalizerCollection{``0},System.Boolean)
  parent: TimeCockpit.Data.Export.Excel.LocalizationExporter
  langs:
  - csharp
  - vb
  name: ExportToWorksheet<T>(IXLRow, LocalizerCollection<T>, Boolean)
  nameWithType: LocalizationExporter.ExportToWorksheet<T>(IXLRow, LocalizerCollection<T>, Boolean)
  fullName: TimeCockpit.Data.Export.Excel.LocalizationExporter.ExportToWorksheet<T>(ClosedXML.Excel.IXLRow, TimeCockpit.Data.Localization.Default.LocalizerCollection<T>, System.Boolean)
  type: Method
  source:
    path: TimeCockpit.Data.Export
    isExternal: true
  assemblies:
  - TimeCockpit.Data.Export
  namespace: TimeCockpit.Data.Export.Excel
  syntax:
    content: >-
      public static void ExportToWorksheet<T>(IXLRow firstRow, LocalizerCollection<T> localizers, bool writeCultureHeader = true)
          where T : ModelElementLocalizer
    parameters:
    - id: firstRow
      type: ClosedXML.Excel.IXLRow
    - id: localizers
      type: TimeCockpit.Data.Localization.Default.LocalizerCollection{{T}}
    - id: writeCultureHeader
      type: System.Boolean
    typeParameters:
    - id: T
    content.vb: Public Shared Sub ExportToWorksheet(Of T As ModelElementLocalizer)(firstRow As IXLRow, localizers As LocalizerCollection(Of T), writeCultureHeader As Boolean = True)
  overload: TimeCockpit.Data.Export.Excel.LocalizationExporter.ExportToWorksheet*
  nameWithType.vb: LocalizationExporter.ExportToWorksheet(Of T)(IXLRow, LocalizerCollection(Of T), Boolean)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TimeCockpit.Data.Export.Excel.LocalizationExporter.ExportToWorksheet(Of T)(ClosedXML.Excel.IXLRow, TimeCockpit.Data.Localization.Default.LocalizerCollection(Of T), System.Boolean)
  name.vb: ExportToWorksheet(Of T)(IXLRow, LocalizerCollection(Of T), Boolean)
- uid: TimeCockpit.Data.Export.Excel.LocalizationExporter.#ctor
  commentId: M:TimeCockpit.Data.Export.Excel.LocalizationExporter.#ctor
  id: '#ctor'
  parent: TimeCockpit.Data.Export.Excel.LocalizationExporter
  langs:
  - csharp
  - vb
  name: LocalizationExporter()
  nameWithType: LocalizationExporter.LocalizationExporter()
  fullName: TimeCockpit.Data.Export.Excel.LocalizationExporter.LocalizationExporter()
  type: Constructor
  source:
    path: TimeCockpit.Data.Export
    isExternal: true
  assemblies:
  - TimeCockpit.Data.Export
  namespace: TimeCockpit.Data.Export.Excel
  syntax:
    content: public LocalizationExporter()
    content.vb: Public Sub New
  overload: TimeCockpit.Data.Export.Excel.LocalizationExporter.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: TimeCockpit.Data.Export.Excel
  commentId: N:TimeCockpit.Data.Export.Excel
  isExternal: true
  name: TimeCockpit.Data.Export.Excel
  nameWithType: TimeCockpit.Data.Export.Excel
  fullName: TimeCockpit.Data.Export.Excel
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TimeCockpit.Data.Export.Excel.LocalizationExporter.ExportToWorkbook*
  commentId: Overload:TimeCockpit.Data.Export.Excel.LocalizationExporter.ExportToWorkbook
  isExternal: true
  name: ExportToWorkbook
  nameWithType: LocalizationExporter.ExportToWorkbook
  fullName: TimeCockpit.Data.Export.Excel.LocalizationExporter.ExportToWorkbook
- uid: TimeCockpit.Data.Localization.Default.DefaultLocalizer
  commentId: T:TimeCockpit.Data.Localization.Default.DefaultLocalizer
  parent: TimeCockpit.Data.Localization.Default
  isExternal: true
  name: DefaultLocalizer
  nameWithType: DefaultLocalizer
  fullName: TimeCockpit.Data.Localization.Default.DefaultLocalizer
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: TimeCockpit.Data.Localization.Default
  commentId: N:TimeCockpit.Data.Localization.Default
  isExternal: true
  name: TimeCockpit.Data.Localization.Default
  nameWithType: TimeCockpit.Data.Localization.Default
  fullName: TimeCockpit.Data.Localization.Default
- uid: TimeCockpit.Data.Export.Excel.LocalizationExporter.ExportToWorksheet*
  commentId: Overload:TimeCockpit.Data.Export.Excel.LocalizationExporter.ExportToWorksheet
  isExternal: true
  name: ExportToWorksheet
  nameWithType: LocalizationExporter.ExportToWorksheet
  fullName: TimeCockpit.Data.Export.Excel.LocalizationExporter.ExportToWorksheet
- uid: ClosedXML.Excel.IXLRow
  isExternal: true
  name: IXLRow
  nameWithType: IXLRow
  fullName: ClosedXML.Excel.IXLRow
- uid: TimeCockpit.Data.Localization.Default.GenericKeysCollection
  commentId: T:TimeCockpit.Data.Localization.Default.GenericKeysCollection
  parent: TimeCockpit.Data.Localization.Default
  isExternal: true
  name: GenericKeysCollection
  nameWithType: GenericKeysCollection
  fullName: TimeCockpit.Data.Localization.Default.GenericKeysCollection
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: TimeCockpit.Data.Localization.Default.LocalizerCollection{{T}}
  commentId: T:TimeCockpit.Data.Localization.Default.LocalizerCollection{``0}
  parent: TimeCockpit.Data.Localization.Default
  definition: TimeCockpit.Data.Localization.Default.LocalizerCollection`1
  name: LocalizerCollection<T>
  nameWithType: LocalizerCollection<T>
  fullName: TimeCockpit.Data.Localization.Default.LocalizerCollection<T>
  nameWithType.vb: LocalizerCollection(Of T)
  fullName.vb: TimeCockpit.Data.Localization.Default.LocalizerCollection(Of T)
  name.vb: LocalizerCollection(Of T)
  spec.csharp:
  - uid: TimeCockpit.Data.Localization.Default.LocalizerCollection`1
    name: LocalizerCollection
    nameWithType: LocalizerCollection
    fullName: TimeCockpit.Data.Localization.Default.LocalizerCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: TimeCockpit.Data.Localization.Default.LocalizerCollection`1
    name: LocalizerCollection
    nameWithType: LocalizerCollection
    fullName: TimeCockpit.Data.Localization.Default.LocalizerCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.Localization.Default.LocalizerCollection`1
  commentId: T:TimeCockpit.Data.Localization.Default.LocalizerCollection`1
  parent: TimeCockpit.Data.Localization.Default
  isExternal: true
  name: LocalizerCollection<T>
  nameWithType: LocalizerCollection<T>
  fullName: TimeCockpit.Data.Localization.Default.LocalizerCollection<T>
  nameWithType.vb: LocalizerCollection(Of T)
  fullName.vb: TimeCockpit.Data.Localization.Default.LocalizerCollection(Of T)
  name.vb: LocalizerCollection(Of T)
  spec.csharp:
  - uid: TimeCockpit.Data.Localization.Default.LocalizerCollection`1
    name: LocalizerCollection
    nameWithType: LocalizerCollection
    fullName: TimeCockpit.Data.Localization.Default.LocalizerCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: TimeCockpit.Data.Localization.Default.LocalizerCollection`1
    name: LocalizerCollection
    nameWithType: LocalizerCollection
    fullName: TimeCockpit.Data.Localization.Default.LocalizerCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.Export.Excel.LocalizationExporter.#ctor*
  commentId: Overload:TimeCockpit.Data.Export.Excel.LocalizationExporter.#ctor
  isExternal: true
  name: LocalizationExporter
  nameWithType: LocalizationExporter.LocalizationExporter
  fullName: TimeCockpit.Data.Export.Excel.LocalizationExporter.LocalizationExporter
