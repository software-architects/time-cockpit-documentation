### YamlMime:ManagedReference
items:
- uid: TimeCockpit.Data.QueryRequest
  commentId: T:TimeCockpit.Data.QueryRequest
  id: QueryRequest
  parent: TimeCockpit.Data
  children:
  - TimeCockpit.Data.QueryRequest.Cache
  - TimeCockpit.Data.QueryRequest.CompletionSource
  - TimeCockpit.Data.QueryRequest.Create(System.String,System.Collections.Generic.IEnumerable{TimeCockpit.Data.QueryLanguage.QueryParameter},TimeCockpit.Data.Database.SelectSettings)
  - TimeCockpit.Data.QueryRequest.Create(TimeCockpit.Data.QueryLanguage.Syntax.Query,System.Collections.Generic.IEnumerable{TimeCockpit.Data.QueryLanguage.QueryParameter},TimeCockpit.Data.Database.SelectSettings)
  - TimeCockpit.Data.QueryRequest.Parameter(System.String,System.Object)
  - TimeCockpit.Data.QueryRequest.Parameters
  - TimeCockpit.Data.QueryRequest.QueryTask
  - TimeCockpit.Data.QueryRequest.QueryTCQL
  - TimeCockpit.Data.QueryRequest.Settings
  langs:
  - csharp
  - vb
  name: QueryRequest
  nameWithType: QueryRequest
  fullName: TimeCockpit.Data.QueryRequest
  type: Class
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data
  summary: "\nEncapsulates all the information required to execute a query as well as the state of execution and the result.\n"
  remarks: "\nContains the following:\n<ul><li></li><li></li><li></li><li></li></ul>\n"
  syntax:
    content: public class QueryRequest
    content.vb: Public Class QueryRequest
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TimeCockpit.Data.QueryRequest.Create(System.String,System.Collections.Generic.IEnumerable{TimeCockpit.Data.QueryLanguage.QueryParameter},TimeCockpit.Data.Database.SelectSettings)
  commentId: M:TimeCockpit.Data.QueryRequest.Create(System.String,System.Collections.Generic.IEnumerable{TimeCockpit.Data.QueryLanguage.QueryParameter},TimeCockpit.Data.Database.SelectSettings)
  id: Create(System.String,System.Collections.Generic.IEnumerable{TimeCockpit.Data.QueryLanguage.QueryParameter},TimeCockpit.Data.Database.SelectSettings)
  parent: TimeCockpit.Data.QueryRequest
  langs:
  - csharp
  - vb
  name: Create(String, IEnumerable<QueryParameter>, SelectSettings)
  nameWithType: QueryRequest.Create(String, IEnumerable<QueryParameter>, SelectSettings)
  fullName: TimeCockpit.Data.QueryRequest.Create(System.String, System.Collections.Generic.IEnumerable<TimeCockpit.Data.QueryLanguage.QueryParameter>, TimeCockpit.Data.Database.SelectSettings)
  type: Method
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data
  summary: "\nCreates a new query object.\n"
  syntax:
    content: public static QueryRequest Create(string query, IEnumerable<QueryParameter> parameters = null, SelectSettings settings = null)
    parameters:
    - id: query
      type: System.String
      description: The query to use.
    - id: parameters
      type: System.Collections.Generic.IEnumerable{TimeCockpit.Data.QueryLanguage.QueryParameter}
      description: The query parameters.
    - id: settings
      type: TimeCockpit.Data.Database.SelectSettings
      description: The select settings.
    return:
      type: TimeCockpit.Data.QueryRequest
      description: Returns a new query object.
    content.vb: Public Shared Function Create(query As String, parameters As IEnumerable(Of QueryParameter) = Nothing, settings As SelectSettings = Nothing) As QueryRequest
  overload: TimeCockpit.Data.QueryRequest.Create*
  nameWithType.vb: QueryRequest.Create(String, IEnumerable(Of QueryParameter), SelectSettings)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TimeCockpit.Data.QueryRequest.Create(System.String, System.Collections.Generic.IEnumerable(Of TimeCockpit.Data.QueryLanguage.QueryParameter), TimeCockpit.Data.Database.SelectSettings)
  name.vb: Create(String, IEnumerable(Of QueryParameter), SelectSettings)
- uid: TimeCockpit.Data.QueryRequest.Create(TimeCockpit.Data.QueryLanguage.Syntax.Query,System.Collections.Generic.IEnumerable{TimeCockpit.Data.QueryLanguage.QueryParameter},TimeCockpit.Data.Database.SelectSettings)
  commentId: M:TimeCockpit.Data.QueryRequest.Create(TimeCockpit.Data.QueryLanguage.Syntax.Query,System.Collections.Generic.IEnumerable{TimeCockpit.Data.QueryLanguage.QueryParameter},TimeCockpit.Data.Database.SelectSettings)
  id: Create(TimeCockpit.Data.QueryLanguage.Syntax.Query,System.Collections.Generic.IEnumerable{TimeCockpit.Data.QueryLanguage.QueryParameter},TimeCockpit.Data.Database.SelectSettings)
  parent: TimeCockpit.Data.QueryRequest
  langs:
  - csharp
  - vb
  name: Create(Query, IEnumerable<QueryParameter>, SelectSettings)
  nameWithType: QueryRequest.Create(Query, IEnumerable<QueryParameter>, SelectSettings)
  fullName: TimeCockpit.Data.QueryRequest.Create(TimeCockpit.Data.QueryLanguage.Syntax.Query, System.Collections.Generic.IEnumerable<TimeCockpit.Data.QueryLanguage.QueryParameter>, TimeCockpit.Data.Database.SelectSettings)
  type: Method
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data
  summary: "\nCreates query request using an AST representation of a Query.\n"
  syntax:
    content: public static QueryRequest Create(Query queryAST, IEnumerable<QueryParameter> parameters = null, SelectSettings settings = null)
    parameters:
    - id: queryAST
      type: TimeCockpit.Data.QueryLanguage.Syntax.Query
      description: The query AST to select.
    - id: parameters
      type: System.Collections.Generic.IEnumerable{TimeCockpit.Data.QueryLanguage.QueryParameter}
      description: The query parameters to use.
    - id: settings
      type: TimeCockpit.Data.Database.SelectSettings
      description: The select settings to use for the query.
    return:
      type: TimeCockpit.Data.QueryRequest
      description: Returns the query request.
    content.vb: Public Shared Function Create(queryAST As Query, parameters As IEnumerable(Of QueryParameter) = Nothing, settings As SelectSettings = Nothing) As QueryRequest
  overload: TimeCockpit.Data.QueryRequest.Create*
  nameWithType.vb: QueryRequest.Create(Query, IEnumerable(Of QueryParameter), SelectSettings)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TimeCockpit.Data.QueryRequest.Create(TimeCockpit.Data.QueryLanguage.Syntax.Query, System.Collections.Generic.IEnumerable(Of TimeCockpit.Data.QueryLanguage.QueryParameter), TimeCockpit.Data.Database.SelectSettings)
  name.vb: Create(Query, IEnumerable(Of QueryParameter), SelectSettings)
- uid: TimeCockpit.Data.QueryRequest.Parameter(System.String,System.Object)
  commentId: M:TimeCockpit.Data.QueryRequest.Parameter(System.String,System.Object)
  id: Parameter(System.String,System.Object)
  parent: TimeCockpit.Data.QueryRequest
  langs:
  - csharp
  - vb
  name: Parameter(String, Object)
  nameWithType: QueryRequest.Parameter(String, Object)
  fullName: TimeCockpit.Data.QueryRequest.Parameter(System.String, System.Object)
  type: Method
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data
  summary: "\nCreates a query parameter for the query.\n"
  syntax:
    content: public static QueryParameter Parameter(string name, object value)
    parameters:
    - id: name
      type: System.String
      description: The name of the parameter.
    - id: value
      type: System.Object
      description: The value of the parameter.
    return:
      type: TimeCockpit.Data.QueryLanguage.QueryParameter
      description: Returns a new query parameter.
    content.vb: Public Shared Function Parameter(name As String, value As Object) As QueryParameter
  overload: TimeCockpit.Data.QueryRequest.Parameter*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: TimeCockpit.Data.QueryRequest.Parameters
  commentId: P:TimeCockpit.Data.QueryRequest.Parameters
  id: Parameters
  parent: TimeCockpit.Data.QueryRequest
  langs:
  - csharp
  - vb
  name: Parameters
  nameWithType: QueryRequest.Parameters
  fullName: TimeCockpit.Data.QueryRequest.Parameters
  type: Property
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data
  summary: "\nGets the query parameters.\n"
  syntax:
    content: public IEnumerable<QueryParameter> Parameters { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{TimeCockpit.Data.QueryLanguage.QueryParameter}
    content.vb: Public ReadOnly Property Parameters As IEnumerable(Of QueryParameter)
  overload: TimeCockpit.Data.QueryRequest.Parameters*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TimeCockpit.Data.QueryRequest.Settings
  commentId: P:TimeCockpit.Data.QueryRequest.Settings
  id: Settings
  parent: TimeCockpit.Data.QueryRequest
  langs:
  - csharp
  - vb
  name: Settings
  nameWithType: QueryRequest.Settings
  fullName: TimeCockpit.Data.QueryRequest.Settings
  type: Property
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data
  summary: "\nGets or sets the select settings.\n"
  syntax:
    content: public SelectSettings Settings { get; set; }
    parameters: []
    return:
      type: TimeCockpit.Data.Database.SelectSettings
    content.vb: Public Property Settings As SelectSettings
  overload: TimeCockpit.Data.QueryRequest.Settings*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.QueryRequest.Cache
  commentId: P:TimeCockpit.Data.QueryRequest.Cache
  id: Cache
  parent: TimeCockpit.Data.QueryRequest
  langs:
  - csharp
  - vb
  name: Cache
  nameWithType: QueryRequest.Cache
  fullName: TimeCockpit.Data.QueryRequest.Cache
  type: Property
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data
  summary: "\nGets or sets the select cache.\n"
  syntax:
    content: public SelectCache Cache { get; set; }
    parameters: []
    return:
      type: TimeCockpit.Data.Database.SelectCache
    content.vb: Public Property Cache As SelectCache
  overload: TimeCockpit.Data.QueryRequest.Cache*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.QueryRequest.QueryTask
  commentId: P:TimeCockpit.Data.QueryRequest.QueryTask
  id: QueryTask
  parent: TimeCockpit.Data.QueryRequest
  langs:
  - csharp
  - vb
  name: QueryTask
  nameWithType: QueryRequest.QueryTask
  fullName: TimeCockpit.Data.QueryRequest.QueryTask
  type: Property
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data
  summary: "\nGets the task producing the result of the query.\n"
  syntax:
    content: public Task<EntityObject[]> QueryTask { get; }
    parameters: []
    return:
      type: System.Threading.Tasks.Task{TimeCockpit.Data.EntityObject[]}
    content.vb: Public ReadOnly Property QueryTask As Task(Of EntityObject())
  overload: TimeCockpit.Data.QueryRequest.QueryTask*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TimeCockpit.Data.QueryRequest.CompletionSource
  commentId: P:TimeCockpit.Data.QueryRequest.CompletionSource
  id: CompletionSource
  parent: TimeCockpit.Data.QueryRequest
  langs:
  - csharp
  - vb
  name: CompletionSource
  nameWithType: QueryRequest.CompletionSource
  fullName: TimeCockpit.Data.QueryRequest.CompletionSource
  type: Property
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data
  summary: "\nGets the completion source for the query.\n"
  syntax:
    content: public TaskCompletionSource<EntityObject[]> CompletionSource { get; }
    parameters: []
    return:
      type: System.Threading.Tasks.TaskCompletionSource{TimeCockpit.Data.EntityObject[]}
    content.vb: Public ReadOnly Property CompletionSource As TaskCompletionSource(Of EntityObject())
  overload: TimeCockpit.Data.QueryRequest.CompletionSource*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TimeCockpit.Data.QueryRequest.QueryTCQL
  commentId: P:TimeCockpit.Data.QueryRequest.QueryTCQL
  id: QueryTCQL
  parent: TimeCockpit.Data.QueryRequest
  langs:
  - csharp
  - vb
  name: QueryTCQL
  nameWithType: QueryRequest.QueryTCQL
  fullName: TimeCockpit.Data.QueryRequest.QueryTCQL
  type: Property
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data
  summary: "\nGets the string representation of the query.\n"
  syntax:
    content: public string QueryTCQL { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property QueryTCQL As String
  overload: TimeCockpit.Data.QueryRequest.QueryTCQL*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: TimeCockpit.Data
  commentId: N:TimeCockpit.Data
  isExternal: true
  name: TimeCockpit.Data
  nameWithType: TimeCockpit.Data
  fullName: TimeCockpit.Data
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TimeCockpit.Data.QueryRequest.Create*
  commentId: Overload:TimeCockpit.Data.QueryRequest.Create
  isExternal: true
  name: Create
  nameWithType: QueryRequest.Create
  fullName: TimeCockpit.Data.QueryRequest.Create
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IEnumerable{TimeCockpit.Data.QueryLanguage.QueryParameter}
  commentId: T:System.Collections.Generic.IEnumerable{TimeCockpit.Data.QueryLanguage.QueryParameter}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<QueryParameter>
  nameWithType: IEnumerable<QueryParameter>
  fullName: System.Collections.Generic.IEnumerable<TimeCockpit.Data.QueryLanguage.QueryParameter>
  nameWithType.vb: IEnumerable(Of QueryParameter)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TimeCockpit.Data.QueryLanguage.QueryParameter)
  name.vb: IEnumerable(Of QueryParameter)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TimeCockpit.Data.QueryLanguage.QueryParameter
    name: QueryParameter
    nameWithType: QueryParameter
    fullName: TimeCockpit.Data.QueryLanguage.QueryParameter
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TimeCockpit.Data.QueryLanguage.QueryParameter
    name: QueryParameter
    nameWithType: QueryParameter
    fullName: TimeCockpit.Data.QueryLanguage.QueryParameter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.Database.SelectSettings
  commentId: T:TimeCockpit.Data.Database.SelectSettings
  parent: TimeCockpit.Data.Database
  isExternal: true
  name: SelectSettings
  nameWithType: SelectSettings
  fullName: TimeCockpit.Data.Database.SelectSettings
- uid: TimeCockpit.Data.QueryRequest
  commentId: T:TimeCockpit.Data.QueryRequest
  parent: TimeCockpit.Data
  isExternal: true
  name: QueryRequest
  nameWithType: QueryRequest
  fullName: TimeCockpit.Data.QueryRequest
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: TimeCockpit.Data.Database
  commentId: N:TimeCockpit.Data.Database
  isExternal: true
  name: TimeCockpit.Data.Database
  nameWithType: TimeCockpit.Data.Database
  fullName: TimeCockpit.Data.Database
- uid: TimeCockpit.Data.QueryLanguage.Syntax.Query
  commentId: T:TimeCockpit.Data.QueryLanguage.Syntax.Query
  parent: TimeCockpit.Data.QueryLanguage.Syntax
  isExternal: true
  name: Query
  nameWithType: Query
  fullName: TimeCockpit.Data.QueryLanguage.Syntax.Query
- uid: TimeCockpit.Data.QueryLanguage.Syntax
  commentId: N:TimeCockpit.Data.QueryLanguage.Syntax
  isExternal: true
  name: TimeCockpit.Data.QueryLanguage.Syntax
  nameWithType: TimeCockpit.Data.QueryLanguage.Syntax
  fullName: TimeCockpit.Data.QueryLanguage.Syntax
- uid: TimeCockpit.Data.QueryRequest.Parameter*
  commentId: Overload:TimeCockpit.Data.QueryRequest.Parameter
  isExternal: true
  name: Parameter
  nameWithType: QueryRequest.Parameter
  fullName: TimeCockpit.Data.QueryRequest.Parameter
- uid: TimeCockpit.Data.QueryLanguage.QueryParameter
  commentId: T:TimeCockpit.Data.QueryLanguage.QueryParameter
  parent: TimeCockpit.Data.QueryLanguage
  isExternal: true
  name: QueryParameter
  nameWithType: QueryParameter
  fullName: TimeCockpit.Data.QueryLanguage.QueryParameter
- uid: TimeCockpit.Data.QueryLanguage
  commentId: N:TimeCockpit.Data.QueryLanguage
  isExternal: true
  name: TimeCockpit.Data.QueryLanguage
  nameWithType: TimeCockpit.Data.QueryLanguage
  fullName: TimeCockpit.Data.QueryLanguage
- uid: TimeCockpit.Data.QueryRequest.Parameters*
  commentId: Overload:TimeCockpit.Data.QueryRequest.Parameters
  isExternal: true
  name: Parameters
  nameWithType: QueryRequest.Parameters
  fullName: TimeCockpit.Data.QueryRequest.Parameters
- uid: TimeCockpit.Data.QueryRequest.Settings*
  commentId: Overload:TimeCockpit.Data.QueryRequest.Settings
  isExternal: true
  name: Settings
  nameWithType: QueryRequest.Settings
  fullName: TimeCockpit.Data.QueryRequest.Settings
- uid: TimeCockpit.Data.QueryRequest.Cache*
  commentId: Overload:TimeCockpit.Data.QueryRequest.Cache
  isExternal: true
  name: Cache
  nameWithType: QueryRequest.Cache
  fullName: TimeCockpit.Data.QueryRequest.Cache
- uid: TimeCockpit.Data.Database.SelectCache
  commentId: T:TimeCockpit.Data.Database.SelectCache
  parent: TimeCockpit.Data.Database
  isExternal: true
  name: SelectCache
  nameWithType: SelectCache
  fullName: TimeCockpit.Data.Database.SelectCache
- uid: TimeCockpit.Data.QueryRequest.QueryTask*
  commentId: Overload:TimeCockpit.Data.QueryRequest.QueryTask
  isExternal: true
  name: QueryTask
  nameWithType: QueryRequest.QueryTask
  fullName: TimeCockpit.Data.QueryRequest.QueryTask
- uid: System.Threading.Tasks.Task{TimeCockpit.Data.EntityObject[]}
  commentId: T:System.Threading.Tasks.Task{TimeCockpit.Data.EntityObject[]}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<EntityObject[]>
  nameWithType: Task<EntityObject[]>
  fullName: System.Threading.Tasks.Task<TimeCockpit.Data.EntityObject[]>
  nameWithType.vb: Task(Of EntityObject())
  fullName.vb: System.Threading.Tasks.Task(Of TimeCockpit.Data.EntityObject())
  name.vb: Task(Of EntityObject())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TimeCockpit.Data.EntityObject
    name: EntityObject
    nameWithType: EntityObject
    fullName: TimeCockpit.Data.EntityObject
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TimeCockpit.Data.EntityObject
    name: EntityObject
    nameWithType: EntityObject
    fullName: TimeCockpit.Data.EntityObject
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: TimeCockpit.Data.QueryRequest.CompletionSource*
  commentId: Overload:TimeCockpit.Data.QueryRequest.CompletionSource
  isExternal: true
  name: CompletionSource
  nameWithType: QueryRequest.CompletionSource
  fullName: TimeCockpit.Data.QueryRequest.CompletionSource
- uid: System.Threading.Tasks.TaskCompletionSource{TimeCockpit.Data.EntityObject[]}
  commentId: T:System.Threading.Tasks.TaskCompletionSource{TimeCockpit.Data.EntityObject[]}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.TaskCompletionSource`1
  name: TaskCompletionSource<EntityObject[]>
  nameWithType: TaskCompletionSource<EntityObject[]>
  fullName: System.Threading.Tasks.TaskCompletionSource<TimeCockpit.Data.EntityObject[]>
  nameWithType.vb: TaskCompletionSource(Of EntityObject())
  fullName.vb: System.Threading.Tasks.TaskCompletionSource(Of TimeCockpit.Data.EntityObject())
  name.vb: TaskCompletionSource(Of EntityObject())
  spec.csharp:
  - uid: System.Threading.Tasks.TaskCompletionSource`1
    name: TaskCompletionSource
    nameWithType: TaskCompletionSource
    fullName: System.Threading.Tasks.TaskCompletionSource
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TimeCockpit.Data.EntityObject
    name: EntityObject
    nameWithType: EntityObject
    fullName: TimeCockpit.Data.EntityObject
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.TaskCompletionSource`1
    name: TaskCompletionSource
    nameWithType: TaskCompletionSource
    fullName: System.Threading.Tasks.TaskCompletionSource
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TimeCockpit.Data.EntityObject
    name: EntityObject
    nameWithType: EntityObject
    fullName: TimeCockpit.Data.EntityObject
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.TaskCompletionSource`1
  commentId: T:System.Threading.Tasks.TaskCompletionSource`1
  isExternal: true
  name: TaskCompletionSource<TResult>
  nameWithType: TaskCompletionSource<TResult>
  fullName: System.Threading.Tasks.TaskCompletionSource<TResult>
  nameWithType.vb: TaskCompletionSource(Of TResult)
  fullName.vb: System.Threading.Tasks.TaskCompletionSource(Of TResult)
  name.vb: TaskCompletionSource(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.TaskCompletionSource`1
    name: TaskCompletionSource
    nameWithType: TaskCompletionSource
    fullName: System.Threading.Tasks.TaskCompletionSource
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.TaskCompletionSource`1
    name: TaskCompletionSource
    nameWithType: TaskCompletionSource
    fullName: System.Threading.Tasks.TaskCompletionSource
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.QueryRequest.QueryTCQL*
  commentId: Overload:TimeCockpit.Data.QueryRequest.QueryTCQL
  isExternal: true
  name: QueryTCQL
  nameWithType: QueryRequest.QueryTCQL
  fullName: TimeCockpit.Data.QueryRequest.QueryTCQL
