### YamlMime:ManagedReference
items:
- uid: TimeCockpit.Data.QueryLanguage.Syntax.BinaryExpression
  commentId: T:TimeCockpit.Data.QueryLanguage.Syntax.BinaryExpression
  id: BinaryExpression
  parent: TimeCockpit.Data.QueryLanguage.Syntax
  children:
  - TimeCockpit.Data.QueryLanguage.Syntax.BinaryExpression.#ctor(TimeCockpit.Data.QueryLanguage.Syntax.Expression,TimeCockpit.Data.QueryLanguage.Syntax.BinaryOperator,TimeCockpit.Data.QueryLanguage.Syntax.Expression)
  - TimeCockpit.Data.QueryLanguage.Syntax.BinaryExpression.Accept(TimeCockpit.Data.QueryLanguage.Syntax.Visitor)
  - TimeCockpit.Data.QueryLanguage.Syntax.BinaryExpression.Left
  - TimeCockpit.Data.QueryLanguage.Syntax.BinaryExpression.Operator
  - TimeCockpit.Data.QueryLanguage.Syntax.BinaryExpression.Right
  langs:
  - csharp
  - vb
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: TimeCockpit.Data.QueryLanguage.Syntax.BinaryExpression
  type: Class
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.QueryLanguage.Syntax
  summary: "\nAbstract node type representing binary expressions.\nBinaryExpression acts as the node type for all binary operations. The semantics of such\na node depends on the operator.\n"
  syntax:
    content: 'public class BinaryExpression : Expression'
    content.vb: >-
      Public Class BinaryExpression
          Inherits Expression
  inheritance:
  - System.Object
  - TimeCockpit.Data.QueryLanguage.Syntax.Node
  - TimeCockpit.Data.QueryLanguage.Syntax.Expression
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TimeCockpit.Data.QueryLanguage.Syntax.BinaryExpression.#ctor(TimeCockpit.Data.QueryLanguage.Syntax.Expression,TimeCockpit.Data.QueryLanguage.Syntax.BinaryOperator,TimeCockpit.Data.QueryLanguage.Syntax.Expression)
  commentId: M:TimeCockpit.Data.QueryLanguage.Syntax.BinaryExpression.#ctor(TimeCockpit.Data.QueryLanguage.Syntax.Expression,TimeCockpit.Data.QueryLanguage.Syntax.BinaryOperator,TimeCockpit.Data.QueryLanguage.Syntax.Expression)
  id: '#ctor(TimeCockpit.Data.QueryLanguage.Syntax.Expression,TimeCockpit.Data.QueryLanguage.Syntax.BinaryOperator,TimeCockpit.Data.QueryLanguage.Syntax.Expression)'
  parent: TimeCockpit.Data.QueryLanguage.Syntax.BinaryExpression
  langs:
  - csharp
  - vb
  name: BinaryExpression(Expression, BinaryOperator, Expression)
  nameWithType: BinaryExpression.BinaryExpression(Expression, BinaryOperator, Expression)
  fullName: TimeCockpit.Data.QueryLanguage.Syntax.BinaryExpression.BinaryExpression(TimeCockpit.Data.QueryLanguage.Syntax.Expression, TimeCockpit.Data.QueryLanguage.Syntax.BinaryOperator, TimeCockpit.Data.QueryLanguage.Syntax.Expression)
  type: Constructor
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.QueryLanguage.Syntax
  summary: "\nInitializes a new instance of the <xref href=\"TimeCockpit.Data.QueryLanguage.Syntax.BinaryExpression\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  syntax:
    content: public BinaryExpression(Expression left, BinaryOperator op, Expression right)
    parameters:
    - id: left
      type: TimeCockpit.Data.QueryLanguage.Syntax.Expression
      description: The left operand expression.
    - id: op
      type: TimeCockpit.Data.QueryLanguage.Syntax.BinaryOperator
      description: The operator combining the left and right operands.
    - id: right
      type: TimeCockpit.Data.QueryLanguage.Syntax.Expression
      description: The right operand expression.
    content.vb: Public Sub New(left As Expression, op As BinaryOperator, right As Expression)
  overload: TimeCockpit.Data.QueryLanguage.Syntax.BinaryExpression.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.QueryLanguage.Syntax.BinaryExpression.Accept(TimeCockpit.Data.QueryLanguage.Syntax.Visitor)
  commentId: M:TimeCockpit.Data.QueryLanguage.Syntax.BinaryExpression.Accept(TimeCockpit.Data.QueryLanguage.Syntax.Visitor)
  id: Accept(TimeCockpit.Data.QueryLanguage.Syntax.Visitor)
  parent: TimeCockpit.Data.QueryLanguage.Syntax.BinaryExpression
  langs:
  - csharp
  - vb
  name: Accept(Visitor)
  nameWithType: BinaryExpression.Accept(Visitor)
  fullName: TimeCockpit.Data.QueryLanguage.Syntax.BinaryExpression.Accept(TimeCockpit.Data.QueryLanguage.Syntax.Visitor)
  type: Method
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.QueryLanguage.Syntax
  summary: "\nDispatches the correct <xref href=\"TimeCockpit.Data.QueryLanguage.Syntax.Visitor.VisitQuery(TimeCockpit.Data.QueryLanguage.Syntax.Query)\" data-throw-if-not-resolved=\"false\"></xref> call for this instance.\n"
  syntax:
    content: public override Node Accept(Visitor visitor)
    parameters:
    - id: visitor
      type: TimeCockpit.Data.QueryLanguage.Syntax.Visitor
      description: The visitor to dispatch.
    return:
      type: TimeCockpit.Data.QueryLanguage.Syntax.Node
      description: Returns the value returned by the call to <xref href="TimeCockpit.Data.QueryLanguage.Syntax.Visitor.VisitQuery(TimeCockpit.Data.QueryLanguage.Syntax.Query)" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Overrides Function Accept(visitor As Visitor) As Node
  overridden: TimeCockpit.Data.QueryLanguage.Syntax.Node.Accept(TimeCockpit.Data.QueryLanguage.Syntax.Visitor)
  overload: TimeCockpit.Data.QueryLanguage.Syntax.BinaryExpression.Accept*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: TimeCockpit.Data.QueryLanguage.Syntax.BinaryExpression.Left
  commentId: P:TimeCockpit.Data.QueryLanguage.Syntax.BinaryExpression.Left
  id: Left
  parent: TimeCockpit.Data.QueryLanguage.Syntax.BinaryExpression
  langs:
  - csharp
  - vb
  name: Left
  nameWithType: BinaryExpression.Left
  fullName: TimeCockpit.Data.QueryLanguage.Syntax.BinaryExpression.Left
  type: Property
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.QueryLanguage.Syntax
  summary: "\nGets the left-hand operand of the expression.\n"
  syntax:
    content: public Expression Left { get; }
    parameters: []
    return:
      type: TimeCockpit.Data.QueryLanguage.Syntax.Expression
    content.vb: Public ReadOnly Property Left As Expression
  overload: TimeCockpit.Data.QueryLanguage.Syntax.BinaryExpression.Left*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TimeCockpit.Data.QueryLanguage.Syntax.BinaryExpression.Operator
  commentId: P:TimeCockpit.Data.QueryLanguage.Syntax.BinaryExpression.Operator
  id: Operator
  parent: TimeCockpit.Data.QueryLanguage.Syntax.BinaryExpression
  langs:
  - csharp
  - vb
  name: Operator
  nameWithType: BinaryExpression.Operator
  fullName: TimeCockpit.Data.QueryLanguage.Syntax.BinaryExpression.Operator
  type: Property
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.QueryLanguage.Syntax
  summary: "\nGets the operator of the binary expression.\n"
  syntax:
    content: public BinaryOperator Operator { get; }
    parameters: []
    return:
      type: TimeCockpit.Data.QueryLanguage.Syntax.BinaryOperator
    content.vb: Public ReadOnly Property Operator As BinaryOperator
  overload: TimeCockpit.Data.QueryLanguage.Syntax.BinaryExpression.Operator*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TimeCockpit.Data.QueryLanguage.Syntax.BinaryExpression.Right
  commentId: P:TimeCockpit.Data.QueryLanguage.Syntax.BinaryExpression.Right
  id: Right
  parent: TimeCockpit.Data.QueryLanguage.Syntax.BinaryExpression
  langs:
  - csharp
  - vb
  name: Right
  nameWithType: BinaryExpression.Right
  fullName: TimeCockpit.Data.QueryLanguage.Syntax.BinaryExpression.Right
  type: Property
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.QueryLanguage.Syntax
  summary: "\nGets the right-hand operand of the expression.\n"
  syntax:
    content: public Expression Right { get; }
    parameters: []
    return:
      type: TimeCockpit.Data.QueryLanguage.Syntax.Expression
    content.vb: Public ReadOnly Property Right As Expression
  overload: TimeCockpit.Data.QueryLanguage.Syntax.BinaryExpression.Right*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: TimeCockpit.Data.QueryLanguage.Syntax
  commentId: N:TimeCockpit.Data.QueryLanguage.Syntax
  isExternal: true
  name: TimeCockpit.Data.QueryLanguage.Syntax
  nameWithType: TimeCockpit.Data.QueryLanguage.Syntax
  fullName: TimeCockpit.Data.QueryLanguage.Syntax
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: TimeCockpit.Data.QueryLanguage.Syntax.Node
  commentId: T:TimeCockpit.Data.QueryLanguage.Syntax.Node
  parent: TimeCockpit.Data.QueryLanguage.Syntax
  isExternal: true
  name: Node
  nameWithType: Node
  fullName: TimeCockpit.Data.QueryLanguage.Syntax.Node
- uid: TimeCockpit.Data.QueryLanguage.Syntax.Expression
  commentId: T:TimeCockpit.Data.QueryLanguage.Syntax.Expression
  parent: TimeCockpit.Data.QueryLanguage.Syntax
  isExternal: true
  name: Expression
  nameWithType: Expression
  fullName: TimeCockpit.Data.QueryLanguage.Syntax.Expression
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TimeCockpit.Data.QueryLanguage.Syntax.BinaryExpression.#ctor*
  commentId: Overload:TimeCockpit.Data.QueryLanguage.Syntax.BinaryExpression.#ctor
  isExternal: true
  name: BinaryExpression
  nameWithType: BinaryExpression.BinaryExpression
  fullName: TimeCockpit.Data.QueryLanguage.Syntax.BinaryExpression.BinaryExpression
- uid: TimeCockpit.Data.QueryLanguage.Syntax.BinaryOperator
  commentId: T:TimeCockpit.Data.QueryLanguage.Syntax.BinaryOperator
  parent: TimeCockpit.Data.QueryLanguage.Syntax
  isExternal: true
  name: BinaryOperator
  nameWithType: BinaryOperator
  fullName: TimeCockpit.Data.QueryLanguage.Syntax.BinaryOperator
- uid: TimeCockpit.Data.QueryLanguage.Syntax.Node.Accept(TimeCockpit.Data.QueryLanguage.Syntax.Visitor)
  commentId: M:TimeCockpit.Data.QueryLanguage.Syntax.Node.Accept(TimeCockpit.Data.QueryLanguage.Syntax.Visitor)
  parent: TimeCockpit.Data.QueryLanguage.Syntax.Node
  isExternal: true
  name: Accept(Visitor)
  nameWithType: Node.Accept(Visitor)
  fullName: TimeCockpit.Data.QueryLanguage.Syntax.Node.Accept(TimeCockpit.Data.QueryLanguage.Syntax.Visitor)
  spec.csharp:
  - uid: TimeCockpit.Data.QueryLanguage.Syntax.Node.Accept(TimeCockpit.Data.QueryLanguage.Syntax.Visitor)
    name: Accept
    nameWithType: Node.Accept
    fullName: TimeCockpit.Data.QueryLanguage.Syntax.Node.Accept
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: TimeCockpit.Data.QueryLanguage.Syntax.Visitor
    name: Visitor
    nameWithType: Visitor
    fullName: TimeCockpit.Data.QueryLanguage.Syntax.Visitor
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TimeCockpit.Data.QueryLanguage.Syntax.Node.Accept(TimeCockpit.Data.QueryLanguage.Syntax.Visitor)
    name: Accept
    nameWithType: Node.Accept
    fullName: TimeCockpit.Data.QueryLanguage.Syntax.Node.Accept
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: TimeCockpit.Data.QueryLanguage.Syntax.Visitor
    name: Visitor
    nameWithType: Visitor
    fullName: TimeCockpit.Data.QueryLanguage.Syntax.Visitor
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.QueryLanguage.Syntax.BinaryExpression.Accept*
  commentId: Overload:TimeCockpit.Data.QueryLanguage.Syntax.BinaryExpression.Accept
  isExternal: true
  name: Accept
  nameWithType: BinaryExpression.Accept
  fullName: TimeCockpit.Data.QueryLanguage.Syntax.BinaryExpression.Accept
- uid: TimeCockpit.Data.QueryLanguage.Syntax.Visitor
  commentId: T:TimeCockpit.Data.QueryLanguage.Syntax.Visitor
  parent: TimeCockpit.Data.QueryLanguage.Syntax
  isExternal: true
  name: Visitor
  nameWithType: Visitor
  fullName: TimeCockpit.Data.QueryLanguage.Syntax.Visitor
- uid: TimeCockpit.Data.QueryLanguage.Syntax.BinaryExpression.Left*
  commentId: Overload:TimeCockpit.Data.QueryLanguage.Syntax.BinaryExpression.Left
  isExternal: true
  name: Left
  nameWithType: BinaryExpression.Left
  fullName: TimeCockpit.Data.QueryLanguage.Syntax.BinaryExpression.Left
- uid: TimeCockpit.Data.QueryLanguage.Syntax.BinaryExpression.Operator*
  commentId: Overload:TimeCockpit.Data.QueryLanguage.Syntax.BinaryExpression.Operator
  isExternal: true
  name: Operator
  nameWithType: BinaryExpression.Operator
  fullName: TimeCockpit.Data.QueryLanguage.Syntax.BinaryExpression.Operator
- uid: TimeCockpit.Data.QueryLanguage.Syntax.BinaryExpression.Right*
  commentId: Overload:TimeCockpit.Data.QueryLanguage.Syntax.BinaryExpression.Right
  isExternal: true
  name: Right
  nameWithType: BinaryExpression.Right
  fullName: TimeCockpit.Data.QueryLanguage.Syntax.BinaryExpression.Right
