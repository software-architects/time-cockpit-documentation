### YamlMime:ManagedReference
items:
- uid: TimeCockpit.Data.Import.ImportServiceClientLocal
  commentId: T:TimeCockpit.Data.Import.ImportServiceClientLocal
  id: ImportServiceClientLocal
  parent: TimeCockpit.Data.Import
  children:
  - TimeCockpit.Data.Import.ImportServiceClientLocal.#ctor(TimeCockpit.Data.DataContext)
  - TimeCockpit.Data.Import.ImportServiceClientLocal.FinishImportState(TimeCockpit.Data.EntityObject,TimeCockpit.Data.DataContext,TimeCockpit.Data.Import.ImportResult)
  - TimeCockpit.Data.Import.ImportServiceClientLocal.Import(System.String,System.Byte[],System.String,System.Boolean,System.Guid,System.Nullable{System.Guid},System.String)
  - TimeCockpit.Data.Import.ImportServiceClientLocal.LoadPreviewData(System.String,System.Byte[],System.Int32,System.Collections.Generic.Dictionary{System.String,System.Int32},System.Int32)
  - TimeCockpit.Data.Import.ImportServiceClientLocal.PrepareImportStateObject(System.Guid,TimeCockpit.Data.DataContext)
  - TimeCockpit.Data.Import.ImportServiceClientLocal.SavePreviewData(System.String,TimeCockpit.Data.Import.PreviewWorkbook)
  langs:
  - csharp
  - vb
  name: ImportServiceClientLocal
  nameWithType: ImportServiceClientLocal
  fullName: TimeCockpit.Data.Import.ImportServiceClientLocal
  type: Class
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data.Import/ImportServiceClientLocal.cs
    id: ImportServiceClientLocal
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data.Import/ImportServiceClientLocal.cs
    startLine: 23
  assemblies:
  - TimeCockpit.Data.Import
  namespace: TimeCockpit.Data.Import
  summary: "\nclass forwarding the import calls to the service.\n"
  example: []
  syntax:
    content: 'public class ImportServiceClientLocal : ImportServiceClient'
    content.vb: >-
      Public Class ImportServiceClientLocal
          Inherits ImportServiceClient
  inheritance:
  - System.Object
  - TimeCockpit.Data.Import.ImportServiceClient
  inheritedMembers:
  - TimeCockpit.Data.Import.ImportServiceClient.DataContext
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TimeCockpit.Data.Import.ImportServiceClientLocal.#ctor(TimeCockpit.Data.DataContext)
  commentId: M:TimeCockpit.Data.Import.ImportServiceClientLocal.#ctor(TimeCockpit.Data.DataContext)
  id: '#ctor(TimeCockpit.Data.DataContext)'
  parent: TimeCockpit.Data.Import.ImportServiceClientLocal
  langs:
  - csharp
  - vb
  name: ImportServiceClientLocal(DataContext)
  nameWithType: ImportServiceClientLocal.ImportServiceClientLocal(DataContext)
  fullName: TimeCockpit.Data.Import.ImportServiceClientLocal.ImportServiceClientLocal(TimeCockpit.Data.DataContext)
  type: Constructor
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data.Import/ImportServiceClientLocal.cs
    id: .ctor
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data.Import/ImportServiceClientLocal.cs
    startLine: 29
  assemblies:
  - TimeCockpit.Data.Import
  namespace: TimeCockpit.Data.Import
  summary: "\nInitializes a new instance of the ImportServiceClientLocal class.\n"
  example: []
  syntax:
    content: public ImportServiceClientLocal(DataContext dataContext)
    parameters:
    - id: dataContext
      type: TimeCockpit.Data.DataContext
      description: the data context to use.
    content.vb: Public Sub New(dataContext As DataContext)
  overload: TimeCockpit.Data.Import.ImportServiceClientLocal.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Import.ImportServiceClientLocal.Import(System.String,System.Byte[],System.String,System.Boolean,System.Guid,System.Nullable{System.Guid},System.String)
  commentId: M:TimeCockpit.Data.Import.ImportServiceClientLocal.Import(System.String,System.Byte[],System.String,System.Boolean,System.Guid,System.Nullable{System.Guid},System.String)
  id: Import(System.String,System.Byte[],System.String,System.Boolean,System.Guid,System.Nullable{System.Guid},System.String)
  parent: TimeCockpit.Data.Import.ImportServiceClientLocal
  langs:
  - csharp
  - vb
  name: Import(String, Byte[], String, Boolean, Guid, Nullable<Guid>, String)
  nameWithType: ImportServiceClientLocal.Import(String, Byte[], String, Boolean, Guid, Nullable<Guid>, String)
  fullName: TimeCockpit.Data.Import.ImportServiceClientLocal.Import(System.String, System.Byte[], System.String, System.Boolean, System.Guid, System.Nullable<System.Guid>, System.String)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data.Import/ImportServiceClientLocal.cs
    id: Import
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data.Import/ImportServiceClientLocal.cs
    startLine: 44
  assemblies:
  - TimeCockpit.Data.Import
  namespace: TimeCockpit.Data.Import
  summary: "\nimports data from the source data.\n"
  example: []
  syntax:
    content: public override void Import(string importDefinition, byte[] sourceData, string sourceFileName, bool saveOnSuccess, Guid importTaskId, Guid? definitionId, string definitionName)
    parameters:
    - id: importDefinition
      type: System.String
      description: the definition of the import.
    - id: sourceData
      type: System.Byte[]
      description: the source data to import from.
    - id: sourceFileName
      type: System.String
      description: The name of the source file.
    - id: saveOnSuccess
      type: System.Boolean
      description: true if the result should be saved if all rows imported successfully.
    - id: importTaskId
      type: System.Guid
      description: guid of the associated import task.
    - id: definitionId
      type: System.Nullable{System.Guid}
      description: the guid of the definition object, if one was used.
    - id: definitionName
      type: System.String
      description: the name of the definition that is imported.
    content.vb: Public Overrides Sub Import(importDefinition As String, sourceData As Byte(), sourceFileName As String, saveOnSuccess As Boolean, importTaskId As Guid, definitionId As Guid?, definitionName As String)
  overridden: TimeCockpit.Data.Import.ImportServiceClient.Import(System.String,System.Byte[],System.String,System.Boolean,System.Guid,System.Nullable{System.Guid},System.String)
  overload: TimeCockpit.Data.Import.ImportServiceClientLocal.Import*
  nameWithType.vb: ImportServiceClientLocal.Import(String, Byte(), String, Boolean, Guid, Nullable(Of Guid), String)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: TimeCockpit.Data.Import.ImportServiceClientLocal.Import(System.String, System.Byte(), System.String, System.Boolean, System.Guid, System.Nullable(Of System.Guid), System.String)
  name.vb: Import(String, Byte(), String, Boolean, Guid, Nullable(Of Guid), String)
- uid: TimeCockpit.Data.Import.ImportServiceClientLocal.LoadPreviewData(System.String,System.Byte[],System.Int32,System.Collections.Generic.Dictionary{System.String,System.Int32},System.Int32)
  commentId: M:TimeCockpit.Data.Import.ImportServiceClientLocal.LoadPreviewData(System.String,System.Byte[],System.Int32,System.Collections.Generic.Dictionary{System.String,System.Int32},System.Int32)
  id: LoadPreviewData(System.String,System.Byte[],System.Int32,System.Collections.Generic.Dictionary{System.String,System.Int32},System.Int32)
  parent: TimeCockpit.Data.Import.ImportServiceClientLocal
  langs:
  - csharp
  - vb
  name: LoadPreviewData(String, Byte[], Int32, Dictionary<String, Int32>, Int32)
  nameWithType: ImportServiceClientLocal.LoadPreviewData(String, Byte[], Int32, Dictionary<String, Int32>, Int32)
  fullName: TimeCockpit.Data.Import.ImportServiceClientLocal.LoadPreviewData(System.String, System.Byte[], System.Int32, System.Collections.Generic.Dictionary<System.String, System.Int32>, System.Int32)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data.Import/ImportServiceClientLocal.cs
    id: LoadPreviewData
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data.Import/ImportServiceClientLocal.cs
    startLine: 101
  assemblies:
  - TimeCockpit.Data.Import
  namespace: TimeCockpit.Data.Import
  summary: "\nloads the preview data directly.\n"
  example: []
  syntax:
    content: public override IObservable<PreviewWorkbook> LoadPreviewData(string sourceProvider, byte[] sourceData, int sampleSize, Dictionary<string, int> headerRowPositions = null, int defaultHeaderRowNumber = 1)
    parameters:
    - id: sourceProvider
      type: System.String
      description: the source provider to use (xlsx or csv, etc.)
    - id: sourceData
      type: System.Byte[]
      description: the source data to load from.
    - id: sampleSize
      type: System.Int32
      description: the number of rows to load for each column.
    - id: headerRowPositions
      type: System.Collections.Generic.Dictionary{System.String,System.Int32}
      description: a dictionary holding offsets (optional).
    - id: defaultHeaderRowNumber
      type: System.Int32
      description: The default row number, in case no row number is passed for the worksheet with <code data-dev-comment-type="paramref" class="paramref">headerRowOffsets</code>.
    return:
      type: System.IObservable{TimeCockpit.Data.Import.PreviewWorkbook}
      description: 'returns an observable producing the '
    content.vb: Public Overrides Function LoadPreviewData(sourceProvider As String, sourceData As Byte(), sampleSize As Integer, headerRowPositions As Dictionary(Of String, Integer) = Nothing, defaultHeaderRowNumber As Integer = 1) As IObservable(Of PreviewWorkbook)
  overridden: TimeCockpit.Data.Import.ImportServiceClient.LoadPreviewData(System.String,System.Byte[],System.Int32,System.Collections.Generic.Dictionary{System.String,System.Int32},System.Int32)
  overload: TimeCockpit.Data.Import.ImportServiceClientLocal.LoadPreviewData*
  nameWithType.vb: ImportServiceClientLocal.LoadPreviewData(String, Byte(), Int32, Dictionary(Of String, Int32), Int32)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: TimeCockpit.Data.Import.ImportServiceClientLocal.LoadPreviewData(System.String, System.Byte(), System.Int32, System.Collections.Generic.Dictionary(Of System.String, System.Int32), System.Int32)
  name.vb: LoadPreviewData(String, Byte(), Int32, Dictionary(Of String, Int32), Int32)
- uid: TimeCockpit.Data.Import.ImportServiceClientLocal.SavePreviewData(System.String,TimeCockpit.Data.Import.PreviewWorkbook)
  commentId: M:TimeCockpit.Data.Import.ImportServiceClientLocal.SavePreviewData(System.String,TimeCockpit.Data.Import.PreviewWorkbook)
  id: SavePreviewData(System.String,TimeCockpit.Data.Import.PreviewWorkbook)
  parent: TimeCockpit.Data.Import.ImportServiceClientLocal
  langs:
  - csharp
  - vb
  name: SavePreviewData(String, PreviewWorkbook)
  nameWithType: ImportServiceClientLocal.SavePreviewData(String, PreviewWorkbook)
  fullName: TimeCockpit.Data.Import.ImportServiceClientLocal.SavePreviewData(System.String, TimeCockpit.Data.Import.PreviewWorkbook)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data.Import/ImportServiceClientLocal.cs
    id: SavePreviewData
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data.Import/ImportServiceClientLocal.cs
    startLine: 122
  assemblies:
  - TimeCockpit.Data.Import
  namespace: TimeCockpit.Data.Import
  summary: "\nsaves the preview data directly.\n"
  example: []
  syntax:
    content: public override IObservable<byte[]> SavePreviewData(string sourceProvider, PreviewWorkbook previewWorkbook)
    parameters:
    - id: sourceProvider
      type: System.String
      description: the source provider to use (xlsx or csv, etc.)
    - id: previewWorkbook
      type: TimeCockpit.Data.Import.PreviewWorkbook
      description: the preview Workbook to save.
    return:
      type: System.IObservable{System.Byte[]}
      description: 'returns an observable producing the '
    content.vb: Public Overrides Function SavePreviewData(sourceProvider As String, previewWorkbook As PreviewWorkbook) As IObservable(Of Byte())
  overridden: TimeCockpit.Data.Import.ImportServiceClient.SavePreviewData(System.String,TimeCockpit.Data.Import.PreviewWorkbook)
  overload: TimeCockpit.Data.Import.ImportServiceClientLocal.SavePreviewData*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: TimeCockpit.Data.Import.ImportServiceClientLocal.FinishImportState(TimeCockpit.Data.EntityObject,TimeCockpit.Data.DataContext,TimeCockpit.Data.Import.ImportResult)
  commentId: M:TimeCockpit.Data.Import.ImportServiceClientLocal.FinishImportState(TimeCockpit.Data.EntityObject,TimeCockpit.Data.DataContext,TimeCockpit.Data.Import.ImportResult)
  id: FinishImportState(TimeCockpit.Data.EntityObject,TimeCockpit.Data.DataContext,TimeCockpit.Data.Import.ImportResult)
  parent: TimeCockpit.Data.Import.ImportServiceClientLocal
  langs:
  - csharp
  - vb
  name: FinishImportState(EntityObject, DataContext, ImportResult)
  nameWithType: ImportServiceClientLocal.FinishImportState(EntityObject, DataContext, ImportResult)
  fullName: TimeCockpit.Data.Import.ImportServiceClientLocal.FinishImportState(TimeCockpit.Data.EntityObject, TimeCockpit.Data.DataContext, TimeCockpit.Data.Import.ImportResult)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data.Import/ImportServiceClientLocal.cs
    id: FinishImportState
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data.Import/ImportServiceClientLocal.cs
    startLine: 143
  assemblies:
  - TimeCockpit.Data.Import
  namespace: TimeCockpit.Data.Import
  summary: "\ncalled when the import progress finished.\n"
  example: []
  syntax:
    content: protected static void FinishImportState(EntityObject importState, DataContext progressStateContext, ImportResult importResult)
    parameters:
    - id: importState
      type: TimeCockpit.Data.EntityObject
      description: the import state.
    - id: progressStateContext
      type: TimeCockpit.Data.DataContext
      description: the progress state datacontext.
    - id: importResult
      type: TimeCockpit.Data.Import.ImportResult
      description: the result of the import, will be saved to the import state.
    content.vb: Protected Shared Sub FinishImportState(importState As EntityObject, progressStateContext As DataContext, importResult As ImportResult)
  overload: TimeCockpit.Data.Import.ImportServiceClientLocal.FinishImportState*
  modifiers.csharp:
  - protected
  - static
  modifiers.vb:
  - Protected
  - Shared
- uid: TimeCockpit.Data.Import.ImportServiceClientLocal.PrepareImportStateObject(System.Guid,TimeCockpit.Data.DataContext)
  commentId: M:TimeCockpit.Data.Import.ImportServiceClientLocal.PrepareImportStateObject(System.Guid,TimeCockpit.Data.DataContext)
  id: PrepareImportStateObject(System.Guid,TimeCockpit.Data.DataContext)
  parent: TimeCockpit.Data.Import.ImportServiceClientLocal
  langs:
  - csharp
  - vb
  name: PrepareImportStateObject(Guid, DataContext)
  nameWithType: ImportServiceClientLocal.PrepareImportStateObject(Guid, DataContext)
  fullName: TimeCockpit.Data.Import.ImportServiceClientLocal.PrepareImportStateObject(System.Guid, TimeCockpit.Data.DataContext)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data.Import/ImportServiceClientLocal.cs
    id: PrepareImportStateObject
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data.Import/ImportServiceClientLocal.cs
    startLine: 168
  assemblies:
  - TimeCockpit.Data.Import
  namespace: TimeCockpit.Data.Import
  summary: "\nSelects the import state object from the database.\n"
  example: []
  syntax:
    content: protected static EntityObject PrepareImportStateObject(Guid importStateId, DataContext progressStateDataContext)
    parameters:
    - id: importStateId
      type: System.Guid
      description: the id of the import state object.
    - id: progressStateDataContext
      type: TimeCockpit.Data.DataContext
      description: the datacontext to use for selecting.
    return:
      type: TimeCockpit.Data.EntityObject
      description: returns the entityobject representing the import state.
    content.vb: Protected Shared Function PrepareImportStateObject(importStateId As Guid, progressStateDataContext As DataContext) As EntityObject
  overload: TimeCockpit.Data.Import.ImportServiceClientLocal.PrepareImportStateObject*
  modifiers.csharp:
  - protected
  - static
  modifiers.vb:
  - Protected
  - Shared
references:
- uid: TimeCockpit.Data.Import
  commentId: N:TimeCockpit.Data.Import
  isExternal: false
  name: TimeCockpit.Data.Import
  nameWithType: TimeCockpit.Data.Import
  fullName: TimeCockpit.Data.Import
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: TimeCockpit.Data.Import.ImportServiceClient
  commentId: T:TimeCockpit.Data.Import.ImportServiceClient
  parent: TimeCockpit.Data.Import
  isExternal: false
  name: ImportServiceClient
  nameWithType: ImportServiceClient
  fullName: TimeCockpit.Data.Import.ImportServiceClient
- uid: TimeCockpit.Data.Import.ImportServiceClient.DataContext
  commentId: P:TimeCockpit.Data.Import.ImportServiceClient.DataContext
  parent: TimeCockpit.Data.Import.ImportServiceClient
  isExternal: false
  name: DataContext
  nameWithType: ImportServiceClient.DataContext
  fullName: TimeCockpit.Data.Import.ImportServiceClient.DataContext
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: TimeCockpit.Data.Import.ImportServiceClientLocal.#ctor*
  commentId: Overload:TimeCockpit.Data.Import.ImportServiceClientLocal.#ctor
  isExternal: false
  name: ImportServiceClientLocal
  nameWithType: ImportServiceClientLocal.ImportServiceClientLocal
  fullName: TimeCockpit.Data.Import.ImportServiceClientLocal.ImportServiceClientLocal
- uid: TimeCockpit.Data.DataContext
  commentId: T:TimeCockpit.Data.DataContext
  parent: TimeCockpit.Data
  isExternal: false
  name: DataContext
  nameWithType: DataContext
  fullName: TimeCockpit.Data.DataContext
- uid: TimeCockpit.Data
  commentId: N:TimeCockpit.Data
  isExternal: false
  name: TimeCockpit.Data
  nameWithType: TimeCockpit.Data
  fullName: TimeCockpit.Data
- uid: TimeCockpit.Data.Import.ImportServiceClient.Import(System.String,System.Byte[],System.String,System.Boolean,System.Guid,System.Nullable{System.Guid},System.String)
  commentId: M:TimeCockpit.Data.Import.ImportServiceClient.Import(System.String,System.Byte[],System.String,System.Boolean,System.Guid,System.Nullable{System.Guid},System.String)
  parent: TimeCockpit.Data.Import.ImportServiceClient
  isExternal: true
  name: Import(String, Byte[], String, Boolean, Guid, Nullable<Guid>, String)
  nameWithType: ImportServiceClient.Import(String, Byte[], String, Boolean, Guid, Nullable<Guid>, String)
  fullName: TimeCockpit.Data.Import.ImportServiceClient.Import(System.String, System.Byte[], System.String, System.Boolean, System.Guid, System.Nullable<System.Guid>, System.String)
  nameWithType.vb: ImportServiceClient.Import(String, Byte(), String, Boolean, Guid, Nullable(Of Guid), String)
  fullName.vb: TimeCockpit.Data.Import.ImportServiceClient.Import(System.String, System.Byte(), System.String, System.Boolean, System.Guid, System.Nullable(Of System.Guid), System.String)
  name.vb: Import(String, Byte(), String, Boolean, Guid, Nullable(Of Guid), String)
  spec.csharp:
  - uid: TimeCockpit.Data.Import.ImportServiceClient.Import(System.String,System.Byte[],System.String,System.Boolean,System.Guid,System.Nullable{System.Guid},System.String)
    name: Import
    nameWithType: ImportServiceClient.Import
    fullName: TimeCockpit.Data.Import.ImportServiceClient.Import
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TimeCockpit.Data.Import.ImportServiceClient.Import(System.String,System.Byte[],System.String,System.Boolean,System.Guid,System.Nullable{System.Guid},System.String)
    name: Import
    nameWithType: ImportServiceClient.Import
    fullName: TimeCockpit.Data.Import.ImportServiceClient.Import
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.Import.ImportServiceClientLocal.Import*
  commentId: Overload:TimeCockpit.Data.Import.ImportServiceClientLocal.Import
  isExternal: false
  name: Import
  nameWithType: ImportServiceClientLocal.Import
  fullName: TimeCockpit.Data.Import.ImportServiceClientLocal.Import
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Nullable{System.Guid}
  commentId: T:System.Nullable{System.Guid}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Guid>
  nameWithType: Nullable<Guid>
  fullName: System.Nullable<System.Guid>
  nameWithType.vb: Nullable(Of Guid)
  fullName.vb: System.Nullable(Of System.Guid)
  name.vb: Nullable(Of Guid)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.Import.ImportServiceClient.LoadPreviewData(System.String,System.Byte[],System.Int32,System.Collections.Generic.Dictionary{System.String,System.Int32},System.Int32)
  commentId: M:TimeCockpit.Data.Import.ImportServiceClient.LoadPreviewData(System.String,System.Byte[],System.Int32,System.Collections.Generic.Dictionary{System.String,System.Int32},System.Int32)
  parent: TimeCockpit.Data.Import.ImportServiceClient
  isExternal: true
  name: LoadPreviewData(String, Byte[], Int32, Dictionary<String, Int32>, Int32)
  nameWithType: ImportServiceClient.LoadPreviewData(String, Byte[], Int32, Dictionary<String, Int32>, Int32)
  fullName: TimeCockpit.Data.Import.ImportServiceClient.LoadPreviewData(System.String, System.Byte[], System.Int32, System.Collections.Generic.Dictionary<System.String, System.Int32>, System.Int32)
  nameWithType.vb: ImportServiceClient.LoadPreviewData(String, Byte(), Int32, Dictionary(Of String, Int32), Int32)
  fullName.vb: TimeCockpit.Data.Import.ImportServiceClient.LoadPreviewData(System.String, System.Byte(), System.Int32, System.Collections.Generic.Dictionary(Of System.String, System.Int32), System.Int32)
  name.vb: LoadPreviewData(String, Byte(), Int32, Dictionary(Of String, Int32), Int32)
  spec.csharp:
  - uid: TimeCockpit.Data.Import.ImportServiceClient.LoadPreviewData(System.String,System.Byte[],System.Int32,System.Collections.Generic.Dictionary{System.String,System.Int32},System.Int32)
    name: LoadPreviewData
    nameWithType: ImportServiceClient.LoadPreviewData
    fullName: TimeCockpit.Data.Import.ImportServiceClient.LoadPreviewData
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TimeCockpit.Data.Import.ImportServiceClient.LoadPreviewData(System.String,System.Byte[],System.Int32,System.Collections.Generic.Dictionary{System.String,System.Int32},System.Int32)
    name: LoadPreviewData
    nameWithType: ImportServiceClient.LoadPreviewData
    fullName: TimeCockpit.Data.Import.ImportServiceClient.LoadPreviewData
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.Import.ImportServiceClientLocal.LoadPreviewData*
  commentId: Overload:TimeCockpit.Data.Import.ImportServiceClientLocal.LoadPreviewData
  isExternal: false
  name: LoadPreviewData
  nameWithType: ImportServiceClientLocal.LoadPreviewData
  fullName: TimeCockpit.Data.Import.ImportServiceClientLocal.LoadPreviewData
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Generic.Dictionary{System.String,System.Int32}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.Int32}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, Int32>
  nameWithType: Dictionary<String, Int32>
  fullName: System.Collections.Generic.Dictionary<System.String, System.Int32>
  nameWithType.vb: Dictionary(Of String, Int32)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.Int32)
  name.vb: Dictionary(Of String, Int32)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IObservable{TimeCockpit.Data.Import.PreviewWorkbook}
  commentId: T:System.IObservable{TimeCockpit.Data.Import.PreviewWorkbook}
  parent: System
  definition: System.IObservable`1
  name: IObservable<PreviewWorkbook>
  nameWithType: IObservable<PreviewWorkbook>
  fullName: System.IObservable<TimeCockpit.Data.Import.PreviewWorkbook>
  nameWithType.vb: IObservable(Of PreviewWorkbook)
  fullName.vb: System.IObservable(Of TimeCockpit.Data.Import.PreviewWorkbook)
  name.vb: IObservable(Of PreviewWorkbook)
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TimeCockpit.Data.Import.PreviewWorkbook
    name: PreviewWorkbook
    nameWithType: PreviewWorkbook
    fullName: TimeCockpit.Data.Import.PreviewWorkbook
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TimeCockpit.Data.Import.PreviewWorkbook
    name: PreviewWorkbook
    nameWithType: PreviewWorkbook
    fullName: TimeCockpit.Data.Import.PreviewWorkbook
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.IObservable`1
  commentId: T:System.IObservable`1
  isExternal: true
  name: IObservable<T>
  nameWithType: IObservable<T>
  fullName: System.IObservable<T>
  nameWithType.vb: IObservable(Of T)
  fullName.vb: System.IObservable(Of T)
  name.vb: IObservable(Of T)
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.Import.ImportServiceClient.SavePreviewData(System.String,TimeCockpit.Data.Import.PreviewWorkbook)
  commentId: M:TimeCockpit.Data.Import.ImportServiceClient.SavePreviewData(System.String,TimeCockpit.Data.Import.PreviewWorkbook)
  parent: TimeCockpit.Data.Import.ImportServiceClient
  isExternal: true
  name: SavePreviewData(String, PreviewWorkbook)
  nameWithType: ImportServiceClient.SavePreviewData(String, PreviewWorkbook)
  fullName: TimeCockpit.Data.Import.ImportServiceClient.SavePreviewData(System.String, TimeCockpit.Data.Import.PreviewWorkbook)
  spec.csharp:
  - uid: TimeCockpit.Data.Import.ImportServiceClient.SavePreviewData(System.String,TimeCockpit.Data.Import.PreviewWorkbook)
    name: SavePreviewData
    nameWithType: ImportServiceClient.SavePreviewData
    fullName: TimeCockpit.Data.Import.ImportServiceClient.SavePreviewData
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TimeCockpit.Data.Import.PreviewWorkbook
    name: PreviewWorkbook
    nameWithType: PreviewWorkbook
    fullName: TimeCockpit.Data.Import.PreviewWorkbook
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TimeCockpit.Data.Import.ImportServiceClient.SavePreviewData(System.String,TimeCockpit.Data.Import.PreviewWorkbook)
    name: SavePreviewData
    nameWithType: ImportServiceClient.SavePreviewData
    fullName: TimeCockpit.Data.Import.ImportServiceClient.SavePreviewData
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TimeCockpit.Data.Import.PreviewWorkbook
    name: PreviewWorkbook
    nameWithType: PreviewWorkbook
    fullName: TimeCockpit.Data.Import.PreviewWorkbook
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.Import.ImportServiceClientLocal.SavePreviewData*
  commentId: Overload:TimeCockpit.Data.Import.ImportServiceClientLocal.SavePreviewData
  isExternal: false
  name: SavePreviewData
  nameWithType: ImportServiceClientLocal.SavePreviewData
  fullName: TimeCockpit.Data.Import.ImportServiceClientLocal.SavePreviewData
- uid: TimeCockpit.Data.Import.PreviewWorkbook
  commentId: T:TimeCockpit.Data.Import.PreviewWorkbook
  parent: TimeCockpit.Data.Import
  isExternal: false
  name: PreviewWorkbook
  nameWithType: PreviewWorkbook
  fullName: TimeCockpit.Data.Import.PreviewWorkbook
- uid: System.IObservable{System.Byte[]}
  commentId: T:System.IObservable{System.Byte[]}
  parent: System
  definition: System.IObservable`1
  name: IObservable<Byte[]>
  nameWithType: IObservable<Byte[]>
  fullName: System.IObservable<System.Byte[]>
  nameWithType.vb: IObservable(Of Byte())
  fullName.vb: System.IObservable(Of System.Byte())
  name.vb: IObservable(Of Byte())
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.Import.ImportServiceClientLocal.FinishImportState*
  commentId: Overload:TimeCockpit.Data.Import.ImportServiceClientLocal.FinishImportState
  isExternal: false
  name: FinishImportState
  nameWithType: ImportServiceClientLocal.FinishImportState
  fullName: TimeCockpit.Data.Import.ImportServiceClientLocal.FinishImportState
- uid: TimeCockpit.Data.EntityObject
  commentId: T:TimeCockpit.Data.EntityObject
  parent: TimeCockpit.Data
  isExternal: false
  name: EntityObject
  nameWithType: EntityObject
  fullName: TimeCockpit.Data.EntityObject
- uid: TimeCockpit.Data.Import.ImportResult
  commentId: T:TimeCockpit.Data.Import.ImportResult
  parent: TimeCockpit.Data.Import
  isExternal: false
  name: ImportResult
  nameWithType: ImportResult
  fullName: TimeCockpit.Data.Import.ImportResult
- uid: TimeCockpit.Data.Import.ImportServiceClientLocal.PrepareImportStateObject*
  commentId: Overload:TimeCockpit.Data.Import.ImportServiceClientLocal.PrepareImportStateObject
  isExternal: false
  name: PrepareImportStateObject
  nameWithType: ImportServiceClientLocal.PrepareImportStateObject
  fullName: TimeCockpit.Data.Import.ImportServiceClientLocal.PrepareImportStateObject
