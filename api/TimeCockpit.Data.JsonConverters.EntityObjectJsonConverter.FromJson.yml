### YamlMime:ManagedReference
items:
- uid: TimeCockpit.Data.JsonConverters.EntityObjectJsonConverter.FromJson
  commentId: T:TimeCockpit.Data.JsonConverters.EntityObjectJsonConverter.FromJson
  id: EntityObjectJsonConverter.FromJson
  parent: TimeCockpit.Data.JsonConverters
  children:
  - TimeCockpit.Data.JsonConverters.EntityObjectJsonConverter.FromJson.#ctor(System.Object,System.IntPtr)
  - TimeCockpit.Data.JsonConverters.EntityObjectJsonConverter.FromJson.BeginInvoke(Newtonsoft.Json.JsonReader,TimeCockpit.Data.DataModel.Model,System.Collections.Generic.Dictionary{System.String,TimeCockpit.Data.DataModel.ModelEntityBase},TimeCockpit.Data.Environment,System.AsyncCallback,System.Object)
  - TimeCockpit.Data.JsonConverters.EntityObjectJsonConverter.FromJson.EndInvoke(System.IAsyncResult)
  - TimeCockpit.Data.JsonConverters.EntityObjectJsonConverter.FromJson.Invoke(Newtonsoft.Json.JsonReader,TimeCockpit.Data.DataModel.Model,System.Collections.Generic.Dictionary{System.String,TimeCockpit.Data.DataModel.ModelEntityBase},TimeCockpit.Data.Environment)
  langs:
  - csharp
  - vb
  name: EntityObjectJsonConverter.FromJson
  nameWithType: EntityObjectJsonConverter.FromJson
  fullName: TimeCockpit.Data.JsonConverters.EntityObjectJsonConverter.FromJson
  type: Delegate
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.JsonConverters
  summary: "\ndelegate describing a function reading a property value from a json reader.\n"
  syntax:
    content: public delegate object FromJson(JsonReader reader, Model model, Dictionary<string, ModelEntityBase> anonymousTypes, Environment environment);
    parameters:
    - id: reader
      type: Newtonsoft.Json.JsonReader
      description: The reader.
    - id: model
      type: TimeCockpit.Data.DataModel.Model
      description: The model.
    - id: anonymousTypes
      type: System.Collections.Generic.Dictionary{System.String,TimeCockpit.Data.DataModel.ModelEntityBase}
      description: The anonymous types.
    - id: environment
      type: TimeCockpit.Data.Environment
      description: The environment.
    return:
      type: System.Object
      description: returns the deserialized object.
    content.vb: Public Delegate Function FromJson(reader As JsonReader, model As Model, anonymousTypes As Dictionary(Of String, ModelEntityBase), environment As Environment) As Object
  modifiers.csharp:
  - public
  - delegate
  modifiers.vb:
  - Public
  - Delegate
- uid: TimeCockpit.Data.JsonConverters.EntityObjectJsonConverter.FromJson.#ctor(System.Object,System.IntPtr)
  commentId: M:TimeCockpit.Data.JsonConverters.EntityObjectJsonConverter.FromJson.#ctor(System.Object,System.IntPtr)
  id: '#ctor(System.Object,System.IntPtr)'
  parent: TimeCockpit.Data.JsonConverters.EntityObjectJsonConverter.FromJson
  langs:
  - csharp
  - vb
  name: FromJson(Object, IntPtr)
  nameWithType: EntityObjectJsonConverter.FromJson.FromJson(Object, IntPtr)
  fullName: TimeCockpit.Data.JsonConverters.EntityObjectJsonConverter.FromJson.FromJson(System.Object, System.IntPtr)
  type: Constructor
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.JsonConverters
  syntax:
    content: public FromJson(object object, IntPtr method)
    parameters:
    - id: object
      type: System.Object
    - id: method
      type: System.IntPtr
    content.vb: Public Sub New(object As Object, method As IntPtr)
  overload: TimeCockpit.Data.JsonConverters.EntityObjectJsonConverter.FromJson.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.JsonConverters.EntityObjectJsonConverter.FromJson.Invoke(Newtonsoft.Json.JsonReader,TimeCockpit.Data.DataModel.Model,System.Collections.Generic.Dictionary{System.String,TimeCockpit.Data.DataModel.ModelEntityBase},TimeCockpit.Data.Environment)
  commentId: M:TimeCockpit.Data.JsonConverters.EntityObjectJsonConverter.FromJson.Invoke(Newtonsoft.Json.JsonReader,TimeCockpit.Data.DataModel.Model,System.Collections.Generic.Dictionary{System.String,TimeCockpit.Data.DataModel.ModelEntityBase},TimeCockpit.Data.Environment)
  id: Invoke(Newtonsoft.Json.JsonReader,TimeCockpit.Data.DataModel.Model,System.Collections.Generic.Dictionary{System.String,TimeCockpit.Data.DataModel.ModelEntityBase},TimeCockpit.Data.Environment)
  parent: TimeCockpit.Data.JsonConverters.EntityObjectJsonConverter.FromJson
  langs:
  - csharp
  - vb
  name: Invoke(JsonReader, Model, Dictionary<String, ModelEntityBase>, Environment)
  nameWithType: EntityObjectJsonConverter.FromJson.Invoke(JsonReader, Model, Dictionary<String, ModelEntityBase>, Environment)
  fullName: TimeCockpit.Data.JsonConverters.EntityObjectJsonConverter.FromJson.Invoke(Newtonsoft.Json.JsonReader, TimeCockpit.Data.DataModel.Model, System.Collections.Generic.Dictionary<System.String, TimeCockpit.Data.DataModel.ModelEntityBase>, TimeCockpit.Data.Environment)
  type: Method
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.JsonConverters
  syntax:
    content: public virtual object Invoke(JsonReader reader, Model model, Dictionary<string, ModelEntityBase> anonymousTypes, Environment environment)
    parameters:
    - id: reader
      type: Newtonsoft.Json.JsonReader
    - id: model
      type: TimeCockpit.Data.DataModel.Model
    - id: anonymousTypes
      type: System.Collections.Generic.Dictionary{System.String,TimeCockpit.Data.DataModel.ModelEntityBase}
    - id: environment
      type: TimeCockpit.Data.Environment
    return:
      type: System.Object
    content.vb: Public Overridable Function Invoke(reader As JsonReader, model As Model, anonymousTypes As Dictionary(Of String, ModelEntityBase), environment As Environment) As Object
  overload: TimeCockpit.Data.JsonConverters.EntityObjectJsonConverter.FromJson.Invoke*
  nameWithType.vb: EntityObjectJsonConverter.FromJson.Invoke(JsonReader, Model, Dictionary(Of String, ModelEntityBase), Environment)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: TimeCockpit.Data.JsonConverters.EntityObjectJsonConverter.FromJson.Invoke(Newtonsoft.Json.JsonReader, TimeCockpit.Data.DataModel.Model, System.Collections.Generic.Dictionary(Of System.String, TimeCockpit.Data.DataModel.ModelEntityBase), TimeCockpit.Data.Environment)
  name.vb: Invoke(JsonReader, Model, Dictionary(Of String, ModelEntityBase), Environment)
- uid: TimeCockpit.Data.JsonConverters.EntityObjectJsonConverter.FromJson.BeginInvoke(Newtonsoft.Json.JsonReader,TimeCockpit.Data.DataModel.Model,System.Collections.Generic.Dictionary{System.String,TimeCockpit.Data.DataModel.ModelEntityBase},TimeCockpit.Data.Environment,System.AsyncCallback,System.Object)
  commentId: M:TimeCockpit.Data.JsonConverters.EntityObjectJsonConverter.FromJson.BeginInvoke(Newtonsoft.Json.JsonReader,TimeCockpit.Data.DataModel.Model,System.Collections.Generic.Dictionary{System.String,TimeCockpit.Data.DataModel.ModelEntityBase},TimeCockpit.Data.Environment,System.AsyncCallback,System.Object)
  id: BeginInvoke(Newtonsoft.Json.JsonReader,TimeCockpit.Data.DataModel.Model,System.Collections.Generic.Dictionary{System.String,TimeCockpit.Data.DataModel.ModelEntityBase},TimeCockpit.Data.Environment,System.AsyncCallback,System.Object)
  parent: TimeCockpit.Data.JsonConverters.EntityObjectJsonConverter.FromJson
  langs:
  - csharp
  - vb
  name: BeginInvoke(JsonReader, Model, Dictionary<String, ModelEntityBase>, Environment, AsyncCallback, Object)
  nameWithType: EntityObjectJsonConverter.FromJson.BeginInvoke(JsonReader, Model, Dictionary<String, ModelEntityBase>, Environment, AsyncCallback, Object)
  fullName: TimeCockpit.Data.JsonConverters.EntityObjectJsonConverter.FromJson.BeginInvoke(Newtonsoft.Json.JsonReader, TimeCockpit.Data.DataModel.Model, System.Collections.Generic.Dictionary<System.String, TimeCockpit.Data.DataModel.ModelEntityBase>, TimeCockpit.Data.Environment, System.AsyncCallback, System.Object)
  type: Method
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.JsonConverters
  syntax:
    content: public virtual IAsyncResult BeginInvoke(JsonReader reader, Model model, Dictionary<string, ModelEntityBase> anonymousTypes, Environment environment, AsyncCallback callback, object object)
    parameters:
    - id: reader
      type: Newtonsoft.Json.JsonReader
    - id: model
      type: TimeCockpit.Data.DataModel.Model
    - id: anonymousTypes
      type: System.Collections.Generic.Dictionary{System.String,TimeCockpit.Data.DataModel.ModelEntityBase}
    - id: environment
      type: TimeCockpit.Data.Environment
    - id: callback
      type: System.AsyncCallback
    - id: object
      type: System.Object
    return:
      type: System.IAsyncResult
    content.vb: Public Overridable Function BeginInvoke(reader As JsonReader, model As Model, anonymousTypes As Dictionary(Of String, ModelEntityBase), environment As Environment, callback As AsyncCallback, object As Object) As IAsyncResult
  overload: TimeCockpit.Data.JsonConverters.EntityObjectJsonConverter.FromJson.BeginInvoke*
  nameWithType.vb: EntityObjectJsonConverter.FromJson.BeginInvoke(JsonReader, Model, Dictionary(Of String, ModelEntityBase), Environment, AsyncCallback, Object)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: TimeCockpit.Data.JsonConverters.EntityObjectJsonConverter.FromJson.BeginInvoke(Newtonsoft.Json.JsonReader, TimeCockpit.Data.DataModel.Model, System.Collections.Generic.Dictionary(Of System.String, TimeCockpit.Data.DataModel.ModelEntityBase), TimeCockpit.Data.Environment, System.AsyncCallback, System.Object)
  name.vb: BeginInvoke(JsonReader, Model, Dictionary(Of String, ModelEntityBase), Environment, AsyncCallback, Object)
- uid: TimeCockpit.Data.JsonConverters.EntityObjectJsonConverter.FromJson.EndInvoke(System.IAsyncResult)
  commentId: M:TimeCockpit.Data.JsonConverters.EntityObjectJsonConverter.FromJson.EndInvoke(System.IAsyncResult)
  id: EndInvoke(System.IAsyncResult)
  parent: TimeCockpit.Data.JsonConverters.EntityObjectJsonConverter.FromJson
  langs:
  - csharp
  - vb
  name: EndInvoke(IAsyncResult)
  nameWithType: EntityObjectJsonConverter.FromJson.EndInvoke(IAsyncResult)
  fullName: TimeCockpit.Data.JsonConverters.EntityObjectJsonConverter.FromJson.EndInvoke(System.IAsyncResult)
  type: Method
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.JsonConverters
  syntax:
    content: public virtual object EndInvoke(IAsyncResult result)
    parameters:
    - id: result
      type: System.IAsyncResult
    return:
      type: System.Object
    content.vb: Public Overridable Function EndInvoke(result As IAsyncResult) As Object
  overload: TimeCockpit.Data.JsonConverters.EntityObjectJsonConverter.FromJson.EndInvoke*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: TimeCockpit.Data.JsonConverters
  commentId: N:TimeCockpit.Data.JsonConverters
  isExternal: true
  name: TimeCockpit.Data.JsonConverters
  nameWithType: TimeCockpit.Data.JsonConverters
  fullName: TimeCockpit.Data.JsonConverters
- uid: Newtonsoft.Json.JsonReader
  isExternal: true
  name: JsonReader
  nameWithType: JsonReader
  fullName: Newtonsoft.Json.JsonReader
- uid: TimeCockpit.Data.DataModel.Model
  commentId: T:TimeCockpit.Data.DataModel.Model
  parent: TimeCockpit.Data.DataModel
  isExternal: true
  name: Model
  nameWithType: Model
  fullName: TimeCockpit.Data.DataModel.Model
- uid: System.Collections.Generic.Dictionary{System.String,TimeCockpit.Data.DataModel.ModelEntityBase}
  commentId: T:System.Collections.Generic.Dictionary{System.String,TimeCockpit.Data.DataModel.ModelEntityBase}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, ModelEntityBase>
  nameWithType: Dictionary<String, ModelEntityBase>
  fullName: System.Collections.Generic.Dictionary<System.String, TimeCockpit.Data.DataModel.ModelEntityBase>
  nameWithType.vb: Dictionary(Of String, ModelEntityBase)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, TimeCockpit.Data.DataModel.ModelEntityBase)
  name.vb: Dictionary(Of String, ModelEntityBase)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TimeCockpit.Data.DataModel.ModelEntityBase
    name: ModelEntityBase
    nameWithType: ModelEntityBase
    fullName: TimeCockpit.Data.DataModel.ModelEntityBase
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TimeCockpit.Data.DataModel.ModelEntityBase
    name: ModelEntityBase
    nameWithType: ModelEntityBase
    fullName: TimeCockpit.Data.DataModel.ModelEntityBase
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.Environment
  commentId: T:TimeCockpit.Data.Environment
  parent: TimeCockpit.Data
  isExternal: true
  name: Environment
  nameWithType: Environment
  fullName: TimeCockpit.Data.Environment
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: TimeCockpit.Data.DataModel
  commentId: N:TimeCockpit.Data.DataModel
  isExternal: true
  name: TimeCockpit.Data.DataModel
  nameWithType: TimeCockpit.Data.DataModel
  fullName: TimeCockpit.Data.DataModel
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: TimeCockpit.Data
  commentId: N:TimeCockpit.Data
  isExternal: true
  name: TimeCockpit.Data
  nameWithType: TimeCockpit.Data
  fullName: TimeCockpit.Data
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TimeCockpit.Data.JsonConverters.EntityObjectJsonConverter.FromJson.#ctor*
  commentId: Overload:TimeCockpit.Data.JsonConverters.EntityObjectJsonConverter.FromJson.#ctor
  isExternal: true
  name: FromJson
  nameWithType: EntityObjectJsonConverter.FromJson.FromJson
  fullName: TimeCockpit.Data.JsonConverters.EntityObjectJsonConverter.FromJson.FromJson
- uid: System.IntPtr
  commentId: T:System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: TimeCockpit.Data.JsonConverters.EntityObjectJsonConverter.FromJson.Invoke*
  commentId: Overload:TimeCockpit.Data.JsonConverters.EntityObjectJsonConverter.FromJson.Invoke
  isExternal: true
  name: Invoke
  nameWithType: EntityObjectJsonConverter.FromJson.Invoke
  fullName: TimeCockpit.Data.JsonConverters.EntityObjectJsonConverter.FromJson.Invoke
- uid: TimeCockpit.Data.JsonConverters.EntityObjectJsonConverter.FromJson.BeginInvoke*
  commentId: Overload:TimeCockpit.Data.JsonConverters.EntityObjectJsonConverter.FromJson.BeginInvoke
  isExternal: true
  name: BeginInvoke
  nameWithType: EntityObjectJsonConverter.FromJson.BeginInvoke
  fullName: TimeCockpit.Data.JsonConverters.EntityObjectJsonConverter.FromJson.BeginInvoke
- uid: System.AsyncCallback
  commentId: T:System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.IAsyncResult
  commentId: T:System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: TimeCockpit.Data.JsonConverters.EntityObjectJsonConverter.FromJson.EndInvoke*
  commentId: Overload:TimeCockpit.Data.JsonConverters.EntityObjectJsonConverter.FromJson.EndInvoke
  isExternal: true
  name: EndInvoke
  nameWithType: EntityObjectJsonConverter.FromJson.EndInvoke
  fullName: TimeCockpit.Data.JsonConverters.EntityObjectJsonConverter.FromJson.EndInvoke
