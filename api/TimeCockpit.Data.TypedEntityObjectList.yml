### YamlMime:ManagedReference
items:
- uid: TimeCockpit.Data.TypedEntityObjectList
  commentId: T:TimeCockpit.Data.TypedEntityObjectList
  id: TypedEntityObjectList
  parent: TimeCockpit.Data
  children:
  - TimeCockpit.Data.TypedEntityObjectList.#ctor(System.Collections.Generic.IEnumerable{TimeCockpit.Data.EntityObject})
  - TimeCockpit.Data.TypedEntityObjectList.#ctor(System.Collections.Generic.IEnumerable{TimeCockpit.Data.EntityObject},TimeCockpit.Data.DataModel.ModelEntityBase)
  - TimeCockpit.Data.TypedEntityObjectList.GetEnumerator
  - TimeCockpit.Data.TypedEntityObjectList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])
  - TimeCockpit.Data.TypedEntityObjectList.GetListName(System.ComponentModel.PropertyDescriptor[])
  - TimeCockpit.Data.TypedEntityObjectList.System#Collections#IEnumerable#GetEnumerator
  langs:
  - csharp
  - vb
  name: TypedEntityObjectList
  nameWithType: TypedEntityObjectList
  fullName: TimeCockpit.Data.TypedEntityObjectList
  type: Class
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data
  summary: "\nA wrapper class that takes a list of <xref href=\"TimeCockpit.Data.EntityObject\" data-throw-if-not-resolved=\"false\"></xref>s and provides information about the\nproperties of an <xref href=\"TimeCockpit.Data.EntityObject\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: 'public class TypedEntityObjectList : ITypedList, IEnumerable<EntityObject>, IEnumerable'
    content.vb: >-
      Public Class TypedEntityObjectList
          Implements ITypedList, IEnumerable(Of EntityObject), IEnumerable
  inheritance:
  - System.Object
  implements:
  - System.ComponentModel.ITypedList
  - System.Collections.Generic.IEnumerable{TimeCockpit.Data.EntityObject}
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TimeCockpit.Data.TypedEntityObjectList.#ctor(System.Collections.Generic.IEnumerable{TimeCockpit.Data.EntityObject})
  commentId: M:TimeCockpit.Data.TypedEntityObjectList.#ctor(System.Collections.Generic.IEnumerable{TimeCockpit.Data.EntityObject})
  id: '#ctor(System.Collections.Generic.IEnumerable{TimeCockpit.Data.EntityObject})'
  parent: TimeCockpit.Data.TypedEntityObjectList
  langs:
  - csharp
  - vb
  name: TypedEntityObjectList(IEnumerable<EntityObject>)
  nameWithType: TypedEntityObjectList.TypedEntityObjectList(IEnumerable<EntityObject>)
  fullName: TimeCockpit.Data.TypedEntityObjectList.TypedEntityObjectList(System.Collections.Generic.IEnumerable<TimeCockpit.Data.EntityObject>)
  type: Constructor
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data
  summary: "\nInitializes a new instance of the <xref href=\"TimeCockpit.Data.TypedEntityObjectList\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  syntax:
    content: public TypedEntityObjectList(IEnumerable<EntityObject> entityObjects)
    parameters:
    - id: entityObjects
      type: System.Collections.Generic.IEnumerable{TimeCockpit.Data.EntityObject}
      description: The entity objects that are contained in the implementation of <xref href="System.ComponentModel.ITypedList" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Sub New(entityObjects As IEnumerable(Of EntityObject))
  overload: TimeCockpit.Data.TypedEntityObjectList.#ctor*
  nameWithType.vb: TypedEntityObjectList.TypedEntityObjectList(IEnumerable(Of EntityObject))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TimeCockpit.Data.TypedEntityObjectList.TypedEntityObjectList(System.Collections.Generic.IEnumerable(Of TimeCockpit.Data.EntityObject))
  name.vb: TypedEntityObjectList(IEnumerable(Of EntityObject))
- uid: TimeCockpit.Data.TypedEntityObjectList.#ctor(System.Collections.Generic.IEnumerable{TimeCockpit.Data.EntityObject},TimeCockpit.Data.DataModel.ModelEntityBase)
  commentId: M:TimeCockpit.Data.TypedEntityObjectList.#ctor(System.Collections.Generic.IEnumerable{TimeCockpit.Data.EntityObject},TimeCockpit.Data.DataModel.ModelEntityBase)
  id: '#ctor(System.Collections.Generic.IEnumerable{TimeCockpit.Data.EntityObject},TimeCockpit.Data.DataModel.ModelEntityBase)'
  parent: TimeCockpit.Data.TypedEntityObjectList
  langs:
  - csharp
  - vb
  name: TypedEntityObjectList(IEnumerable<EntityObject>, ModelEntityBase)
  nameWithType: TypedEntityObjectList.TypedEntityObjectList(IEnumerable<EntityObject>, ModelEntityBase)
  fullName: TimeCockpit.Data.TypedEntityObjectList.TypedEntityObjectList(System.Collections.Generic.IEnumerable<TimeCockpit.Data.EntityObject>, TimeCockpit.Data.DataModel.ModelEntityBase)
  type: Constructor
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data
  summary: "\nInitializes a new instance of the <xref href=\"TimeCockpit.Data.TypedEntityObjectList\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  syntax:
    content: public TypedEntityObjectList(IEnumerable<EntityObject> entityObjects, ModelEntityBase underlyingModelEntity)
    parameters:
    - id: entityObjects
      type: System.Collections.Generic.IEnumerable{TimeCockpit.Data.EntityObject}
      description: The entity objects.
    - id: underlyingModelEntity
      type: TimeCockpit.Data.DataModel.ModelEntityBase
      description: The underlying model entity.
    content.vb: Public Sub New(entityObjects As IEnumerable(Of EntityObject), underlyingModelEntity As ModelEntityBase)
  overload: TimeCockpit.Data.TypedEntityObjectList.#ctor*
  nameWithType.vb: TypedEntityObjectList.TypedEntityObjectList(IEnumerable(Of EntityObject), ModelEntityBase)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TimeCockpit.Data.TypedEntityObjectList.TypedEntityObjectList(System.Collections.Generic.IEnumerable(Of TimeCockpit.Data.EntityObject), TimeCockpit.Data.DataModel.ModelEntityBase)
  name.vb: TypedEntityObjectList(IEnumerable(Of EntityObject), ModelEntityBase)
- uid: TimeCockpit.Data.TypedEntityObjectList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])
  commentId: M:TimeCockpit.Data.TypedEntityObjectList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])
  id: GetItemProperties(System.ComponentModel.PropertyDescriptor[])
  parent: TimeCockpit.Data.TypedEntityObjectList
  langs:
  - csharp
  - vb
  name: GetItemProperties(PropertyDescriptor[])
  nameWithType: TypedEntityObjectList.GetItemProperties(PropertyDescriptor[])
  fullName: TimeCockpit.Data.TypedEntityObjectList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])
  type: Method
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data
  summary: "\nReturns the <xref href=\"System.ComponentModel.PropertyDescriptorCollection\" data-throw-if-not-resolved=\"false\"></xref> that represents the properties on each item used to bind data.\n"
  remarks: "\nIf the instance was passed a list of <xref href=\"TimeCockpit.Data.EntityObject\" data-throw-if-not-resolved=\"false\"></xref>s, the property descriptor collection is derived from the list of \n<xref href=\"TimeCockpit.Data.EntityObject\" data-throw-if-not-resolved=\"false\"></xref>s. If the instance was not passed a non-empty list and a <xref href=\"TimeCockpit.Data.DataModel.ModelEntityBase\" data-throw-if-not-resolved=\"false\"></xref> was passed, the \nproperty type collection is also derived from the <xref href=\"TimeCockpit.Data.EntityObject\" data-throw-if-not-resolved=\"false\"></xref> list. If the list is null, the property descriptor collection\nis derived from the <xref href=\"TimeCockpit.Data.DataModel.ModelEntityBase\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public PropertyDescriptorCollection GetItemProperties(PropertyDescriptor[] listAccessors)
    parameters:
    - id: listAccessors
      type: System.ComponentModel.PropertyDescriptor[]
      description: An array of <xref href="System.ComponentModel.PropertyDescriptor" data-throw-if-not-resolved="false"></xref> objects to find in the collection as bindable. This can be null.
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "\nThe <xref href=\"System.ComponentModel.PropertyDescriptorCollection\" data-throw-if-not-resolved=\"false\"></xref> that represents the properties on each item used to bind data.\n"
    content.vb: Public Function GetItemProperties(listAccessors As PropertyDescriptor()) As PropertyDescriptorCollection
  overload: TimeCockpit.Data.TypedEntityObjectList.GetItemProperties*
  nameWithType.vb: TypedEntityObjectList.GetItemProperties(PropertyDescriptor())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TimeCockpit.Data.TypedEntityObjectList.GetItemProperties(System.ComponentModel.PropertyDescriptor())
  name.vb: GetItemProperties(PropertyDescriptor())
- uid: TimeCockpit.Data.TypedEntityObjectList.GetListName(System.ComponentModel.PropertyDescriptor[])
  commentId: M:TimeCockpit.Data.TypedEntityObjectList.GetListName(System.ComponentModel.PropertyDescriptor[])
  id: GetListName(System.ComponentModel.PropertyDescriptor[])
  parent: TimeCockpit.Data.TypedEntityObjectList
  langs:
  - csharp
  - vb
  name: GetListName(PropertyDescriptor[])
  nameWithType: TypedEntityObjectList.GetListName(PropertyDescriptor[])
  fullName: TimeCockpit.Data.TypedEntityObjectList.GetListName(System.ComponentModel.PropertyDescriptor[])
  type: Method
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data
  summary: "\nReturns the name of the list.\n"
  syntax:
    content: public string GetListName(PropertyDescriptor[] listAccessors)
    parameters:
    - id: listAccessors
      type: System.ComponentModel.PropertyDescriptor[]
      description: An array of <xref href="System.ComponentModel.PropertyDescriptor" data-throw-if-not-resolved="false"></xref> objects, for which the list name is returned. This can be null.
    return:
      type: System.String
      description: "\nThe name of the list.\n"
    content.vb: Public Function GetListName(listAccessors As PropertyDescriptor()) As String
  overload: TimeCockpit.Data.TypedEntityObjectList.GetListName*
  nameWithType.vb: TypedEntityObjectList.GetListName(PropertyDescriptor())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TimeCockpit.Data.TypedEntityObjectList.GetListName(System.ComponentModel.PropertyDescriptor())
  name.vb: GetListName(PropertyDescriptor())
- uid: TimeCockpit.Data.TypedEntityObjectList.GetEnumerator
  commentId: M:TimeCockpit.Data.TypedEntityObjectList.GetEnumerator
  id: GetEnumerator
  parent: TimeCockpit.Data.TypedEntityObjectList
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: TypedEntityObjectList.GetEnumerator()
  fullName: TimeCockpit.Data.TypedEntityObjectList.GetEnumerator()
  type: Method
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data
  summary: "\nGets the enumerator.\n"
  syntax:
    content: public IEnumerator<EntityObject> GetEnumerator()
    return:
      type: System.Collections.Generic.IEnumerator{TimeCockpit.Data.EntityObject}
      description: An enumerator.
    content.vb: Public Function GetEnumerator As IEnumerator(Of EntityObject)
  overload: TimeCockpit.Data.TypedEntityObjectList.GetEnumerator*
  implements:
  - System.Collections.Generic.IEnumerable{TimeCockpit.Data.EntityObject}.GetEnumerator
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.TypedEntityObjectList.System#Collections#IEnumerable#GetEnumerator
  commentId: M:TimeCockpit.Data.TypedEntityObjectList.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: TimeCockpit.Data.TypedEntityObjectList
  langs:
  - csharp
  - vb
  name: IEnumerable.GetEnumerator()
  nameWithType: TypedEntityObjectList.IEnumerable.GetEnumerator()
  fullName: TimeCockpit.Data.TypedEntityObjectList.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data
  summary: "\nReturns an enumerator that iterates through a collection.\n"
  syntax:
    content: IEnumerator IEnumerable.GetEnumerator()
    return:
      type: System.Collections.IEnumerator
      description: "\nAn <xref href=\"System.Collections.IEnumerator\" data-throw-if-not-resolved=\"false\"></xref> object that can be used to iterate through the collection.\n"
    content.vb: Function System.Collections.IEnumerable.GetEnumerator As IEnumerator Implements IEnumerable.GetEnumerator
  overload: TimeCockpit.Data.TypedEntityObjectList.System#Collections#IEnumerable#GetEnumerator*
  implements:
  - System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: TypedEntityObjectList.System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
references:
- uid: TimeCockpit.Data
  commentId: N:TimeCockpit.Data
  isExternal: true
  name: TimeCockpit.Data
  nameWithType: TimeCockpit.Data
  fullName: TimeCockpit.Data
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ComponentModel.ITypedList
  commentId: '!:System.ComponentModel.ITypedList'
  isExternal: true
  name: ITypedList
  nameWithType: ITypedList
  fullName: System.ComponentModel.ITypedList
- uid: System.Collections.Generic.IEnumerable{TimeCockpit.Data.EntityObject}
  commentId: T:System.Collections.Generic.IEnumerable{TimeCockpit.Data.EntityObject}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<EntityObject>
  nameWithType: IEnumerable<EntityObject>
  fullName: System.Collections.Generic.IEnumerable<TimeCockpit.Data.EntityObject>
  nameWithType.vb: IEnumerable(Of EntityObject)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TimeCockpit.Data.EntityObject)
  name.vb: IEnumerable(Of EntityObject)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TimeCockpit.Data.EntityObject
    name: EntityObject
    nameWithType: EntityObject
    fullName: TimeCockpit.Data.EntityObject
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TimeCockpit.Data.EntityObject
    name: EntityObject
    nameWithType: EntityObject
    fullName: TimeCockpit.Data.EntityObject
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: TimeCockpit.Data.TypedEntityObjectList.#ctor*
  commentId: Overload:TimeCockpit.Data.TypedEntityObjectList.#ctor
  isExternal: true
  name: TypedEntityObjectList
  nameWithType: TypedEntityObjectList.TypedEntityObjectList
  fullName: TimeCockpit.Data.TypedEntityObjectList.TypedEntityObjectList
- uid: TimeCockpit.Data.DataModel.ModelEntityBase
  commentId: T:TimeCockpit.Data.DataModel.ModelEntityBase
  parent: TimeCockpit.Data.DataModel
  isExternal: true
  name: ModelEntityBase
  nameWithType: ModelEntityBase
  fullName: TimeCockpit.Data.DataModel.ModelEntityBase
- uid: TimeCockpit.Data.DataModel
  commentId: N:TimeCockpit.Data.DataModel
  isExternal: true
  name: TimeCockpit.Data.DataModel
  nameWithType: TimeCockpit.Data.DataModel
  fullName: TimeCockpit.Data.DataModel
- uid: TimeCockpit.Data.TypedEntityObjectList.GetItemProperties*
  commentId: Overload:TimeCockpit.Data.TypedEntityObjectList.GetItemProperties
  isExternal: true
  name: GetItemProperties
  nameWithType: TypedEntityObjectList.GetItemProperties
  fullName: TimeCockpit.Data.TypedEntityObjectList.GetItemProperties
- uid: System.ComponentModel.PropertyDescriptor[]
  isExternal: true
  name: PropertyDescriptor[]
  nameWithType: PropertyDescriptor[]
  fullName: System.ComponentModel.PropertyDescriptor[]
  nameWithType.vb: PropertyDescriptor()
  fullName.vb: System.ComponentModel.PropertyDescriptor()
  name.vb: PropertyDescriptor()
  spec.csharp:
  - uid: System.ComponentModel.PropertyDescriptor
    name: PropertyDescriptor
    nameWithType: PropertyDescriptor
    fullName: System.ComponentModel.PropertyDescriptor
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.ComponentModel.PropertyDescriptor
    name: PropertyDescriptor
    nameWithType: PropertyDescriptor
    fullName: System.ComponentModel.PropertyDescriptor
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.ComponentModel.PropertyDescriptorCollection
  commentId: '!:System.ComponentModel.PropertyDescriptorCollection'
  isExternal: true
  name: PropertyDescriptorCollection
  nameWithType: PropertyDescriptorCollection
  fullName: System.ComponentModel.PropertyDescriptorCollection
- uid: TimeCockpit.Data.TypedEntityObjectList.GetListName*
  commentId: Overload:TimeCockpit.Data.TypedEntityObjectList.GetListName
  isExternal: true
  name: GetListName
  nameWithType: TypedEntityObjectList.GetListName
  fullName: TimeCockpit.Data.TypedEntityObjectList.GetListName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: TimeCockpit.Data.TypedEntityObjectList.GetEnumerator*
  commentId: Overload:TimeCockpit.Data.TypedEntityObjectList.GetEnumerator
  isExternal: true
  name: GetEnumerator
  nameWithType: TypedEntityObjectList.GetEnumerator
  fullName: TimeCockpit.Data.TypedEntityObjectList.GetEnumerator
- uid: System.Collections.Generic.IEnumerable{TimeCockpit.Data.EntityObject}.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable{TimeCockpit.Data.EntityObject}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{TimeCockpit.Data.EntityObject}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<EntityObject>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<TimeCockpit.Data.EntityObject>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of EntityObject).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of TimeCockpit.Data.EntityObject).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<EntityObject>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<TimeCockpit.Data.EntityObject>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of EntityObject).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of TimeCockpit.Data.EntityObject).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator{TimeCockpit.Data.EntityObject}
  commentId: T:System.Collections.Generic.IEnumerator{TimeCockpit.Data.EntityObject}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  name: IEnumerator<EntityObject>
  nameWithType: IEnumerator<EntityObject>
  fullName: System.Collections.Generic.IEnumerator<TimeCockpit.Data.EntityObject>
  nameWithType.vb: IEnumerator(Of EntityObject)
  fullName.vb: System.Collections.Generic.IEnumerator(Of TimeCockpit.Data.EntityObject)
  name.vb: IEnumerator(Of EntityObject)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TimeCockpit.Data.EntityObject
    name: EntityObject
    nameWithType: EntityObject
    fullName: TimeCockpit.Data.EntityObject
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TimeCockpit.Data.EntityObject
    name: EntityObject
    nameWithType: EntityObject
    fullName: TimeCockpit.Data.EntityObject
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of T).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.TypedEntityObjectList.System#Collections#IEnumerable#GetEnumerator*
  commentId: Overload:TimeCockpit.Data.TypedEntityObjectList.System#Collections#IEnumerable#GetEnumerator
  isExternal: true
  name: IEnumerable.GetEnumerator
  nameWithType: TypedEntityObjectList.IEnumerable.GetEnumerator
  fullName: TimeCockpit.Data.TypedEntityObjectList.System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: TypedEntityObjectList.System.Collections.IEnumerable.GetEnumerator
  name.vb: System.Collections.IEnumerable.GetEnumerator
- uid: System.Collections.IEnumerable.GetEnumerator
  commentId: M:System.Collections.IEnumerable.GetEnumerator
  parent: System.Collections.IEnumerable
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable.GetEnumerator()
  fullName: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerator
  commentId: T:System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
