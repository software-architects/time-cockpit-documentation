### YamlMime:ManagedReference
items:
- uid: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates
  commentId: T:TimeCockpit.Data.Database.StringTemplates.SchemaTemplates
  id: SchemaTemplates
  parent: TimeCockpit.Data.Database.StringTemplates
  children:
  - TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.#ctor(System.Text.StringBuilder,TimeCockpit.Data.Database.StringTemplates.SqlDialect)
  - TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.#ctor(TimeCockpit.Data.Database.StringTemplates.SqlDialect)
  - TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.AddBlobColumnToGarbageCollection(System.String,TimeCockpit.Data.DataModel.ModelEntityBase,TimeCockpit.Data.DataModel.BinaryProperty)
  - TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.CreateConstraints(TimeCockpit.Data.DataModel.ModelEntityBase,TimeCockpit.Data.DataModel.Relation[],System.String)
  - TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.CreateCulture(System.String,TimeCockpit.Data.DataModel.TextProperty[],System.Collections.Generic.KeyValuePair{TimeCockpit.Data.DataModel.TextProperty,System.Boolean}[],TimeCockpit.Data.DataModel.Culture)
  - TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.CreateEntity(System.String,TimeCockpit.Data.DataModel.ModelEntityBase)
  - TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.CreateEntityView(System.String)
  - TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.CreateModelAction(System.String)
  - TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.CreateModelEntityInterface(System.String,TimeCockpit.Data.DataModel.ModelEntityInterface)
  - TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.CreateNamedSetDefinition(System.String)
  - TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.CreatePermission(System.String)
  - TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.CreateProperty(System.String,TimeCockpit.Data.DataModel.ModelProperty,TimeCockpit.Data.DataModel.StorageColumn[],System.Object,TimeCockpit.Data.DataModel.Culture[])
  - TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.CreateRelation(System.String,TimeCockpit.Data.DataModel.RelationBase,System.Boolean)
  - TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.CreateTrigger(System.String)
  - TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.CreateValidationRule(System.String)
  - TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.DisableCyclicConstraints(TimeCockpit.Data.DataModel.ModelEntityBase,System.String)
  - TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.DropConstraints(TimeCockpit.Data.DataModel.ModelEntityBase,System.String)
  - TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.DropCulture(System.String,TimeCockpit.Data.DataModel.TextProperty[],TimeCockpit.Data.DataModel.Culture)
  - TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.DropDefaultConstraint(System.String,TimeCockpit.Data.DataModel.ModelElement,TimeCockpit.Data.DataModel.StorageColumn)
  - TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.DropEntity(System.String,TimeCockpit.Data.DataModel.ModelEntityBase)
  - TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.DropEntityView(System.String)
  - TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.DropModelAction(System.String)
  - TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.DropModelEntityInterface(System.String,TimeCockpit.Data.DataModel.DeleteOperation)
  - TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.DropNamedSetDefinition(System.String)
  - TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.DropPermission(System.String)
  - TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.DropProperty(System.String,TimeCockpit.Data.DataModel.DeleteOperation,TimeCockpit.Data.DataModel.StorageColumn[],TimeCockpit.Data.DataModel.ModelProperty,TimeCockpit.Data.DataModel.Culture[])
  - TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.DropRelation(System.String,TimeCockpit.Data.DataModel.DeleteOperation)
  - TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.DropTrigger(System.String)
  - TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.DropValidationRule(System.String)
  - TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.EnableCyclicConstraints(TimeCockpit.Data.DataModel.ModelEntityBase,System.String)
  - TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.GetExistingLocalizedColumnsByProperty(System.String,TimeCockpit.Data.DataModel.ModelProperty)
  - TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.GetLocalModelVersion(System.String)
  - TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.HasColumnBeenLocalized(System.String,TimeCockpit.Data.DataModel.ModelProperty)
  - TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.InsertIntoDead(System.String)
  - TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.TransformText
  - TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.UpdateCulture(System.String)
  - TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.UpdateEntity(System.String,TimeCockpit.Data.DataModel.ModelEntityBase)
  - TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.UpdateEntityView(System.String)
  - TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.UpdateModelAction(System.String)
  - TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.UpdateNamedSetDefinition(System.String)
  - TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.UpdatePermission(System.String)
  - TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.UpdateProperty(System.String,TimeCockpit.Data.DataModel.ModelProperty,TimeCockpit.Data.DataModel.StorageColumn[],System.Object,TimeCockpit.Data.DataModel.Culture[],TimeCockpit.Data.DataModel.Culture[],TimeCockpit.Data.DataModel.Culture)
  - TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.UpdateRelation(System.String,TimeCockpit.Data.DataModel.RelationBase,System.Boolean)
  - TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.UpdateTrigger(System.String)
  - TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.UpdateValidationRule(System.String)
  langs:
  - csharp
  - vb
  name: SchemaTemplates
  nameWithType: SchemaTemplates
  fullName: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates
  type: Class
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/SchemaTemplates.cs
    id: SchemaTemplates
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/SchemaTemplates.cs
    startLine: 26
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Database.StringTemplates
  summary: "\nClass to produce the template output\n"
  example: []
  syntax:
    content: 'public class SchemaTemplates : SqlTransformBase'
    content.vb: >-
      Public Class SchemaTemplates
          Inherits SqlTransformBase
  inheritance:
  - System.Object
  - TimeCockpit.Data.Database.StringTemplates.SqlTransformBase
  inheritedMembers:
  - TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.Dialect
  - TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.PrimaryCulture
  - TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.GenerationEnvironment
  - TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.ToStringHelper
  - TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.Write(System.String)
  - TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.WriteLine
  - TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.SchemaTemplate(System.String)
  - TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.SchemaTemplateWithEquals(System.String)
  - TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.GO
  - TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.DataType(TimeCockpit.Data.DataModel.StorageColumn)
  - TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.TableName(TimeCockpit.Data.DataModel.ModelElement)
  - TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.DatabaseName(TimeCockpit.Data.DataModel.ModelElement)
  - TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.RelationName(TimeCockpit.Data.DataModel.RelationBase)
  - TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.ColumnName(TimeCockpit.Data.DataModel.StorageColumn)
  - TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.ColumnNameWithCulture(TimeCockpit.Data.DataModel.StorageColumn,TimeCockpit.Data.DataModel.Culture)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.TransformText
  commentId: M:TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.TransformText
  id: TransformText
  parent: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates
  langs:
  - csharp
  - vb
  name: TransformText()
  nameWithType: SchemaTemplates.TransformText()
  fullName: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.TransformText()
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/SchemaTemplates.cs
    id: TransformText
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/SchemaTemplates.cs
    startLine: 33
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Database.StringTemplates
  summary: "\nCreate the template output\n"
  example: []
  syntax:
    content: public override string TransformText()
    return:
      type: System.String
    content.vb: Public Overrides Function TransformText As String
  overridden: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.TransformText
  overload: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.TransformText*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.#ctor(TimeCockpit.Data.Database.StringTemplates.SqlDialect)
  commentId: M:TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.#ctor(TimeCockpit.Data.Database.StringTemplates.SqlDialect)
  id: '#ctor(TimeCockpit.Data.Database.StringTemplates.SqlDialect)'
  parent: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates
  langs:
  - csharp
  - vb
  name: SchemaTemplates(SqlDialect)
  nameWithType: SchemaTemplates.SchemaTemplates(SqlDialect)
  fullName: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.SchemaTemplates(TimeCockpit.Data.Database.StringTemplates.SqlDialect)
  type: Constructor
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/SchemaTemplates.cs
    id: .ctor
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/SchemaTemplates.cs
    startLine: 44
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Database.StringTemplates
  summary: "\nInitializes a new instance of the SchemaTemplates class.\n"
  example: []
  syntax:
    content: public SchemaTemplates(SqlDialect dialect)
    parameters:
    - id: dialect
      type: TimeCockpit.Data.Database.StringTemplates.SqlDialect
      description: the dialect to ue for the template.
    content.vb: Public Sub New(dialect As SqlDialect)
  overload: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.#ctor(System.Text.StringBuilder,TimeCockpit.Data.Database.StringTemplates.SqlDialect)
  commentId: M:TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.#ctor(System.Text.StringBuilder,TimeCockpit.Data.Database.StringTemplates.SqlDialect)
  id: '#ctor(System.Text.StringBuilder,TimeCockpit.Data.Database.StringTemplates.SqlDialect)'
  parent: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates
  langs:
  - csharp
  - vb
  name: SchemaTemplates(StringBuilder, SqlDialect)
  nameWithType: SchemaTemplates.SchemaTemplates(StringBuilder, SqlDialect)
  fullName: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.SchemaTemplates(System.Text.StringBuilder, TimeCockpit.Data.Database.StringTemplates.SqlDialect)
  type: Constructor
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/SchemaTemplates.cs
    id: .ctor
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/SchemaTemplates.cs
    startLine: 54
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Database.StringTemplates
  summary: "\nInitializes a new instance of the SchemaTemplates class.\n"
  example: []
  syntax:
    content: public SchemaTemplates(StringBuilder generationEnvironment, SqlDialect dialect)
    parameters:
    - id: generationEnvironment
      type: System.Text.StringBuilder
      description: the target generation environment.
    - id: dialect
      type: TimeCockpit.Data.Database.StringTemplates.SqlDialect
      description: the dialect for the template.
    content.vb: Public Sub New(generationEnvironment As StringBuilder, dialect As SqlDialect)
  overload: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.CreateEntity(System.String,TimeCockpit.Data.DataModel.ModelEntityBase)
  commentId: M:TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.CreateEntity(System.String,TimeCockpit.Data.DataModel.ModelEntityBase)
  id: CreateEntity(System.String,TimeCockpit.Data.DataModel.ModelEntityBase)
  parent: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates
  langs:
  - csharp
  - vb
  name: CreateEntity(String, ModelEntityBase)
  nameWithType: SchemaTemplates.CreateEntity(String, ModelEntityBase)
  fullName: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.CreateEntity(System.String, TimeCockpit.Data.DataModel.ModelEntityBase)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/SchemaTemplates.cs
    id: CreateEntity
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/SchemaTemplates.cs
    startLine: 64
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Database.StringTemplates
  summary: "\ncreates an SQL command to create an entity.\n"
  example: []
  syntax:
    content: public void CreateEntity(string schema, ModelEntityBase entity)
    parameters:
    - id: schema
      type: System.String
      description: the schema to use.
    - id: entity
      type: TimeCockpit.Data.DataModel.ModelEntityBase
      description: the entity to use.
    content.vb: Public Sub CreateEntity(schema As String, entity As ModelEntityBase)
  overload: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.CreateEntity*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.DropEntity(System.String,TimeCockpit.Data.DataModel.ModelEntityBase)
  commentId: M:TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.DropEntity(System.String,TimeCockpit.Data.DataModel.ModelEntityBase)
  id: DropEntity(System.String,TimeCockpit.Data.DataModel.ModelEntityBase)
  parent: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates
  langs:
  - csharp
  - vb
  name: DropEntity(String, ModelEntityBase)
  nameWithType: SchemaTemplates.DropEntity(String, ModelEntityBase)
  fullName: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.DropEntity(System.String, TimeCockpit.Data.DataModel.ModelEntityBase)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/SchemaTemplates.cs
    id: DropEntity
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/SchemaTemplates.cs
    startLine: 309
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Database.StringTemplates
  summary: "\ncreates an SQL command to drop an entity.\n"
  example: []
  syntax:
    content: public void DropEntity(string schema, ModelEntityBase entity)
    parameters:
    - id: schema
      type: System.String
      description: the schema to use.
    - id: entity
      type: TimeCockpit.Data.DataModel.ModelEntityBase
      description: model entity base.
    content.vb: Public Sub DropEntity(schema As String, entity As ModelEntityBase)
  overload: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.DropEntity*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.UpdateEntity(System.String,TimeCockpit.Data.DataModel.ModelEntityBase)
  commentId: M:TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.UpdateEntity(System.String,TimeCockpit.Data.DataModel.ModelEntityBase)
  id: UpdateEntity(System.String,TimeCockpit.Data.DataModel.ModelEntityBase)
  parent: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates
  langs:
  - csharp
  - vb
  name: UpdateEntity(String, ModelEntityBase)
  nameWithType: SchemaTemplates.UpdateEntity(String, ModelEntityBase)
  fullName: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.UpdateEntity(System.String, TimeCockpit.Data.DataModel.ModelEntityBase)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/SchemaTemplates.cs
    id: UpdateEntity
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/SchemaTemplates.cs
    startLine: 577
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Database.StringTemplates
  summary: "\ncreates an SQL command to update an entity.\n"
  example: []
  syntax:
    content: public void UpdateEntity(string schema, ModelEntityBase entity)
    parameters:
    - id: schema
      type: System.String
      description: the schema to use.
    - id: entity
      type: TimeCockpit.Data.DataModel.ModelEntityBase
      description: model entity base.
    content.vb: Public Sub UpdateEntity(schema As String, entity As ModelEntityBase)
  overload: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.UpdateEntity*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.CreateProperty(System.String,TimeCockpit.Data.DataModel.ModelProperty,TimeCockpit.Data.DataModel.StorageColumn[],System.Object,TimeCockpit.Data.DataModel.Culture[])
  commentId: M:TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.CreateProperty(System.String,TimeCockpit.Data.DataModel.ModelProperty,TimeCockpit.Data.DataModel.StorageColumn[],System.Object,TimeCockpit.Data.DataModel.Culture[])
  id: CreateProperty(System.String,TimeCockpit.Data.DataModel.ModelProperty,TimeCockpit.Data.DataModel.StorageColumn[],System.Object,TimeCockpit.Data.DataModel.Culture[])
  parent: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates
  langs:
  - csharp
  - vb
  name: CreateProperty(String, ModelProperty, StorageColumn[], Object, Culture[])
  nameWithType: SchemaTemplates.CreateProperty(String, ModelProperty, StorageColumn[], Object, Culture[])
  fullName: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.CreateProperty(System.String, TimeCockpit.Data.DataModel.ModelProperty, TimeCockpit.Data.DataModel.StorageColumn[], System.Object, TimeCockpit.Data.DataModel.Culture[])
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/SchemaTemplates.cs
    id: CreateProperty
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/SchemaTemplates.cs
    startLine: 652
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Database.StringTemplates
  summary: "\ncreates an SQL command to create a property.\n"
  example: []
  syntax:
    content: public void CreateProperty(string schema, ModelProperty property, StorageColumn[] columns, object lengthPrecision, Culture[] cultures)
    parameters:
    - id: schema
      type: System.String
      description: the schema to use.
    - id: property
      type: TimeCockpit.Data.DataModel.ModelProperty
      description: the property to create.
    - id: columns
      type: TimeCockpit.Data.DataModel.StorageColumn[]
      description: the storage columns.
    - id: lengthPrecision
      type: System.Object
      description: the optional length precision.
    - id: cultures
      type: TimeCockpit.Data.DataModel.Culture[]
      description: the available cultures in the model.
    content.vb: Public Sub CreateProperty(schema As String, property As ModelProperty, columns As StorageColumn(), lengthPrecision As Object, cultures As Culture())
  overload: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.CreateProperty*
  nameWithType.vb: SchemaTemplates.CreateProperty(String, ModelProperty, StorageColumn(), Object, Culture())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.CreateProperty(System.String, TimeCockpit.Data.DataModel.ModelProperty, TimeCockpit.Data.DataModel.StorageColumn(), System.Object, TimeCockpit.Data.DataModel.Culture())
  name.vb: CreateProperty(String, ModelProperty, StorageColumn(), Object, Culture())
- uid: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.UpdateProperty(System.String,TimeCockpit.Data.DataModel.ModelProperty,TimeCockpit.Data.DataModel.StorageColumn[],System.Object,TimeCockpit.Data.DataModel.Culture[],TimeCockpit.Data.DataModel.Culture[],TimeCockpit.Data.DataModel.Culture)
  commentId: M:TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.UpdateProperty(System.String,TimeCockpit.Data.DataModel.ModelProperty,TimeCockpit.Data.DataModel.StorageColumn[],System.Object,TimeCockpit.Data.DataModel.Culture[],TimeCockpit.Data.DataModel.Culture[],TimeCockpit.Data.DataModel.Culture)
  id: UpdateProperty(System.String,TimeCockpit.Data.DataModel.ModelProperty,TimeCockpit.Data.DataModel.StorageColumn[],System.Object,TimeCockpit.Data.DataModel.Culture[],TimeCockpit.Data.DataModel.Culture[],TimeCockpit.Data.DataModel.Culture)
  parent: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates
  langs:
  - csharp
  - vb
  name: UpdateProperty(String, ModelProperty, StorageColumn[], Object, Culture[], Culture[], Culture)
  nameWithType: SchemaTemplates.UpdateProperty(String, ModelProperty, StorageColumn[], Object, Culture[], Culture[], Culture)
  fullName: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.UpdateProperty(System.String, TimeCockpit.Data.DataModel.ModelProperty, TimeCockpit.Data.DataModel.StorageColumn[], System.Object, TimeCockpit.Data.DataModel.Culture[], TimeCockpit.Data.DataModel.Culture[], TimeCockpit.Data.DataModel.Culture)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/SchemaTemplates.cs
    id: UpdateProperty
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/SchemaTemplates.cs
    startLine: 989
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Database.StringTemplates
  summary: "\ncreates an SQL command to update a property.\n"
  example: []
  syntax:
    content: public void UpdateProperty(string schema, ModelProperty property, StorageColumn[] columns, object lengthPrecision, Culture[] cultures, Culture[] existingCultures, Culture defaultCulture)
    parameters:
    - id: schema
      type: System.String
      description: the schema to use.
    - id: property
      type: TimeCockpit.Data.DataModel.ModelProperty
      description: the property to create.
    - id: columns
      type: TimeCockpit.Data.DataModel.StorageColumn[]
      description: the storage columns.
    - id: lengthPrecision
      type: System.Object
      description: the optional length precision.
    - id: cultures
      type: TimeCockpit.Data.DataModel.Culture[]
      description: the cultures missing for the given property.
    - id: existingCultures
      type: TimeCockpit.Data.DataModel.Culture[]
      description: the cultures that have already been created before.
    - id: defaultCulture
      type: TimeCockpit.Data.DataModel.Culture
      description: the current default culture of the model.
    content.vb: Public Sub UpdateProperty(schema As String, property As ModelProperty, columns As StorageColumn(), lengthPrecision As Object, cultures As Culture(), existingCultures As Culture(), defaultCulture As Culture)
  overload: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.UpdateProperty*
  nameWithType.vb: SchemaTemplates.UpdateProperty(String, ModelProperty, StorageColumn(), Object, Culture(), Culture(), Culture)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.UpdateProperty(System.String, TimeCockpit.Data.DataModel.ModelProperty, TimeCockpit.Data.DataModel.StorageColumn(), System.Object, TimeCockpit.Data.DataModel.Culture(), TimeCockpit.Data.DataModel.Culture(), TimeCockpit.Data.DataModel.Culture)
  name.vb: UpdateProperty(String, ModelProperty, StorageColumn(), Object, Culture(), Culture(), Culture)
- uid: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.DropProperty(System.String,TimeCockpit.Data.DataModel.DeleteOperation,TimeCockpit.Data.DataModel.StorageColumn[],TimeCockpit.Data.DataModel.ModelProperty,TimeCockpit.Data.DataModel.Culture[])
  commentId: M:TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.DropProperty(System.String,TimeCockpit.Data.DataModel.DeleteOperation,TimeCockpit.Data.DataModel.StorageColumn[],TimeCockpit.Data.DataModel.ModelProperty,TimeCockpit.Data.DataModel.Culture[])
  id: DropProperty(System.String,TimeCockpit.Data.DataModel.DeleteOperation,TimeCockpit.Data.DataModel.StorageColumn[],TimeCockpit.Data.DataModel.ModelProperty,TimeCockpit.Data.DataModel.Culture[])
  parent: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates
  langs:
  - csharp
  - vb
  name: DropProperty(String, DeleteOperation, StorageColumn[], ModelProperty, Culture[])
  nameWithType: SchemaTemplates.DropProperty(String, DeleteOperation, StorageColumn[], ModelProperty, Culture[])
  fullName: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.DropProperty(System.String, TimeCockpit.Data.DataModel.DeleteOperation, TimeCockpit.Data.DataModel.StorageColumn[], TimeCockpit.Data.DataModel.ModelProperty, TimeCockpit.Data.DataModel.Culture[])
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/SchemaTemplates.cs
    id: DropProperty
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/SchemaTemplates.cs
    startLine: 1527
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Database.StringTemplates
  summary: "\ncreates an SQL command to drop a property.\n"
  example: []
  syntax:
    content: public void DropProperty(string schema, DeleteOperation deleteOperation, StorageColumn[] columns, ModelProperty property, Culture[] cultures)
    parameters:
    - id: schema
      type: System.String
      description: the schema to use.
    - id: deleteOperation
      type: TimeCockpit.Data.DataModel.DeleteOperation
      description: the delete operation.
    - id: columns
      type: TimeCockpit.Data.DataModel.StorageColumn[]
      description: the storage columns.
    - id: property
      type: TimeCockpit.Data.DataModel.ModelProperty
      description: the property to create.
    - id: cultures
      type: TimeCockpit.Data.DataModel.Culture[]
      description: the available cultures in the model.
    content.vb: Public Sub DropProperty(schema As String, deleteOperation As DeleteOperation, columns As StorageColumn(), property As ModelProperty, cultures As Culture())
  overload: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.DropProperty*
  nameWithType.vb: SchemaTemplates.DropProperty(String, DeleteOperation, StorageColumn(), ModelProperty, Culture())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.DropProperty(System.String, TimeCockpit.Data.DataModel.DeleteOperation, TimeCockpit.Data.DataModel.StorageColumn(), TimeCockpit.Data.DataModel.ModelProperty, TimeCockpit.Data.DataModel.Culture())
  name.vb: DropProperty(String, DeleteOperation, StorageColumn(), ModelProperty, Culture())
- uid: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.CreateRelation(System.String,TimeCockpit.Data.DataModel.RelationBase,System.Boolean)
  commentId: M:TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.CreateRelation(System.String,TimeCockpit.Data.DataModel.RelationBase,System.Boolean)
  id: CreateRelation(System.String,TimeCockpit.Data.DataModel.RelationBase,System.Boolean)
  parent: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates
  langs:
  - csharp
  - vb
  name: CreateRelation(String, RelationBase, Boolean)
  nameWithType: SchemaTemplates.CreateRelation(String, RelationBase, Boolean)
  fullName: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.CreateRelation(System.String, TimeCockpit.Data.DataModel.RelationBase, System.Boolean)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/SchemaTemplates.cs
    id: CreateRelation
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/SchemaTemplates.cs
    startLine: 1818
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Database.StringTemplates
  summary: "\ncreates an SQL command to create a relation.\n"
  example: []
  syntax:
    content: public void CreateRelation(string schema, RelationBase relation, bool hasLogicalRelations)
    parameters:
    - id: schema
      type: System.String
      description: the schema to use.
    - id: relation
      type: TimeCockpit.Data.DataModel.RelationBase
      description: the relation to create.
    - id: hasLogicalRelations
      type: System.Boolean
      description: true if the installed schema has logical relations installed, false otherwise
    content.vb: Public Sub CreateRelation(schema As String, relation As RelationBase, hasLogicalRelations As Boolean)
  overload: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.CreateRelation*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.UpdateRelation(System.String,TimeCockpit.Data.DataModel.RelationBase,System.Boolean)
  commentId: M:TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.UpdateRelation(System.String,TimeCockpit.Data.DataModel.RelationBase,System.Boolean)
  id: UpdateRelation(System.String,TimeCockpit.Data.DataModel.RelationBase,System.Boolean)
  parent: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates
  langs:
  - csharp
  - vb
  name: UpdateRelation(String, RelationBase, Boolean)
  nameWithType: SchemaTemplates.UpdateRelation(String, RelationBase, Boolean)
  fullName: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.UpdateRelation(System.String, TimeCockpit.Data.DataModel.RelationBase, System.Boolean)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/SchemaTemplates.cs
    id: UpdateRelation
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/SchemaTemplates.cs
    startLine: 2200
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Database.StringTemplates
  summary: "\ncreates an SQL command to update a relation.\n"
  example: []
  syntax:
    content: public void UpdateRelation(string schema, RelationBase relation, bool hasLogicalRelations)
    parameters:
    - id: schema
      type: System.String
      description: the schema to use.
    - id: relation
      type: TimeCockpit.Data.DataModel.RelationBase
      description: the relation to create.
    - id: hasLogicalRelations
      type: System.Boolean
      description: true if the installed schema has logical relations installed, false otherwise
    content.vb: Public Sub UpdateRelation(schema As String, relation As RelationBase, hasLogicalRelations As Boolean)
  overload: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.UpdateRelation*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.DropRelation(System.String,TimeCockpit.Data.DataModel.DeleteOperation)
  commentId: M:TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.DropRelation(System.String,TimeCockpit.Data.DataModel.DeleteOperation)
  id: DropRelation(System.String,TimeCockpit.Data.DataModel.DeleteOperation)
  parent: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates
  langs:
  - csharp
  - vb
  name: DropRelation(String, DeleteOperation)
  nameWithType: SchemaTemplates.DropRelation(String, DeleteOperation)
  fullName: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.DropRelation(System.String, TimeCockpit.Data.DataModel.DeleteOperation)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/SchemaTemplates.cs
    id: DropRelation
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/SchemaTemplates.cs
    startLine: 2401
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Database.StringTemplates
  summary: "\ncreates an SQL command to drop a relation.\n"
  example: []
  syntax:
    content: public void DropRelation(string schema, DeleteOperation deleteOperation)
    parameters:
    - id: schema
      type: System.String
      description: the schema to use.
    - id: deleteOperation
      type: TimeCockpit.Data.DataModel.DeleteOperation
      description: the delete operation.
    content.vb: Public Sub DropRelation(schema As String, deleteOperation As DeleteOperation)
  overload: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.DropRelation*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.CreateValidationRule(System.String)
  commentId: M:TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.CreateValidationRule(System.String)
  id: CreateValidationRule(System.String)
  parent: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates
  langs:
  - csharp
  - vb
  name: CreateValidationRule(String)
  nameWithType: SchemaTemplates.CreateValidationRule(String)
  fullName: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.CreateValidationRule(System.String)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/SchemaTemplates.cs
    id: CreateValidationRule
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/SchemaTemplates.cs
    startLine: 2657
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Database.StringTemplates
  summary: "\ncreates an SQL command to create a validation rule.\n"
  example: []
  syntax:
    content: public void CreateValidationRule(string schema)
    parameters:
    - id: schema
      type: System.String
      description: the schema to use.
    content.vb: Public Sub CreateValidationRule(schema As String)
  overload: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.CreateValidationRule*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.UpdateValidationRule(System.String)
  commentId: M:TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.UpdateValidationRule(System.String)
  id: UpdateValidationRule(System.String)
  parent: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates
  langs:
  - csharp
  - vb
  name: UpdateValidationRule(String)
  nameWithType: SchemaTemplates.UpdateValidationRule(String)
  fullName: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.UpdateValidationRule(System.String)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/SchemaTemplates.cs
    id: UpdateValidationRule
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/SchemaTemplates.cs
    startLine: 2725
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Database.StringTemplates
  summary: "\ncreates an SQL command to update a validation rule.\n"
  example: []
  syntax:
    content: public void UpdateValidationRule(string schema)
    parameters:
    - id: schema
      type: System.String
      description: the schema to use.
    content.vb: Public Sub UpdateValidationRule(schema As String)
  overload: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.UpdateValidationRule*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.DropValidationRule(System.String)
  commentId: M:TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.DropValidationRule(System.String)
  id: DropValidationRule(System.String)
  parent: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates
  langs:
  - csharp
  - vb
  name: DropValidationRule(String)
  nameWithType: SchemaTemplates.DropValidationRule(String)
  fullName: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.DropValidationRule(System.String)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/SchemaTemplates.cs
    id: DropValidationRule
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/SchemaTemplates.cs
    startLine: 2801
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Database.StringTemplates
  summary: "\ncreates an SQL command to drop a validation rule.\n"
  example: []
  syntax:
    content: public void DropValidationRule(string schema)
    parameters:
    - id: schema
      type: System.String
      description: the schema to use.
    content.vb: Public Sub DropValidationRule(schema As String)
  overload: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.DropValidationRule*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.CreateModelEntityInterface(System.String,TimeCockpit.Data.DataModel.ModelEntityInterface)
  commentId: M:TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.CreateModelEntityInterface(System.String,TimeCockpit.Data.DataModel.ModelEntityInterface)
  id: CreateModelEntityInterface(System.String,TimeCockpit.Data.DataModel.ModelEntityInterface)
  parent: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates
  langs:
  - csharp
  - vb
  name: CreateModelEntityInterface(String, ModelEntityInterface)
  nameWithType: SchemaTemplates.CreateModelEntityInterface(String, ModelEntityInterface)
  fullName: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.CreateModelEntityInterface(System.String, TimeCockpit.Data.DataModel.ModelEntityInterface)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/SchemaTemplates.cs
    id: CreateModelEntityInterface
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/SchemaTemplates.cs
    startLine: 2881
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Database.StringTemplates
  summary: "\ncreates an SQL command to create a model entity interface.\n"
  example: []
  syntax:
    content: public void CreateModelEntityInterface(string schema, ModelEntityInterface entityInterface)
    parameters:
    - id: schema
      type: System.String
      description: the schema to use.
    - id: entityInterface
      type: TimeCockpit.Data.DataModel.ModelEntityInterface
      description: the entity interface.
    content.vb: Public Sub CreateModelEntityInterface(schema As String, entityInterface As ModelEntityInterface)
  overload: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.CreateModelEntityInterface*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.DropModelEntityInterface(System.String,TimeCockpit.Data.DataModel.DeleteOperation)
  commentId: M:TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.DropModelEntityInterface(System.String,TimeCockpit.Data.DataModel.DeleteOperation)
  id: DropModelEntityInterface(System.String,TimeCockpit.Data.DataModel.DeleteOperation)
  parent: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates
  langs:
  - csharp
  - vb
  name: DropModelEntityInterface(String, DeleteOperation)
  nameWithType: SchemaTemplates.DropModelEntityInterface(String, DeleteOperation)
  fullName: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.DropModelEntityInterface(System.String, TimeCockpit.Data.DataModel.DeleteOperation)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/SchemaTemplates.cs
    id: DropModelEntityInterface
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/SchemaTemplates.cs
    startLine: 2987
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Database.StringTemplates
  summary: "\ncreates an sql command to drop an model entity interface.\n"
  example: []
  syntax:
    content: public void DropModelEntityInterface(string schema, DeleteOperation entity)
    parameters:
    - id: schema
      type: System.String
      description: the schema to use.
    - id: entity
      type: TimeCockpit.Data.DataModel.DeleteOperation
      description: the delete operation.
    content.vb: Public Sub DropModelEntityInterface(schema As String, entity As DeleteOperation)
  overload: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.DropModelEntityInterface*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.InsertIntoDead(System.String)
  commentId: M:TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.InsertIntoDead(System.String)
  id: InsertIntoDead(System.String)
  parent: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates
  langs:
  - csharp
  - vb
  name: InsertIntoDead(String)
  nameWithType: SchemaTemplates.InsertIntoDead(String)
  fullName: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.InsertIntoDead(System.String)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/SchemaTemplates.cs
    id: InsertIntoDead
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/SchemaTemplates.cs
    startLine: 3074
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Database.StringTemplates
  summary: "\ncreates an sql command to insert something into a dead.\n"
  example: []
  syntax:
    content: public void InsertIntoDead(string schema)
    parameters:
    - id: schema
      type: System.String
      description: the schema to use.
    content.vb: Public Sub InsertIntoDead(schema As String)
  overload: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.InsertIntoDead*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.DropDefaultConstraint(System.String,TimeCockpit.Data.DataModel.ModelElement,TimeCockpit.Data.DataModel.StorageColumn)
  commentId: M:TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.DropDefaultConstraint(System.String,TimeCockpit.Data.DataModel.ModelElement,TimeCockpit.Data.DataModel.StorageColumn)
  id: DropDefaultConstraint(System.String,TimeCockpit.Data.DataModel.ModelElement,TimeCockpit.Data.DataModel.StorageColumn)
  parent: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates
  langs:
  - csharp
  - vb
  name: DropDefaultConstraint(String, ModelElement, StorageColumn)
  nameWithType: SchemaTemplates.DropDefaultConstraint(String, ModelElement, StorageColumn)
  fullName: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.DropDefaultConstraint(System.String, TimeCockpit.Data.DataModel.ModelElement, TimeCockpit.Data.DataModel.StorageColumn)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/SchemaTemplates.cs
    id: DropDefaultConstraint
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/SchemaTemplates.cs
    startLine: 3132
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Database.StringTemplates
  summary: "\ncreates an sql command to drop default constraint.\n"
  example: []
  syntax:
    content: public void DropDefaultConstraint(string schema, ModelElement element, StorageColumn column)
    parameters:
    - id: schema
      type: System.String
      description: the schema to use.
    - id: element
      type: TimeCockpit.Data.DataModel.ModelElement
      description: the model element.
    - id: column
      type: TimeCockpit.Data.DataModel.StorageColumn
      description: the storage column of concern.
    content.vb: Public Sub DropDefaultConstraint(schema As String, element As ModelElement, column As StorageColumn)
  overload: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.DropDefaultConstraint*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.AddBlobColumnToGarbageCollection(System.String,TimeCockpit.Data.DataModel.ModelEntityBase,TimeCockpit.Data.DataModel.BinaryProperty)
  commentId: M:TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.AddBlobColumnToGarbageCollection(System.String,TimeCockpit.Data.DataModel.ModelEntityBase,TimeCockpit.Data.DataModel.BinaryProperty)
  id: AddBlobColumnToGarbageCollection(System.String,TimeCockpit.Data.DataModel.ModelEntityBase,TimeCockpit.Data.DataModel.BinaryProperty)
  parent: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates
  langs:
  - csharp
  - vb
  name: AddBlobColumnToGarbageCollection(String, ModelEntityBase, BinaryProperty)
  nameWithType: SchemaTemplates.AddBlobColumnToGarbageCollection(String, ModelEntityBase, BinaryProperty)
  fullName: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.AddBlobColumnToGarbageCollection(System.String, TimeCockpit.Data.DataModel.ModelEntityBase, TimeCockpit.Data.DataModel.BinaryProperty)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/SchemaTemplates.cs
    id: AddBlobColumnToGarbageCollection
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/SchemaTemplates.cs
    startLine: 3145
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Database.StringTemplates
  summary: "\ncreates an sql command to add a blob column to the garbage collection.\n"
  example: []
  syntax:
    content: public void AddBlobColumnToGarbageCollection(string schema, ModelEntityBase entity, BinaryProperty blobProperty)
    parameters:
    - id: schema
      type: System.String
      description: the schema to use.
    - id: entity
      type: TimeCockpit.Data.DataModel.ModelEntityBase
      description: the model entity.
    - id: blobProperty
      type: TimeCockpit.Data.DataModel.BinaryProperty
      description: the blob property.
    content.vb: Public Sub AddBlobColumnToGarbageCollection(schema As String, entity As ModelEntityBase, blobProperty As BinaryProperty)
  overload: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.AddBlobColumnToGarbageCollection*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.GetLocalModelVersion(System.String)
  commentId: M:TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.GetLocalModelVersion(System.String)
  id: GetLocalModelVersion(System.String)
  parent: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates
  langs:
  - csharp
  - vb
  name: GetLocalModelVersion(String)
  nameWithType: SchemaTemplates.GetLocalModelVersion(String)
  fullName: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.GetLocalModelVersion(System.String)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/SchemaTemplates.cs
    id: GetLocalModelVersion
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/SchemaTemplates.cs
    startLine: 3263
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Database.StringTemplates
  summary: "\ncreates an sql command to get the local model version.\n"
  example: []
  syntax:
    content: public void GetLocalModelVersion(string schema)
    parameters:
    - id: schema
      type: System.String
      description: the schema to use.
    content.vb: Public Sub GetLocalModelVersion(schema As String)
  overload: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.GetLocalModelVersion*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.DropConstraints(TimeCockpit.Data.DataModel.ModelEntityBase,System.String)
  commentId: M:TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.DropConstraints(TimeCockpit.Data.DataModel.ModelEntityBase,System.String)
  id: DropConstraints(TimeCockpit.Data.DataModel.ModelEntityBase,System.String)
  parent: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates
  langs:
  - csharp
  - vb
  name: DropConstraints(ModelEntityBase, String)
  nameWithType: SchemaTemplates.DropConstraints(ModelEntityBase, String)
  fullName: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.DropConstraints(TimeCockpit.Data.DataModel.ModelEntityBase, System.String)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/SchemaTemplates.cs
    id: DropConstraints
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/SchemaTemplates.cs
    startLine: 3299
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Database.StringTemplates
  summary: "\ncreates an sql command to drop constraints.\n"
  example: []
  syntax:
    content: public void DropConstraints(ModelEntityBase entity, string schema)
    parameters:
    - id: entity
      type: TimeCockpit.Data.DataModel.ModelEntityBase
      description: the entity.
    - id: schema
      type: System.String
      description: the schema to use.
    content.vb: Public Sub DropConstraints(entity As ModelEntityBase, schema As String)
  overload: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.DropConstraints*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.DisableCyclicConstraints(TimeCockpit.Data.DataModel.ModelEntityBase,System.String)
  commentId: M:TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.DisableCyclicConstraints(TimeCockpit.Data.DataModel.ModelEntityBase,System.String)
  id: DisableCyclicConstraints(TimeCockpit.Data.DataModel.ModelEntityBase,System.String)
  parent: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates
  langs:
  - csharp
  - vb
  name: DisableCyclicConstraints(ModelEntityBase, String)
  nameWithType: SchemaTemplates.DisableCyclicConstraints(ModelEntityBase, String)
  fullName: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.DisableCyclicConstraints(TimeCockpit.Data.DataModel.ModelEntityBase, System.String)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/SchemaTemplates.cs
    id: DisableCyclicConstraints
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/SchemaTemplates.cs
    startLine: 3403
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Database.StringTemplates
  summary: "\ncreates an sql command to disable constraints.\n"
  example: []
  syntax:
    content: public void DisableCyclicConstraints(ModelEntityBase entity, string schema)
    parameters:
    - id: entity
      type: TimeCockpit.Data.DataModel.ModelEntityBase
      description: the entity.
    - id: schema
      type: System.String
      description: the schema to use.
    content.vb: Public Sub DisableCyclicConstraints(entity As ModelEntityBase, schema As String)
  overload: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.DisableCyclicConstraints*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.CreateConstraints(TimeCockpit.Data.DataModel.ModelEntityBase,TimeCockpit.Data.DataModel.Relation[],System.String)
  commentId: M:TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.CreateConstraints(TimeCockpit.Data.DataModel.ModelEntityBase,TimeCockpit.Data.DataModel.Relation[],System.String)
  id: CreateConstraints(TimeCockpit.Data.DataModel.ModelEntityBase,TimeCockpit.Data.DataModel.Relation[],System.String)
  parent: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates
  langs:
  - csharp
  - vb
  name: CreateConstraints(ModelEntityBase, Relation[], String)
  nameWithType: SchemaTemplates.CreateConstraints(ModelEntityBase, Relation[], String)
  fullName: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.CreateConstraints(TimeCockpit.Data.DataModel.ModelEntityBase, TimeCockpit.Data.DataModel.Relation[], System.String)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/SchemaTemplates.cs
    id: CreateConstraints
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/SchemaTemplates.cs
    startLine: 3512
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Database.StringTemplates
  summary: "\ncreates an sql command to create constraints.\n"
  example: []
  syntax:
    content: public void CreateConstraints(ModelEntityBase entity, Relation[] relations, string schema)
    parameters:
    - id: entity
      type: TimeCockpit.Data.DataModel.ModelEntityBase
      description: the entity.
    - id: relations
      type: TimeCockpit.Data.DataModel.Relation[]
      description: the relations to create constraints for.
    - id: schema
      type: System.String
      description: the schema to use.
    content.vb: Public Sub CreateConstraints(entity As ModelEntityBase, relations As Relation(), schema As String)
  overload: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.CreateConstraints*
  nameWithType.vb: SchemaTemplates.CreateConstraints(ModelEntityBase, Relation(), String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.CreateConstraints(TimeCockpit.Data.DataModel.ModelEntityBase, TimeCockpit.Data.DataModel.Relation(), System.String)
  name.vb: CreateConstraints(ModelEntityBase, Relation(), String)
- uid: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.EnableCyclicConstraints(TimeCockpit.Data.DataModel.ModelEntityBase,System.String)
  commentId: M:TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.EnableCyclicConstraints(TimeCockpit.Data.DataModel.ModelEntityBase,System.String)
  id: EnableCyclicConstraints(TimeCockpit.Data.DataModel.ModelEntityBase,System.String)
  parent: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates
  langs:
  - csharp
  - vb
  name: EnableCyclicConstraints(ModelEntityBase, String)
  nameWithType: SchemaTemplates.EnableCyclicConstraints(ModelEntityBase, String)
  fullName: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.EnableCyclicConstraints(TimeCockpit.Data.DataModel.ModelEntityBase, System.String)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/SchemaTemplates.cs
    id: EnableCyclicConstraints
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/SchemaTemplates.cs
    startLine: 3666
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Database.StringTemplates
  summary: "\ncreates an sql command to enable cyclic constraints.\n"
  example: []
  syntax:
    content: public void EnableCyclicConstraints(ModelEntityBase entity, string schema)
    parameters:
    - id: entity
      type: TimeCockpit.Data.DataModel.ModelEntityBase
      description: the entity.
    - id: schema
      type: System.String
      description: the schema to use.
    content.vb: Public Sub EnableCyclicConstraints(entity As ModelEntityBase, schema As String)
  overload: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.EnableCyclicConstraints*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.CreateModelAction(System.String)
  commentId: M:TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.CreateModelAction(System.String)
  id: CreateModelAction(System.String)
  parent: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates
  langs:
  - csharp
  - vb
  name: CreateModelAction(String)
  nameWithType: SchemaTemplates.CreateModelAction(String)
  fullName: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.CreateModelAction(System.String)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/SchemaTemplates.cs
    id: CreateModelAction
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/SchemaTemplates.cs
    startLine: 3766
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Database.StringTemplates
  summary: "\ncreates an sql command to create a model action..\n"
  example: []
  syntax:
    content: public void CreateModelAction(string schema)
    parameters:
    - id: schema
      type: System.String
      description: the schema to use.
    content.vb: Public Sub CreateModelAction(schema As String)
  overload: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.CreateModelAction*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.UpdateModelAction(System.String)
  commentId: M:TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.UpdateModelAction(System.String)
  id: UpdateModelAction(System.String)
  parent: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates
  langs:
  - csharp
  - vb
  name: UpdateModelAction(String)
  nameWithType: SchemaTemplates.UpdateModelAction(String)
  fullName: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.UpdateModelAction(System.String)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/SchemaTemplates.cs
    id: UpdateModelAction
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/SchemaTemplates.cs
    startLine: 3828
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Database.StringTemplates
  summary: "\ncreates an sql command to update a model action.\n"
  example: []
  syntax:
    content: public void UpdateModelAction(string schema)
    parameters:
    - id: schema
      type: System.String
      description: the schema to use.
    content.vb: Public Sub UpdateModelAction(schema As String)
  overload: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.UpdateModelAction*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.DropModelAction(System.String)
  commentId: M:TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.DropModelAction(System.String)
  id: DropModelAction(System.String)
  parent: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates
  langs:
  - csharp
  - vb
  name: DropModelAction(String)
  nameWithType: SchemaTemplates.DropModelAction(String)
  fullName: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.DropModelAction(System.String)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/SchemaTemplates.cs
    id: DropModelAction
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/SchemaTemplates.cs
    startLine: 3901
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Database.StringTemplates
  summary: "\ncreates an sql command to drop a model action.\n"
  example: []
  syntax:
    content: public void DropModelAction(string schema)
    parameters:
    - id: schema
      type: System.String
      description: the schema to use.
    content.vb: Public Sub DropModelAction(schema As String)
  overload: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.DropModelAction*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.CreateEntityView(System.String)
  commentId: M:TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.CreateEntityView(System.String)
  id: CreateEntityView(System.String)
  parent: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates
  langs:
  - csharp
  - vb
  name: CreateEntityView(String)
  nameWithType: SchemaTemplates.CreateEntityView(String)
  fullName: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.CreateEntityView(System.String)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/SchemaTemplates.cs
    id: CreateEntityView
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/SchemaTemplates.cs
    startLine: 4000
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Database.StringTemplates
  summary: "\ncreates an sql command to create an entity view.\n"
  example: []
  syntax:
    content: public void CreateEntityView(string schema)
    parameters:
    - id: schema
      type: System.String
      description: the schema to use.
    content.vb: Public Sub CreateEntityView(schema As String)
  overload: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.CreateEntityView*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.UpdateEntityView(System.String)
  commentId: M:TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.UpdateEntityView(System.String)
  id: UpdateEntityView(System.String)
  parent: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates
  langs:
  - csharp
  - vb
  name: UpdateEntityView(String)
  nameWithType: SchemaTemplates.UpdateEntityView(String)
  fullName: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.UpdateEntityView(System.String)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/SchemaTemplates.cs
    id: UpdateEntityView
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/SchemaTemplates.cs
    startLine: 4062
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Database.StringTemplates
  summary: "\ncreates an sql command to update an entity view.\n"
  example: []
  syntax:
    content: public void UpdateEntityView(string schema)
    parameters:
    - id: schema
      type: System.String
      description: the schema to use.
    content.vb: Public Sub UpdateEntityView(schema As String)
  overload: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.UpdateEntityView*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.DropEntityView(System.String)
  commentId: M:TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.DropEntityView(System.String)
  id: DropEntityView(System.String)
  parent: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates
  langs:
  - csharp
  - vb
  name: DropEntityView(String)
  nameWithType: SchemaTemplates.DropEntityView(String)
  fullName: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.DropEntityView(System.String)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/SchemaTemplates.cs
    id: DropEntityView
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/SchemaTemplates.cs
    startLine: 4131
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Database.StringTemplates
  summary: "\ncreates an sql command to drop an entity view.\n"
  example: []
  syntax:
    content: public void DropEntityView(string schema)
    parameters:
    - id: schema
      type: System.String
      description: the schema to use.
    content.vb: Public Sub DropEntityView(schema As String)
  overload: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.DropEntityView*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.CreatePermission(System.String)
  commentId: M:TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.CreatePermission(System.String)
  id: CreatePermission(System.String)
  parent: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates
  langs:
  - csharp
  - vb
  name: CreatePermission(String)
  nameWithType: SchemaTemplates.CreatePermission(String)
  fullName: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.CreatePermission(System.String)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/SchemaTemplates.cs
    id: CreatePermission
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/SchemaTemplates.cs
    startLine: 4229
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Database.StringTemplates
  summary: "\ncreates an sql command to drop an entity view.\n"
  example: []
  syntax:
    content: public void CreatePermission(string schema)
    parameters:
    - id: schema
      type: System.String
      description: the schema to use.
    content.vb: Public Sub CreatePermission(schema As String)
  overload: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.CreatePermission*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.UpdatePermission(System.String)
  commentId: M:TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.UpdatePermission(System.String)
  id: UpdatePermission(System.String)
  parent: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates
  langs:
  - csharp
  - vb
  name: UpdatePermission(String)
  nameWithType: SchemaTemplates.UpdatePermission(String)
  fullName: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.UpdatePermission(System.String)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/SchemaTemplates.cs
    id: UpdatePermission
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/SchemaTemplates.cs
    startLine: 4295
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Database.StringTemplates
  summary: "\ncreates an sql command to update a permission.\n"
  example: []
  syntax:
    content: public void UpdatePermission(string schema)
    parameters:
    - id: schema
      type: System.String
      description: the schema to use.
    content.vb: Public Sub UpdatePermission(schema As String)
  overload: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.UpdatePermission*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.DropPermission(System.String)
  commentId: M:TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.DropPermission(System.String)
  id: DropPermission(System.String)
  parent: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates
  langs:
  - csharp
  - vb
  name: DropPermission(String)
  nameWithType: SchemaTemplates.DropPermission(String)
  fullName: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.DropPermission(System.String)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/SchemaTemplates.cs
    id: DropPermission
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/SchemaTemplates.cs
    startLine: 4371
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Database.StringTemplates
  summary: "\ncreates an sql command to drop a permission.\n"
  example: []
  syntax:
    content: public void DropPermission(string schema)
    parameters:
    - id: schema
      type: System.String
      description: the schema to use.
    content.vb: Public Sub DropPermission(schema As String)
  overload: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.DropPermission*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.CreateNamedSetDefinition(System.String)
  commentId: M:TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.CreateNamedSetDefinition(System.String)
  id: CreateNamedSetDefinition(System.String)
  parent: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates
  langs:
  - csharp
  - vb
  name: CreateNamedSetDefinition(String)
  nameWithType: SchemaTemplates.CreateNamedSetDefinition(String)
  fullName: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.CreateNamedSetDefinition(System.String)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/SchemaTemplates.cs
    id: CreateNamedSetDefinition
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/SchemaTemplates.cs
    startLine: 4444
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Database.StringTemplates
  summary: "\ncreates an sql command to create a named set definition.\n"
  example: []
  syntax:
    content: public void CreateNamedSetDefinition(string schema)
    parameters:
    - id: schema
      type: System.String
      description: the schema to use.
    content.vb: Public Sub CreateNamedSetDefinition(schema As String)
  overload: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.CreateNamedSetDefinition*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.UpdateNamedSetDefinition(System.String)
  commentId: M:TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.UpdateNamedSetDefinition(System.String)
  id: UpdateNamedSetDefinition(System.String)
  parent: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates
  langs:
  - csharp
  - vb
  name: UpdateNamedSetDefinition(String)
  nameWithType: SchemaTemplates.UpdateNamedSetDefinition(String)
  fullName: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.UpdateNamedSetDefinition(System.String)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/SchemaTemplates.cs
    id: UpdateNamedSetDefinition
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/SchemaTemplates.cs
    startLine: 4507
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Database.StringTemplates
  summary: "\ncreates an sql command to update a named set definition.\n"
  example: []
  syntax:
    content: public void UpdateNamedSetDefinition(string schema)
    parameters:
    - id: schema
      type: System.String
      description: the schema to use.
    content.vb: Public Sub UpdateNamedSetDefinition(schema As String)
  overload: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.UpdateNamedSetDefinition*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.DropNamedSetDefinition(System.String)
  commentId: M:TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.DropNamedSetDefinition(System.String)
  id: DropNamedSetDefinition(System.String)
  parent: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates
  langs:
  - csharp
  - vb
  name: DropNamedSetDefinition(String)
  nameWithType: SchemaTemplates.DropNamedSetDefinition(String)
  fullName: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.DropNamedSetDefinition(System.String)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/SchemaTemplates.cs
    id: DropNamedSetDefinition
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/SchemaTemplates.cs
    startLine: 4577
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Database.StringTemplates
  summary: "\ncreates an sql command to drop a named set definition.\n"
  example: []
  syntax:
    content: public void DropNamedSetDefinition(string schema)
    parameters:
    - id: schema
      type: System.String
      description: the schema to use.
    content.vb: Public Sub DropNamedSetDefinition(schema As String)
  overload: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.DropNamedSetDefinition*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.CreateTrigger(System.String)
  commentId: M:TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.CreateTrigger(System.String)
  id: CreateTrigger(System.String)
  parent: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates
  langs:
  - csharp
  - vb
  name: CreateTrigger(String)
  nameWithType: SchemaTemplates.CreateTrigger(String)
  fullName: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.CreateTrigger(System.String)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/SchemaTemplates.cs
    id: CreateTrigger
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/SchemaTemplates.cs
    startLine: 4649
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Database.StringTemplates
  summary: "\ncreates an sql command to create a trigger.\n"
  example: []
  syntax:
    content: public void CreateTrigger(string schema)
    parameters:
    - id: schema
      type: System.String
      description: the schema to use.
    content.vb: Public Sub CreateTrigger(schema As String)
  overload: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.CreateTrigger*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.UpdateTrigger(System.String)
  commentId: M:TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.UpdateTrigger(System.String)
  id: UpdateTrigger(System.String)
  parent: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates
  langs:
  - csharp
  - vb
  name: UpdateTrigger(String)
  nameWithType: SchemaTemplates.UpdateTrigger(String)
  fullName: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.UpdateTrigger(System.String)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/SchemaTemplates.cs
    id: UpdateTrigger
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/SchemaTemplates.cs
    startLine: 4739
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Database.StringTemplates
  summary: "\ncreates an sql command to update a trigger.\n"
  example: []
  syntax:
    content: public void UpdateTrigger(string schema)
    parameters:
    - id: schema
      type: System.String
      description: the schema to use.
    content.vb: Public Sub UpdateTrigger(schema As String)
  overload: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.UpdateTrigger*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.DropTrigger(System.String)
  commentId: M:TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.DropTrigger(System.String)
  id: DropTrigger(System.String)
  parent: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates
  langs:
  - csharp
  - vb
  name: DropTrigger(String)
  nameWithType: SchemaTemplates.DropTrigger(String)
  fullName: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.DropTrigger(System.String)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/SchemaTemplates.cs
    id: DropTrigger
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/SchemaTemplates.cs
    startLine: 4810
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Database.StringTemplates
  summary: "\ncreates an sql command to drop a trigger.\n"
  example: []
  syntax:
    content: public void DropTrigger(string schema)
    parameters:
    - id: schema
      type: System.String
      description: the schema to use.
    content.vb: Public Sub DropTrigger(schema As String)
  overload: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.DropTrigger*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.CreateCulture(System.String,TimeCockpit.Data.DataModel.TextProperty[],System.Collections.Generic.KeyValuePair{TimeCockpit.Data.DataModel.TextProperty,System.Boolean}[],TimeCockpit.Data.DataModel.Culture)
  commentId: M:TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.CreateCulture(System.String,TimeCockpit.Data.DataModel.TextProperty[],System.Collections.Generic.KeyValuePair{TimeCockpit.Data.DataModel.TextProperty,System.Boolean}[],TimeCockpit.Data.DataModel.Culture)
  id: CreateCulture(System.String,TimeCockpit.Data.DataModel.TextProperty[],System.Collections.Generic.KeyValuePair{TimeCockpit.Data.DataModel.TextProperty,System.Boolean}[],TimeCockpit.Data.DataModel.Culture)
  parent: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates
  langs:
  - csharp
  - vb
  name: CreateCulture(String, TextProperty[], KeyValuePair<TextProperty, Boolean>[], Culture)
  nameWithType: SchemaTemplates.CreateCulture(String, TextProperty[], KeyValuePair<TextProperty, Boolean>[], Culture)
  fullName: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.CreateCulture(System.String, TimeCockpit.Data.DataModel.TextProperty[], System.Collections.Generic.KeyValuePair<TimeCockpit.Data.DataModel.TextProperty, System.Boolean>[], TimeCockpit.Data.DataModel.Culture)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/SchemaTemplates.cs
    id: CreateCulture
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/SchemaTemplates.cs
    startLine: 4886
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Database.StringTemplates
  summary: "\ncreates an sql command to create a culture.\n"
  example: []
  syntax:
    content: public void CreateCulture(string schema, TextProperty[] localizedProperties, KeyValuePair<TextProperty, bool>[] firstTimers, Culture culture)
    parameters:
    - id: schema
      type: System.String
      description: the schema to use.
    - id: localizedProperties
      type: TimeCockpit.Data.DataModel.TextProperty[]
      description: all localized textproperties in the model.
    - id: firstTimers
      type: System.Collections.Generic.KeyValuePair{TimeCockpit.Data.DataModel.TextProperty,System.Boolean}[]
      description: the localized properties that get their first culture.
    - id: culture
      type: TimeCockpit.Data.DataModel.Culture
      description: the culture to add.
    content.vb: Public Sub CreateCulture(schema As String, localizedProperties As TextProperty(), firstTimers As KeyValuePair(Of TextProperty, Boolean)(), culture As Culture)
  overload: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.CreateCulture*
  nameWithType.vb: SchemaTemplates.CreateCulture(String, TextProperty(), KeyValuePair(Of TextProperty, Boolean)(), Culture)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.CreateCulture(System.String, TimeCockpit.Data.DataModel.TextProperty(), System.Collections.Generic.KeyValuePair(Of TimeCockpit.Data.DataModel.TextProperty, System.Boolean)(), TimeCockpit.Data.DataModel.Culture)
  name.vb: CreateCulture(String, TextProperty(), KeyValuePair(Of TextProperty, Boolean)(), Culture)
- uid: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.UpdateCulture(System.String)
  commentId: M:TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.UpdateCulture(System.String)
  id: UpdateCulture(System.String)
  parent: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates
  langs:
  - csharp
  - vb
  name: UpdateCulture(String)
  nameWithType: SchemaTemplates.UpdateCulture(String)
  fullName: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.UpdateCulture(System.String)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/SchemaTemplates.cs
    id: UpdateCulture
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/SchemaTemplates.cs
    startLine: 5219
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Database.StringTemplates
  summary: "\ncreates an sql command to update a cultre.\n"
  example: []
  syntax:
    content: public void UpdateCulture(string schema)
    parameters:
    - id: schema
      type: System.String
      description: the schema to use.
    content.vb: Public Sub UpdateCulture(schema As String)
  overload: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.UpdateCulture*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.GetExistingLocalizedColumnsByProperty(System.String,TimeCockpit.Data.DataModel.ModelProperty)
  commentId: M:TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.GetExistingLocalizedColumnsByProperty(System.String,TimeCockpit.Data.DataModel.ModelProperty)
  id: GetExistingLocalizedColumnsByProperty(System.String,TimeCockpit.Data.DataModel.ModelProperty)
  parent: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates
  langs:
  - csharp
  - vb
  name: GetExistingLocalizedColumnsByProperty(String, ModelProperty)
  nameWithType: SchemaTemplates.GetExistingLocalizedColumnsByProperty(String, ModelProperty)
  fullName: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.GetExistingLocalizedColumnsByProperty(System.String, TimeCockpit.Data.DataModel.ModelProperty)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/SchemaTemplates.cs
    id: GetExistingLocalizedColumnsByProperty
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/SchemaTemplates.cs
    startLine: 5288
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Database.StringTemplates
  summary: "\nGets a list of localized columns for a given property.\n"
  example: []
  syntax:
    content: public void GetExistingLocalizedColumnsByProperty(string schema, ModelProperty property)
    parameters:
    - id: schema
      type: System.String
      description: the schema to use.
    - id: property
      type: TimeCockpit.Data.DataModel.ModelProperty
      description: A property to check existing translations for.
    content.vb: Public Sub GetExistingLocalizedColumnsByProperty(schema As String, property As ModelProperty)
  overload: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.GetExistingLocalizedColumnsByProperty*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.HasColumnBeenLocalized(System.String,TimeCockpit.Data.DataModel.ModelProperty)
  commentId: M:TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.HasColumnBeenLocalized(System.String,TimeCockpit.Data.DataModel.ModelProperty)
  id: HasColumnBeenLocalized(System.String,TimeCockpit.Data.DataModel.ModelProperty)
  parent: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates
  langs:
  - csharp
  - vb
  name: HasColumnBeenLocalized(String, ModelProperty)
  nameWithType: SchemaTemplates.HasColumnBeenLocalized(String, ModelProperty)
  fullName: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.HasColumnBeenLocalized(System.String, TimeCockpit.Data.DataModel.ModelProperty)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/SchemaTemplates.cs
    id: HasColumnBeenLocalized
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/SchemaTemplates.cs
    startLine: 5351
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Database.StringTemplates
  summary: "\nGets a list of localized columns for a given property.\n"
  example: []
  syntax:
    content: public void HasColumnBeenLocalized(string schema, ModelProperty property)
    parameters:
    - id: schema
      type: System.String
      description: the schema to use.
    - id: property
      type: TimeCockpit.Data.DataModel.ModelProperty
      description: A property to check existing translations for.
    content.vb: Public Sub HasColumnBeenLocalized(schema As String, property As ModelProperty)
  overload: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.HasColumnBeenLocalized*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.DropCulture(System.String,TimeCockpit.Data.DataModel.TextProperty[],TimeCockpit.Data.DataModel.Culture)
  commentId: M:TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.DropCulture(System.String,TimeCockpit.Data.DataModel.TextProperty[],TimeCockpit.Data.DataModel.Culture)
  id: DropCulture(System.String,TimeCockpit.Data.DataModel.TextProperty[],TimeCockpit.Data.DataModel.Culture)
  parent: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates
  langs:
  - csharp
  - vb
  name: DropCulture(String, TextProperty[], Culture)
  nameWithType: SchemaTemplates.DropCulture(String, TextProperty[], Culture)
  fullName: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.DropCulture(System.String, TimeCockpit.Data.DataModel.TextProperty[], TimeCockpit.Data.DataModel.Culture)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/SchemaTemplates.cs
    id: DropCulture
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/Database/StringTemplates/SchemaTemplates.cs
    startLine: 5415
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Database.StringTemplates
  summary: "\ncreates an sql command to drop a culture.\n"
  example: []
  syntax:
    content: public void DropCulture(string schema, TextProperty[] localizedProperties, Culture culture)
    parameters:
    - id: schema
      type: System.String
      description: the schema to use.
    - id: localizedProperties
      type: TimeCockpit.Data.DataModel.TextProperty[]
      description: all localized textproperties in the model.
    - id: culture
      type: TimeCockpit.Data.DataModel.Culture
      description: the culture to remove.
    content.vb: Public Sub DropCulture(schema As String, localizedProperties As TextProperty(), culture As Culture)
  overload: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.DropCulture*
  nameWithType.vb: SchemaTemplates.DropCulture(String, TextProperty(), Culture)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.DropCulture(System.String, TimeCockpit.Data.DataModel.TextProperty(), TimeCockpit.Data.DataModel.Culture)
  name.vb: DropCulture(String, TextProperty(), Culture)
references:
- uid: TimeCockpit.Data.Database.StringTemplates
  commentId: N:TimeCockpit.Data.Database.StringTemplates
  isExternal: false
  name: TimeCockpit.Data.Database.StringTemplates
  nameWithType: TimeCockpit.Data.Database.StringTemplates
  fullName: TimeCockpit.Data.Database.StringTemplates
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase
  commentId: T:TimeCockpit.Data.Database.StringTemplates.SqlTransformBase
  parent: TimeCockpit.Data.Database.StringTemplates
  isExternal: false
  name: SqlTransformBase
  nameWithType: SqlTransformBase
  fullName: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase
- uid: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.Dialect
  commentId: P:TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.Dialect
  parent: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase
  isExternal: false
  name: Dialect
  nameWithType: SqlTransformBase.Dialect
  fullName: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.Dialect
- uid: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.PrimaryCulture
  commentId: P:TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.PrimaryCulture
  parent: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase
  isExternal: false
  name: PrimaryCulture
  nameWithType: SqlTransformBase.PrimaryCulture
  fullName: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.PrimaryCulture
- uid: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.GenerationEnvironment
  commentId: P:TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.GenerationEnvironment
  parent: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase
  isExternal: false
  name: GenerationEnvironment
  nameWithType: SqlTransformBase.GenerationEnvironment
  fullName: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.GenerationEnvironment
- uid: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.ToStringHelper
  commentId: P:TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.ToStringHelper
  parent: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase
  isExternal: false
  name: ToStringHelper
  nameWithType: SqlTransformBase.ToStringHelper
  fullName: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.ToStringHelper
- uid: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.Write(System.String)
  commentId: M:TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.Write(System.String)
  parent: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase
  isExternal: true
  name: Write(String)
  nameWithType: SqlTransformBase.Write(String)
  fullName: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.Write(System.String)
  spec.csharp:
  - uid: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.Write(System.String)
    name: Write
    nameWithType: SqlTransformBase.Write
    fullName: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.Write
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.Write(System.String)
    name: Write
    nameWithType: SqlTransformBase.Write
    fullName: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.Write
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.WriteLine
  commentId: M:TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.WriteLine
  parent: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase
  isExternal: false
  name: WriteLine()
  nameWithType: SqlTransformBase.WriteLine()
  fullName: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.WriteLine()
  spec.csharp:
  - uid: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.WriteLine
    name: WriteLine
    nameWithType: SqlTransformBase.WriteLine
    fullName: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.WriteLine
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.WriteLine
    name: WriteLine
    nameWithType: SqlTransformBase.WriteLine
    fullName: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.WriteLine
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.SchemaTemplate(System.String)
  commentId: M:TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.SchemaTemplate(System.String)
  parent: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase
  isExternal: true
  name: SchemaTemplate(String)
  nameWithType: SqlTransformBase.SchemaTemplate(String)
  fullName: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.SchemaTemplate(System.String)
  spec.csharp:
  - uid: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.SchemaTemplate(System.String)
    name: SchemaTemplate
    nameWithType: SqlTransformBase.SchemaTemplate
    fullName: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.SchemaTemplate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.SchemaTemplate(System.String)
    name: SchemaTemplate
    nameWithType: SqlTransformBase.SchemaTemplate
    fullName: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.SchemaTemplate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.SchemaTemplateWithEquals(System.String)
  commentId: M:TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.SchemaTemplateWithEquals(System.String)
  parent: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase
  isExternal: true
  name: SchemaTemplateWithEquals(String)
  nameWithType: SqlTransformBase.SchemaTemplateWithEquals(String)
  fullName: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.SchemaTemplateWithEquals(System.String)
  spec.csharp:
  - uid: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.SchemaTemplateWithEquals(System.String)
    name: SchemaTemplateWithEquals
    nameWithType: SqlTransformBase.SchemaTemplateWithEquals
    fullName: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.SchemaTemplateWithEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.SchemaTemplateWithEquals(System.String)
    name: SchemaTemplateWithEquals
    nameWithType: SqlTransformBase.SchemaTemplateWithEquals
    fullName: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.SchemaTemplateWithEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.GO
  commentId: M:TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.GO
  parent: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase
  isExternal: false
  name: GO()
  nameWithType: SqlTransformBase.GO()
  fullName: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.GO()
  spec.csharp:
  - uid: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.GO
    name: GO
    nameWithType: SqlTransformBase.GO
    fullName: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.GO
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.GO
    name: GO
    nameWithType: SqlTransformBase.GO
    fullName: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.GO
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.DataType(TimeCockpit.Data.DataModel.StorageColumn)
  commentId: M:TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.DataType(TimeCockpit.Data.DataModel.StorageColumn)
  parent: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase
  isExternal: false
  name: DataType(StorageColumn)
  nameWithType: SqlTransformBase.DataType(StorageColumn)
  fullName: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.DataType(TimeCockpit.Data.DataModel.StorageColumn)
  spec.csharp:
  - uid: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.DataType(TimeCockpit.Data.DataModel.StorageColumn)
    name: DataType
    nameWithType: SqlTransformBase.DataType
    fullName: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.DataType
  - name: (
    nameWithType: (
    fullName: (
  - uid: TimeCockpit.Data.DataModel.StorageColumn
    name: StorageColumn
    nameWithType: StorageColumn
    fullName: TimeCockpit.Data.DataModel.StorageColumn
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.DataType(TimeCockpit.Data.DataModel.StorageColumn)
    name: DataType
    nameWithType: SqlTransformBase.DataType
    fullName: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.DataType
  - name: (
    nameWithType: (
    fullName: (
  - uid: TimeCockpit.Data.DataModel.StorageColumn
    name: StorageColumn
    nameWithType: StorageColumn
    fullName: TimeCockpit.Data.DataModel.StorageColumn
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.TableName(TimeCockpit.Data.DataModel.ModelElement)
  commentId: M:TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.TableName(TimeCockpit.Data.DataModel.ModelElement)
  parent: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase
  isExternal: false
  name: TableName(ModelElement)
  nameWithType: SqlTransformBase.TableName(ModelElement)
  fullName: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.TableName(TimeCockpit.Data.DataModel.ModelElement)
  spec.csharp:
  - uid: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.TableName(TimeCockpit.Data.DataModel.ModelElement)
    name: TableName
    nameWithType: SqlTransformBase.TableName
    fullName: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.TableName
  - name: (
    nameWithType: (
    fullName: (
  - uid: TimeCockpit.Data.DataModel.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: TimeCockpit.Data.DataModel.ModelElement
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.TableName(TimeCockpit.Data.DataModel.ModelElement)
    name: TableName
    nameWithType: SqlTransformBase.TableName
    fullName: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.TableName
  - name: (
    nameWithType: (
    fullName: (
  - uid: TimeCockpit.Data.DataModel.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: TimeCockpit.Data.DataModel.ModelElement
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.DatabaseName(TimeCockpit.Data.DataModel.ModelElement)
  commentId: M:TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.DatabaseName(TimeCockpit.Data.DataModel.ModelElement)
  parent: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase
  isExternal: false
  name: DatabaseName(ModelElement)
  nameWithType: SqlTransformBase.DatabaseName(ModelElement)
  fullName: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.DatabaseName(TimeCockpit.Data.DataModel.ModelElement)
  spec.csharp:
  - uid: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.DatabaseName(TimeCockpit.Data.DataModel.ModelElement)
    name: DatabaseName
    nameWithType: SqlTransformBase.DatabaseName
    fullName: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.DatabaseName
  - name: (
    nameWithType: (
    fullName: (
  - uid: TimeCockpit.Data.DataModel.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: TimeCockpit.Data.DataModel.ModelElement
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.DatabaseName(TimeCockpit.Data.DataModel.ModelElement)
    name: DatabaseName
    nameWithType: SqlTransformBase.DatabaseName
    fullName: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.DatabaseName
  - name: (
    nameWithType: (
    fullName: (
  - uid: TimeCockpit.Data.DataModel.ModelElement
    name: ModelElement
    nameWithType: ModelElement
    fullName: TimeCockpit.Data.DataModel.ModelElement
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.RelationName(TimeCockpit.Data.DataModel.RelationBase)
  commentId: M:TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.RelationName(TimeCockpit.Data.DataModel.RelationBase)
  parent: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase
  isExternal: false
  name: RelationName(RelationBase)
  nameWithType: SqlTransformBase.RelationName(RelationBase)
  fullName: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.RelationName(TimeCockpit.Data.DataModel.RelationBase)
  spec.csharp:
  - uid: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.RelationName(TimeCockpit.Data.DataModel.RelationBase)
    name: RelationName
    nameWithType: SqlTransformBase.RelationName
    fullName: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.RelationName
  - name: (
    nameWithType: (
    fullName: (
  - uid: TimeCockpit.Data.DataModel.RelationBase
    name: RelationBase
    nameWithType: RelationBase
    fullName: TimeCockpit.Data.DataModel.RelationBase
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.RelationName(TimeCockpit.Data.DataModel.RelationBase)
    name: RelationName
    nameWithType: SqlTransformBase.RelationName
    fullName: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.RelationName
  - name: (
    nameWithType: (
    fullName: (
  - uid: TimeCockpit.Data.DataModel.RelationBase
    name: RelationBase
    nameWithType: RelationBase
    fullName: TimeCockpit.Data.DataModel.RelationBase
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.ColumnName(TimeCockpit.Data.DataModel.StorageColumn)
  commentId: M:TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.ColumnName(TimeCockpit.Data.DataModel.StorageColumn)
  parent: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase
  isExternal: false
  name: ColumnName(StorageColumn)
  nameWithType: SqlTransformBase.ColumnName(StorageColumn)
  fullName: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.ColumnName(TimeCockpit.Data.DataModel.StorageColumn)
  spec.csharp:
  - uid: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.ColumnName(TimeCockpit.Data.DataModel.StorageColumn)
    name: ColumnName
    nameWithType: SqlTransformBase.ColumnName
    fullName: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.ColumnName
  - name: (
    nameWithType: (
    fullName: (
  - uid: TimeCockpit.Data.DataModel.StorageColumn
    name: StorageColumn
    nameWithType: StorageColumn
    fullName: TimeCockpit.Data.DataModel.StorageColumn
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.ColumnName(TimeCockpit.Data.DataModel.StorageColumn)
    name: ColumnName
    nameWithType: SqlTransformBase.ColumnName
    fullName: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.ColumnName
  - name: (
    nameWithType: (
    fullName: (
  - uid: TimeCockpit.Data.DataModel.StorageColumn
    name: StorageColumn
    nameWithType: StorageColumn
    fullName: TimeCockpit.Data.DataModel.StorageColumn
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.ColumnNameWithCulture(TimeCockpit.Data.DataModel.StorageColumn,TimeCockpit.Data.DataModel.Culture)
  commentId: M:TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.ColumnNameWithCulture(TimeCockpit.Data.DataModel.StorageColumn,TimeCockpit.Data.DataModel.Culture)
  parent: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase
  isExternal: false
  name: ColumnNameWithCulture(StorageColumn, Culture)
  nameWithType: SqlTransformBase.ColumnNameWithCulture(StorageColumn, Culture)
  fullName: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.ColumnNameWithCulture(TimeCockpit.Data.DataModel.StorageColumn, TimeCockpit.Data.DataModel.Culture)
  spec.csharp:
  - uid: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.ColumnNameWithCulture(TimeCockpit.Data.DataModel.StorageColumn,TimeCockpit.Data.DataModel.Culture)
    name: ColumnNameWithCulture
    nameWithType: SqlTransformBase.ColumnNameWithCulture
    fullName: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.ColumnNameWithCulture
  - name: (
    nameWithType: (
    fullName: (
  - uid: TimeCockpit.Data.DataModel.StorageColumn
    name: StorageColumn
    nameWithType: StorageColumn
    fullName: TimeCockpit.Data.DataModel.StorageColumn
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TimeCockpit.Data.DataModel.Culture
    name: Culture
    nameWithType: Culture
    fullName: TimeCockpit.Data.DataModel.Culture
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.ColumnNameWithCulture(TimeCockpit.Data.DataModel.StorageColumn,TimeCockpit.Data.DataModel.Culture)
    name: ColumnNameWithCulture
    nameWithType: SqlTransformBase.ColumnNameWithCulture
    fullName: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.ColumnNameWithCulture
  - name: (
    nameWithType: (
    fullName: (
  - uid: TimeCockpit.Data.DataModel.StorageColumn
    name: StorageColumn
    nameWithType: StorageColumn
    fullName: TimeCockpit.Data.DataModel.StorageColumn
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TimeCockpit.Data.DataModel.Culture
    name: Culture
    nameWithType: Culture
    fullName: TimeCockpit.Data.DataModel.Culture
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.TransformText
  commentId: M:TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.TransformText
  parent: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase
  isExternal: false
  name: TransformText()
  nameWithType: SqlTransformBase.TransformText()
  fullName: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.TransformText()
  spec.csharp:
  - uid: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.TransformText
    name: TransformText
    nameWithType: SqlTransformBase.TransformText
    fullName: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.TransformText
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.TransformText
    name: TransformText
    nameWithType: SqlTransformBase.TransformText
    fullName: TimeCockpit.Data.Database.StringTemplates.SqlTransformBase.TransformText
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.TransformText*
  commentId: Overload:TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.TransformText
  isExternal: false
  name: TransformText
  nameWithType: SchemaTemplates.TransformText
  fullName: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.TransformText
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.#ctor*
  commentId: Overload:TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.#ctor
  isExternal: false
  name: SchemaTemplates
  nameWithType: SchemaTemplates.SchemaTemplates
  fullName: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.SchemaTemplates
- uid: TimeCockpit.Data.Database.StringTemplates.SqlDialect
  commentId: T:TimeCockpit.Data.Database.StringTemplates.SqlDialect
  parent: TimeCockpit.Data.Database.StringTemplates
  isExternal: false
  name: SqlDialect
  nameWithType: SqlDialect
  fullName: TimeCockpit.Data.Database.StringTemplates.SqlDialect
- uid: System.Text.StringBuilder
  commentId: T:System.Text.StringBuilder
  parent: System.Text
  isExternal: true
  name: StringBuilder
  nameWithType: StringBuilder
  fullName: System.Text.StringBuilder
- uid: System.Text
  commentId: N:System.Text
  isExternal: false
  name: System.Text
  nameWithType: System.Text
  fullName: System.Text
- uid: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.CreateEntity*
  commentId: Overload:TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.CreateEntity
  isExternal: false
  name: CreateEntity
  nameWithType: SchemaTemplates.CreateEntity
  fullName: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.CreateEntity
- uid: TimeCockpit.Data.DataModel.ModelEntityBase
  commentId: T:TimeCockpit.Data.DataModel.ModelEntityBase
  parent: TimeCockpit.Data.DataModel
  isExternal: false
  name: ModelEntityBase
  nameWithType: ModelEntityBase
  fullName: TimeCockpit.Data.DataModel.ModelEntityBase
- uid: TimeCockpit.Data.DataModel
  commentId: N:TimeCockpit.Data.DataModel
  isExternal: false
  name: TimeCockpit.Data.DataModel
  nameWithType: TimeCockpit.Data.DataModel
  fullName: TimeCockpit.Data.DataModel
- uid: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.DropEntity*
  commentId: Overload:TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.DropEntity
  isExternal: false
  name: DropEntity
  nameWithType: SchemaTemplates.DropEntity
  fullName: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.DropEntity
- uid: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.UpdateEntity*
  commentId: Overload:TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.UpdateEntity
  isExternal: false
  name: UpdateEntity
  nameWithType: SchemaTemplates.UpdateEntity
  fullName: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.UpdateEntity
- uid: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.CreateProperty*
  commentId: Overload:TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.CreateProperty
  isExternal: false
  name: CreateProperty
  nameWithType: SchemaTemplates.CreateProperty
  fullName: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.CreateProperty
- uid: TimeCockpit.Data.DataModel.ModelProperty
  commentId: T:TimeCockpit.Data.DataModel.ModelProperty
  parent: TimeCockpit.Data.DataModel
  isExternal: false
  name: ModelProperty
  nameWithType: ModelProperty
  fullName: TimeCockpit.Data.DataModel.ModelProperty
- uid: TimeCockpit.Data.DataModel.StorageColumn[]
  name: StorageColumn[]
  nameWithType: StorageColumn[]
  fullName: TimeCockpit.Data.DataModel.StorageColumn[]
  nameWithType.vb: StorageColumn()
  fullName.vb: TimeCockpit.Data.DataModel.StorageColumn()
  name.vb: StorageColumn()
  spec.csharp:
  - uid: TimeCockpit.Data.DataModel.StorageColumn
    name: StorageColumn
    nameWithType: StorageColumn
    fullName: TimeCockpit.Data.DataModel.StorageColumn
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: TimeCockpit.Data.DataModel.StorageColumn
    name: StorageColumn
    nameWithType: StorageColumn
    fullName: TimeCockpit.Data.DataModel.StorageColumn
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: TimeCockpit.Data.DataModel.Culture[]
  name: Culture[]
  nameWithType: Culture[]
  fullName: TimeCockpit.Data.DataModel.Culture[]
  nameWithType.vb: Culture()
  fullName.vb: TimeCockpit.Data.DataModel.Culture()
  name.vb: Culture()
  spec.csharp:
  - uid: TimeCockpit.Data.DataModel.Culture
    name: Culture
    nameWithType: Culture
    fullName: TimeCockpit.Data.DataModel.Culture
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: TimeCockpit.Data.DataModel.Culture
    name: Culture
    nameWithType: Culture
    fullName: TimeCockpit.Data.DataModel.Culture
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.UpdateProperty*
  commentId: Overload:TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.UpdateProperty
  isExternal: false
  name: UpdateProperty
  nameWithType: SchemaTemplates.UpdateProperty
  fullName: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.UpdateProperty
- uid: TimeCockpit.Data.DataModel.Culture
  commentId: T:TimeCockpit.Data.DataModel.Culture
  parent: TimeCockpit.Data.DataModel
  isExternal: false
  name: Culture
  nameWithType: Culture
  fullName: TimeCockpit.Data.DataModel.Culture
- uid: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.DropProperty*
  commentId: Overload:TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.DropProperty
  isExternal: false
  name: DropProperty
  nameWithType: SchemaTemplates.DropProperty
  fullName: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.DropProperty
- uid: TimeCockpit.Data.DataModel.DeleteOperation
  commentId: T:TimeCockpit.Data.DataModel.DeleteOperation
  parent: TimeCockpit.Data.DataModel
  isExternal: false
  name: DeleteOperation
  nameWithType: DeleteOperation
  fullName: TimeCockpit.Data.DataModel.DeleteOperation
- uid: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.CreateRelation*
  commentId: Overload:TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.CreateRelation
  isExternal: false
  name: CreateRelation
  nameWithType: SchemaTemplates.CreateRelation
  fullName: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.CreateRelation
- uid: TimeCockpit.Data.DataModel.RelationBase
  commentId: T:TimeCockpit.Data.DataModel.RelationBase
  parent: TimeCockpit.Data.DataModel
  isExternal: false
  name: RelationBase
  nameWithType: RelationBase
  fullName: TimeCockpit.Data.DataModel.RelationBase
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.UpdateRelation*
  commentId: Overload:TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.UpdateRelation
  isExternal: false
  name: UpdateRelation
  nameWithType: SchemaTemplates.UpdateRelation
  fullName: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.UpdateRelation
- uid: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.DropRelation*
  commentId: Overload:TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.DropRelation
  isExternal: false
  name: DropRelation
  nameWithType: SchemaTemplates.DropRelation
  fullName: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.DropRelation
- uid: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.CreateValidationRule*
  commentId: Overload:TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.CreateValidationRule
  isExternal: false
  name: CreateValidationRule
  nameWithType: SchemaTemplates.CreateValidationRule
  fullName: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.CreateValidationRule
- uid: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.UpdateValidationRule*
  commentId: Overload:TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.UpdateValidationRule
  isExternal: false
  name: UpdateValidationRule
  nameWithType: SchemaTemplates.UpdateValidationRule
  fullName: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.UpdateValidationRule
- uid: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.DropValidationRule*
  commentId: Overload:TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.DropValidationRule
  isExternal: false
  name: DropValidationRule
  nameWithType: SchemaTemplates.DropValidationRule
  fullName: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.DropValidationRule
- uid: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.CreateModelEntityInterface*
  commentId: Overload:TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.CreateModelEntityInterface
  isExternal: false
  name: CreateModelEntityInterface
  nameWithType: SchemaTemplates.CreateModelEntityInterface
  fullName: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.CreateModelEntityInterface
- uid: TimeCockpit.Data.DataModel.ModelEntityInterface
  commentId: T:TimeCockpit.Data.DataModel.ModelEntityInterface
  parent: TimeCockpit.Data.DataModel
  isExternal: false
  name: ModelEntityInterface
  nameWithType: ModelEntityInterface
  fullName: TimeCockpit.Data.DataModel.ModelEntityInterface
- uid: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.DropModelEntityInterface*
  commentId: Overload:TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.DropModelEntityInterface
  isExternal: false
  name: DropModelEntityInterface
  nameWithType: SchemaTemplates.DropModelEntityInterface
  fullName: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.DropModelEntityInterface
- uid: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.InsertIntoDead*
  commentId: Overload:TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.InsertIntoDead
  isExternal: false
  name: InsertIntoDead
  nameWithType: SchemaTemplates.InsertIntoDead
  fullName: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.InsertIntoDead
- uid: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.DropDefaultConstraint*
  commentId: Overload:TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.DropDefaultConstraint
  isExternal: false
  name: DropDefaultConstraint
  nameWithType: SchemaTemplates.DropDefaultConstraint
  fullName: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.DropDefaultConstraint
- uid: TimeCockpit.Data.DataModel.ModelElement
  commentId: T:TimeCockpit.Data.DataModel.ModelElement
  parent: TimeCockpit.Data.DataModel
  isExternal: false
  name: ModelElement
  nameWithType: ModelElement
  fullName: TimeCockpit.Data.DataModel.ModelElement
- uid: TimeCockpit.Data.DataModel.StorageColumn
  commentId: T:TimeCockpit.Data.DataModel.StorageColumn
  parent: TimeCockpit.Data.DataModel
  isExternal: false
  name: StorageColumn
  nameWithType: StorageColumn
  fullName: TimeCockpit.Data.DataModel.StorageColumn
- uid: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.AddBlobColumnToGarbageCollection*
  commentId: Overload:TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.AddBlobColumnToGarbageCollection
  isExternal: false
  name: AddBlobColumnToGarbageCollection
  nameWithType: SchemaTemplates.AddBlobColumnToGarbageCollection
  fullName: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.AddBlobColumnToGarbageCollection
- uid: TimeCockpit.Data.DataModel.BinaryProperty
  commentId: T:TimeCockpit.Data.DataModel.BinaryProperty
  parent: TimeCockpit.Data.DataModel
  isExternal: false
  name: BinaryProperty
  nameWithType: BinaryProperty
  fullName: TimeCockpit.Data.DataModel.BinaryProperty
- uid: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.GetLocalModelVersion*
  commentId: Overload:TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.GetLocalModelVersion
  isExternal: false
  name: GetLocalModelVersion
  nameWithType: SchemaTemplates.GetLocalModelVersion
  fullName: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.GetLocalModelVersion
- uid: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.DropConstraints*
  commentId: Overload:TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.DropConstraints
  isExternal: false
  name: DropConstraints
  nameWithType: SchemaTemplates.DropConstraints
  fullName: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.DropConstraints
- uid: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.DisableCyclicConstraints*
  commentId: Overload:TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.DisableCyclicConstraints
  isExternal: false
  name: DisableCyclicConstraints
  nameWithType: SchemaTemplates.DisableCyclicConstraints
  fullName: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.DisableCyclicConstraints
- uid: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.CreateConstraints*
  commentId: Overload:TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.CreateConstraints
  isExternal: false
  name: CreateConstraints
  nameWithType: SchemaTemplates.CreateConstraints
  fullName: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.CreateConstraints
- uid: TimeCockpit.Data.DataModel.Relation[]
  name: Relation[]
  nameWithType: Relation[]
  fullName: TimeCockpit.Data.DataModel.Relation[]
  nameWithType.vb: Relation()
  fullName.vb: TimeCockpit.Data.DataModel.Relation()
  name.vb: Relation()
  spec.csharp:
  - uid: TimeCockpit.Data.DataModel.Relation
    name: Relation
    nameWithType: Relation
    fullName: TimeCockpit.Data.DataModel.Relation
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: TimeCockpit.Data.DataModel.Relation
    name: Relation
    nameWithType: Relation
    fullName: TimeCockpit.Data.DataModel.Relation
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.EnableCyclicConstraints*
  commentId: Overload:TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.EnableCyclicConstraints
  isExternal: false
  name: EnableCyclicConstraints
  nameWithType: SchemaTemplates.EnableCyclicConstraints
  fullName: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.EnableCyclicConstraints
- uid: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.CreateModelAction*
  commentId: Overload:TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.CreateModelAction
  isExternal: false
  name: CreateModelAction
  nameWithType: SchemaTemplates.CreateModelAction
  fullName: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.CreateModelAction
- uid: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.UpdateModelAction*
  commentId: Overload:TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.UpdateModelAction
  isExternal: false
  name: UpdateModelAction
  nameWithType: SchemaTemplates.UpdateModelAction
  fullName: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.UpdateModelAction
- uid: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.DropModelAction*
  commentId: Overload:TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.DropModelAction
  isExternal: false
  name: DropModelAction
  nameWithType: SchemaTemplates.DropModelAction
  fullName: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.DropModelAction
- uid: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.CreateEntityView*
  commentId: Overload:TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.CreateEntityView
  isExternal: false
  name: CreateEntityView
  nameWithType: SchemaTemplates.CreateEntityView
  fullName: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.CreateEntityView
- uid: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.UpdateEntityView*
  commentId: Overload:TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.UpdateEntityView
  isExternal: false
  name: UpdateEntityView
  nameWithType: SchemaTemplates.UpdateEntityView
  fullName: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.UpdateEntityView
- uid: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.DropEntityView*
  commentId: Overload:TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.DropEntityView
  isExternal: false
  name: DropEntityView
  nameWithType: SchemaTemplates.DropEntityView
  fullName: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.DropEntityView
- uid: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.CreatePermission*
  commentId: Overload:TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.CreatePermission
  isExternal: false
  name: CreatePermission
  nameWithType: SchemaTemplates.CreatePermission
  fullName: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.CreatePermission
- uid: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.UpdatePermission*
  commentId: Overload:TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.UpdatePermission
  isExternal: false
  name: UpdatePermission
  nameWithType: SchemaTemplates.UpdatePermission
  fullName: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.UpdatePermission
- uid: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.DropPermission*
  commentId: Overload:TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.DropPermission
  isExternal: false
  name: DropPermission
  nameWithType: SchemaTemplates.DropPermission
  fullName: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.DropPermission
- uid: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.CreateNamedSetDefinition*
  commentId: Overload:TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.CreateNamedSetDefinition
  isExternal: false
  name: CreateNamedSetDefinition
  nameWithType: SchemaTemplates.CreateNamedSetDefinition
  fullName: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.CreateNamedSetDefinition
- uid: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.UpdateNamedSetDefinition*
  commentId: Overload:TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.UpdateNamedSetDefinition
  isExternal: false
  name: UpdateNamedSetDefinition
  nameWithType: SchemaTemplates.UpdateNamedSetDefinition
  fullName: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.UpdateNamedSetDefinition
- uid: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.DropNamedSetDefinition*
  commentId: Overload:TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.DropNamedSetDefinition
  isExternal: false
  name: DropNamedSetDefinition
  nameWithType: SchemaTemplates.DropNamedSetDefinition
  fullName: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.DropNamedSetDefinition
- uid: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.CreateTrigger*
  commentId: Overload:TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.CreateTrigger
  isExternal: false
  name: CreateTrigger
  nameWithType: SchemaTemplates.CreateTrigger
  fullName: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.CreateTrigger
- uid: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.UpdateTrigger*
  commentId: Overload:TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.UpdateTrigger
  isExternal: false
  name: UpdateTrigger
  nameWithType: SchemaTemplates.UpdateTrigger
  fullName: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.UpdateTrigger
- uid: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.DropTrigger*
  commentId: Overload:TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.DropTrigger
  isExternal: false
  name: DropTrigger
  nameWithType: SchemaTemplates.DropTrigger
  fullName: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.DropTrigger
- uid: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.CreateCulture*
  commentId: Overload:TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.CreateCulture
  isExternal: false
  name: CreateCulture
  nameWithType: SchemaTemplates.CreateCulture
  fullName: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.CreateCulture
- uid: TimeCockpit.Data.DataModel.TextProperty[]
  name: TextProperty[]
  nameWithType: TextProperty[]
  fullName: TimeCockpit.Data.DataModel.TextProperty[]
  nameWithType.vb: TextProperty()
  fullName.vb: TimeCockpit.Data.DataModel.TextProperty()
  name.vb: TextProperty()
  spec.csharp:
  - uid: TimeCockpit.Data.DataModel.TextProperty
    name: TextProperty
    nameWithType: TextProperty
    fullName: TimeCockpit.Data.DataModel.TextProperty
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: TimeCockpit.Data.DataModel.TextProperty
    name: TextProperty
    nameWithType: TextProperty
    fullName: TimeCockpit.Data.DataModel.TextProperty
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Collections.Generic.KeyValuePair{TimeCockpit.Data.DataModel.TextProperty,System.Boolean}[]
  name: KeyValuePair<TextProperty, Boolean>[]
  nameWithType: KeyValuePair<TextProperty, Boolean>[]
  fullName: System.Collections.Generic.KeyValuePair<TimeCockpit.Data.DataModel.TextProperty, System.Boolean>[]
  nameWithType.vb: KeyValuePair(Of TextProperty, Boolean)()
  fullName.vb: System.Collections.Generic.KeyValuePair(Of TimeCockpit.Data.DataModel.TextProperty, System.Boolean)()
  name.vb: KeyValuePair(Of TextProperty, Boolean)()
  spec.csharp:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TimeCockpit.Data.DataModel.TextProperty
    name: TextProperty
    nameWithType: TextProperty
    fullName: TimeCockpit.Data.DataModel.TextProperty
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TimeCockpit.Data.DataModel.TextProperty
    name: TextProperty
    nameWithType: TextProperty
    fullName: TimeCockpit.Data.DataModel.TextProperty
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.UpdateCulture*
  commentId: Overload:TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.UpdateCulture
  isExternal: false
  name: UpdateCulture
  nameWithType: SchemaTemplates.UpdateCulture
  fullName: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.UpdateCulture
- uid: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.GetExistingLocalizedColumnsByProperty*
  commentId: Overload:TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.GetExistingLocalizedColumnsByProperty
  isExternal: false
  name: GetExistingLocalizedColumnsByProperty
  nameWithType: SchemaTemplates.GetExistingLocalizedColumnsByProperty
  fullName: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.GetExistingLocalizedColumnsByProperty
- uid: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.HasColumnBeenLocalized*
  commentId: Overload:TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.HasColumnBeenLocalized
  isExternal: false
  name: HasColumnBeenLocalized
  nameWithType: SchemaTemplates.HasColumnBeenLocalized
  fullName: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.HasColumnBeenLocalized
- uid: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.DropCulture*
  commentId: Overload:TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.DropCulture
  isExternal: false
  name: DropCulture
  nameWithType: SchemaTemplates.DropCulture
  fullName: TimeCockpit.Data.Database.StringTemplates.SchemaTemplates.DropCulture
