### YamlMime:ManagedReference
items:
- uid: TimeCockpit.Data.Import.ImportSheetDefinition
  commentId: T:TimeCockpit.Data.Import.ImportSheetDefinition
  id: ImportSheetDefinition
  parent: TimeCockpit.Data.Import
  children:
  - TimeCockpit.Data.Import.ImportSheetDefinition.#ctor
  - TimeCockpit.Data.Import.ImportSheetDefinition.Columns
  - TimeCockpit.Data.Import.ImportSheetDefinition.HeaderRowNumber
  - TimeCockpit.Data.Import.ImportSheetDefinition.OnPropertyChanged(System.String)
  - TimeCockpit.Data.Import.ImportSheetDefinition.PropertyChanged
  - TimeCockpit.Data.Import.ImportSheetDefinition.SourceWorksheetName
  - TimeCockpit.Data.Import.ImportSheetDefinition.StatusColumnName
  - TimeCockpit.Data.Import.ImportSheetDefinition.TargetModelEntityName
  - TimeCockpit.Data.Import.ImportSheetDefinition.WriteXml
  langs:
  - csharp
  - vb
  name: ImportSheetDefinition
  nameWithType: ImportSheetDefinition
  fullName: TimeCockpit.Data.Import.ImportSheetDefinition
  type: Class
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data.Import/ImportSheetDefinition.cs
    id: ImportSheetDefinition
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data.Import/ImportSheetDefinition.cs
    startLine: 19
  assemblies:
  - TimeCockpit.Data.Import
  namespace: TimeCockpit.Data.Import
  summary: "\nImport definition for a single sheet, contains multiple columns for import.\n"
  example: []
  syntax:
    content: >-
      [DataContract]

      public class ImportSheetDefinition : INotifyPropertyChanged
    content.vb: >-
      <DataContract>

      Public Class ImportSheetDefinition
          Implements INotifyPropertyChanged
  inheritance:
  - System.Object
  implements:
  - System.ComponentModel.INotifyPropertyChanged
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TimeCockpit.Data.Import.ImportSheetDefinition.#ctor
  commentId: M:TimeCockpit.Data.Import.ImportSheetDefinition.#ctor
  id: '#ctor'
  parent: TimeCockpit.Data.Import.ImportSheetDefinition
  langs:
  - csharp
  - vb
  name: ImportSheetDefinition()
  nameWithType: ImportSheetDefinition.ImportSheetDefinition()
  fullName: TimeCockpit.Data.Import.ImportSheetDefinition.ImportSheetDefinition()
  type: Constructor
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data.Import/ImportSheetDefinition.cs
    id: .ctor
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data.Import/ImportSheetDefinition.cs
    startLine: 51
  assemblies:
  - TimeCockpit.Data.Import
  namespace: TimeCockpit.Data.Import
  summary: "\nInitializes a new instance of the ImportSheetDefinition class.\n"
  example: []
  syntax:
    content: public ImportSheetDefinition()
    content.vb: Public Sub New
  overload: TimeCockpit.Data.Import.ImportSheetDefinition.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Import.ImportSheetDefinition.PropertyChanged
  commentId: E:TimeCockpit.Data.Import.ImportSheetDefinition.PropertyChanged
  id: PropertyChanged
  parent: TimeCockpit.Data.Import.ImportSheetDefinition
  langs:
  - csharp
  - vb
  name: PropertyChanged
  nameWithType: ImportSheetDefinition.PropertyChanged
  fullName: TimeCockpit.Data.Import.ImportSheetDefinition.PropertyChanged
  type: Event
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data.Import/ImportSheetDefinition.cs
    id: PropertyChanged
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data.Import/ImportSheetDefinition.cs
    startLine: 60
  assemblies:
  - TimeCockpit.Data.Import
  namespace: TimeCockpit.Data.Import
  summary: "\nEvent for INotifyPropertyChanged.\n"
  example: []
  syntax:
    content: public event PropertyChangedEventHandler PropertyChanged
    return:
      type: System.ComponentModel.PropertyChangedEventHandler
    content.vb: Public Event PropertyChanged As PropertyChangedEventHandler
  implements:
  - System.ComponentModel.INotifyPropertyChanged.PropertyChanged
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Import.ImportSheetDefinition.Columns
  commentId: P:TimeCockpit.Data.Import.ImportSheetDefinition.Columns
  id: Columns
  parent: TimeCockpit.Data.Import.ImportSheetDefinition
  langs:
  - csharp
  - vb
  name: Columns
  nameWithType: ImportSheetDefinition.Columns
  fullName: TimeCockpit.Data.Import.ImportSheetDefinition.Columns
  type: Property
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data.Import/ImportSheetDefinition.cs
    id: Columns
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data.Import/ImportSheetDefinition.cs
    startLine: 65
  assemblies:
  - TimeCockpit.Data.Import
  namespace: TimeCockpit.Data.Import
  summary: "\nGets or sets the columns of this sheet.\n"
  example: []
  syntax:
    content: public ObservableCollection<ImportColumnDefinition> Columns { get; set; }
    parameters: []
    return:
      type: System.Collections.ObjectModel.ObservableCollection{TimeCockpit.Data.Import.ImportColumnDefinition}
    content.vb: Public Property Columns As ObservableCollection(Of ImportColumnDefinition)
  overload: TimeCockpit.Data.Import.ImportSheetDefinition.Columns*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Import.ImportSheetDefinition.SourceWorksheetName
  commentId: P:TimeCockpit.Data.Import.ImportSheetDefinition.SourceWorksheetName
  id: SourceWorksheetName
  parent: TimeCockpit.Data.Import.ImportSheetDefinition
  langs:
  - csharp
  - vb
  name: SourceWorksheetName
  nameWithType: ImportSheetDefinition.SourceWorksheetName
  fullName: TimeCockpit.Data.Import.ImportSheetDefinition.SourceWorksheetName
  type: Property
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data.Import/ImportSheetDefinition.cs
    id: SourceWorksheetName
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data.Import/ImportSheetDefinition.cs
    startLine: 85
  assemblies:
  - TimeCockpit.Data.Import
  namespace: TimeCockpit.Data.Import
  summary: "\nGets or sets the name of the source worksheet.\n"
  example: []
  syntax:
    content: public string SourceWorksheetName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property SourceWorksheetName As String
  overload: TimeCockpit.Data.Import.ImportSheetDefinition.SourceWorksheetName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Import.ImportSheetDefinition.TargetModelEntityName
  commentId: P:TimeCockpit.Data.Import.ImportSheetDefinition.TargetModelEntityName
  id: TargetModelEntityName
  parent: TimeCockpit.Data.Import.ImportSheetDefinition
  langs:
  - csharp
  - vb
  name: TargetModelEntityName
  nameWithType: ImportSheetDefinition.TargetModelEntityName
  fullName: TimeCockpit.Data.Import.ImportSheetDefinition.TargetModelEntityName
  type: Property
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data.Import/ImportSheetDefinition.cs
    id: TargetModelEntityName
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data.Import/ImportSheetDefinition.cs
    startLine: 105
  assemblies:
  - TimeCockpit.Data.Import
  namespace: TimeCockpit.Data.Import
  summary: "\nGets or sets the name of the ModelEntity this sheet targets.\n"
  example: []
  syntax:
    content: public string TargetModelEntityName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property TargetModelEntityName As String
  overload: TimeCockpit.Data.Import.ImportSheetDefinition.TargetModelEntityName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Import.ImportSheetDefinition.StatusColumnName
  commentId: P:TimeCockpit.Data.Import.ImportSheetDefinition.StatusColumnName
  id: StatusColumnName
  parent: TimeCockpit.Data.Import.ImportSheetDefinition
  langs:
  - csharp
  - vb
  name: StatusColumnName
  nameWithType: ImportSheetDefinition.StatusColumnName
  fullName: TimeCockpit.Data.Import.ImportSheetDefinition.StatusColumnName
  type: Property
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data.Import/ImportSheetDefinition.cs
    id: StatusColumnName
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data.Import/ImportSheetDefinition.cs
    startLine: 125
  assemblies:
  - TimeCockpit.Data.Import
  namespace: TimeCockpit.Data.Import
  summary: "\nGets or sets the name of the status column.\n"
  example: []
  syntax:
    content: public string StatusColumnName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property StatusColumnName As String
  overload: TimeCockpit.Data.Import.ImportSheetDefinition.StatusColumnName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Import.ImportSheetDefinition.HeaderRowNumber
  commentId: P:TimeCockpit.Data.Import.ImportSheetDefinition.HeaderRowNumber
  id: HeaderRowNumber
  parent: TimeCockpit.Data.Import.ImportSheetDefinition
  langs:
  - csharp
  - vb
  name: HeaderRowNumber
  nameWithType: ImportSheetDefinition.HeaderRowNumber
  fullName: TimeCockpit.Data.Import.ImportSheetDefinition.HeaderRowNumber
  type: Property
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data.Import/ImportSheetDefinition.cs
    id: HeaderRowNumber
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data.Import/ImportSheetDefinition.cs
    startLine: 145
  assemblies:
  - TimeCockpit.Data.Import
  namespace: TimeCockpit.Data.Import
  summary: "\nGets or sets the row number containing the header row.\n"
  example: []
  syntax:
    content: public int HeaderRowNumber { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property HeaderRowNumber As Integer
  overload: TimeCockpit.Data.Import.ImportSheetDefinition.HeaderRowNumber*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Import.ImportSheetDefinition.WriteXml
  commentId: M:TimeCockpit.Data.Import.ImportSheetDefinition.WriteXml
  id: WriteXml
  parent: TimeCockpit.Data.Import.ImportSheetDefinition
  langs:
  - csharp
  - vb
  name: WriteXml()
  nameWithType: ImportSheetDefinition.WriteXml()
  fullName: TimeCockpit.Data.Import.ImportSheetDefinition.WriteXml()
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data.Import/ImportSheetDefinition.cs
    id: WriteXml
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data.Import/ImportSheetDefinition.cs
    startLine: 167
  assemblies:
  - TimeCockpit.Data.Import
  namespace: TimeCockpit.Data.Import
  summary: "\ncalled to write the sheet definition to XAML.\n"
  example: []
  syntax:
    content: public XElement WriteXml()
    return:
      type: System.Xml.Linq.XElement
      description: Returns the new node.
    content.vb: Public Function WriteXml As XElement
  overload: TimeCockpit.Data.Import.ImportSheetDefinition.WriteXml*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Import.ImportSheetDefinition.OnPropertyChanged(System.String)
  commentId: M:TimeCockpit.Data.Import.ImportSheetDefinition.OnPropertyChanged(System.String)
  id: OnPropertyChanged(System.String)
  parent: TimeCockpit.Data.Import.ImportSheetDefinition
  langs:
  - csharp
  - vb
  name: OnPropertyChanged(String)
  nameWithType: ImportSheetDefinition.OnPropertyChanged(String)
  fullName: TimeCockpit.Data.Import.ImportSheetDefinition.OnPropertyChanged(System.String)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data.Import/ImportSheetDefinition.cs
    id: OnPropertyChanged
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data.Import/ImportSheetDefinition.cs
    startLine: 192
  assemblies:
  - TimeCockpit.Data.Import
  namespace: TimeCockpit.Data.Import
  summary: "\ncalled when a property of this class instance changes.\n"
  example: []
  syntax:
    content: protected void OnPropertyChanged(string propertyName)
    parameters:
    - id: propertyName
      type: System.String
      description: name of the property that changed.
    content.vb: Protected Sub OnPropertyChanged(propertyName As String)
  overload: TimeCockpit.Data.Import.ImportSheetDefinition.OnPropertyChanged*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
references:
- uid: TimeCockpit.Data.Import
  commentId: N:TimeCockpit.Data.Import
  isExternal: false
  name: TimeCockpit.Data.Import
  nameWithType: TimeCockpit.Data.Import
  fullName: TimeCockpit.Data.Import
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ComponentModel.INotifyPropertyChanged
  commentId: T:System.ComponentModel.INotifyPropertyChanged
  parent: System.ComponentModel
  isExternal: true
  name: INotifyPropertyChanged
  nameWithType: INotifyPropertyChanged
  fullName: System.ComponentModel.INotifyPropertyChanged
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.ComponentModel
  commentId: N:System.ComponentModel
  isExternal: false
  name: System.ComponentModel
  nameWithType: System.ComponentModel
  fullName: System.ComponentModel
- uid: TimeCockpit.Data.Import.ImportSheetDefinition.#ctor*
  commentId: Overload:TimeCockpit.Data.Import.ImportSheetDefinition.#ctor
  isExternal: false
  name: ImportSheetDefinition
  nameWithType: ImportSheetDefinition.ImportSheetDefinition
  fullName: TimeCockpit.Data.Import.ImportSheetDefinition.ImportSheetDefinition
- uid: System.ComponentModel.INotifyPropertyChanged.PropertyChanged
  commentId: E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged
  parent: System.ComponentModel.INotifyPropertyChanged
  isExternal: true
  name: PropertyChanged
  nameWithType: INotifyPropertyChanged.PropertyChanged
  fullName: System.ComponentModel.INotifyPropertyChanged.PropertyChanged
- uid: System.ComponentModel.PropertyChangedEventHandler
  commentId: T:System.ComponentModel.PropertyChangedEventHandler
  parent: System.ComponentModel
  isExternal: true
  name: PropertyChangedEventHandler
  nameWithType: PropertyChangedEventHandler
  fullName: System.ComponentModel.PropertyChangedEventHandler
- uid: TimeCockpit.Data.Import.ImportSheetDefinition.Columns*
  commentId: Overload:TimeCockpit.Data.Import.ImportSheetDefinition.Columns
  isExternal: false
  name: Columns
  nameWithType: ImportSheetDefinition.Columns
  fullName: TimeCockpit.Data.Import.ImportSheetDefinition.Columns
- uid: System.Collections.ObjectModel.ObservableCollection{TimeCockpit.Data.Import.ImportColumnDefinition}
  commentId: T:System.Collections.ObjectModel.ObservableCollection{TimeCockpit.Data.Import.ImportColumnDefinition}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.ObservableCollection`1
  name: ObservableCollection<ImportColumnDefinition>
  nameWithType: ObservableCollection<ImportColumnDefinition>
  fullName: System.Collections.ObjectModel.ObservableCollection<TimeCockpit.Data.Import.ImportColumnDefinition>
  nameWithType.vb: ObservableCollection(Of ImportColumnDefinition)
  fullName.vb: System.Collections.ObjectModel.ObservableCollection(Of TimeCockpit.Data.Import.ImportColumnDefinition)
  name.vb: ObservableCollection(Of ImportColumnDefinition)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ObservableCollection`1
    name: ObservableCollection
    nameWithType: ObservableCollection
    fullName: System.Collections.ObjectModel.ObservableCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TimeCockpit.Data.Import.ImportColumnDefinition
    name: ImportColumnDefinition
    nameWithType: ImportColumnDefinition
    fullName: TimeCockpit.Data.Import.ImportColumnDefinition
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ObservableCollection`1
    name: ObservableCollection
    nameWithType: ObservableCollection
    fullName: System.Collections.ObjectModel.ObservableCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TimeCockpit.Data.Import.ImportColumnDefinition
    name: ImportColumnDefinition
    nameWithType: ImportColumnDefinition
    fullName: TimeCockpit.Data.Import.ImportColumnDefinition
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ObservableCollection`1
  commentId: T:System.Collections.ObjectModel.ObservableCollection`1
  isExternal: true
  name: ObservableCollection<T>
  nameWithType: ObservableCollection<T>
  fullName: System.Collections.ObjectModel.ObservableCollection<T>
  nameWithType.vb: ObservableCollection(Of T)
  fullName.vb: System.Collections.ObjectModel.ObservableCollection(Of T)
  name.vb: ObservableCollection(Of T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ObservableCollection`1
    name: ObservableCollection
    nameWithType: ObservableCollection
    fullName: System.Collections.ObjectModel.ObservableCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ObservableCollection`1
    name: ObservableCollection
    nameWithType: ObservableCollection
    fullName: System.Collections.ObjectModel.ObservableCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel
  commentId: N:System.Collections.ObjectModel
  isExternal: false
  name: System.Collections.ObjectModel
  nameWithType: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
- uid: TimeCockpit.Data.Import.ImportSheetDefinition.SourceWorksheetName*
  commentId: Overload:TimeCockpit.Data.Import.ImportSheetDefinition.SourceWorksheetName
  isExternal: false
  name: SourceWorksheetName
  nameWithType: ImportSheetDefinition.SourceWorksheetName
  fullName: TimeCockpit.Data.Import.ImportSheetDefinition.SourceWorksheetName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: TimeCockpit.Data.Import.ImportSheetDefinition.TargetModelEntityName*
  commentId: Overload:TimeCockpit.Data.Import.ImportSheetDefinition.TargetModelEntityName
  isExternal: false
  name: TargetModelEntityName
  nameWithType: ImportSheetDefinition.TargetModelEntityName
  fullName: TimeCockpit.Data.Import.ImportSheetDefinition.TargetModelEntityName
- uid: TimeCockpit.Data.Import.ImportSheetDefinition.StatusColumnName*
  commentId: Overload:TimeCockpit.Data.Import.ImportSheetDefinition.StatusColumnName
  isExternal: false
  name: StatusColumnName
  nameWithType: ImportSheetDefinition.StatusColumnName
  fullName: TimeCockpit.Data.Import.ImportSheetDefinition.StatusColumnName
- uid: TimeCockpit.Data.Import.ImportSheetDefinition.HeaderRowNumber*
  commentId: Overload:TimeCockpit.Data.Import.ImportSheetDefinition.HeaderRowNumber
  isExternal: false
  name: HeaderRowNumber
  nameWithType: ImportSheetDefinition.HeaderRowNumber
  fullName: TimeCockpit.Data.Import.ImportSheetDefinition.HeaderRowNumber
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: TimeCockpit.Data.Import.ImportSheetDefinition.WriteXml*
  commentId: Overload:TimeCockpit.Data.Import.ImportSheetDefinition.WriteXml
  isExternal: false
  name: WriteXml
  nameWithType: ImportSheetDefinition.WriteXml
  fullName: TimeCockpit.Data.Import.ImportSheetDefinition.WriteXml
- uid: System.Xml.Linq.XElement
  commentId: T:System.Xml.Linq.XElement
  parent: System.Xml.Linq
  isExternal: true
  name: XElement
  nameWithType: XElement
  fullName: System.Xml.Linq.XElement
- uid: System.Xml.Linq
  commentId: N:System.Xml.Linq
  isExternal: false
  name: System.Xml.Linq
  nameWithType: System.Xml.Linq
  fullName: System.Xml.Linq
- uid: TimeCockpit.Data.Import.ImportSheetDefinition.OnPropertyChanged*
  commentId: Overload:TimeCockpit.Data.Import.ImportSheetDefinition.OnPropertyChanged
  isExternal: false
  name: OnPropertyChanged
  nameWithType: ImportSheetDefinition.OnPropertyChanged
  fullName: TimeCockpit.Data.Import.ImportSheetDefinition.OnPropertyChanged
