### YamlMime:ManagedReference
items:
- uid: TimeCockpit.Data.DataModel.IDuration
  commentId: T:TimeCockpit.Data.DataModel.IDuration
  id: IDuration
  parent: TimeCockpit.Data.DataModel
  children:
  - TimeCockpit.Data.DataModel.IDuration.BeginTime
  - TimeCockpit.Data.DataModel.IDuration.DurationInHours
  - TimeCockpit.Data.DataModel.IDuration.EndTime
  langs:
  - csharp
  - vb
  name: IDuration
  nameWithType: IDuration
  fullName: TimeCockpit.Data.DataModel.IDuration
  type: Interface
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel
  summary: "\nInterface for Signals supporting Durations\n"
  syntax:
    content: >-
      [ModelEntityInterface]

      public interface IDuration
    content.vb: >-
      <ModelEntityInterface>

      Public Interface IDuration
  attributes:
  - type: TimeCockpit.Data.DataModel.ModelEntityInterfaceAttribute
    ctor: TimeCockpit.Data.DataModel.ModelEntityInterfaceAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: TimeCockpit.Data.DataModel.IDuration.BeginTime
  commentId: P:TimeCockpit.Data.DataModel.IDuration.BeginTime
  id: BeginTime
  parent: TimeCockpit.Data.DataModel.IDuration
  langs:
  - csharp
  - vb
  name: BeginTime
  nameWithType: IDuration.BeginTime
  fullName: TimeCockpit.Data.DataModel.IDuration.BeginTime
  type: Property
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel
  summary: "\nGets or sets the BeginTime of the signal\n"
  syntax:
    content: DateTime BeginTime { get; set; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Property BeginTime As Date
  overload: TimeCockpit.Data.DataModel.IDuration.BeginTime*
  modifiers.csharp:
  - get
  - set
- uid: TimeCockpit.Data.DataModel.IDuration.EndTime
  commentId: P:TimeCockpit.Data.DataModel.IDuration.EndTime
  id: EndTime
  parent: TimeCockpit.Data.DataModel.IDuration
  langs:
  - csharp
  - vb
  name: EndTime
  nameWithType: IDuration.EndTime
  fullName: TimeCockpit.Data.DataModel.IDuration.EndTime
  type: Property
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel
  summary: "\nGets or sets the EndTime of the signal\n"
  syntax:
    content: DateTime EndTime { get; set; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Property EndTime As Date
  overload: TimeCockpit.Data.DataModel.IDuration.EndTime*
  modifiers.csharp:
  - get
  - set
- uid: TimeCockpit.Data.DataModel.IDuration.DurationInHours
  commentId: P:TimeCockpit.Data.DataModel.IDuration.DurationInHours
  id: DurationInHours
  parent: TimeCockpit.Data.DataModel.IDuration
  langs:
  - csharp
  - vb
  name: DurationInHours
  nameWithType: IDuration.DurationInHours
  fullName: TimeCockpit.Data.DataModel.IDuration.DurationInHours
  type: Property
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel
  summary: "\nGets the duration of the timesheet record in hours\n"
  syntax:
    content: decimal? DurationInHours { get; }
    parameters: []
    return:
      type: System.Nullable{System.Decimal}
    content.vb: ReadOnly Property DurationInHours As Decimal?
  overload: TimeCockpit.Data.DataModel.IDuration.DurationInHours*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: TimeCockpit.Data.DataModel
  commentId: N:TimeCockpit.Data.DataModel
  isExternal: true
  name: TimeCockpit.Data.DataModel
  nameWithType: TimeCockpit.Data.DataModel
  fullName: TimeCockpit.Data.DataModel
- uid: TimeCockpit.Data.DataModel.IDuration.BeginTime*
  commentId: Overload:TimeCockpit.Data.DataModel.IDuration.BeginTime
  isExternal: true
  name: BeginTime
  nameWithType: IDuration.BeginTime
  fullName: TimeCockpit.Data.DataModel.IDuration.BeginTime
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TimeCockpit.Data.DataModel.IDuration.EndTime*
  commentId: Overload:TimeCockpit.Data.DataModel.IDuration.EndTime
  isExternal: true
  name: EndTime
  nameWithType: IDuration.EndTime
  fullName: TimeCockpit.Data.DataModel.IDuration.EndTime
- uid: TimeCockpit.Data.DataModel.IDuration.DurationInHours*
  commentId: Overload:TimeCockpit.Data.DataModel.IDuration.DurationInHours
  isExternal: true
  name: DurationInHours
  nameWithType: IDuration.DurationInHours
  fullName: TimeCockpit.Data.DataModel.IDuration.DurationInHours
- uid: System.Nullable{System.Decimal}
  commentId: T:System.Nullable{System.Decimal}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Decimal>
  nameWithType: Nullable<Decimal>
  fullName: System.Nullable<System.Decimal>
  nameWithType.vb: Nullable(Of Decimal)
  fullName.vb: System.Nullable(Of System.Decimal)
  name.vb: Nullable(Of Decimal)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Decimal
    name: Decimal
    nameWithType: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Decimal
    name: Decimal
    nameWithType: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
