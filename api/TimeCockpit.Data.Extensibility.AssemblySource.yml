### YamlMime:ManagedReference
items:
- uid: TimeCockpit.Data.Extensibility.AssemblySource
  commentId: T:TimeCockpit.Data.Extensibility.AssemblySource
  id: AssemblySource
  parent: TimeCockpit.Data.Extensibility
  children:
  - TimeCockpit.Data.Extensibility.AssemblySource.#ctor
  - TimeCockpit.Data.Extensibility.AssemblySource.Functions
  - TimeCockpit.Data.Extensibility.AssemblySource.GetFunctionTypeNames
  - TimeCockpit.Data.Extensibility.AssemblySource.GetInterfaceTypeNames
  - TimeCockpit.Data.Extensibility.AssemblySource.GetTriggerTypeNames
  - TimeCockpit.Data.Extensibility.AssemblySource.Interfaces
  langs:
  - csharp
  - vb
  name: AssemblySource
  nameWithType: AssemblySource
  fullName: TimeCockpit.Data.Extensibility.AssemblySource
  type: Class
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Extensibility
  summary: "\nGets assembly names from the object\n"
  syntax:
    content: 'public class AssemblySource : ITypeNameProvider'
    content.vb: >-
      Public Class AssemblySource
          Implements ITypeNameProvider
  inheritance:
  - System.Object
  implements:
  - TimeCockpit.Data.Extensibility.ITypeNameProvider
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TimeCockpit.Data.Extensibility.AssemblySource.GetFunctionTypeNames
  commentId: M:TimeCockpit.Data.Extensibility.AssemblySource.GetFunctionTypeNames
  id: GetFunctionTypeNames
  parent: TimeCockpit.Data.Extensibility.AssemblySource
  langs:
  - csharp
  - vb
  name: GetFunctionTypeNames()
  nameWithType: AssemblySource.GetFunctionTypeNames()
  fullName: TimeCockpit.Data.Extensibility.AssemblySource.GetFunctionTypeNames()
  type: Method
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Extensibility
  summary: "\nGets the assemblies from a given source.\n"
  syntax:
    content: public IEnumerable<ExternalType> GetFunctionTypeNames()
    return:
      type: System.Collections.Generic.IEnumerable{TimeCockpit.Data.Extensibility.ExternalType}
      description: "\nA list of <xref href=\"TimeCockpit.Data.Extensibility.ExternalType\" data-throw-if-not-resolved=\"false\"></xref>s.\n"
    content.vb: Public Function GetFunctionTypeNames As IEnumerable(Of ExternalType)
  overload: TimeCockpit.Data.Extensibility.AssemblySource.GetFunctionTypeNames*
  implements:
  - TimeCockpit.Data.Extensibility.ITypeNameProvider.GetFunctionTypeNames
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Extensibility.AssemblySource.GetInterfaceTypeNames
  commentId: M:TimeCockpit.Data.Extensibility.AssemblySource.GetInterfaceTypeNames
  id: GetInterfaceTypeNames
  parent: TimeCockpit.Data.Extensibility.AssemblySource
  langs:
  - csharp
  - vb
  name: GetInterfaceTypeNames()
  nameWithType: AssemblySource.GetInterfaceTypeNames()
  fullName: TimeCockpit.Data.Extensibility.AssemblySource.GetInterfaceTypeNames()
  type: Method
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Extensibility
  summary: "\nGets the assemblies from a given source.\n"
  syntax:
    content: public IEnumerable<ExternalType> GetInterfaceTypeNames()
    return:
      type: System.Collections.Generic.IEnumerable{TimeCockpit.Data.Extensibility.ExternalType}
      description: "\nA list of <xref href=\"TimeCockpit.Data.Extensibility.ExternalType\" data-throw-if-not-resolved=\"false\"></xref>s.\n"
    content.vb: Public Function GetInterfaceTypeNames As IEnumerable(Of ExternalType)
  overload: TimeCockpit.Data.Extensibility.AssemblySource.GetInterfaceTypeNames*
  implements:
  - TimeCockpit.Data.Extensibility.ITypeNameProvider.GetInterfaceTypeNames
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Extensibility.AssemblySource.GetTriggerTypeNames
  commentId: M:TimeCockpit.Data.Extensibility.AssemblySource.GetTriggerTypeNames
  id: GetTriggerTypeNames
  parent: TimeCockpit.Data.Extensibility.AssemblySource
  langs:
  - csharp
  - vb
  name: GetTriggerTypeNames()
  nameWithType: AssemblySource.GetTriggerTypeNames()
  fullName: TimeCockpit.Data.Extensibility.AssemblySource.GetTriggerTypeNames()
  type: Method
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Extensibility
  summary: "\nGets the assemblies from a given source.\n"
  syntax:
    content: public IEnumerable<ExternalType> GetTriggerTypeNames()
    return:
      type: System.Collections.Generic.IEnumerable{TimeCockpit.Data.Extensibility.ExternalType}
      description: "\nA list of <xref href=\"TimeCockpit.Data.Extensibility.ExternalType\" data-throw-if-not-resolved=\"false\"></xref>s.\n"
    content.vb: Public Function GetTriggerTypeNames As IEnumerable(Of ExternalType)
  overload: TimeCockpit.Data.Extensibility.AssemblySource.GetTriggerTypeNames*
  implements:
  - TimeCockpit.Data.Extensibility.ITypeNameProvider.GetTriggerTypeNames
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Extensibility.AssemblySource.#ctor
  commentId: M:TimeCockpit.Data.Extensibility.AssemblySource.#ctor
  id: '#ctor'
  parent: TimeCockpit.Data.Extensibility.AssemblySource
  langs:
  - csharp
  - vb
  name: AssemblySource()
  nameWithType: AssemblySource.AssemblySource()
  fullName: TimeCockpit.Data.Extensibility.AssemblySource.AssemblySource()
  type: Constructor
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Extensibility
  syntax:
    content: public AssemblySource()
    content.vb: Public Sub New
  overload: TimeCockpit.Data.Extensibility.AssemblySource.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Extensibility.AssemblySource.Functions
  commentId: P:TimeCockpit.Data.Extensibility.AssemblySource.Functions
  id: Functions
  parent: TimeCockpit.Data.Extensibility.AssemblySource
  langs:
  - csharp
  - vb
  name: Functions
  nameWithType: AssemblySource.Functions
  fullName: TimeCockpit.Data.Extensibility.AssemblySource.Functions
  type: Property
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Extensibility
  summary: "\nGets or sets the external types.\n"
  syntax:
    content: public IEnumerable<ExternalType> Functions { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{TimeCockpit.Data.Extensibility.ExternalType}
      description: "\nThe external types.\n"
    content.vb: Public Property Functions As IEnumerable(Of ExternalType)
  overload: TimeCockpit.Data.Extensibility.AssemblySource.Functions*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Extensibility.AssemblySource.Interfaces
  commentId: P:TimeCockpit.Data.Extensibility.AssemblySource.Interfaces
  id: Interfaces
  parent: TimeCockpit.Data.Extensibility.AssemblySource
  langs:
  - csharp
  - vb
  name: Interfaces
  nameWithType: AssemblySource.Interfaces
  fullName: TimeCockpit.Data.Extensibility.AssemblySource.Interfaces
  type: Property
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Extensibility
  summary: "\nGets or sets the interfaces.\n"
  syntax:
    content: public IEnumerable<ExternalType> Interfaces { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{TimeCockpit.Data.Extensibility.ExternalType}
      description: "\nThe interfaces.\n"
    content.vb: Public Property Interfaces As IEnumerable(Of ExternalType)
  overload: TimeCockpit.Data.Extensibility.AssemblySource.Interfaces*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: TimeCockpit.Data.Extensibility
  commentId: N:TimeCockpit.Data.Extensibility
  isExternal: true
  name: TimeCockpit.Data.Extensibility
  nameWithType: TimeCockpit.Data.Extensibility
  fullName: TimeCockpit.Data.Extensibility
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: TimeCockpit.Data.Extensibility.ITypeNameProvider
  commentId: T:TimeCockpit.Data.Extensibility.ITypeNameProvider
  parent: TimeCockpit.Data.Extensibility
  isExternal: true
  name: ITypeNameProvider
  nameWithType: ITypeNameProvider
  fullName: TimeCockpit.Data.Extensibility.ITypeNameProvider
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TimeCockpit.Data.Extensibility.AssemblySource.GetFunctionTypeNames*
  commentId: Overload:TimeCockpit.Data.Extensibility.AssemblySource.GetFunctionTypeNames
  isExternal: true
  name: GetFunctionTypeNames
  nameWithType: AssemblySource.GetFunctionTypeNames
  fullName: TimeCockpit.Data.Extensibility.AssemblySource.GetFunctionTypeNames
- uid: TimeCockpit.Data.Extensibility.ITypeNameProvider.GetFunctionTypeNames
  commentId: M:TimeCockpit.Data.Extensibility.ITypeNameProvider.GetFunctionTypeNames
  parent: TimeCockpit.Data.Extensibility.ITypeNameProvider
  isExternal: true
  name: GetFunctionTypeNames()
  nameWithType: ITypeNameProvider.GetFunctionTypeNames()
  fullName: TimeCockpit.Data.Extensibility.ITypeNameProvider.GetFunctionTypeNames()
  spec.csharp:
  - uid: TimeCockpit.Data.Extensibility.ITypeNameProvider.GetFunctionTypeNames
    name: GetFunctionTypeNames
    nameWithType: ITypeNameProvider.GetFunctionTypeNames
    fullName: TimeCockpit.Data.Extensibility.ITypeNameProvider.GetFunctionTypeNames
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TimeCockpit.Data.Extensibility.ITypeNameProvider.GetFunctionTypeNames
    name: GetFunctionTypeNames
    nameWithType: ITypeNameProvider.GetFunctionTypeNames
    fullName: TimeCockpit.Data.Extensibility.ITypeNameProvider.GetFunctionTypeNames
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{TimeCockpit.Data.Extensibility.ExternalType}
  commentId: T:System.Collections.Generic.IEnumerable{TimeCockpit.Data.Extensibility.ExternalType}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<ExternalType>
  nameWithType: IEnumerable<ExternalType>
  fullName: System.Collections.Generic.IEnumerable<TimeCockpit.Data.Extensibility.ExternalType>
  nameWithType.vb: IEnumerable(Of ExternalType)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TimeCockpit.Data.Extensibility.ExternalType)
  name.vb: IEnumerable(Of ExternalType)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TimeCockpit.Data.Extensibility.ExternalType
    name: ExternalType
    nameWithType: ExternalType
    fullName: TimeCockpit.Data.Extensibility.ExternalType
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TimeCockpit.Data.Extensibility.ExternalType
    name: ExternalType
    nameWithType: ExternalType
    fullName: TimeCockpit.Data.Extensibility.ExternalType
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: TimeCockpit.Data.Extensibility.AssemblySource.GetInterfaceTypeNames*
  commentId: Overload:TimeCockpit.Data.Extensibility.AssemblySource.GetInterfaceTypeNames
  isExternal: true
  name: GetInterfaceTypeNames
  nameWithType: AssemblySource.GetInterfaceTypeNames
  fullName: TimeCockpit.Data.Extensibility.AssemblySource.GetInterfaceTypeNames
- uid: TimeCockpit.Data.Extensibility.ITypeNameProvider.GetInterfaceTypeNames
  commentId: M:TimeCockpit.Data.Extensibility.ITypeNameProvider.GetInterfaceTypeNames
  parent: TimeCockpit.Data.Extensibility.ITypeNameProvider
  isExternal: true
  name: GetInterfaceTypeNames()
  nameWithType: ITypeNameProvider.GetInterfaceTypeNames()
  fullName: TimeCockpit.Data.Extensibility.ITypeNameProvider.GetInterfaceTypeNames()
  spec.csharp:
  - uid: TimeCockpit.Data.Extensibility.ITypeNameProvider.GetInterfaceTypeNames
    name: GetInterfaceTypeNames
    nameWithType: ITypeNameProvider.GetInterfaceTypeNames
    fullName: TimeCockpit.Data.Extensibility.ITypeNameProvider.GetInterfaceTypeNames
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TimeCockpit.Data.Extensibility.ITypeNameProvider.GetInterfaceTypeNames
    name: GetInterfaceTypeNames
    nameWithType: ITypeNameProvider.GetInterfaceTypeNames
    fullName: TimeCockpit.Data.Extensibility.ITypeNameProvider.GetInterfaceTypeNames
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.Extensibility.AssemblySource.GetTriggerTypeNames*
  commentId: Overload:TimeCockpit.Data.Extensibility.AssemblySource.GetTriggerTypeNames
  isExternal: true
  name: GetTriggerTypeNames
  nameWithType: AssemblySource.GetTriggerTypeNames
  fullName: TimeCockpit.Data.Extensibility.AssemblySource.GetTriggerTypeNames
- uid: TimeCockpit.Data.Extensibility.ITypeNameProvider.GetTriggerTypeNames
  commentId: M:TimeCockpit.Data.Extensibility.ITypeNameProvider.GetTriggerTypeNames
  parent: TimeCockpit.Data.Extensibility.ITypeNameProvider
  isExternal: true
  name: GetTriggerTypeNames()
  nameWithType: ITypeNameProvider.GetTriggerTypeNames()
  fullName: TimeCockpit.Data.Extensibility.ITypeNameProvider.GetTriggerTypeNames()
  spec.csharp:
  - uid: TimeCockpit.Data.Extensibility.ITypeNameProvider.GetTriggerTypeNames
    name: GetTriggerTypeNames
    nameWithType: ITypeNameProvider.GetTriggerTypeNames
    fullName: TimeCockpit.Data.Extensibility.ITypeNameProvider.GetTriggerTypeNames
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TimeCockpit.Data.Extensibility.ITypeNameProvider.GetTriggerTypeNames
    name: GetTriggerTypeNames
    nameWithType: ITypeNameProvider.GetTriggerTypeNames
    fullName: TimeCockpit.Data.Extensibility.ITypeNameProvider.GetTriggerTypeNames
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.Extensibility.AssemblySource.#ctor*
  commentId: Overload:TimeCockpit.Data.Extensibility.AssemblySource.#ctor
  isExternal: true
  name: AssemblySource
  nameWithType: AssemblySource.AssemblySource
  fullName: TimeCockpit.Data.Extensibility.AssemblySource.AssemblySource
- uid: TimeCockpit.Data.Extensibility.AssemblySource.Functions*
  commentId: Overload:TimeCockpit.Data.Extensibility.AssemblySource.Functions
  isExternal: true
  name: Functions
  nameWithType: AssemblySource.Functions
  fullName: TimeCockpit.Data.Extensibility.AssemblySource.Functions
- uid: TimeCockpit.Data.Extensibility.AssemblySource.Interfaces*
  commentId: Overload:TimeCockpit.Data.Extensibility.AssemblySource.Interfaces
  isExternal: true
  name: Interfaces
  nameWithType: AssemblySource.Interfaces
  fullName: TimeCockpit.Data.Extensibility.AssemblySource.Interfaces
