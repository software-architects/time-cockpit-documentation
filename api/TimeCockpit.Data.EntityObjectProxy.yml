### YamlMime:ManagedReference
items:
- uid: TimeCockpit.Data.EntityObjectProxy
  commentId: T:TimeCockpit.Data.EntityObjectProxy
  id: EntityObjectProxy
  parent: TimeCockpit.Data
  children:
  - TimeCockpit.Data.EntityObjectProxy.#ctor(System.Guid,System.String)
  - TimeCockpit.Data.EntityObjectProxy.ModelEntityName
  - TimeCockpit.Data.EntityObjectProxy.ObjectUuid
  langs:
  - csharp
  - vb
  name: EntityObjectProxy
  nameWithType: EntityObjectProxy
  fullName: TimeCockpit.Data.EntityObjectProxy
  type: Class
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data
  summary: "\nRepresents a lightweigt representation of an <xref href=\"TimeCockpit.Data.EntityObject\" data-throw-if-not-resolved=\"false\"></xref>\n"
  syntax:
    content: 'public class EntityObjectProxy : IEntityObject'
    content.vb: >-
      Public Class EntityObjectProxy
          Implements IEntityObject
  inheritance:
  - System.Object
  implements:
  - TimeCockpit.Data.IEntityObject
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TimeCockpit.Data.EntityObjectProxy.#ctor(System.Guid,System.String)
  commentId: M:TimeCockpit.Data.EntityObjectProxy.#ctor(System.Guid,System.String)
  id: '#ctor(System.Guid,System.String)'
  parent: TimeCockpit.Data.EntityObjectProxy
  langs:
  - csharp
  - vb
  name: EntityObjectProxy(Guid, String)
  nameWithType: EntityObjectProxy.EntityObjectProxy(Guid, String)
  fullName: TimeCockpit.Data.EntityObjectProxy.EntityObjectProxy(System.Guid, System.String)
  type: Constructor
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data
  summary: "\nInitializes a new instance of the <xref href=\"TimeCockpit.Data.EntityObjectProxy\" data-throw-if-not-resolved=\"false\"></xref> class\n"
  syntax:
    content: public EntityObjectProxy(Guid objectUuid, string entityName)
    parameters:
    - id: objectUuid
      type: System.Guid
      description: The <xref href="System.Guid" data-throw-if-not-resolved="false"></xref> of the <xref href="TimeCockpit.Data.EntityObject" data-throw-if-not-resolved="false"></xref>
    - id: entityName
      type: System.String
      description: the name of the <xref href="TimeCockpit.Data.EntityObject" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Sub New(objectUuid As Guid, entityName As String)
  overload: TimeCockpit.Data.EntityObjectProxy.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.EntityObjectProxy.ObjectUuid
  commentId: P:TimeCockpit.Data.EntityObjectProxy.ObjectUuid
  id: ObjectUuid
  parent: TimeCockpit.Data.EntityObjectProxy
  langs:
  - csharp
  - vb
  name: ObjectUuid
  nameWithType: EntityObjectProxy.ObjectUuid
  fullName: TimeCockpit.Data.EntityObjectProxy.ObjectUuid
  type: Property
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data
  summary: "\nGets the <xref href=\"System.Guid\" data-throw-if-not-resolved=\"false\"></xref> of the <xref href=\"TimeCockpit.Data.EntityObject\" data-throw-if-not-resolved=\"false\"></xref>\n"
  syntax:
    content: public Guid ObjectUuid { get; }
    parameters: []
    return:
      type: System.Guid
    content.vb: Public ReadOnly Property ObjectUuid As Guid
  overload: TimeCockpit.Data.EntityObjectProxy.ObjectUuid*
  implements:
  - TimeCockpit.Data.IEntityObject.ObjectUuid
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TimeCockpit.Data.EntityObjectProxy.ModelEntityName
  commentId: P:TimeCockpit.Data.EntityObjectProxy.ModelEntityName
  id: ModelEntityName
  parent: TimeCockpit.Data.EntityObjectProxy
  langs:
  - csharp
  - vb
  name: ModelEntityName
  nameWithType: EntityObjectProxy.ModelEntityName
  fullName: TimeCockpit.Data.EntityObjectProxy.ModelEntityName
  type: Property
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data
  summary: "\nGets the name of the <xref href=\"TimeCockpit.Data.EntityObject\" data-throw-if-not-resolved=\"false\"></xref>\n"
  syntax:
    content: public string ModelEntityName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property ModelEntityName As String
  overload: TimeCockpit.Data.EntityObjectProxy.ModelEntityName*
  implements:
  - TimeCockpit.Data.IEntityObject.ModelEntityName
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: TimeCockpit.Data
  commentId: N:TimeCockpit.Data
  isExternal: true
  name: TimeCockpit.Data
  nameWithType: TimeCockpit.Data
  fullName: TimeCockpit.Data
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: TimeCockpit.Data.IEntityObject
  commentId: T:TimeCockpit.Data.IEntityObject
  parent: TimeCockpit.Data
  isExternal: true
  name: IEntityObject
  nameWithType: IEntityObject
  fullName: TimeCockpit.Data.IEntityObject
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TimeCockpit.Data.EntityObjectProxy.#ctor*
  commentId: Overload:TimeCockpit.Data.EntityObjectProxy.#ctor
  isExternal: true
  name: EntityObjectProxy
  nameWithType: EntityObjectProxy.EntityObjectProxy
  fullName: TimeCockpit.Data.EntityObjectProxy.EntityObjectProxy
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: TimeCockpit.Data.EntityObjectProxy.ObjectUuid*
  commentId: Overload:TimeCockpit.Data.EntityObjectProxy.ObjectUuid
  isExternal: true
  name: ObjectUuid
  nameWithType: EntityObjectProxy.ObjectUuid
  fullName: TimeCockpit.Data.EntityObjectProxy.ObjectUuid
- uid: TimeCockpit.Data.IEntityObject.ObjectUuid
  commentId: P:TimeCockpit.Data.IEntityObject.ObjectUuid
  parent: TimeCockpit.Data.IEntityObject
  isExternal: true
  name: ObjectUuid
  nameWithType: IEntityObject.ObjectUuid
  fullName: TimeCockpit.Data.IEntityObject.ObjectUuid
- uid: TimeCockpit.Data.EntityObjectProxy.ModelEntityName*
  commentId: Overload:TimeCockpit.Data.EntityObjectProxy.ModelEntityName
  isExternal: true
  name: ModelEntityName
  nameWithType: EntityObjectProxy.ModelEntityName
  fullName: TimeCockpit.Data.EntityObjectProxy.ModelEntityName
- uid: TimeCockpit.Data.IEntityObject.ModelEntityName
  commentId: P:TimeCockpit.Data.IEntityObject.ModelEntityName
  parent: TimeCockpit.Data.IEntityObject
  isExternal: true
  name: ModelEntityName
  nameWithType: IEntityObject.ModelEntityName
  fullName: TimeCockpit.Data.IEntityObject.ModelEntityName
