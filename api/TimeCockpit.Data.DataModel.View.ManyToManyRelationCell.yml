### YamlMime:ManagedReference
items:
- uid: TimeCockpit.Data.DataModel.View.ManyToManyRelationCell
  commentId: T:TimeCockpit.Data.DataModel.View.ManyToManyRelationCell
  id: ManyToManyRelationCell
  parent: TimeCockpit.Data.DataModel.View
  children:
  - TimeCockpit.Data.DataModel.View.ManyToManyRelationCell.#ctor
  - TimeCockpit.Data.DataModel.View.ManyToManyRelationCell.AssignmentCondition
  - TimeCockpit.Data.DataModel.View.ManyToManyRelationCell.AssignmentGroupByExpression
  - TimeCockpit.Data.DataModel.View.ManyToManyRelationCell.BackReference
  - TimeCockpit.Data.DataModel.View.ManyToManyRelationCell.Condition
  - TimeCockpit.Data.DataModel.View.ManyToManyRelationCell.DisplayProperty
  - TimeCockpit.Data.DataModel.View.ManyToManyRelationCell.EmptyGroupHeader
  - TimeCockpit.Data.DataModel.View.ManyToManyRelationCell.GroupBy
  - TimeCockpit.Data.DataModel.View.ManyToManyRelationCell.List
  - TimeCockpit.Data.DataModel.View.ManyToManyRelationCell.Relation
  - TimeCockpit.Data.DataModel.View.ManyToManyRelationCell.SelectedItemsDisplayExpression
  langs:
  - csharp
  - vb
  name: ManyToManyRelationCell
  nameWithType: ManyToManyRelationCell
  fullName: TimeCockpit.Data.DataModel.View.ManyToManyRelationCell
  type: Class
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/View/ManyToManyRelationCell.cs
    id: ManyToManyRelationCell
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/View/ManyToManyRelationCell.cs
    startLine: 15
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel.View
  summary: "\nRepresents a lookup field in a <xref href=\"TimeCockpit.Data.DataModel.View.ManyToManyRelationCell.List\" data-throw-if-not-resolved=\"false\"></xref> or a <xref href=\"TimeCockpit.Data.DataModel.View.Form\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: >-
      [DataContract]

      public class ManyToManyRelationCell : Cell, IDynamicMetaObjectProvider, INotifyPropertyChanged, IWeakEventListener
    content.vb: >-
      <DataContract>

      Public Class ManyToManyRelationCell
          Inherits Cell
          Implements IDynamicMetaObjectProvider, INotifyPropertyChanged, IWeakEventListener
  inheritance:
  - System.Object
  - TimeCockpit.Data.DynamicObject
  - TimeCockpit.Data.DataModel.NamedDynamicObject
  - TimeCockpit.Data.DataModel.View.Cell
  implements:
  - System.Dynamic.IDynamicMetaObjectProvider
  - System.ComponentModel.INotifyPropertyChanged
  - TimeCockpit.Common.IWeakEventListener
  inheritedMembers:
  - TimeCockpit.Data.DataModel.View.Cell.Header
  - TimeCockpit.Data.DataModel.View.Cell.Foreground
  - TimeCockpit.Data.DataModel.View.Cell.Background
  - TimeCockpit.Data.DataModel.View.Cell.RowSpan
  - TimeCockpit.Data.DataModel.View.Cell.ColSpan
  - TimeCockpit.Data.DataModel.View.Cell.MinWidth
  - TimeCockpit.Data.DataModel.View.Cell.MaxWidth
  - TimeCockpit.Data.DataModel.View.Cell.Width
  - TimeCockpit.Data.DataModel.View.Cell.Hyperlink
  - TimeCockpit.Data.DataModel.View.Cell.IsVisible
  - TimeCockpit.Data.DataModel.View.Cell.IsColumnVisible
  - TimeCockpit.Data.DataModel.View.Cell.IsEnabled
  - TimeCockpit.Data.DataModel.View.Cell.IsReadOnly
  - TimeCockpit.Data.DataModel.View.Cell.LabelPosition
  - TimeCockpit.Data.DataModel.View.Cell.AggregateFunction
  - TimeCockpit.Data.DataModel.View.Cell.DataType
  - TimeCockpit.Data.DataModel.View.Cell.GetPropertyInfos
  - TimeCockpit.Data.DataModel.View.Cell.ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)
  - TimeCockpit.Data.DataModel.NamedDynamicObject.PropertyChanged
  - TimeCockpit.Data.DataModel.NamedDynamicObject.Name
  - TimeCockpit.Data.DataModel.NamedDynamicObject.OnPropertyChanged(System.String)
  - TimeCockpit.Data.DynamicObject.GetMember(System.String)
  - TimeCockpit.Data.DynamicObject.SetMember(System.String,System.Object)
  - TimeCockpit.Data.DynamicObject.GetMetaObject(System.Linq.Expressions.Expression)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TimeCockpit.Data.DataModel.View.ManyToManyRelationCell.#ctor
  commentId: M:TimeCockpit.Data.DataModel.View.ManyToManyRelationCell.#ctor
  id: '#ctor'
  parent: TimeCockpit.Data.DataModel.View.ManyToManyRelationCell
  langs:
  - csharp
  - vb
  name: ManyToManyRelationCell()
  nameWithType: ManyToManyRelationCell.ManyToManyRelationCell()
  fullName: TimeCockpit.Data.DataModel.View.ManyToManyRelationCell.ManyToManyRelationCell()
  type: Constructor
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/View/ManyToManyRelationCell.cs
    id: .ctor
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/View/ManyToManyRelationCell.cs
    startLine: 74
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel.View
  summary: "\nInitializes a new instance of the ManyToManyRelationCell class.\n"
  example: []
  syntax:
    content: public ManyToManyRelationCell()
    content.vb: Public Sub New
  overload: TimeCockpit.Data.DataModel.View.ManyToManyRelationCell.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.DataModel.View.ManyToManyRelationCell.List
  commentId: P:TimeCockpit.Data.DataModel.View.ManyToManyRelationCell.List
  id: List
  parent: TimeCockpit.Data.DataModel.View.ManyToManyRelationCell
  langs:
  - csharp
  - vb
  name: List
  nameWithType: ManyToManyRelationCell.List
  fullName: TimeCockpit.Data.DataModel.View.ManyToManyRelationCell.List
  type: Property
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/View/ManyToManyRelationCell.cs
    id: List
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/View/ManyToManyRelationCell.cs
    startLine: 83
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel.View
  summary: "\nGets or sets the list, that is used for displaying the data int the combobox.\n"
  example: []
  syntax:
    content: public string List { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property List As String
  overload: TimeCockpit.Data.DataModel.View.ManyToManyRelationCell.List*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.DataModel.View.ManyToManyRelationCell.Condition
  commentId: P:TimeCockpit.Data.DataModel.View.ManyToManyRelationCell.Condition
  id: Condition
  parent: TimeCockpit.Data.DataModel.View.ManyToManyRelationCell
  langs:
  - csharp
  - vb
  name: Condition
  nameWithType: ManyToManyRelationCell.Condition
  fullName: TimeCockpit.Data.DataModel.View.ManyToManyRelationCell.Condition
  type: Property
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/View/ManyToManyRelationCell.cs
    id: Condition
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/View/ManyToManyRelationCell.cs
    startLine: 102
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel.View
  summary: "\nGets or sets the condition for the lookup list.\n"
  example: []
  syntax:
    content: public string Condition { get; set; }
    parameters: []
    return:
      type: System.String
      description: The condition that determines how to join two dependent comboboxes.
    content.vb: Public Property Condition As String
  overload: TimeCockpit.Data.DataModel.View.ManyToManyRelationCell.Condition*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.DataModel.View.ManyToManyRelationCell.BackReference
  commentId: P:TimeCockpit.Data.DataModel.View.ManyToManyRelationCell.BackReference
  id: BackReference
  parent: TimeCockpit.Data.DataModel.View.ManyToManyRelationCell
  langs:
  - csharp
  - vb
  name: BackReference
  nameWithType: ManyToManyRelationCell.BackReference
  fullName: TimeCockpit.Data.DataModel.View.ManyToManyRelationCell.BackReference
  type: Property
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/View/ManyToManyRelationCell.cs
    id: BackReference
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/View/ManyToManyRelationCell.cs
    startLine: 120
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel.View
  summary: "\nGets or sets the name of the BackReference.\n"
  example: []
  syntax:
    content: public string BackReference { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property BackReference As String
  overload: TimeCockpit.Data.DataModel.View.ManyToManyRelationCell.BackReference*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.DataModel.View.ManyToManyRelationCell.Relation
  commentId: P:TimeCockpit.Data.DataModel.View.ManyToManyRelationCell.Relation
  id: Relation
  parent: TimeCockpit.Data.DataModel.View.ManyToManyRelationCell
  langs:
  - csharp
  - vb
  name: Relation
  nameWithType: ManyToManyRelationCell.Relation
  fullName: TimeCockpit.Data.DataModel.View.ManyToManyRelationCell.Relation
  type: Property
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/View/ManyToManyRelationCell.cs
    id: Relation
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/View/ManyToManyRelationCell.cs
    startLine: 138
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel.View
  summary: "\nGets or sets the name of the Relation.\n"
  example: []
  syntax:
    content: public string Relation { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Relation As String
  overload: TimeCockpit.Data.DataModel.View.ManyToManyRelationCell.Relation*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.DataModel.View.ManyToManyRelationCell.SelectedItemsDisplayExpression
  commentId: P:TimeCockpit.Data.DataModel.View.ManyToManyRelationCell.SelectedItemsDisplayExpression
  id: SelectedItemsDisplayExpression
  parent: TimeCockpit.Data.DataModel.View.ManyToManyRelationCell
  langs:
  - csharp
  - vb
  name: SelectedItemsDisplayExpression
  nameWithType: ManyToManyRelationCell.SelectedItemsDisplayExpression
  fullName: TimeCockpit.Data.DataModel.View.ManyToManyRelationCell.SelectedItemsDisplayExpression
  type: Property
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/View/ManyToManyRelationCell.cs
    id: SelectedItemsDisplayExpression
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/View/ManyToManyRelationCell.cs
    startLine: 156
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel.View
  summary: "\nGets or sets the display expression.\n"
  example: []
  syntax:
    content: public string SelectedItemsDisplayExpression { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property SelectedItemsDisplayExpression As String
  overload: TimeCockpit.Data.DataModel.View.ManyToManyRelationCell.SelectedItemsDisplayExpression*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.DataModel.View.ManyToManyRelationCell.DisplayProperty
  commentId: P:TimeCockpit.Data.DataModel.View.ManyToManyRelationCell.DisplayProperty
  id: DisplayProperty
  parent: TimeCockpit.Data.DataModel.View.ManyToManyRelationCell
  langs:
  - csharp
  - vb
  name: DisplayProperty
  nameWithType: ManyToManyRelationCell.DisplayProperty
  fullName: TimeCockpit.Data.DataModel.View.ManyToManyRelationCell.DisplayProperty
  type: Property
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/View/ManyToManyRelationCell.cs
    id: DisplayProperty
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/View/ManyToManyRelationCell.cs
    startLine: 174
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel.View
  summary: "\nGets or sets the display expression for the available items.\n"
  example: []
  syntax:
    content: public string DisplayProperty { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property DisplayProperty As String
  overload: TimeCockpit.Data.DataModel.View.ManyToManyRelationCell.DisplayProperty*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.DataModel.View.ManyToManyRelationCell.AssignmentCondition
  commentId: P:TimeCockpit.Data.DataModel.View.ManyToManyRelationCell.AssignmentCondition
  id: AssignmentCondition
  parent: TimeCockpit.Data.DataModel.View.ManyToManyRelationCell
  langs:
  - csharp
  - vb
  name: AssignmentCondition
  nameWithType: ManyToManyRelationCell.AssignmentCondition
  fullName: TimeCockpit.Data.DataModel.View.ManyToManyRelationCell.AssignmentCondition
  type: Property
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/View/ManyToManyRelationCell.cs
    id: AssignmentCondition
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/View/ManyToManyRelationCell.cs
    startLine: 192
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel.View
  summary: "\nGets or sets a condition that is applied to the assignment table.\n"
  example: []
  syntax:
    content: public string AssignmentCondition { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property AssignmentCondition As String
  overload: TimeCockpit.Data.DataModel.View.ManyToManyRelationCell.AssignmentCondition*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.DataModel.View.ManyToManyRelationCell.GroupBy
  commentId: P:TimeCockpit.Data.DataModel.View.ManyToManyRelationCell.GroupBy
  id: GroupBy
  parent: TimeCockpit.Data.DataModel.View.ManyToManyRelationCell
  langs:
  - csharp
  - vb
  name: GroupBy
  nameWithType: ManyToManyRelationCell.GroupBy
  fullName: TimeCockpit.Data.DataModel.View.ManyToManyRelationCell.GroupBy
  type: Property
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/View/ManyToManyRelationCell.cs
    id: GroupBy
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/View/ManyToManyRelationCell.cs
    startLine: 210
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel.View
  summary: "\nGets or sets a property to group the combobox.\n"
  example: []
  syntax:
    content: public string GroupBy { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property GroupBy As String
  overload: TimeCockpit.Data.DataModel.View.ManyToManyRelationCell.GroupBy*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.DataModel.View.ManyToManyRelationCell.AssignmentGroupByExpression
  commentId: P:TimeCockpit.Data.DataModel.View.ManyToManyRelationCell.AssignmentGroupByExpression
  id: AssignmentGroupByExpression
  parent: TimeCockpit.Data.DataModel.View.ManyToManyRelationCell
  langs:
  - csharp
  - vb
  name: AssignmentGroupByExpression
  nameWithType: ManyToManyRelationCell.AssignmentGroupByExpression
  fullName: TimeCockpit.Data.DataModel.View.ManyToManyRelationCell.AssignmentGroupByExpression
  type: Property
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/View/ManyToManyRelationCell.cs
    id: AssignmentGroupByExpression
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/View/ManyToManyRelationCell.cs
    startLine: 228
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel.View
  summary: "\nGets or sets a property to group the results.\n"
  example: []
  syntax:
    content: public string AssignmentGroupByExpression { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property AssignmentGroupByExpression As String
  overload: TimeCockpit.Data.DataModel.View.ManyToManyRelationCell.AssignmentGroupByExpression*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.DataModel.View.ManyToManyRelationCell.EmptyGroupHeader
  commentId: P:TimeCockpit.Data.DataModel.View.ManyToManyRelationCell.EmptyGroupHeader
  id: EmptyGroupHeader
  parent: TimeCockpit.Data.DataModel.View.ManyToManyRelationCell
  langs:
  - csharp
  - vb
  name: EmptyGroupHeader
  nameWithType: ManyToManyRelationCell.EmptyGroupHeader
  fullName: TimeCockpit.Data.DataModel.View.ManyToManyRelationCell.EmptyGroupHeader
  type: Property
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/View/ManyToManyRelationCell.cs
    id: EmptyGroupHeader
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/View/ManyToManyRelationCell.cs
    startLine: 246
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel.View
  summary: "\nGets or sets the header for groups with an empty header property.\n"
  example: []
  syntax:
    content: public string EmptyGroupHeader { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property EmptyGroupHeader As String
  overload: TimeCockpit.Data.DataModel.View.ManyToManyRelationCell.EmptyGroupHeader*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: TimeCockpit.Data.DataModel.View.ManyToManyRelationCell.List
  commentId: P:TimeCockpit.Data.DataModel.View.ManyToManyRelationCell.List
- uid: TimeCockpit.Data.DataModel.View.Form
  commentId: T:TimeCockpit.Data.DataModel.View.Form
  parent: TimeCockpit.Data.DataModel.View
  isExternal: false
  name: Form
  nameWithType: Form
  fullName: TimeCockpit.Data.DataModel.View.Form
- uid: TimeCockpit.Data.DataModel.View
  commentId: N:TimeCockpit.Data.DataModel.View
  isExternal: false
  name: TimeCockpit.Data.DataModel.View
  nameWithType: TimeCockpit.Data.DataModel.View
  fullName: TimeCockpit.Data.DataModel.View
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: TimeCockpit.Data.DynamicObject
  commentId: T:TimeCockpit.Data.DynamicObject
  parent: TimeCockpit.Data
  isExternal: false
  name: DynamicObject
  nameWithType: DynamicObject
  fullName: TimeCockpit.Data.DynamicObject
- uid: TimeCockpit.Data.DataModel.NamedDynamicObject
  commentId: T:TimeCockpit.Data.DataModel.NamedDynamicObject
  parent: TimeCockpit.Data.DataModel
  isExternal: false
  name: NamedDynamicObject
  nameWithType: NamedDynamicObject
  fullName: TimeCockpit.Data.DataModel.NamedDynamicObject
- uid: TimeCockpit.Data.DataModel.View.Cell
  commentId: T:TimeCockpit.Data.DataModel.View.Cell
  parent: TimeCockpit.Data.DataModel.View
  isExternal: false
  name: Cell
  nameWithType: Cell
  fullName: TimeCockpit.Data.DataModel.View.Cell
- uid: System.Dynamic.IDynamicMetaObjectProvider
  commentId: T:System.Dynamic.IDynamicMetaObjectProvider
  parent: System.Dynamic
  isExternal: true
  name: IDynamicMetaObjectProvider
  nameWithType: IDynamicMetaObjectProvider
  fullName: System.Dynamic.IDynamicMetaObjectProvider
- uid: System.ComponentModel.INotifyPropertyChanged
  commentId: T:System.ComponentModel.INotifyPropertyChanged
  parent: System.ComponentModel
  isExternal: true
  name: INotifyPropertyChanged
  nameWithType: INotifyPropertyChanged
  fullName: System.ComponentModel.INotifyPropertyChanged
- uid: TimeCockpit.Common.IWeakEventListener
  commentId: T:TimeCockpit.Common.IWeakEventListener
  parent: TimeCockpit.Common
  isExternal: false
  name: IWeakEventListener
  nameWithType: IWeakEventListener
  fullName: TimeCockpit.Common.IWeakEventListener
- uid: TimeCockpit.Data.DataModel.View.Cell.Header
  commentId: P:TimeCockpit.Data.DataModel.View.Cell.Header
  parent: TimeCockpit.Data.DataModel.View.Cell
  isExternal: false
  name: Header
  nameWithType: Cell.Header
  fullName: TimeCockpit.Data.DataModel.View.Cell.Header
- uid: TimeCockpit.Data.DataModel.View.Cell.Foreground
  commentId: P:TimeCockpit.Data.DataModel.View.Cell.Foreground
  parent: TimeCockpit.Data.DataModel.View.Cell
  isExternal: false
  name: Foreground
  nameWithType: Cell.Foreground
  fullName: TimeCockpit.Data.DataModel.View.Cell.Foreground
- uid: TimeCockpit.Data.DataModel.View.Cell.Background
  commentId: P:TimeCockpit.Data.DataModel.View.Cell.Background
  parent: TimeCockpit.Data.DataModel.View.Cell
  isExternal: false
  name: Background
  nameWithType: Cell.Background
  fullName: TimeCockpit.Data.DataModel.View.Cell.Background
- uid: TimeCockpit.Data.DataModel.View.Cell.RowSpan
  commentId: P:TimeCockpit.Data.DataModel.View.Cell.RowSpan
  parent: TimeCockpit.Data.DataModel.View.Cell
  isExternal: false
  name: RowSpan
  nameWithType: Cell.RowSpan
  fullName: TimeCockpit.Data.DataModel.View.Cell.RowSpan
- uid: TimeCockpit.Data.DataModel.View.Cell.ColSpan
  commentId: P:TimeCockpit.Data.DataModel.View.Cell.ColSpan
  parent: TimeCockpit.Data.DataModel.View.Cell
  isExternal: false
  name: ColSpan
  nameWithType: Cell.ColSpan
  fullName: TimeCockpit.Data.DataModel.View.Cell.ColSpan
- uid: TimeCockpit.Data.DataModel.View.Cell.MinWidth
  commentId: P:TimeCockpit.Data.DataModel.View.Cell.MinWidth
  parent: TimeCockpit.Data.DataModel.View.Cell
  isExternal: false
  name: MinWidth
  nameWithType: Cell.MinWidth
  fullName: TimeCockpit.Data.DataModel.View.Cell.MinWidth
- uid: TimeCockpit.Data.DataModel.View.Cell.MaxWidth
  commentId: P:TimeCockpit.Data.DataModel.View.Cell.MaxWidth
  parent: TimeCockpit.Data.DataModel.View.Cell
  isExternal: false
  name: MaxWidth
  nameWithType: Cell.MaxWidth
  fullName: TimeCockpit.Data.DataModel.View.Cell.MaxWidth
- uid: TimeCockpit.Data.DataModel.View.Cell.Width
  commentId: P:TimeCockpit.Data.DataModel.View.Cell.Width
  parent: TimeCockpit.Data.DataModel.View.Cell
  isExternal: false
  name: Width
  nameWithType: Cell.Width
  fullName: TimeCockpit.Data.DataModel.View.Cell.Width
- uid: TimeCockpit.Data.DataModel.View.Cell.Hyperlink
  commentId: P:TimeCockpit.Data.DataModel.View.Cell.Hyperlink
  parent: TimeCockpit.Data.DataModel.View.Cell
  isExternal: false
  name: Hyperlink
  nameWithType: Cell.Hyperlink
  fullName: TimeCockpit.Data.DataModel.View.Cell.Hyperlink
- uid: TimeCockpit.Data.DataModel.View.Cell.IsVisible
  commentId: P:TimeCockpit.Data.DataModel.View.Cell.IsVisible
  parent: TimeCockpit.Data.DataModel.View.Cell
  isExternal: false
  name: IsVisible
  nameWithType: Cell.IsVisible
  fullName: TimeCockpit.Data.DataModel.View.Cell.IsVisible
- uid: TimeCockpit.Data.DataModel.View.Cell.IsColumnVisible
  commentId: P:TimeCockpit.Data.DataModel.View.Cell.IsColumnVisible
  parent: TimeCockpit.Data.DataModel.View.Cell
  isExternal: false
  name: IsColumnVisible
  nameWithType: Cell.IsColumnVisible
  fullName: TimeCockpit.Data.DataModel.View.Cell.IsColumnVisible
- uid: TimeCockpit.Data.DataModel.View.Cell.IsEnabled
  commentId: P:TimeCockpit.Data.DataModel.View.Cell.IsEnabled
  parent: TimeCockpit.Data.DataModel.View.Cell
  isExternal: false
  name: IsEnabled
  nameWithType: Cell.IsEnabled
  fullName: TimeCockpit.Data.DataModel.View.Cell.IsEnabled
- uid: TimeCockpit.Data.DataModel.View.Cell.IsReadOnly
  commentId: P:TimeCockpit.Data.DataModel.View.Cell.IsReadOnly
  parent: TimeCockpit.Data.DataModel.View.Cell
  isExternal: false
  name: IsReadOnly
  nameWithType: Cell.IsReadOnly
  fullName: TimeCockpit.Data.DataModel.View.Cell.IsReadOnly
- uid: TimeCockpit.Data.DataModel.View.Cell.LabelPosition
  commentId: P:TimeCockpit.Data.DataModel.View.Cell.LabelPosition
  parent: TimeCockpit.Data.DataModel.View.Cell
  isExternal: false
  name: LabelPosition
  nameWithType: Cell.LabelPosition
  fullName: TimeCockpit.Data.DataModel.View.Cell.LabelPosition
- uid: TimeCockpit.Data.DataModel.View.Cell.AggregateFunction
  commentId: P:TimeCockpit.Data.DataModel.View.Cell.AggregateFunction
  parent: TimeCockpit.Data.DataModel.View.Cell
  isExternal: false
  name: AggregateFunction
  nameWithType: Cell.AggregateFunction
  fullName: TimeCockpit.Data.DataModel.View.Cell.AggregateFunction
- uid: TimeCockpit.Data.DataModel.View.Cell.DataType
  commentId: P:TimeCockpit.Data.DataModel.View.Cell.DataType
  parent: TimeCockpit.Data.DataModel.View.Cell
  isExternal: false
  name: DataType
  nameWithType: Cell.DataType
  fullName: TimeCockpit.Data.DataModel.View.Cell.DataType
- uid: TimeCockpit.Data.DataModel.View.Cell.GetPropertyInfos
  commentId: M:TimeCockpit.Data.DataModel.View.Cell.GetPropertyInfos
  parent: TimeCockpit.Data.DataModel.View.Cell
  isExternal: false
  name: GetPropertyInfos()
  nameWithType: Cell.GetPropertyInfos()
  fullName: TimeCockpit.Data.DataModel.View.Cell.GetPropertyInfos()
  spec.csharp:
  - uid: TimeCockpit.Data.DataModel.View.Cell.GetPropertyInfos
    name: GetPropertyInfos
    nameWithType: Cell.GetPropertyInfos
    fullName: TimeCockpit.Data.DataModel.View.Cell.GetPropertyInfos
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TimeCockpit.Data.DataModel.View.Cell.GetPropertyInfos
    name: GetPropertyInfos
    nameWithType: Cell.GetPropertyInfos
    fullName: TimeCockpit.Data.DataModel.View.Cell.GetPropertyInfos
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.DataModel.View.Cell.ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)
  commentId: M:TimeCockpit.Data.DataModel.View.Cell.ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)
  parent: TimeCockpit.Data.DataModel.View.Cell
  isExternal: true
  name: ReceiveWeakEvent(Type, Object, EventArgs)
  nameWithType: Cell.ReceiveWeakEvent(Type, Object, EventArgs)
  fullName: TimeCockpit.Data.DataModel.View.Cell.ReceiveWeakEvent(System.Type, System.Object, System.EventArgs)
  spec.csharp:
  - uid: TimeCockpit.Data.DataModel.View.Cell.ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)
    name: ReceiveWeakEvent
    nameWithType: Cell.ReceiveWeakEvent
    fullName: TimeCockpit.Data.DataModel.View.Cell.ReceiveWeakEvent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.EventArgs
    name: EventArgs
    nameWithType: EventArgs
    fullName: System.EventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TimeCockpit.Data.DataModel.View.Cell.ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)
    name: ReceiveWeakEvent
    nameWithType: Cell.ReceiveWeakEvent
    fullName: TimeCockpit.Data.DataModel.View.Cell.ReceiveWeakEvent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.EventArgs
    name: EventArgs
    nameWithType: EventArgs
    fullName: System.EventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.DataModel.NamedDynamicObject.PropertyChanged
  commentId: E:TimeCockpit.Data.DataModel.NamedDynamicObject.PropertyChanged
  parent: TimeCockpit.Data.DataModel.NamedDynamicObject
  isExternal: false
  name: PropertyChanged
  nameWithType: NamedDynamicObject.PropertyChanged
  fullName: TimeCockpit.Data.DataModel.NamedDynamicObject.PropertyChanged
- uid: TimeCockpit.Data.DataModel.NamedDynamicObject.Name
  commentId: P:TimeCockpit.Data.DataModel.NamedDynamicObject.Name
  parent: TimeCockpit.Data.DataModel.NamedDynamicObject
  isExternal: false
  name: Name
  nameWithType: NamedDynamicObject.Name
  fullName: TimeCockpit.Data.DataModel.NamedDynamicObject.Name
- uid: TimeCockpit.Data.DataModel.NamedDynamicObject.OnPropertyChanged(System.String)
  commentId: M:TimeCockpit.Data.DataModel.NamedDynamicObject.OnPropertyChanged(System.String)
  parent: TimeCockpit.Data.DataModel.NamedDynamicObject
  isExternal: true
  name: OnPropertyChanged(String)
  nameWithType: NamedDynamicObject.OnPropertyChanged(String)
  fullName: TimeCockpit.Data.DataModel.NamedDynamicObject.OnPropertyChanged(System.String)
  spec.csharp:
  - uid: TimeCockpit.Data.DataModel.NamedDynamicObject.OnPropertyChanged(System.String)
    name: OnPropertyChanged
    nameWithType: NamedDynamicObject.OnPropertyChanged
    fullName: TimeCockpit.Data.DataModel.NamedDynamicObject.OnPropertyChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TimeCockpit.Data.DataModel.NamedDynamicObject.OnPropertyChanged(System.String)
    name: OnPropertyChanged
    nameWithType: NamedDynamicObject.OnPropertyChanged
    fullName: TimeCockpit.Data.DataModel.NamedDynamicObject.OnPropertyChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.DynamicObject.GetMember(System.String)
  commentId: M:TimeCockpit.Data.DynamicObject.GetMember(System.String)
  parent: TimeCockpit.Data.DynamicObject
  isExternal: true
  name: GetMember(String)
  nameWithType: DynamicObject.GetMember(String)
  fullName: TimeCockpit.Data.DynamicObject.GetMember(System.String)
  spec.csharp:
  - uid: TimeCockpit.Data.DynamicObject.GetMember(System.String)
    name: GetMember
    nameWithType: DynamicObject.GetMember
    fullName: TimeCockpit.Data.DynamicObject.GetMember
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TimeCockpit.Data.DynamicObject.GetMember(System.String)
    name: GetMember
    nameWithType: DynamicObject.GetMember
    fullName: TimeCockpit.Data.DynamicObject.GetMember
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.DynamicObject.SetMember(System.String,System.Object)
  commentId: M:TimeCockpit.Data.DynamicObject.SetMember(System.String,System.Object)
  parent: TimeCockpit.Data.DynamicObject
  isExternal: true
  name: SetMember(String, Object)
  nameWithType: DynamicObject.SetMember(String, Object)
  fullName: TimeCockpit.Data.DynamicObject.SetMember(System.String, System.Object)
  spec.csharp:
  - uid: TimeCockpit.Data.DynamicObject.SetMember(System.String,System.Object)
    name: SetMember
    nameWithType: DynamicObject.SetMember
    fullName: TimeCockpit.Data.DynamicObject.SetMember
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TimeCockpit.Data.DynamicObject.SetMember(System.String,System.Object)
    name: SetMember
    nameWithType: DynamicObject.SetMember
    fullName: TimeCockpit.Data.DynamicObject.SetMember
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.DynamicObject.GetMetaObject(System.Linq.Expressions.Expression)
  commentId: M:TimeCockpit.Data.DynamicObject.GetMetaObject(System.Linq.Expressions.Expression)
  parent: TimeCockpit.Data.DynamicObject
  isExternal: true
  name: GetMetaObject(Expression)
  nameWithType: DynamicObject.GetMetaObject(Expression)
  fullName: TimeCockpit.Data.DynamicObject.GetMetaObject(System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: TimeCockpit.Data.DynamicObject.GetMetaObject(System.Linq.Expressions.Expression)
    name: GetMetaObject
    nameWithType: DynamicObject.GetMetaObject
    fullName: TimeCockpit.Data.DynamicObject.GetMetaObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TimeCockpit.Data.DynamicObject.GetMetaObject(System.Linq.Expressions.Expression)
    name: GetMetaObject
    nameWithType: DynamicObject.GetMetaObject
    fullName: TimeCockpit.Data.DynamicObject.GetMetaObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: TimeCockpit.Data
  commentId: N:TimeCockpit.Data
  isExternal: false
  name: TimeCockpit.Data
  nameWithType: TimeCockpit.Data
  fullName: TimeCockpit.Data
- uid: TimeCockpit.Data.DataModel
  commentId: N:TimeCockpit.Data.DataModel
  isExternal: false
  name: TimeCockpit.Data.DataModel
  nameWithType: TimeCockpit.Data.DataModel
  fullName: TimeCockpit.Data.DataModel
- uid: System.Dynamic
  commentId: N:System.Dynamic
  isExternal: false
  name: System.Dynamic
  nameWithType: System.Dynamic
  fullName: System.Dynamic
- uid: System.ComponentModel
  commentId: N:System.ComponentModel
  isExternal: false
  name: System.ComponentModel
  nameWithType: System.ComponentModel
  fullName: System.ComponentModel
- uid: TimeCockpit.Common
  commentId: N:TimeCockpit.Common
  isExternal: false
  name: TimeCockpit.Common
  nameWithType: TimeCockpit.Common
  fullName: TimeCockpit.Common
- uid: TimeCockpit.Data.DataModel.View.ManyToManyRelationCell.#ctor*
  commentId: Overload:TimeCockpit.Data.DataModel.View.ManyToManyRelationCell.#ctor
  isExternal: false
  name: ManyToManyRelationCell
  nameWithType: ManyToManyRelationCell.ManyToManyRelationCell
  fullName: TimeCockpit.Data.DataModel.View.ManyToManyRelationCell.ManyToManyRelationCell
- uid: TimeCockpit.Data.DataModel.View.ManyToManyRelationCell.List*
  commentId: Overload:TimeCockpit.Data.DataModel.View.ManyToManyRelationCell.List
  isExternal: false
  name: List
  nameWithType: ManyToManyRelationCell.List
  fullName: TimeCockpit.Data.DataModel.View.ManyToManyRelationCell.List
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: TimeCockpit.Data.DataModel.View.ManyToManyRelationCell.Condition*
  commentId: Overload:TimeCockpit.Data.DataModel.View.ManyToManyRelationCell.Condition
  isExternal: false
  name: Condition
  nameWithType: ManyToManyRelationCell.Condition
  fullName: TimeCockpit.Data.DataModel.View.ManyToManyRelationCell.Condition
- uid: TimeCockpit.Data.DataModel.View.ManyToManyRelationCell.BackReference*
  commentId: Overload:TimeCockpit.Data.DataModel.View.ManyToManyRelationCell.BackReference
  isExternal: false
  name: BackReference
  nameWithType: ManyToManyRelationCell.BackReference
  fullName: TimeCockpit.Data.DataModel.View.ManyToManyRelationCell.BackReference
- uid: TimeCockpit.Data.DataModel.View.ManyToManyRelationCell.Relation*
  commentId: Overload:TimeCockpit.Data.DataModel.View.ManyToManyRelationCell.Relation
  isExternal: false
  name: Relation
  nameWithType: ManyToManyRelationCell.Relation
  fullName: TimeCockpit.Data.DataModel.View.ManyToManyRelationCell.Relation
- uid: TimeCockpit.Data.DataModel.View.ManyToManyRelationCell.SelectedItemsDisplayExpression*
  commentId: Overload:TimeCockpit.Data.DataModel.View.ManyToManyRelationCell.SelectedItemsDisplayExpression
  isExternal: false
  name: SelectedItemsDisplayExpression
  nameWithType: ManyToManyRelationCell.SelectedItemsDisplayExpression
  fullName: TimeCockpit.Data.DataModel.View.ManyToManyRelationCell.SelectedItemsDisplayExpression
- uid: TimeCockpit.Data.DataModel.View.ManyToManyRelationCell.DisplayProperty*
  commentId: Overload:TimeCockpit.Data.DataModel.View.ManyToManyRelationCell.DisplayProperty
  isExternal: false
  name: DisplayProperty
  nameWithType: ManyToManyRelationCell.DisplayProperty
  fullName: TimeCockpit.Data.DataModel.View.ManyToManyRelationCell.DisplayProperty
- uid: TimeCockpit.Data.DataModel.View.ManyToManyRelationCell.AssignmentCondition*
  commentId: Overload:TimeCockpit.Data.DataModel.View.ManyToManyRelationCell.AssignmentCondition
  isExternal: false
  name: AssignmentCondition
  nameWithType: ManyToManyRelationCell.AssignmentCondition
  fullName: TimeCockpit.Data.DataModel.View.ManyToManyRelationCell.AssignmentCondition
- uid: TimeCockpit.Data.DataModel.View.ManyToManyRelationCell.GroupBy*
  commentId: Overload:TimeCockpit.Data.DataModel.View.ManyToManyRelationCell.GroupBy
  isExternal: false
  name: GroupBy
  nameWithType: ManyToManyRelationCell.GroupBy
  fullName: TimeCockpit.Data.DataModel.View.ManyToManyRelationCell.GroupBy
- uid: TimeCockpit.Data.DataModel.View.ManyToManyRelationCell.AssignmentGroupByExpression*
  commentId: Overload:TimeCockpit.Data.DataModel.View.ManyToManyRelationCell.AssignmentGroupByExpression
  isExternal: false
  name: AssignmentGroupByExpression
  nameWithType: ManyToManyRelationCell.AssignmentGroupByExpression
  fullName: TimeCockpit.Data.DataModel.View.ManyToManyRelationCell.AssignmentGroupByExpression
- uid: TimeCockpit.Data.DataModel.View.ManyToManyRelationCell.EmptyGroupHeader*
  commentId: Overload:TimeCockpit.Data.DataModel.View.ManyToManyRelationCell.EmptyGroupHeader
  isExternal: false
  name: EmptyGroupHeader
  nameWithType: ManyToManyRelationCell.EmptyGroupHeader
  fullName: TimeCockpit.Data.DataModel.View.ManyToManyRelationCell.EmptyGroupHeader
