### YamlMime:ManagedReference
items:
- uid: TimeCockpit.Data.DataModel.Actions.AssemblyBinding
  commentId: T:TimeCockpit.Data.DataModel.Actions.AssemblyBinding
  id: AssemblyBinding
  parent: TimeCockpit.Data.DataModel.Actions
  children:
  - TimeCockpit.Data.DataModel.Actions.AssemblyBinding.#ctor
  - TimeCockpit.Data.DataModel.Actions.AssemblyBinding.#ctor(System.String,System.String)
  - TimeCockpit.Data.DataModel.Actions.AssemblyBinding.ClassName
  - TimeCockpit.Data.DataModel.Actions.AssemblyBinding.Clone
  - TimeCockpit.Data.DataModel.Actions.AssemblyBinding.Execute(TimeCockpit.Data.DataModel.Actions.ExecutionContext)
  - TimeCockpit.Data.DataModel.Actions.AssemblyBinding.MethodName
  langs:
  - csharp
  - vb
  name: AssemblyBinding
  nameWithType: AssemblyBinding
  fullName: TimeCockpit.Data.DataModel.Actions.AssemblyBinding
  type: Class
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/Actions/AssemblyBinding.cs
    id: AssemblyBinding
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/Actions/AssemblyBinding.cs
    startLine: 20
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel.Actions
  summary: "\nRepresents a binding that establishes a relationship from a <xref href=\"TimeCockpit.Data.DataModel.Actions.ModelAction\" data-throw-if-not-resolved=\"false\"></xref>\nto executable code that is directly stored with the binding.\n"
  example: []
  syntax:
    content: >-
      [DataContract]

      [JsonObject(MemberSerialization.OptIn)]

      public class AssemblyBinding : ModelActionBinding, IDynamicMetaObjectProvider, INotifyPropertyChanged
    content.vb: >-
      <DataContract>

      <JsonObject(MemberSerialization.OptIn)>

      Public Class AssemblyBinding
          Inherits ModelActionBinding
          Implements IDynamicMetaObjectProvider, INotifyPropertyChanged
  inheritance:
  - System.Object
  - TimeCockpit.Data.DynamicObject
  - TimeCockpit.Data.DataModel.NamedDynamicObject
  - TimeCockpit.Data.DataModel.Actions.ModelActionBinding
  implements:
  - System.Dynamic.IDynamicMetaObjectProvider
  - System.ComponentModel.INotifyPropertyChanged
  inheritedMembers:
  - TimeCockpit.Data.DataModel.NamedDynamicObject.PropertyChanged
  - TimeCockpit.Data.DataModel.NamedDynamicObject.Name
  - TimeCockpit.Data.DataModel.NamedDynamicObject.OnPropertyChanged(System.String)
  - TimeCockpit.Data.DynamicObject.GetMember(System.String)
  - TimeCockpit.Data.DynamicObject.SetMember(System.String,System.Object)
  - TimeCockpit.Data.DynamicObject.GetMetaObject(System.Linq.Expressions.Expression)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
  - type: Newtonsoft.Json.JsonObjectAttribute
    ctor: Newtonsoft.Json.JsonObjectAttribute.#ctor(Newtonsoft.Json.MemberSerialization)
    arguments:
    - type: Newtonsoft.Json.MemberSerialization
      value: 1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TimeCockpit.Data.DataModel.Actions.AssemblyBinding.#ctor
  commentId: M:TimeCockpit.Data.DataModel.Actions.AssemblyBinding.#ctor
  id: '#ctor'
  parent: TimeCockpit.Data.DataModel.Actions.AssemblyBinding
  langs:
  - csharp
  - vb
  name: AssemblyBinding()
  nameWithType: AssemblyBinding.AssemblyBinding()
  fullName: TimeCockpit.Data.DataModel.Actions.AssemblyBinding.AssemblyBinding()
  type: Constructor
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/Actions/AssemblyBinding.cs
    id: .ctor
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/Actions/AssemblyBinding.cs
    startLine: 45
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel.Actions
  summary: "\nInitializes a new instance of the <xref href=\"TimeCockpit.Data.DataModel.Actions.AssemblyBinding\" data-throw-if-not-resolved=\"false\"></xref> class\n"
  example: []
  syntax:
    content: public AssemblyBinding()
    content.vb: Public Sub New
  overload: TimeCockpit.Data.DataModel.Actions.AssemblyBinding.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.DataModel.Actions.AssemblyBinding.#ctor(System.String,System.String)
  commentId: M:TimeCockpit.Data.DataModel.Actions.AssemblyBinding.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: TimeCockpit.Data.DataModel.Actions.AssemblyBinding
  langs:
  - csharp
  - vb
  name: AssemblyBinding(String, String)
  nameWithType: AssemblyBinding.AssemblyBinding(String, String)
  fullName: TimeCockpit.Data.DataModel.Actions.AssemblyBinding.AssemblyBinding(System.String, System.String)
  type: Constructor
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/Actions/AssemblyBinding.cs
    id: .ctor
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/Actions/AssemblyBinding.cs
    startLine: 54
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel.Actions
  summary: "\nInitializes a new instance of the <xref href=\"TimeCockpit.Data.DataModel.Actions.AssemblyBinding\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public AssemblyBinding(string className, string methodName)
    parameters:
    - id: className
      type: System.String
      description: The classname this binding binds to.
    - id: methodName
      type: System.String
      description: The name of the bound method.
    content.vb: Public Sub New(className As String, methodName As String)
  overload: TimeCockpit.Data.DataModel.Actions.AssemblyBinding.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.DataModel.Actions.AssemblyBinding.ClassName
  commentId: P:TimeCockpit.Data.DataModel.Actions.AssemblyBinding.ClassName
  id: ClassName
  parent: TimeCockpit.Data.DataModel.Actions.AssemblyBinding
  langs:
  - csharp
  - vb
  name: ClassName
  nameWithType: AssemblyBinding.ClassName
  fullName: TimeCockpit.Data.DataModel.Actions.AssemblyBinding.ClassName
  type: Property
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/Actions/AssemblyBinding.cs
    id: ClassName
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/Actions/AssemblyBinding.cs
    startLine: 65
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel.Actions
  summary: "\nGets or sets the name of the class that holds a method to execute.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public string ClassName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <DataMember>

      Public Property ClassName As String
  overload: TimeCockpit.Data.DataModel.Actions.AssemblyBinding.ClassName*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.DataModel.Actions.AssemblyBinding.MethodName
  commentId: P:TimeCockpit.Data.DataModel.Actions.AssemblyBinding.MethodName
  id: MethodName
  parent: TimeCockpit.Data.DataModel.Actions.AssemblyBinding
  langs:
  - csharp
  - vb
  name: MethodName
  nameWithType: AssemblyBinding.MethodName
  fullName: TimeCockpit.Data.DataModel.Actions.AssemblyBinding.MethodName
  type: Property
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/Actions/AssemblyBinding.cs
    id: MethodName
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/Actions/AssemblyBinding.cs
    startLine: 83
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel.Actions
  summary: "\nGets or sets the name of the method that is targeted by the binding.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public string MethodName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <DataMember>

      Public Property MethodName As String
  overload: TimeCockpit.Data.DataModel.Actions.AssemblyBinding.MethodName*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.DataModel.Actions.AssemblyBinding.Clone
  commentId: M:TimeCockpit.Data.DataModel.Actions.AssemblyBinding.Clone
  id: Clone
  parent: TimeCockpit.Data.DataModel.Actions.AssemblyBinding
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: AssemblyBinding.Clone()
  fullName: TimeCockpit.Data.DataModel.Actions.AssemblyBinding.Clone()
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/Actions/AssemblyBinding.cs
    id: Clone
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/Actions/AssemblyBinding.cs
    startLine: 106
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel.Actions
  summary: "\nCreates a deep copy of the assembly binding.\n"
  example: []
  syntax:
    content: public override ModelActionBinding Clone()
    return:
      type: TimeCockpit.Data.DataModel.Actions.ModelActionBinding
      description: Returns a new instance fo this class, representing a clone.
    content.vb: Public Overrides Function Clone As ModelActionBinding
  overridden: TimeCockpit.Data.DataModel.Actions.ModelActionBinding.Clone
  overload: TimeCockpit.Data.DataModel.Actions.AssemblyBinding.Clone*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: TimeCockpit.Data.DataModel.Actions.AssemblyBinding.Execute(TimeCockpit.Data.DataModel.Actions.ExecutionContext)
  commentId: M:TimeCockpit.Data.DataModel.Actions.AssemblyBinding.Execute(TimeCockpit.Data.DataModel.Actions.ExecutionContext)
  id: Execute(TimeCockpit.Data.DataModel.Actions.ExecutionContext)
  parent: TimeCockpit.Data.DataModel.Actions.AssemblyBinding
  langs:
  - csharp
  - vb
  name: Execute(ExecutionContext)
  nameWithType: AssemblyBinding.Execute(ExecutionContext)
  fullName: TimeCockpit.Data.DataModel.Actions.AssemblyBinding.Execute(TimeCockpit.Data.DataModel.Actions.ExecutionContext)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/Actions/AssemblyBinding.cs
    id: Execute
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/DataModel/Actions/AssemblyBinding.cs
    startLine: 116
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.DataModel.Actions
  summary: "\nCalls an executable piece of code that is associated with the current <xref href=\"TimeCockpit.Data.DataModel.Actions.AssemblyBinding\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: protected override void Execute(ExecutionContext context)
    parameters:
    - id: context
      type: TimeCockpit.Data.DataModel.Actions.ExecutionContext
      description: The <xref href="TimeCockpit.Data.DataModel.Actions.ExecutionContext" data-throw-if-not-resolved="false"></xref> in which to execute the source code of a <xref href="TimeCockpit.Data.DataModel.Actions.AssemblyBinding" data-throw-if-not-resolved="false"></xref>
    content.vb: Protected Overrides Sub Execute(context As ExecutionContext)
  overridden: TimeCockpit.Data.DataModel.Actions.ModelActionBinding.Execute(TimeCockpit.Data.DataModel.Actions.ExecutionContext)
  overload: TimeCockpit.Data.DataModel.Actions.AssemblyBinding.Execute*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: Thrown if the assembly or method that is to be executed could not be resolved.
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: TimeCockpit.Data.DataModel.Actions.ModelAction
  commentId: T:TimeCockpit.Data.DataModel.Actions.ModelAction
  parent: TimeCockpit.Data.DataModel.Actions
  isExternal: false
  name: ModelAction
  nameWithType: ModelAction
  fullName: TimeCockpit.Data.DataModel.Actions.ModelAction
- uid: TimeCockpit.Data.DataModel.Actions
  commentId: N:TimeCockpit.Data.DataModel.Actions
  isExternal: false
  name: TimeCockpit.Data.DataModel.Actions
  nameWithType: TimeCockpit.Data.DataModel.Actions
  fullName: TimeCockpit.Data.DataModel.Actions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: TimeCockpit.Data.DynamicObject
  commentId: T:TimeCockpit.Data.DynamicObject
  parent: TimeCockpit.Data
  isExternal: false
  name: DynamicObject
  nameWithType: DynamicObject
  fullName: TimeCockpit.Data.DynamicObject
- uid: TimeCockpit.Data.DataModel.NamedDynamicObject
  commentId: T:TimeCockpit.Data.DataModel.NamedDynamicObject
  parent: TimeCockpit.Data.DataModel
  isExternal: false
  name: NamedDynamicObject
  nameWithType: NamedDynamicObject
  fullName: TimeCockpit.Data.DataModel.NamedDynamicObject
- uid: TimeCockpit.Data.DataModel.Actions.ModelActionBinding
  commentId: T:TimeCockpit.Data.DataModel.Actions.ModelActionBinding
  parent: TimeCockpit.Data.DataModel.Actions
  isExternal: false
  name: ModelActionBinding
  nameWithType: ModelActionBinding
  fullName: TimeCockpit.Data.DataModel.Actions.ModelActionBinding
- uid: System.Dynamic.IDynamicMetaObjectProvider
  commentId: T:System.Dynamic.IDynamicMetaObjectProvider
  parent: System.Dynamic
  isExternal: true
  name: IDynamicMetaObjectProvider
  nameWithType: IDynamicMetaObjectProvider
  fullName: System.Dynamic.IDynamicMetaObjectProvider
- uid: System.ComponentModel.INotifyPropertyChanged
  commentId: T:System.ComponentModel.INotifyPropertyChanged
  parent: System.ComponentModel
  isExternal: true
  name: INotifyPropertyChanged
  nameWithType: INotifyPropertyChanged
  fullName: System.ComponentModel.INotifyPropertyChanged
- uid: TimeCockpit.Data.DataModel.NamedDynamicObject.PropertyChanged
  commentId: E:TimeCockpit.Data.DataModel.NamedDynamicObject.PropertyChanged
  parent: TimeCockpit.Data.DataModel.NamedDynamicObject
  isExternal: false
  name: PropertyChanged
  nameWithType: NamedDynamicObject.PropertyChanged
  fullName: TimeCockpit.Data.DataModel.NamedDynamicObject.PropertyChanged
- uid: TimeCockpit.Data.DataModel.NamedDynamicObject.Name
  commentId: P:TimeCockpit.Data.DataModel.NamedDynamicObject.Name
  parent: TimeCockpit.Data.DataModel.NamedDynamicObject
  isExternal: false
  name: Name
  nameWithType: NamedDynamicObject.Name
  fullName: TimeCockpit.Data.DataModel.NamedDynamicObject.Name
- uid: TimeCockpit.Data.DataModel.NamedDynamicObject.OnPropertyChanged(System.String)
  commentId: M:TimeCockpit.Data.DataModel.NamedDynamicObject.OnPropertyChanged(System.String)
  parent: TimeCockpit.Data.DataModel.NamedDynamicObject
  isExternal: true
  name: OnPropertyChanged(String)
  nameWithType: NamedDynamicObject.OnPropertyChanged(String)
  fullName: TimeCockpit.Data.DataModel.NamedDynamicObject.OnPropertyChanged(System.String)
  spec.csharp:
  - uid: TimeCockpit.Data.DataModel.NamedDynamicObject.OnPropertyChanged(System.String)
    name: OnPropertyChanged
    nameWithType: NamedDynamicObject.OnPropertyChanged
    fullName: TimeCockpit.Data.DataModel.NamedDynamicObject.OnPropertyChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TimeCockpit.Data.DataModel.NamedDynamicObject.OnPropertyChanged(System.String)
    name: OnPropertyChanged
    nameWithType: NamedDynamicObject.OnPropertyChanged
    fullName: TimeCockpit.Data.DataModel.NamedDynamicObject.OnPropertyChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.DynamicObject.GetMember(System.String)
  commentId: M:TimeCockpit.Data.DynamicObject.GetMember(System.String)
  parent: TimeCockpit.Data.DynamicObject
  isExternal: true
  name: GetMember(String)
  nameWithType: DynamicObject.GetMember(String)
  fullName: TimeCockpit.Data.DynamicObject.GetMember(System.String)
  spec.csharp:
  - uid: TimeCockpit.Data.DynamicObject.GetMember(System.String)
    name: GetMember
    nameWithType: DynamicObject.GetMember
    fullName: TimeCockpit.Data.DynamicObject.GetMember
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TimeCockpit.Data.DynamicObject.GetMember(System.String)
    name: GetMember
    nameWithType: DynamicObject.GetMember
    fullName: TimeCockpit.Data.DynamicObject.GetMember
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.DynamicObject.SetMember(System.String,System.Object)
  commentId: M:TimeCockpit.Data.DynamicObject.SetMember(System.String,System.Object)
  parent: TimeCockpit.Data.DynamicObject
  isExternal: true
  name: SetMember(String, Object)
  nameWithType: DynamicObject.SetMember(String, Object)
  fullName: TimeCockpit.Data.DynamicObject.SetMember(System.String, System.Object)
  spec.csharp:
  - uid: TimeCockpit.Data.DynamicObject.SetMember(System.String,System.Object)
    name: SetMember
    nameWithType: DynamicObject.SetMember
    fullName: TimeCockpit.Data.DynamicObject.SetMember
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TimeCockpit.Data.DynamicObject.SetMember(System.String,System.Object)
    name: SetMember
    nameWithType: DynamicObject.SetMember
    fullName: TimeCockpit.Data.DynamicObject.SetMember
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.DynamicObject.GetMetaObject(System.Linq.Expressions.Expression)
  commentId: M:TimeCockpit.Data.DynamicObject.GetMetaObject(System.Linq.Expressions.Expression)
  parent: TimeCockpit.Data.DynamicObject
  isExternal: true
  name: GetMetaObject(Expression)
  nameWithType: DynamicObject.GetMetaObject(Expression)
  fullName: TimeCockpit.Data.DynamicObject.GetMetaObject(System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: TimeCockpit.Data.DynamicObject.GetMetaObject(System.Linq.Expressions.Expression)
    name: GetMetaObject
    nameWithType: DynamicObject.GetMetaObject
    fullName: TimeCockpit.Data.DynamicObject.GetMetaObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TimeCockpit.Data.DynamicObject.GetMetaObject(System.Linq.Expressions.Expression)
    name: GetMetaObject
    nameWithType: DynamicObject.GetMetaObject
    fullName: TimeCockpit.Data.DynamicObject.GetMetaObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: TimeCockpit.Data
  commentId: N:TimeCockpit.Data
  isExternal: false
  name: TimeCockpit.Data
  nameWithType: TimeCockpit.Data
  fullName: TimeCockpit.Data
- uid: TimeCockpit.Data.DataModel
  commentId: N:TimeCockpit.Data.DataModel
  isExternal: false
  name: TimeCockpit.Data.DataModel
  nameWithType: TimeCockpit.Data.DataModel
  fullName: TimeCockpit.Data.DataModel
- uid: System.Dynamic
  commentId: N:System.Dynamic
  isExternal: false
  name: System.Dynamic
  nameWithType: System.Dynamic
  fullName: System.Dynamic
- uid: System.ComponentModel
  commentId: N:System.ComponentModel
  isExternal: false
  name: System.ComponentModel
  nameWithType: System.ComponentModel
  fullName: System.ComponentModel
- uid: TimeCockpit.Data.DataModel.Actions.AssemblyBinding
  commentId: T:TimeCockpit.Data.DataModel.Actions.AssemblyBinding
  parent: TimeCockpit.Data.DataModel.Actions
  isExternal: false
  name: AssemblyBinding
  nameWithType: AssemblyBinding
  fullName: TimeCockpit.Data.DataModel.Actions.AssemblyBinding
- uid: TimeCockpit.Data.DataModel.Actions.AssemblyBinding.#ctor*
  commentId: Overload:TimeCockpit.Data.DataModel.Actions.AssemblyBinding.#ctor
  isExternal: false
  name: AssemblyBinding
  nameWithType: AssemblyBinding.AssemblyBinding
  fullName: TimeCockpit.Data.DataModel.Actions.AssemblyBinding.AssemblyBinding
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: TimeCockpit.Data.DataModel.Actions.AssemblyBinding.ClassName*
  commentId: Overload:TimeCockpit.Data.DataModel.Actions.AssemblyBinding.ClassName
  isExternal: false
  name: ClassName
  nameWithType: AssemblyBinding.ClassName
  fullName: TimeCockpit.Data.DataModel.Actions.AssemblyBinding.ClassName
- uid: TimeCockpit.Data.DataModel.Actions.AssemblyBinding.MethodName*
  commentId: Overload:TimeCockpit.Data.DataModel.Actions.AssemblyBinding.MethodName
  isExternal: false
  name: MethodName
  nameWithType: AssemblyBinding.MethodName
  fullName: TimeCockpit.Data.DataModel.Actions.AssemblyBinding.MethodName
- uid: TimeCockpit.Data.DataModel.Actions.ModelActionBinding.Clone
  commentId: M:TimeCockpit.Data.DataModel.Actions.ModelActionBinding.Clone
  parent: TimeCockpit.Data.DataModel.Actions.ModelActionBinding
  isExternal: false
  name: Clone()
  nameWithType: ModelActionBinding.Clone()
  fullName: TimeCockpit.Data.DataModel.Actions.ModelActionBinding.Clone()
  spec.csharp:
  - uid: TimeCockpit.Data.DataModel.Actions.ModelActionBinding.Clone
    name: Clone
    nameWithType: ModelActionBinding.Clone
    fullName: TimeCockpit.Data.DataModel.Actions.ModelActionBinding.Clone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TimeCockpit.Data.DataModel.Actions.ModelActionBinding.Clone
    name: Clone
    nameWithType: ModelActionBinding.Clone
    fullName: TimeCockpit.Data.DataModel.Actions.ModelActionBinding.Clone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.DataModel.Actions.AssemblyBinding.Clone*
  commentId: Overload:TimeCockpit.Data.DataModel.Actions.AssemblyBinding.Clone
  isExternal: false
  name: Clone
  nameWithType: AssemblyBinding.Clone
  fullName: TimeCockpit.Data.DataModel.Actions.AssemblyBinding.Clone
- uid: TimeCockpit.Data.DataModel.Actions.ExecutionContext
  commentId: T:TimeCockpit.Data.DataModel.Actions.ExecutionContext
  parent: TimeCockpit.Data.DataModel.Actions
  isExternal: false
  name: ExecutionContext
  nameWithType: ExecutionContext
  fullName: TimeCockpit.Data.DataModel.Actions.ExecutionContext
- uid: TimeCockpit.Data.DataModel.Actions.ModelActionBinding.Execute(TimeCockpit.Data.DataModel.Actions.ExecutionContext)
  commentId: M:TimeCockpit.Data.DataModel.Actions.ModelActionBinding.Execute(TimeCockpit.Data.DataModel.Actions.ExecutionContext)
  parent: TimeCockpit.Data.DataModel.Actions.ModelActionBinding
  isExternal: false
  name: Execute(ExecutionContext)
  nameWithType: ModelActionBinding.Execute(ExecutionContext)
  fullName: TimeCockpit.Data.DataModel.Actions.ModelActionBinding.Execute(TimeCockpit.Data.DataModel.Actions.ExecutionContext)
  spec.csharp:
  - uid: TimeCockpit.Data.DataModel.Actions.ModelActionBinding.Execute(TimeCockpit.Data.DataModel.Actions.ExecutionContext)
    name: Execute
    nameWithType: ModelActionBinding.Execute
    fullName: TimeCockpit.Data.DataModel.Actions.ModelActionBinding.Execute
  - name: (
    nameWithType: (
    fullName: (
  - uid: TimeCockpit.Data.DataModel.Actions.ExecutionContext
    name: ExecutionContext
    nameWithType: ExecutionContext
    fullName: TimeCockpit.Data.DataModel.Actions.ExecutionContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TimeCockpit.Data.DataModel.Actions.ModelActionBinding.Execute(TimeCockpit.Data.DataModel.Actions.ExecutionContext)
    name: Execute
    nameWithType: ModelActionBinding.Execute
    fullName: TimeCockpit.Data.DataModel.Actions.ModelActionBinding.Execute
  - name: (
    nameWithType: (
    fullName: (
  - uid: TimeCockpit.Data.DataModel.Actions.ExecutionContext
    name: ExecutionContext
    nameWithType: ExecutionContext
    fullName: TimeCockpit.Data.DataModel.Actions.ExecutionContext
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.DataModel.Actions.AssemblyBinding.Execute*
  commentId: Overload:TimeCockpit.Data.DataModel.Actions.AssemblyBinding.Execute
  isExternal: false
  name: Execute
  nameWithType: AssemblyBinding.Execute
  fullName: TimeCockpit.Data.DataModel.Actions.AssemblyBinding.Execute
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
  parent: System
  isExternal: true
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
