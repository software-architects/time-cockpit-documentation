### YamlMime:ManagedReference
items:
- uid: TimeCockpit.Data.QueryLanguage.Syntax.HasChangedFunction
  commentId: T:TimeCockpit.Data.QueryLanguage.Syntax.HasChangedFunction
  id: HasChangedFunction
  parent: TimeCockpit.Data.QueryLanguage.Syntax
  children:
  - TimeCockpit.Data.QueryLanguage.Syntax.HasChangedFunction.#ctor(System.String,TimeCockpit.Data.QueryLanguage.Syntax.Expression,TimeCockpit.Data.QueryLanguage.Syntax.Expression,TimeCockpit.Data.QueryLanguage.Syntax.Expression)
  - TimeCockpit.Data.QueryLanguage.Syntax.HasChangedFunction.Accept(TimeCockpit.Data.QueryLanguage.Syntax.Visitor)
  - TimeCockpit.Data.QueryLanguage.Syntax.HasChangedFunction.Alias
  - TimeCockpit.Data.QueryLanguage.Syntax.HasChangedFunction.CurrentVersion
  - TimeCockpit.Data.QueryLanguage.Syntax.HasChangedFunction.LastSentAnchor
  - TimeCockpit.Data.QueryLanguage.Syntax.HasChangedFunction.ReplicaId
  langs:
  - csharp
  - vb
  name: HasChangedFunction
  nameWithType: HasChangedFunction
  fullName: TimeCockpit.Data.QueryLanguage.Syntax.HasChangedFunction
  type: Class
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/QueryLanguage/Syntax/HasChangedFunction.cs
    id: HasChangedFunction
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/QueryLanguage/Syntax/HasChangedFunction.cs
    startLine: 16
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.QueryLanguage.Syntax
  summary: "\nspecial AST node HasChanged language feature.\n"
  example: []
  syntax:
    content: 'public class HasChangedFunction : Expression'
    content.vb: >-
      Public Class HasChangedFunction
          Inherits Expression
  inheritance:
  - System.Object
  - TimeCockpit.Data.QueryLanguage.Syntax.Node
  - TimeCockpit.Data.QueryLanguage.Syntax.Expression
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TimeCockpit.Data.QueryLanguage.Syntax.HasChangedFunction.#ctor(System.String,TimeCockpit.Data.QueryLanguage.Syntax.Expression,TimeCockpit.Data.QueryLanguage.Syntax.Expression,TimeCockpit.Data.QueryLanguage.Syntax.Expression)
  commentId: M:TimeCockpit.Data.QueryLanguage.Syntax.HasChangedFunction.#ctor(System.String,TimeCockpit.Data.QueryLanguage.Syntax.Expression,TimeCockpit.Data.QueryLanguage.Syntax.Expression,TimeCockpit.Data.QueryLanguage.Syntax.Expression)
  id: '#ctor(System.String,TimeCockpit.Data.QueryLanguage.Syntax.Expression,TimeCockpit.Data.QueryLanguage.Syntax.Expression,TimeCockpit.Data.QueryLanguage.Syntax.Expression)'
  parent: TimeCockpit.Data.QueryLanguage.Syntax.HasChangedFunction
  langs:
  - csharp
  - vb
  name: HasChangedFunction(String, Expression, Expression, Expression)
  nameWithType: HasChangedFunction.HasChangedFunction(String, Expression, Expression, Expression)
  fullName: TimeCockpit.Data.QueryLanguage.Syntax.HasChangedFunction.HasChangedFunction(System.String, TimeCockpit.Data.QueryLanguage.Syntax.Expression, TimeCockpit.Data.QueryLanguage.Syntax.Expression, TimeCockpit.Data.QueryLanguage.Syntax.Expression)
  type: Constructor
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/QueryLanguage/Syntax/HasChangedFunction.cs
    id: .ctor
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/QueryLanguage/Syntax/HasChangedFunction.cs
    startLine: 25
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.QueryLanguage.Syntax
  summary: "\nInitializes a new instance of the <xref href=\"TimeCockpit.Data.QueryLanguage.Syntax.HasChangedFunction\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public HasChangedFunction(string alias, Expression lastSentAnchor, Expression currentVersion, Expression replicaId)
    parameters:
    - id: alias
      type: System.String
      description: The alias to check.
    - id: lastSentAnchor
      type: TimeCockpit.Data.QueryLanguage.Syntax.Expression
      description: The last sent anchor expression.
    - id: currentVersion
      type: TimeCockpit.Data.QueryLanguage.Syntax.Expression
      description: The current version expresison.
    - id: replicaId
      type: TimeCockpit.Data.QueryLanguage.Syntax.Expression
      description: The replicaId expression.
    content.vb: Public Sub New(alias As String, lastSentAnchor As Expression, currentVersion As Expression, replicaId As Expression)
  overload: TimeCockpit.Data.QueryLanguage.Syntax.HasChangedFunction.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.QueryLanguage.Syntax.HasChangedFunction.Alias
  commentId: P:TimeCockpit.Data.QueryLanguage.Syntax.HasChangedFunction.Alias
  id: Alias
  parent: TimeCockpit.Data.QueryLanguage.Syntax.HasChangedFunction
  langs:
  - csharp
  - vb
  name: Alias
  nameWithType: HasChangedFunction.Alias
  fullName: TimeCockpit.Data.QueryLanguage.Syntax.HasChangedFunction.Alias
  type: Property
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/QueryLanguage/Syntax/HasChangedFunction.cs
    id: Alias
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/QueryLanguage/Syntax/HasChangedFunction.cs
    startLine: 36
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.QueryLanguage.Syntax
  summary: "\nGets the alias.\n"
  example: []
  syntax:
    content: public string Alias { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Alias As String
  overload: TimeCockpit.Data.QueryLanguage.Syntax.HasChangedFunction.Alias*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TimeCockpit.Data.QueryLanguage.Syntax.HasChangedFunction.LastSentAnchor
  commentId: P:TimeCockpit.Data.QueryLanguage.Syntax.HasChangedFunction.LastSentAnchor
  id: LastSentAnchor
  parent: TimeCockpit.Data.QueryLanguage.Syntax.HasChangedFunction
  langs:
  - csharp
  - vb
  name: LastSentAnchor
  nameWithType: HasChangedFunction.LastSentAnchor
  fullName: TimeCockpit.Data.QueryLanguage.Syntax.HasChangedFunction.LastSentAnchor
  type: Property
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/QueryLanguage/Syntax/HasChangedFunction.cs
    id: LastSentAnchor
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/QueryLanguage/Syntax/HasChangedFunction.cs
    startLine: 41
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.QueryLanguage.Syntax
  summary: "\nGets the expression producing the lastSentAnchor value.\n"
  example: []
  syntax:
    content: public Expression LastSentAnchor { get; }
    parameters: []
    return:
      type: TimeCockpit.Data.QueryLanguage.Syntax.Expression
    content.vb: Public ReadOnly Property LastSentAnchor As Expression
  overload: TimeCockpit.Data.QueryLanguage.Syntax.HasChangedFunction.LastSentAnchor*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TimeCockpit.Data.QueryLanguage.Syntax.HasChangedFunction.CurrentVersion
  commentId: P:TimeCockpit.Data.QueryLanguage.Syntax.HasChangedFunction.CurrentVersion
  id: CurrentVersion
  parent: TimeCockpit.Data.QueryLanguage.Syntax.HasChangedFunction
  langs:
  - csharp
  - vb
  name: CurrentVersion
  nameWithType: HasChangedFunction.CurrentVersion
  fullName: TimeCockpit.Data.QueryLanguage.Syntax.HasChangedFunction.CurrentVersion
  type: Property
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/QueryLanguage/Syntax/HasChangedFunction.cs
    id: CurrentVersion
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/QueryLanguage/Syntax/HasChangedFunction.cs
    startLine: 46
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.QueryLanguage.Syntax
  summary: "\nGets the expression producing the CurrentVersion value.\n"
  example: []
  syntax:
    content: public Expression CurrentVersion { get; }
    parameters: []
    return:
      type: TimeCockpit.Data.QueryLanguage.Syntax.Expression
    content.vb: Public ReadOnly Property CurrentVersion As Expression
  overload: TimeCockpit.Data.QueryLanguage.Syntax.HasChangedFunction.CurrentVersion*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TimeCockpit.Data.QueryLanguage.Syntax.HasChangedFunction.ReplicaId
  commentId: P:TimeCockpit.Data.QueryLanguage.Syntax.HasChangedFunction.ReplicaId
  id: ReplicaId
  parent: TimeCockpit.Data.QueryLanguage.Syntax.HasChangedFunction
  langs:
  - csharp
  - vb
  name: ReplicaId
  nameWithType: HasChangedFunction.ReplicaId
  fullName: TimeCockpit.Data.QueryLanguage.Syntax.HasChangedFunction.ReplicaId
  type: Property
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/QueryLanguage/Syntax/HasChangedFunction.cs
    id: ReplicaId
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/QueryLanguage/Syntax/HasChangedFunction.cs
    startLine: 51
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.QueryLanguage.Syntax
  summary: "\nGets the expression producing the replica id.\n"
  example: []
  syntax:
    content: public Expression ReplicaId { get; }
    parameters: []
    return:
      type: TimeCockpit.Data.QueryLanguage.Syntax.Expression
    content.vb: Public ReadOnly Property ReplicaId As Expression
  overload: TimeCockpit.Data.QueryLanguage.Syntax.HasChangedFunction.ReplicaId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TimeCockpit.Data.QueryLanguage.Syntax.HasChangedFunction.Accept(TimeCockpit.Data.QueryLanguage.Syntax.Visitor)
  commentId: M:TimeCockpit.Data.QueryLanguage.Syntax.HasChangedFunction.Accept(TimeCockpit.Data.QueryLanguage.Syntax.Visitor)
  id: Accept(TimeCockpit.Data.QueryLanguage.Syntax.Visitor)
  parent: TimeCockpit.Data.QueryLanguage.Syntax.HasChangedFunction
  langs:
  - csharp
  - vb
  name: Accept(Visitor)
  nameWithType: HasChangedFunction.Accept(Visitor)
  fullName: TimeCockpit.Data.QueryLanguage.Syntax.HasChangedFunction.Accept(TimeCockpit.Data.QueryLanguage.Syntax.Visitor)
  type: Method
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/QueryLanguage/Syntax/HasChangedFunction.cs
    id: Accept
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/QueryLanguage/Syntax/HasChangedFunction.cs
    startLine: 56
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.QueryLanguage.Syntax
  summary: "\ndispatches a visitor to the node.\n"
  example: []
  syntax:
    content: public override Node Accept(Visitor visitor)
    parameters:
    - id: visitor
      type: TimeCockpit.Data.QueryLanguage.Syntax.Visitor
      description: the visitor to dispatch.
    return:
      type: TimeCockpit.Data.QueryLanguage.Syntax.Node
      description: The modified node if it or any sub node was modified; otherwise, returns the original.
    content.vb: Public Overrides Function Accept(visitor As Visitor) As Node
  overridden: TimeCockpit.Data.QueryLanguage.Syntax.Node.Accept(TimeCockpit.Data.QueryLanguage.Syntax.Visitor)
  overload: TimeCockpit.Data.QueryLanguage.Syntax.HasChangedFunction.Accept*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: TimeCockpit.Data.QueryLanguage.Syntax
  commentId: N:TimeCockpit.Data.QueryLanguage.Syntax
  isExternal: false
  name: TimeCockpit.Data.QueryLanguage.Syntax
  nameWithType: TimeCockpit.Data.QueryLanguage.Syntax
  fullName: TimeCockpit.Data.QueryLanguage.Syntax
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: TimeCockpit.Data.QueryLanguage.Syntax.Node
  commentId: T:TimeCockpit.Data.QueryLanguage.Syntax.Node
  parent: TimeCockpit.Data.QueryLanguage.Syntax
  isExternal: false
  name: Node
  nameWithType: Node
  fullName: TimeCockpit.Data.QueryLanguage.Syntax.Node
- uid: TimeCockpit.Data.QueryLanguage.Syntax.Expression
  commentId: T:TimeCockpit.Data.QueryLanguage.Syntax.Expression
  parent: TimeCockpit.Data.QueryLanguage.Syntax
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: TimeCockpit.Data.QueryLanguage.Syntax.Expression
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: TimeCockpit.Data.QueryLanguage.Syntax.HasChangedFunction
  commentId: T:TimeCockpit.Data.QueryLanguage.Syntax.HasChangedFunction
  parent: TimeCockpit.Data.QueryLanguage.Syntax
  isExternal: false
  name: HasChangedFunction
  nameWithType: HasChangedFunction
  fullName: TimeCockpit.Data.QueryLanguage.Syntax.HasChangedFunction
- uid: TimeCockpit.Data.QueryLanguage.Syntax.HasChangedFunction.#ctor*
  commentId: Overload:TimeCockpit.Data.QueryLanguage.Syntax.HasChangedFunction.#ctor
  isExternal: false
  name: HasChangedFunction
  nameWithType: HasChangedFunction.HasChangedFunction
  fullName: TimeCockpit.Data.QueryLanguage.Syntax.HasChangedFunction.HasChangedFunction
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: TimeCockpit.Data.QueryLanguage.Syntax.HasChangedFunction.Alias*
  commentId: Overload:TimeCockpit.Data.QueryLanguage.Syntax.HasChangedFunction.Alias
  isExternal: false
  name: Alias
  nameWithType: HasChangedFunction.Alias
  fullName: TimeCockpit.Data.QueryLanguage.Syntax.HasChangedFunction.Alias
- uid: TimeCockpit.Data.QueryLanguage.Syntax.HasChangedFunction.LastSentAnchor*
  commentId: Overload:TimeCockpit.Data.QueryLanguage.Syntax.HasChangedFunction.LastSentAnchor
  isExternal: false
  name: LastSentAnchor
  nameWithType: HasChangedFunction.LastSentAnchor
  fullName: TimeCockpit.Data.QueryLanguage.Syntax.HasChangedFunction.LastSentAnchor
- uid: TimeCockpit.Data.QueryLanguage.Syntax.HasChangedFunction.CurrentVersion*
  commentId: Overload:TimeCockpit.Data.QueryLanguage.Syntax.HasChangedFunction.CurrentVersion
  isExternal: false
  name: CurrentVersion
  nameWithType: HasChangedFunction.CurrentVersion
  fullName: TimeCockpit.Data.QueryLanguage.Syntax.HasChangedFunction.CurrentVersion
- uid: TimeCockpit.Data.QueryLanguage.Syntax.HasChangedFunction.ReplicaId*
  commentId: Overload:TimeCockpit.Data.QueryLanguage.Syntax.HasChangedFunction.ReplicaId
  isExternal: false
  name: ReplicaId
  nameWithType: HasChangedFunction.ReplicaId
  fullName: TimeCockpit.Data.QueryLanguage.Syntax.HasChangedFunction.ReplicaId
- uid: TimeCockpit.Data.QueryLanguage.Syntax.Node.Accept(TimeCockpit.Data.QueryLanguage.Syntax.Visitor)
  commentId: M:TimeCockpit.Data.QueryLanguage.Syntax.Node.Accept(TimeCockpit.Data.QueryLanguage.Syntax.Visitor)
  parent: TimeCockpit.Data.QueryLanguage.Syntax.Node
  isExternal: false
  name: Accept(Visitor)
  nameWithType: Node.Accept(Visitor)
  fullName: TimeCockpit.Data.QueryLanguage.Syntax.Node.Accept(TimeCockpit.Data.QueryLanguage.Syntax.Visitor)
  spec.csharp:
  - uid: TimeCockpit.Data.QueryLanguage.Syntax.Node.Accept(TimeCockpit.Data.QueryLanguage.Syntax.Visitor)
    name: Accept
    nameWithType: Node.Accept
    fullName: TimeCockpit.Data.QueryLanguage.Syntax.Node.Accept
  - name: (
    nameWithType: (
    fullName: (
  - uid: TimeCockpit.Data.QueryLanguage.Syntax.Visitor
    name: Visitor
    nameWithType: Visitor
    fullName: TimeCockpit.Data.QueryLanguage.Syntax.Visitor
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TimeCockpit.Data.QueryLanguage.Syntax.Node.Accept(TimeCockpit.Data.QueryLanguage.Syntax.Visitor)
    name: Accept
    nameWithType: Node.Accept
    fullName: TimeCockpit.Data.QueryLanguage.Syntax.Node.Accept
  - name: (
    nameWithType: (
    fullName: (
  - uid: TimeCockpit.Data.QueryLanguage.Syntax.Visitor
    name: Visitor
    nameWithType: Visitor
    fullName: TimeCockpit.Data.QueryLanguage.Syntax.Visitor
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.QueryLanguage.Syntax.HasChangedFunction.Accept*
  commentId: Overload:TimeCockpit.Data.QueryLanguage.Syntax.HasChangedFunction.Accept
  isExternal: false
  name: Accept
  nameWithType: HasChangedFunction.Accept
  fullName: TimeCockpit.Data.QueryLanguage.Syntax.HasChangedFunction.Accept
- uid: TimeCockpit.Data.QueryLanguage.Syntax.Visitor
  commentId: T:TimeCockpit.Data.QueryLanguage.Syntax.Visitor
  parent: TimeCockpit.Data.QueryLanguage.Syntax
  isExternal: false
  name: Visitor
  nameWithType: Visitor
  fullName: TimeCockpit.Data.QueryLanguage.Syntax.Visitor
