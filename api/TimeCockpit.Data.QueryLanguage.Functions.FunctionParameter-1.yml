### YamlMime:ManagedReference
items:
- uid: TimeCockpit.Data.QueryLanguage.Functions.FunctionParameter`1
  commentId: T:TimeCockpit.Data.QueryLanguage.Functions.FunctionParameter`1
  id: FunctionParameter`1
  parent: TimeCockpit.Data.QueryLanguage.Functions
  children:
  - TimeCockpit.Data.QueryLanguage.Functions.FunctionParameter`1.#ctor
  - TimeCockpit.Data.QueryLanguage.Functions.FunctionParameter`1.#ctor(`0)
  - TimeCockpit.Data.QueryLanguage.Functions.FunctionParameter`1.HasValue
  - TimeCockpit.Data.QueryLanguage.Functions.FunctionParameter`1.Value
  langs:
  - csharp
  - vb
  name: FunctionParameter<T>
  nameWithType: FunctionParameter<T>
  fullName: TimeCockpit.Data.QueryLanguage.Functions.FunctionParameter<T>
  type: Class
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.QueryLanguage.Functions
  summary: "\nRepresents a class that encapsulates parameters that have been passed to a TCQL function.\nThe class provides methods to query if the function parameter has a value or not.\n"
  syntax:
    content: public class FunctionParameter<T>
    typeParameters:
    - id: T
      description: The underlying type of the parameter.
    content.vb: Public Class FunctionParameter(Of T)
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: FunctionParameter(Of T)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: TimeCockpit.Data.QueryLanguage.Functions.FunctionParameter(Of T)
  name.vb: FunctionParameter(Of T)
- uid: TimeCockpit.Data.QueryLanguage.Functions.FunctionParameter`1.#ctor
  commentId: M:TimeCockpit.Data.QueryLanguage.Functions.FunctionParameter`1.#ctor
  id: '#ctor'
  parent: TimeCockpit.Data.QueryLanguage.Functions.FunctionParameter`1
  langs:
  - csharp
  - vb
  name: FunctionParameter()
  nameWithType: FunctionParameter<T>.FunctionParameter()
  fullName: TimeCockpit.Data.QueryLanguage.Functions.FunctionParameter<T>.FunctionParameter()
  type: Constructor
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.QueryLanguage.Functions
  summary: "\nInitializes a new instance of the <xref href=\"TimeCockpit.Data.QueryLanguage.Functions.FunctionParameter%601\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  syntax:
    content: public FunctionParameter()
    content.vb: Public Sub New
  overload: TimeCockpit.Data.QueryLanguage.Functions.FunctionParameter`1.#ctor*
  nameWithType.vb: FunctionParameter(Of T).FunctionParameter()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TimeCockpit.Data.QueryLanguage.Functions.FunctionParameter(Of T).FunctionParameter()
- uid: TimeCockpit.Data.QueryLanguage.Functions.FunctionParameter`1.#ctor(`0)
  commentId: M:TimeCockpit.Data.QueryLanguage.Functions.FunctionParameter`1.#ctor(`0)
  id: '#ctor(`0)'
  parent: TimeCockpit.Data.QueryLanguage.Functions.FunctionParameter`1
  langs:
  - csharp
  - vb
  name: FunctionParameter(T)
  nameWithType: FunctionParameter<T>.FunctionParameter(T)
  fullName: TimeCockpit.Data.QueryLanguage.Functions.FunctionParameter<T>.FunctionParameter(T)
  type: Constructor
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.QueryLanguage.Functions
  summary: "\nInitializes a new instance of the <xref href=\"TimeCockpit.Data.QueryLanguage.Functions.FunctionParameter%601\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  syntax:
    content: public FunctionParameter(T value)
    parameters:
    - id: value
      type: '{T}'
      description: The param.
    content.vb: Public Sub New(value As T)
  overload: TimeCockpit.Data.QueryLanguage.Functions.FunctionParameter`1.#ctor*
  nameWithType.vb: FunctionParameter(Of T).FunctionParameter(T)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TimeCockpit.Data.QueryLanguage.Functions.FunctionParameter(Of T).FunctionParameter(T)
- uid: TimeCockpit.Data.QueryLanguage.Functions.FunctionParameter`1.HasValue
  commentId: P:TimeCockpit.Data.QueryLanguage.Functions.FunctionParameter`1.HasValue
  id: HasValue
  parent: TimeCockpit.Data.QueryLanguage.Functions.FunctionParameter`1
  langs:
  - csharp
  - vb
  name: HasValue
  nameWithType: FunctionParameter<T>.HasValue
  fullName: TimeCockpit.Data.QueryLanguage.Functions.FunctionParameter<T>.HasValue
  type: Property
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.QueryLanguage.Functions
  summary: "\nGets a value indicating whether this instance has value.\n"
  syntax:
    content: public bool HasValue { get; }
    parameters: []
    return:
      type: System.Boolean
      description: "\n<code>true</code> if this instance has value; otherwise, <code>false</code>.\n"
    content.vb: Public ReadOnly Property HasValue As Boolean
  overload: TimeCockpit.Data.QueryLanguage.Functions.FunctionParameter`1.HasValue*
  nameWithType.vb: FunctionParameter(Of T).HasValue
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: TimeCockpit.Data.QueryLanguage.Functions.FunctionParameter(Of T).HasValue
- uid: TimeCockpit.Data.QueryLanguage.Functions.FunctionParameter`1.Value
  commentId: P:TimeCockpit.Data.QueryLanguage.Functions.FunctionParameter`1.Value
  id: Value
  parent: TimeCockpit.Data.QueryLanguage.Functions.FunctionParameter`1
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: FunctionParameter<T>.Value
  fullName: TimeCockpit.Data.QueryLanguage.Functions.FunctionParameter<T>.Value
  type: Property
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.QueryLanguage.Functions
  summary: "\nGets or sets the value of the current instance of <xref href=\"TimeCockpit.Data.QueryLanguage.Functions.FunctionParameter%601\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public T Value { get; set; }
    parameters: []
    return:
      type: '{T}'
    content.vb: Public Property Value As T
  overload: TimeCockpit.Data.QueryLanguage.Functions.FunctionParameter`1.Value*
  nameWithType.vb: FunctionParameter(Of T).Value
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: TimeCockpit.Data.QueryLanguage.Functions.FunctionParameter(Of T).Value
references:
- uid: TimeCockpit.Data.QueryLanguage.Functions
  commentId: N:TimeCockpit.Data.QueryLanguage.Functions
  isExternal: true
  name: TimeCockpit.Data.QueryLanguage.Functions
  nameWithType: TimeCockpit.Data.QueryLanguage.Functions
  fullName: TimeCockpit.Data.QueryLanguage.Functions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TimeCockpit.Data.QueryLanguage.Functions.FunctionParameter`1.#ctor*
  commentId: Overload:TimeCockpit.Data.QueryLanguage.Functions.FunctionParameter`1.#ctor
  isExternal: true
  name: FunctionParameter
  nameWithType: FunctionParameter<T>.FunctionParameter
  fullName: TimeCockpit.Data.QueryLanguage.Functions.FunctionParameter<T>.FunctionParameter
  nameWithType.vb: FunctionParameter(Of T).FunctionParameter
  fullName.vb: TimeCockpit.Data.QueryLanguage.Functions.FunctionParameter(Of T).FunctionParameter
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: TimeCockpit.Data.QueryLanguage.Functions.FunctionParameter`1.HasValue*
  commentId: Overload:TimeCockpit.Data.QueryLanguage.Functions.FunctionParameter`1.HasValue
  isExternal: true
  name: HasValue
  nameWithType: FunctionParameter<T>.HasValue
  fullName: TimeCockpit.Data.QueryLanguage.Functions.FunctionParameter<T>.HasValue
  nameWithType.vb: FunctionParameter(Of T).HasValue
  fullName.vb: TimeCockpit.Data.QueryLanguage.Functions.FunctionParameter(Of T).HasValue
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: TimeCockpit.Data.QueryLanguage.Functions.FunctionParameter`1.Value*
  commentId: Overload:TimeCockpit.Data.QueryLanguage.Functions.FunctionParameter`1.Value
  isExternal: true
  name: Value
  nameWithType: FunctionParameter<T>.Value
  fullName: TimeCockpit.Data.QueryLanguage.Functions.FunctionParameter<T>.Value
  nameWithType.vb: FunctionParameter(Of T).Value
  fullName.vb: TimeCockpit.Data.QueryLanguage.Functions.FunctionParameter(Of T).Value
