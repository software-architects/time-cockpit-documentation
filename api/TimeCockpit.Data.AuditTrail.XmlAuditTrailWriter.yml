### YamlMime:ManagedReference
items:
- uid: TimeCockpit.Data.AuditTrail.XmlAuditTrailWriter
  commentId: T:TimeCockpit.Data.AuditTrail.XmlAuditTrailWriter
  id: XmlAuditTrailWriter
  parent: TimeCockpit.Data.AuditTrail
  children:
  - TimeCockpit.Data.AuditTrail.XmlAuditTrailWriter.#ctor
  - TimeCockpit.Data.AuditTrail.XmlAuditTrailWriter.WriteAuditTrail(TimeCockpit.Data.EntityObject,TimeCockpit.Data.EntityObject,System.Xml.XmlWriter,System.Collections.Generic.IEnumerable{System.String}@,TimeCockpit.Data.DatabaseOperation)
  langs:
  - csharp
  - vb
  name: XmlAuditTrailWriter
  nameWithType: XmlAuditTrailWriter
  fullName: TimeCockpit.Data.AuditTrail.XmlAuditTrailWriter
  type: Class
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.AuditTrail
  summary: "\nRepresents an class that can write an audit trail entry for two given entity objects.\n"
  syntax:
    content: public class XmlAuditTrailWriter
    content.vb: Public Class XmlAuditTrailWriter
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TimeCockpit.Data.AuditTrail.XmlAuditTrailWriter.WriteAuditTrail(TimeCockpit.Data.EntityObject,TimeCockpit.Data.EntityObject,System.Xml.XmlWriter,System.Collections.Generic.IEnumerable{System.String}@,TimeCockpit.Data.DatabaseOperation)
  commentId: M:TimeCockpit.Data.AuditTrail.XmlAuditTrailWriter.WriteAuditTrail(TimeCockpit.Data.EntityObject,TimeCockpit.Data.EntityObject,System.Xml.XmlWriter,System.Collections.Generic.IEnumerable{System.String}@,TimeCockpit.Data.DatabaseOperation)
  id: WriteAuditTrail(TimeCockpit.Data.EntityObject,TimeCockpit.Data.EntityObject,System.Xml.XmlWriter,System.Collections.Generic.IEnumerable{System.String}@,TimeCockpit.Data.DatabaseOperation)
  parent: TimeCockpit.Data.AuditTrail.XmlAuditTrailWriter
  langs:
  - csharp
  - vb
  name: WriteAuditTrail(EntityObject, EntityObject, XmlWriter, out IEnumerable<String>, DatabaseOperation)
  nameWithType: XmlAuditTrailWriter.WriteAuditTrail(EntityObject, EntityObject, XmlWriter, out IEnumerable<String>, DatabaseOperation)
  fullName: TimeCockpit.Data.AuditTrail.XmlAuditTrailWriter.WriteAuditTrail(TimeCockpit.Data.EntityObject, TimeCockpit.Data.EntityObject, System.Xml.XmlWriter, out System.Collections.Generic.IEnumerable<System.String>, TimeCockpit.Data.DatabaseOperation)
  type: Method
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.AuditTrail
  summary: "\nTakes two instance of an <xref href=\"TimeCockpit.Data.EntityObject\" data-throw-if-not-resolved=\"false\"></xref>  (old and new) and writes an entry for every differing value.\n"
  syntax:
    content: public static void WriteAuditTrail(EntityObject oldEntityObject, EntityObject newEntityObject, XmlWriter xmlWriter, out IEnumerable<string> changedMemberNames, DatabaseOperation operationType = DatabaseOperation.Update)
    parameters:
    - id: oldEntityObject
      type: TimeCockpit.Data.EntityObject
      description: The old <xref href="TimeCockpit.Data.EntityObject" data-throw-if-not-resolved="false"></xref>.
    - id: newEntityObject
      type: TimeCockpit.Data.EntityObject
      description: The new <xref href="TimeCockpit.Data.EntityObject" data-throw-if-not-resolved="false"></xref>.
    - id: xmlWriter
      type: System.Xml.XmlWriter
      description: The XML writer to write the xml to.
    - id: changedMemberNames
      type: System.Collections.Generic.IEnumerable{System.String}
      description: Names of changed members.
    - id: operationType
      type: TimeCockpit.Data.DatabaseOperation
      description: A value indicating the type of the operation.
    content.vb: Public Shared Sub WriteAuditTrail(oldEntityObject As EntityObject, newEntityObject As EntityObject, xmlWriter As XmlWriter, ByRef changedMemberNames As IEnumerable(Of String), operationType As DatabaseOperation = DatabaseOperation.Update)
  overload: TimeCockpit.Data.AuditTrail.XmlAuditTrailWriter.WriteAuditTrail*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: Thrown if a AuditTrail should be written from two <xref href="TimeCockpit.Data.EntityObject" data-throw-if-not-resolved="false"></xref>s with different ids.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: Thrown if xmlWriter is null.
  nameWithType.vb: XmlAuditTrailWriter.WriteAuditTrail(EntityObject, EntityObject, XmlWriter, ByRef IEnumerable(Of String), DatabaseOperation)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TimeCockpit.Data.AuditTrail.XmlAuditTrailWriter.WriteAuditTrail(TimeCockpit.Data.EntityObject, TimeCockpit.Data.EntityObject, System.Xml.XmlWriter, ByRef System.Collections.Generic.IEnumerable(Of System.String), TimeCockpit.Data.DatabaseOperation)
  name.vb: WriteAuditTrail(EntityObject, EntityObject, XmlWriter, ByRef IEnumerable(Of String), DatabaseOperation)
- uid: TimeCockpit.Data.AuditTrail.XmlAuditTrailWriter.#ctor
  commentId: M:TimeCockpit.Data.AuditTrail.XmlAuditTrailWriter.#ctor
  id: '#ctor'
  parent: TimeCockpit.Data.AuditTrail.XmlAuditTrailWriter
  langs:
  - csharp
  - vb
  name: XmlAuditTrailWriter()
  nameWithType: XmlAuditTrailWriter.XmlAuditTrailWriter()
  fullName: TimeCockpit.Data.AuditTrail.XmlAuditTrailWriter.XmlAuditTrailWriter()
  type: Constructor
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.AuditTrail
  syntax:
    content: public XmlAuditTrailWriter()
    content.vb: Public Sub New
  overload: TimeCockpit.Data.AuditTrail.XmlAuditTrailWriter.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: TimeCockpit.Data.AuditTrail
  commentId: N:TimeCockpit.Data.AuditTrail
  isExternal: true
  name: TimeCockpit.Data.AuditTrail
  nameWithType: TimeCockpit.Data.AuditTrail
  fullName: TimeCockpit.Data.AuditTrail
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TimeCockpit.Data.AuditTrail.XmlAuditTrailWriter.WriteAuditTrail*
  commentId: Overload:TimeCockpit.Data.AuditTrail.XmlAuditTrailWriter.WriteAuditTrail
  isExternal: true
  name: WriteAuditTrail
  nameWithType: XmlAuditTrailWriter.WriteAuditTrail
  fullName: TimeCockpit.Data.AuditTrail.XmlAuditTrailWriter.WriteAuditTrail
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
  isExternal: true
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  isExternal: true
- uid: TimeCockpit.Data.EntityObject
  commentId: T:TimeCockpit.Data.EntityObject
  parent: TimeCockpit.Data
  isExternal: true
  name: EntityObject
  nameWithType: EntityObject
  fullName: TimeCockpit.Data.EntityObject
- uid: System.Xml.XmlWriter
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.DatabaseOperation
  commentId: T:TimeCockpit.Data.DatabaseOperation
  parent: TimeCockpit.Data
  isExternal: true
  name: DatabaseOperation
  nameWithType: DatabaseOperation
  fullName: TimeCockpit.Data.DatabaseOperation
- uid: TimeCockpit.Data
  commentId: N:TimeCockpit.Data
  isExternal: true
  name: TimeCockpit.Data
  nameWithType: TimeCockpit.Data
  fullName: TimeCockpit.Data
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: TimeCockpit.Data.AuditTrail.XmlAuditTrailWriter.#ctor*
  commentId: Overload:TimeCockpit.Data.AuditTrail.XmlAuditTrailWriter.#ctor
  isExternal: true
  name: XmlAuditTrailWriter
  nameWithType: XmlAuditTrailWriter.XmlAuditTrailWriter
  fullName: TimeCockpit.Data.AuditTrail.XmlAuditTrailWriter.XmlAuditTrailWriter
