### YamlMime:ManagedReference
items:
- uid: TimeCockpit.Data.SyncSettings
  commentId: T:TimeCockpit.Data.SyncSettings
  id: SyncSettings
  parent: TimeCockpit.Data
  children:
  - TimeCockpit.Data.SyncSettings.#ctor
  - TimeCockpit.Data.SyncSettings.CurrentDeviceId
  - TimeCockpit.Data.SyncSettings.CurrentUserAccountUuid
  - TimeCockpit.Data.SyncSettings.IsInitialSync
  - TimeCockpit.Data.SyncSettings.Order
  - TimeCockpit.Data.SyncSettings.ProgressEventHandler
  - TimeCockpit.Data.SyncSettings.ServerContext
  - TimeCockpit.Data.SyncSettings.StateChangedEventHandler
  - TimeCockpit.Data.SyncSettings.SyncContent
  - TimeCockpit.Data.SyncSettings.TimeCockpitProgressEventHandler
  - TimeCockpit.Data.SyncSettings.UseTransaction
  langs:
  - csharp
  - vb
  name: SyncSettings
  nameWithType: SyncSettings
  fullName: TimeCockpit.Data.SyncSettings
  type: Class
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/SyncSettings.cs
    id: SyncSettings
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/SyncSettings.cs
    startLine: 15
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data
  summary: "\nSpecifies a set of features to support the <xref href=\"TimeCockpit.Data.DataContext.Sync(TimeCockpit.Data.SyncSettings)\" data-throw-if-not-resolved=\"false\"></xref> method.\n"
  example: []
  syntax:
    content: public sealed class SyncSettings
    content.vb: Public NotInheritable Class SyncSettings
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: TimeCockpit.Data.SyncSettings.#ctor
  commentId: M:TimeCockpit.Data.SyncSettings.#ctor
  id: '#ctor'
  parent: TimeCockpit.Data.SyncSettings
  langs:
  - csharp
  - vb
  name: SyncSettings()
  nameWithType: SyncSettings.SyncSettings()
  fullName: TimeCockpit.Data.SyncSettings.SyncSettings()
  type: Constructor
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/SyncSettings.cs
    id: .ctor
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/SyncSettings.cs
    startLine: 20
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data
  summary: "\nInitializes a new instance of the SyncSettings class\n"
  example: []
  syntax:
    content: public SyncSettings()
    content.vb: Public Sub New
  overload: TimeCockpit.Data.SyncSettings.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.SyncSettings.ServerContext
  commentId: P:TimeCockpit.Data.SyncSettings.ServerContext
  id: ServerContext
  parent: TimeCockpit.Data.SyncSettings
  langs:
  - csharp
  - vb
  name: ServerContext
  nameWithType: SyncSettings.ServerContext
  fullName: TimeCockpit.Data.SyncSettings.ServerContext
  type: Property
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/SyncSettings.cs
    id: ServerContext
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/SyncSettings.cs
    startLine: 37
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data
  summary: "\nGets or sets the server data context used for sync\n"
  example: []
  syntax:
    content: public DataContext ServerContext { get; set; }
    parameters: []
    return:
      type: TimeCockpit.Data.DataContext
    content.vb: Public Property ServerContext As DataContext
  overload: TimeCockpit.Data.SyncSettings.ServerContext*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.SyncSettings.SyncContent
  commentId: P:TimeCockpit.Data.SyncSettings.SyncContent
  id: SyncContent
  parent: TimeCockpit.Data.SyncSettings
  langs:
  - csharp
  - vb
  name: SyncContent
  nameWithType: SyncSettings.SyncContent
  fullName: TimeCockpit.Data.SyncSettings.SyncContent
  type: Property
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/SyncSettings.cs
    id: SyncContent
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/SyncSettings.cs
    startLine: 43
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data
  summary: "\nGets or sets the value specifying what to sync\n"
  remarks: The default value is <xref href="TimeCockpit.Data.Sync.SyncContent.ModelAndData" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public SyncContent SyncContent { get; set; }
    parameters: []
    return:
      type: TimeCockpit.Data.Sync.SyncContent
    content.vb: Public Property SyncContent As SyncContent
  overload: TimeCockpit.Data.SyncSettings.SyncContent*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.SyncSettings.Order
  commentId: P:TimeCockpit.Data.SyncSettings.Order
  id: Order
  parent: TimeCockpit.Data.SyncSettings
  langs:
  - csharp
  - vb
  name: Order
  nameWithType: SyncSettings.Order
  fullName: TimeCockpit.Data.SyncSettings.Order
  type: Property
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/SyncSettings.cs
    id: Order
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/SyncSettings.cs
    startLine: 48
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data
  summary: "\nGets or sets the sync direction\n"
  example: []
  syntax:
    content: >-
      [CLSCompliant(false)]

      public SyncDirectionOrder Order { get; set; }
    parameters: []
    return:
      type: Microsoft.Synchronization.SyncDirectionOrder
    content.vb: >-
      <CLSCompliant(False)>

      Public Property Order As SyncDirectionOrder
  overload: TimeCockpit.Data.SyncSettings.Order*
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.SyncSettings.CurrentUserAccountUuid
  commentId: P:TimeCockpit.Data.SyncSettings.CurrentUserAccountUuid
  id: CurrentUserAccountUuid
  parent: TimeCockpit.Data.SyncSettings
  langs:
  - csharp
  - vb
  name: CurrentUserAccountUuid
  nameWithType: SyncSettings.CurrentUserAccountUuid
  fullName: TimeCockpit.Data.SyncSettings.CurrentUserAccountUuid
  type: Property
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/SyncSettings.cs
    id: CurrentUserAccountUuid
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/SyncSettings.cs
    startLine: 54
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data
  summary: "\nGets or sets the uuid of the current user\n"
  example: []
  syntax:
    content: public Guid CurrentUserAccountUuid { get; set; }
    parameters: []
    return:
      type: System.Guid
    content.vb: Public Property CurrentUserAccountUuid As Guid
  overload: TimeCockpit.Data.SyncSettings.CurrentUserAccountUuid*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.SyncSettings.CurrentDeviceId
  commentId: P:TimeCockpit.Data.SyncSettings.CurrentDeviceId
  id: CurrentDeviceId
  parent: TimeCockpit.Data.SyncSettings
  langs:
  - csharp
  - vb
  name: CurrentDeviceId
  nameWithType: SyncSettings.CurrentDeviceId
  fullName: TimeCockpit.Data.SyncSettings.CurrentDeviceId
  type: Property
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/SyncSettings.cs
    id: CurrentDeviceId
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/SyncSettings.cs
    startLine: 59
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data
  summary: "\nGets or sets the uuid of the current device that is in use\n"
  example: []
  syntax:
    content: public Guid CurrentDeviceId { get; set; }
    parameters: []
    return:
      type: System.Guid
    content.vb: Public Property CurrentDeviceId As Guid
  overload: TimeCockpit.Data.SyncSettings.CurrentDeviceId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.SyncSettings.UseTransaction
  commentId: P:TimeCockpit.Data.SyncSettings.UseTransaction
  id: UseTransaction
  parent: TimeCockpit.Data.SyncSettings
  langs:
  - csharp
  - vb
  name: UseTransaction
  nameWithType: SyncSettings.UseTransaction
  fullName: TimeCockpit.Data.SyncSettings.UseTransaction
  type: Property
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/SyncSettings.cs
    id: UseTransaction
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/SyncSettings.cs
    startLine: 65
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data
  summary: "\nGets or sets a value indicating whether to use a single transaction for the sync\n"
  remarks: The default value is <xref uid="langword_csharp_true" name="true" href=""></xref>.
  example: []
  syntax:
    content: public bool UseTransaction { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property UseTransaction As Boolean
  overload: TimeCockpit.Data.SyncSettings.UseTransaction*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.SyncSettings.IsInitialSync
  commentId: P:TimeCockpit.Data.SyncSettings.IsInitialSync
  id: IsInitialSync
  parent: TimeCockpit.Data.SyncSettings
  langs:
  - csharp
  - vb
  name: IsInitialSync
  nameWithType: SyncSettings.IsInitialSync
  fullName: TimeCockpit.Data.SyncSettings.IsInitialSync
  type: Property
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/SyncSettings.cs
    id: IsInitialSync
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/SyncSettings.cs
    startLine: 70
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data
  summary: "\nGets or sets a value indicating whether the sync represents an initial synchronization (no deletions/dead handling/target versions).\n"
  example: []
  syntax:
    content: public bool IsInitialSync { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsInitialSync As Boolean
  overload: TimeCockpit.Data.SyncSettings.IsInitialSync*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.SyncSettings.StateChangedEventHandler
  commentId: P:TimeCockpit.Data.SyncSettings.StateChangedEventHandler
  id: StateChangedEventHandler
  parent: TimeCockpit.Data.SyncSettings
  langs:
  - csharp
  - vb
  name: StateChangedEventHandler
  nameWithType: SyncSettings.StateChangedEventHandler
  fullName: TimeCockpit.Data.SyncSettings.StateChangedEventHandler
  type: Property
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/SyncSettings.cs
    id: StateChangedEventHandler
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/SyncSettings.cs
    startLine: 75
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data
  summary: "\nGets or sets a event handler that is registered for state changed events.\n"
  example: []
  syntax:
    content: >-
      [CLSCompliant(false)]

      public EventHandler<SyncOrchestratorStateChangedEventArgs> StateChangedEventHandler { get; set; }
    parameters: []
    return:
      type: System.EventHandler{Microsoft.Synchronization.SyncOrchestratorStateChangedEventArgs}
    content.vb: >-
      <CLSCompliant(False)>

      Public Property StateChangedEventHandler As EventHandler(Of SyncOrchestratorStateChangedEventArgs)
  overload: TimeCockpit.Data.SyncSettings.StateChangedEventHandler*
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.SyncSettings.ProgressEventHandler
  commentId: P:TimeCockpit.Data.SyncSettings.ProgressEventHandler
  id: ProgressEventHandler
  parent: TimeCockpit.Data.SyncSettings
  langs:
  - csharp
  - vb
  name: ProgressEventHandler
  nameWithType: SyncSettings.ProgressEventHandler
  fullName: TimeCockpit.Data.SyncSettings.ProgressEventHandler
  type: Property
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/SyncSettings.cs
    id: ProgressEventHandler
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/SyncSettings.cs
    startLine: 81
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data
  summary: "\nGets or sets a event handler that is registered for progress events.\n"
  example: []
  syntax:
    content: >-
      [CLSCompliant(false)]

      public EventHandler<SyncStagedProgressEventArgs> ProgressEventHandler { get; set; }
    parameters: []
    return:
      type: System.EventHandler{Microsoft.Synchronization.SyncStagedProgressEventArgs}
    content.vb: >-
      <CLSCompliant(False)>

      Public Property ProgressEventHandler As EventHandler(Of SyncStagedProgressEventArgs)
  overload: TimeCockpit.Data.SyncSettings.ProgressEventHandler*
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.SyncSettings.TimeCockpitProgressEventHandler
  commentId: P:TimeCockpit.Data.SyncSettings.TimeCockpitProgressEventHandler
  id: TimeCockpitProgressEventHandler
  parent: TimeCockpit.Data.SyncSettings
  langs:
  - csharp
  - vb
  name: TimeCockpitProgressEventHandler
  nameWithType: SyncSettings.TimeCockpitProgressEventHandler
  fullName: TimeCockpit.Data.SyncSettings.TimeCockpitProgressEventHandler
  type: Property
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/SyncSettings.cs
    id: TimeCockpitProgressEventHandler
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/SyncSettings.cs
    startLine: 87
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data
  summary: "\nGets or sets a event handler that is registered for time cockpit progress events.\n"
  example: []
  syntax:
    content: public EventHandler<TimeCockpitSyncProgressEventArgs> TimeCockpitProgressEventHandler { get; set; }
    parameters: []
    return:
      type: System.EventHandler{TimeCockpit.Data.Sync.TimeCockpitSyncProgressEventArgs}
    content.vb: Public Property TimeCockpitProgressEventHandler As EventHandler(Of TimeCockpitSyncProgressEventArgs)
  overload: TimeCockpit.Data.SyncSettings.TimeCockpitProgressEventHandler*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: TimeCockpit.Data.DataContext.Sync(TimeCockpit.Data.SyncSettings)
  commentId: M:TimeCockpit.Data.DataContext.Sync(TimeCockpit.Data.SyncSettings)
- uid: TimeCockpit.Data
  commentId: N:TimeCockpit.Data
  isExternal: false
  name: TimeCockpit.Data
  nameWithType: TimeCockpit.Data
  fullName: TimeCockpit.Data
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: TimeCockpit.Data.SyncSettings.#ctor*
  commentId: Overload:TimeCockpit.Data.SyncSettings.#ctor
  isExternal: false
  name: SyncSettings
  nameWithType: SyncSettings.SyncSettings
  fullName: TimeCockpit.Data.SyncSettings.SyncSettings
- uid: TimeCockpit.Data.SyncSettings.ServerContext*
  commentId: Overload:TimeCockpit.Data.SyncSettings.ServerContext
  isExternal: false
  name: ServerContext
  nameWithType: SyncSettings.ServerContext
  fullName: TimeCockpit.Data.SyncSettings.ServerContext
- uid: TimeCockpit.Data.DataContext
  commentId: T:TimeCockpit.Data.DataContext
  parent: TimeCockpit.Data
  isExternal: false
  name: DataContext
  nameWithType: DataContext
  fullName: TimeCockpit.Data.DataContext
- uid: TimeCockpit.Data.Sync.SyncContent.ModelAndData
  commentId: F:TimeCockpit.Data.Sync.SyncContent.ModelAndData
- uid: TimeCockpit.Data.SyncSettings.SyncContent*
  commentId: Overload:TimeCockpit.Data.SyncSettings.SyncContent
  isExternal: false
  name: SyncContent
  nameWithType: SyncSettings.SyncContent
  fullName: TimeCockpit.Data.SyncSettings.SyncContent
- uid: TimeCockpit.Data.Sync.SyncContent
  commentId: T:TimeCockpit.Data.Sync.SyncContent
  parent: TimeCockpit.Data.Sync
  isExternal: false
  name: SyncContent
  nameWithType: SyncContent
  fullName: TimeCockpit.Data.Sync.SyncContent
- uid: TimeCockpit.Data.Sync
  commentId: N:TimeCockpit.Data.Sync
  isExternal: false
  name: TimeCockpit.Data.Sync
  nameWithType: TimeCockpit.Data.Sync
  fullName: TimeCockpit.Data.Sync
- uid: TimeCockpit.Data.SyncSettings.Order*
  commentId: Overload:TimeCockpit.Data.SyncSettings.Order
  isExternal: false
  name: Order
  nameWithType: SyncSettings.Order
  fullName: TimeCockpit.Data.SyncSettings.Order
- uid: Microsoft.Synchronization.SyncDirectionOrder
  commentId: T:Microsoft.Synchronization.SyncDirectionOrder
  parent: Microsoft.Synchronization
  isExternal: true
  name: SyncDirectionOrder
  nameWithType: SyncDirectionOrder
  fullName: Microsoft.Synchronization.SyncDirectionOrder
- uid: Microsoft.Synchronization
  commentId: N:Microsoft.Synchronization
  isExternal: false
  name: Microsoft.Synchronization
  nameWithType: Microsoft.Synchronization
  fullName: Microsoft.Synchronization
- uid: TimeCockpit.Data.SyncSettings.CurrentUserAccountUuid*
  commentId: Overload:TimeCockpit.Data.SyncSettings.CurrentUserAccountUuid
  isExternal: false
  name: CurrentUserAccountUuid
  nameWithType: SyncSettings.CurrentUserAccountUuid
  fullName: TimeCockpit.Data.SyncSettings.CurrentUserAccountUuid
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: TimeCockpit.Data.SyncSettings.CurrentDeviceId*
  commentId: Overload:TimeCockpit.Data.SyncSettings.CurrentDeviceId
  isExternal: false
  name: CurrentDeviceId
  nameWithType: SyncSettings.CurrentDeviceId
  fullName: TimeCockpit.Data.SyncSettings.CurrentDeviceId
- uid: TimeCockpit.Data.SyncSettings.UseTransaction*
  commentId: Overload:TimeCockpit.Data.SyncSettings.UseTransaction
  isExternal: false
  name: UseTransaction
  nameWithType: SyncSettings.UseTransaction
  fullName: TimeCockpit.Data.SyncSettings.UseTransaction
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: TimeCockpit.Data.SyncSettings.IsInitialSync*
  commentId: Overload:TimeCockpit.Data.SyncSettings.IsInitialSync
  isExternal: false
  name: IsInitialSync
  nameWithType: SyncSettings.IsInitialSync
  fullName: TimeCockpit.Data.SyncSettings.IsInitialSync
- uid: TimeCockpit.Data.SyncSettings.StateChangedEventHandler*
  commentId: Overload:TimeCockpit.Data.SyncSettings.StateChangedEventHandler
  isExternal: false
  name: StateChangedEventHandler
  nameWithType: SyncSettings.StateChangedEventHandler
  fullName: TimeCockpit.Data.SyncSettings.StateChangedEventHandler
- uid: System.EventHandler{Microsoft.Synchronization.SyncOrchestratorStateChangedEventArgs}
  commentId: T:System.EventHandler{Microsoft.Synchronization.SyncOrchestratorStateChangedEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<SyncOrchestratorStateChangedEventArgs>
  nameWithType: EventHandler<SyncOrchestratorStateChangedEventArgs>
  fullName: System.EventHandler<Microsoft.Synchronization.SyncOrchestratorStateChangedEventArgs>
  nameWithType.vb: EventHandler(Of SyncOrchestratorStateChangedEventArgs)
  fullName.vb: System.EventHandler(Of Microsoft.Synchronization.SyncOrchestratorStateChangedEventArgs)
  name.vb: EventHandler(Of SyncOrchestratorStateChangedEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Synchronization.SyncOrchestratorStateChangedEventArgs
    name: SyncOrchestratorStateChangedEventArgs
    nameWithType: SyncOrchestratorStateChangedEventArgs
    fullName: Microsoft.Synchronization.SyncOrchestratorStateChangedEventArgs
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Synchronization.SyncOrchestratorStateChangedEventArgs
    name: SyncOrchestratorStateChangedEventArgs
    nameWithType: SyncOrchestratorStateChangedEventArgs
    fullName: Microsoft.Synchronization.SyncOrchestratorStateChangedEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.SyncSettings.ProgressEventHandler*
  commentId: Overload:TimeCockpit.Data.SyncSettings.ProgressEventHandler
  isExternal: false
  name: ProgressEventHandler
  nameWithType: SyncSettings.ProgressEventHandler
  fullName: TimeCockpit.Data.SyncSettings.ProgressEventHandler
- uid: System.EventHandler{Microsoft.Synchronization.SyncStagedProgressEventArgs}
  commentId: T:System.EventHandler{Microsoft.Synchronization.SyncStagedProgressEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<SyncStagedProgressEventArgs>
  nameWithType: EventHandler<SyncStagedProgressEventArgs>
  fullName: System.EventHandler<Microsoft.Synchronization.SyncStagedProgressEventArgs>
  nameWithType.vb: EventHandler(Of SyncStagedProgressEventArgs)
  fullName.vb: System.EventHandler(Of Microsoft.Synchronization.SyncStagedProgressEventArgs)
  name.vb: EventHandler(Of SyncStagedProgressEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Synchronization.SyncStagedProgressEventArgs
    name: SyncStagedProgressEventArgs
    nameWithType: SyncStagedProgressEventArgs
    fullName: Microsoft.Synchronization.SyncStagedProgressEventArgs
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Synchronization.SyncStagedProgressEventArgs
    name: SyncStagedProgressEventArgs
    nameWithType: SyncStagedProgressEventArgs
    fullName: Microsoft.Synchronization.SyncStagedProgressEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.SyncSettings.TimeCockpitProgressEventHandler*
  commentId: Overload:TimeCockpit.Data.SyncSettings.TimeCockpitProgressEventHandler
  isExternal: false
  name: TimeCockpitProgressEventHandler
  nameWithType: SyncSettings.TimeCockpitProgressEventHandler
  fullName: TimeCockpit.Data.SyncSettings.TimeCockpitProgressEventHandler
- uid: System.EventHandler{TimeCockpit.Data.Sync.TimeCockpitSyncProgressEventArgs}
  commentId: T:System.EventHandler{TimeCockpit.Data.Sync.TimeCockpitSyncProgressEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<TimeCockpitSyncProgressEventArgs>
  nameWithType: EventHandler<TimeCockpitSyncProgressEventArgs>
  fullName: System.EventHandler<TimeCockpit.Data.Sync.TimeCockpitSyncProgressEventArgs>
  nameWithType.vb: EventHandler(Of TimeCockpitSyncProgressEventArgs)
  fullName.vb: System.EventHandler(Of TimeCockpit.Data.Sync.TimeCockpitSyncProgressEventArgs)
  name.vb: EventHandler(Of TimeCockpitSyncProgressEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TimeCockpit.Data.Sync.TimeCockpitSyncProgressEventArgs
    name: TimeCockpitSyncProgressEventArgs
    nameWithType: TimeCockpitSyncProgressEventArgs
    fullName: TimeCockpit.Data.Sync.TimeCockpitSyncProgressEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TimeCockpit.Data.Sync.TimeCockpitSyncProgressEventArgs
    name: TimeCockpitSyncProgressEventArgs
    nameWithType: TimeCockpitSyncProgressEventArgs
    fullName: TimeCockpit.Data.Sync.TimeCockpitSyncProgressEventArgs
  - name: )
    nameWithType: )
    fullName: )
