### YamlMime:ManagedReference
items:
- uid: TimeCockpit.Data.Localization.Default.DefaultLocalizerJsonSerializer
  commentId: T:TimeCockpit.Data.Localization.Default.DefaultLocalizerJsonSerializer
  id: DefaultLocalizerJsonSerializer
  parent: TimeCockpit.Data.Localization.Default
  children:
  - TimeCockpit.Data.Localization.Default.DefaultLocalizerJsonSerializer.FromJson(TimeCockpit.Data.Localization.Default.DefaultLocalizer,Newtonsoft.Json.Linq.JObject,System.String)
  - TimeCockpit.Data.Localization.Default.DefaultLocalizerJsonSerializer.ToJson(TimeCockpit.Data.Localization.Default.DefaultLocalizer,System.String)
  langs:
  - csharp
  - vb
  name: DefaultLocalizerJsonSerializer
  nameWithType: DefaultLocalizerJsonSerializer
  fullName: TimeCockpit.Data.Localization.Default.DefaultLocalizerJsonSerializer
  type: Class
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Localization.Default
  summary: "\nClass holding static methods to wrap a localizer into a JObject and back again.\n"
  syntax:
    content: public static class DefaultLocalizerJsonSerializer
    content.vb: Public Module DefaultLocalizerJsonSerializer
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: TimeCockpit.Data.Localization.Default.DefaultLocalizerJsonSerializer.ToJson(TimeCockpit.Data.Localization.Default.DefaultLocalizer,System.String)
  commentId: M:TimeCockpit.Data.Localization.Default.DefaultLocalizerJsonSerializer.ToJson(TimeCockpit.Data.Localization.Default.DefaultLocalizer,System.String)
  id: ToJson(TimeCockpit.Data.Localization.Default.DefaultLocalizer,System.String)
  parent: TimeCockpit.Data.Localization.Default.DefaultLocalizerJsonSerializer
  langs:
  - csharp
  - vb
  name: ToJson(DefaultLocalizer, String)
  nameWithType: DefaultLocalizerJsonSerializer.ToJson(DefaultLocalizer, String)
  fullName: TimeCockpit.Data.Localization.Default.DefaultLocalizerJsonSerializer.ToJson(TimeCockpit.Data.Localization.Default.DefaultLocalizer, System.String)
  type: Method
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Localization.Default
  summary: "\nWrites the strings of a given culture to a json object.\n"
  syntax:
    content: public static JObject ToJson(DefaultLocalizer localizer, string culture)
    parameters:
    - id: localizer
      type: TimeCockpit.Data.Localization.Default.DefaultLocalizer
      description: the localizer to write.
    - id: culture
      type: System.String
      description: the culture to use.
    return:
      type: Newtonsoft.Json.Linq.JObject
      description: returns the object containing the localization information for the given culture.
    content.vb: Public Shared Function ToJson(localizer As DefaultLocalizer, culture As String) As JObject
  overload: TimeCockpit.Data.Localization.Default.DefaultLocalizerJsonSerializer.ToJson*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: TimeCockpit.Data.Localization.Default.DefaultLocalizerJsonSerializer.FromJson(TimeCockpit.Data.Localization.Default.DefaultLocalizer,Newtonsoft.Json.Linq.JObject,System.String)
  commentId: M:TimeCockpit.Data.Localization.Default.DefaultLocalizerJsonSerializer.FromJson(TimeCockpit.Data.Localization.Default.DefaultLocalizer,Newtonsoft.Json.Linq.JObject,System.String)
  id: FromJson(TimeCockpit.Data.Localization.Default.DefaultLocalizer,Newtonsoft.Json.Linq.JObject,System.String)
  parent: TimeCockpit.Data.Localization.Default.DefaultLocalizerJsonSerializer
  langs:
  - csharp
  - vb
  name: FromJson(DefaultLocalizer, JObject, String)
  nameWithType: DefaultLocalizerJsonSerializer.FromJson(DefaultLocalizer, JObject, String)
  fullName: TimeCockpit.Data.Localization.Default.DefaultLocalizerJsonSerializer.FromJson(TimeCockpit.Data.Localization.Default.DefaultLocalizer, Newtonsoft.Json.Linq.JObject, System.String)
  type: Method
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Localization.Default
  summary: "\nReads a localizer instance from a json root object using a specific culture.\nThe localizations found in the json object will be stored as the culture.\n"
  syntax:
    content: public static void FromJson(DefaultLocalizer localizer, JObject root, string culture)
    parameters:
    - id: localizer
      type: TimeCockpit.Data.Localization.Default.DefaultLocalizer
      description: the localizer to save to.
    - id: root
      type: Newtonsoft.Json.Linq.JObject
      description: the root object containing the localization info for the specific culture.
    - id: culture
      type: System.String
      description: the culture that is serialized.
    content.vb: Public Shared Sub FromJson(localizer As DefaultLocalizer, root As JObject, culture As String)
  overload: TimeCockpit.Data.Localization.Default.DefaultLocalizerJsonSerializer.FromJson*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: TimeCockpit.Data.Localization.Default
  commentId: N:TimeCockpit.Data.Localization.Default
  isExternal: true
  name: TimeCockpit.Data.Localization.Default
  nameWithType: TimeCockpit.Data.Localization.Default
  fullName: TimeCockpit.Data.Localization.Default
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TimeCockpit.Data.Localization.Default.DefaultLocalizerJsonSerializer.ToJson*
  commentId: Overload:TimeCockpit.Data.Localization.Default.DefaultLocalizerJsonSerializer.ToJson
  isExternal: true
  name: ToJson
  nameWithType: DefaultLocalizerJsonSerializer.ToJson
  fullName: TimeCockpit.Data.Localization.Default.DefaultLocalizerJsonSerializer.ToJson
- uid: TimeCockpit.Data.Localization.Default.DefaultLocalizer
  commentId: T:TimeCockpit.Data.Localization.Default.DefaultLocalizer
  parent: TimeCockpit.Data.Localization.Default
  isExternal: true
  name: DefaultLocalizer
  nameWithType: DefaultLocalizer
  fullName: TimeCockpit.Data.Localization.Default.DefaultLocalizer
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Newtonsoft.Json.Linq.JObject
  isExternal: true
  name: JObject
  nameWithType: JObject
  fullName: Newtonsoft.Json.Linq.JObject
- uid: TimeCockpit.Data.Localization.Default.DefaultLocalizerJsonSerializer.FromJson*
  commentId: Overload:TimeCockpit.Data.Localization.Default.DefaultLocalizerJsonSerializer.FromJson
  isExternal: true
  name: FromJson
  nameWithType: DefaultLocalizerJsonSerializer.FromJson
  fullName: TimeCockpit.Data.Localization.Default.DefaultLocalizerJsonSerializer.FromJson
