### YamlMime:ManagedReference
items:
- uid: TimeCockpit.Data.Security.PermissionTypeInfo
  commentId: T:TimeCockpit.Data.Security.PermissionTypeInfo
  id: PermissionTypeInfo
  parent: TimeCockpit.Data.Security
  children:
  - TimeCockpit.Data.Security.PermissionTypeInfo.#ctor(TimeCockpit.Data.Security.PermissionType,TimeCockpit.Data.Security.PermissionTarget)
  - TimeCockpit.Data.Security.PermissionTypeInfo.GetInformation
  - TimeCockpit.Data.Security.PermissionTypeInfo.Identifier
  - TimeCockpit.Data.Security.PermissionTypeInfo.Target
  langs:
  - csharp
  - vb
  name: PermissionTypeInfo
  nameWithType: PermissionTypeInfo
  fullName: TimeCockpit.Data.Security.PermissionTypeInfo
  type: Class
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Security
  summary: "\nPermission meta information.\n"
  syntax:
    content: public class PermissionTypeInfo
    content.vb: Public Class PermissionTypeInfo
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TimeCockpit.Data.Security.PermissionTypeInfo.#ctor(TimeCockpit.Data.Security.PermissionType,TimeCockpit.Data.Security.PermissionTarget)
  commentId: M:TimeCockpit.Data.Security.PermissionTypeInfo.#ctor(TimeCockpit.Data.Security.PermissionType,TimeCockpit.Data.Security.PermissionTarget)
  id: '#ctor(TimeCockpit.Data.Security.PermissionType,TimeCockpit.Data.Security.PermissionTarget)'
  parent: TimeCockpit.Data.Security.PermissionTypeInfo
  langs:
  - csharp
  - vb
  name: PermissionTypeInfo(PermissionType, PermissionTarget)
  nameWithType: PermissionTypeInfo.PermissionTypeInfo(PermissionType, PermissionTarget)
  fullName: TimeCockpit.Data.Security.PermissionTypeInfo.PermissionTypeInfo(TimeCockpit.Data.Security.PermissionType, TimeCockpit.Data.Security.PermissionTarget)
  type: Constructor
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Security
  summary: "\nInitializes a new instance of the PermissionTypeInfo class.\n"
  syntax:
    content: public PermissionTypeInfo(PermissionType identifier, PermissionTarget target)
    parameters:
    - id: identifier
      type: TimeCockpit.Data.Security.PermissionType
      description: Name/identifier of the permission.
    - id: target
      type: TimeCockpit.Data.Security.PermissionTarget
      description: Target of the permission.
    content.vb: Public Sub New(identifier As PermissionType, target As PermissionTarget)
  overload: TimeCockpit.Data.Security.PermissionTypeInfo.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Security.PermissionTypeInfo.GetInformation
  commentId: M:TimeCockpit.Data.Security.PermissionTypeInfo.GetInformation
  id: GetInformation
  parent: TimeCockpit.Data.Security.PermissionTypeInfo
  langs:
  - csharp
  - vb
  name: GetInformation()
  nameWithType: PermissionTypeInfo.GetInformation()
  fullName: TimeCockpit.Data.Security.PermissionTypeInfo.GetInformation()
  type: Method
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Security
  summary: "\nGets the default permission meta information.\n"
  syntax:
    content: public static IEnumerable<PermissionTypeInfo> GetInformation()
    return:
      type: System.Collections.Generic.IEnumerable{TimeCockpit.Data.Security.PermissionTypeInfo}
      description: The permission meta information.
    content.vb: Public Shared Function GetInformation As IEnumerable(Of PermissionTypeInfo)
  overload: TimeCockpit.Data.Security.PermissionTypeInfo.GetInformation*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: TimeCockpit.Data.Security.PermissionTypeInfo.Target
  commentId: P:TimeCockpit.Data.Security.PermissionTypeInfo.Target
  id: Target
  parent: TimeCockpit.Data.Security.PermissionTypeInfo
  langs:
  - csharp
  - vb
  name: Target
  nameWithType: PermissionTypeInfo.Target
  fullName: TimeCockpit.Data.Security.PermissionTypeInfo.Target
  type: Property
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Security
  summary: "\nGets the permission target.\n"
  syntax:
    content: public PermissionTarget Target { get; }
    parameters: []
    return:
      type: TimeCockpit.Data.Security.PermissionTarget
    content.vb: Public ReadOnly Property Target As PermissionTarget
  overload: TimeCockpit.Data.Security.PermissionTypeInfo.Target*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TimeCockpit.Data.Security.PermissionTypeInfo.Identifier
  commentId: P:TimeCockpit.Data.Security.PermissionTypeInfo.Identifier
  id: Identifier
  parent: TimeCockpit.Data.Security.PermissionTypeInfo
  langs:
  - csharp
  - vb
  name: Identifier
  nameWithType: PermissionTypeInfo.Identifier
  fullName: TimeCockpit.Data.Security.PermissionTypeInfo.Identifier
  type: Property
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Security
  summary: "\nGets the permission name/identifier.\n"
  syntax:
    content: public PermissionType Identifier { get; }
    parameters: []
    return:
      type: TimeCockpit.Data.Security.PermissionType
    content.vb: Public ReadOnly Property Identifier As PermissionType
  overload: TimeCockpit.Data.Security.PermissionTypeInfo.Identifier*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: TimeCockpit.Data.Security
  commentId: N:TimeCockpit.Data.Security
  isExternal: true
  name: TimeCockpit.Data.Security
  nameWithType: TimeCockpit.Data.Security
  fullName: TimeCockpit.Data.Security
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TimeCockpit.Data.Security.PermissionTypeInfo.#ctor*
  commentId: Overload:TimeCockpit.Data.Security.PermissionTypeInfo.#ctor
  isExternal: true
  name: PermissionTypeInfo
  nameWithType: PermissionTypeInfo.PermissionTypeInfo
  fullName: TimeCockpit.Data.Security.PermissionTypeInfo.PermissionTypeInfo
- uid: TimeCockpit.Data.Security.PermissionType
  commentId: T:TimeCockpit.Data.Security.PermissionType
  parent: TimeCockpit.Data.Security
  isExternal: true
  name: PermissionType
  nameWithType: PermissionType
  fullName: TimeCockpit.Data.Security.PermissionType
- uid: TimeCockpit.Data.Security.PermissionTarget
  commentId: T:TimeCockpit.Data.Security.PermissionTarget
  parent: TimeCockpit.Data.Security
  isExternal: true
  name: PermissionTarget
  nameWithType: PermissionTarget
  fullName: TimeCockpit.Data.Security.PermissionTarget
- uid: TimeCockpit.Data.Security.PermissionTypeInfo.GetInformation*
  commentId: Overload:TimeCockpit.Data.Security.PermissionTypeInfo.GetInformation
  isExternal: true
  name: GetInformation
  nameWithType: PermissionTypeInfo.GetInformation
  fullName: TimeCockpit.Data.Security.PermissionTypeInfo.GetInformation
- uid: System.Collections.Generic.IEnumerable{TimeCockpit.Data.Security.PermissionTypeInfo}
  commentId: T:System.Collections.Generic.IEnumerable{TimeCockpit.Data.Security.PermissionTypeInfo}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<PermissionTypeInfo>
  nameWithType: IEnumerable<PermissionTypeInfo>
  fullName: System.Collections.Generic.IEnumerable<TimeCockpit.Data.Security.PermissionTypeInfo>
  nameWithType.vb: IEnumerable(Of PermissionTypeInfo)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TimeCockpit.Data.Security.PermissionTypeInfo)
  name.vb: IEnumerable(Of PermissionTypeInfo)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TimeCockpit.Data.Security.PermissionTypeInfo
    name: PermissionTypeInfo
    nameWithType: PermissionTypeInfo
    fullName: TimeCockpit.Data.Security.PermissionTypeInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TimeCockpit.Data.Security.PermissionTypeInfo
    name: PermissionTypeInfo
    nameWithType: PermissionTypeInfo
    fullName: TimeCockpit.Data.Security.PermissionTypeInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: TimeCockpit.Data.Security.PermissionTypeInfo.Target*
  commentId: Overload:TimeCockpit.Data.Security.PermissionTypeInfo.Target
  isExternal: true
  name: Target
  nameWithType: PermissionTypeInfo.Target
  fullName: TimeCockpit.Data.Security.PermissionTypeInfo.Target
- uid: TimeCockpit.Data.Security.PermissionTypeInfo.Identifier*
  commentId: Overload:TimeCockpit.Data.Security.PermissionTypeInfo.Identifier
  isExternal: true
  name: Identifier
  nameWithType: PermissionTypeInfo.Identifier
  fullName: TimeCockpit.Data.Security.PermissionTypeInfo.Identifier
