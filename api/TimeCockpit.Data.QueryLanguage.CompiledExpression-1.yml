### YamlMime:ManagedReference
items:
- uid: TimeCockpit.Data.QueryLanguage.CompiledExpression`1
  commentId: T:TimeCockpit.Data.QueryLanguage.CompiledExpression`1
  id: CompiledExpression`1
  parent: TimeCockpit.Data.QueryLanguage
  children:
  - TimeCockpit.Data.QueryLanguage.CompiledExpression`1.Function
  langs:
  - csharp
  - vb
  name: CompiledExpression<T>
  nameWithType: CompiledExpression<T>
  fullName: TimeCockpit.Data.QueryLanguage.CompiledExpression<T>
  type: Class
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/QueryLanguage/CompiledExpression.cs
    id: CompiledExpression
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/QueryLanguage/CompiledExpression.cs
    startLine: 18
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.QueryLanguage
  summary: "\nRepresents a container that holds a compiled TCQL expression\nplus its <xref href=\"TimeCockpit.Data.QueryLanguage.AstSourceContext\" data-throw-if-not-resolved=\"false\"></xref> and its participating members.\n"
  example: []
  syntax:
    content: 'public class CompiledExpression<T> : CompiledExpressionBase<T>'
    typeParameters:
    - id: T
      description: The return type of the <xref href="CompiledExpression.Function" data-throw-if-not-resolved="false"></xref>
    content.vb: >-
      Public Class CompiledExpression(Of T)
          Inherits CompiledExpressionBase(Of T)
  inheritance:
  - System.Object
  - TimeCockpit.Data.QueryLanguage.CompiledExpressionBase{{T}}
  inheritedMembers:
  - TimeCockpit.Data.QueryLanguage.CompiledExpressionBase{{T}}.FindAccessedElements(TimeCockpit.Data.DataModel.ModelEntityBase,System.Boolean,TimeCockpit.Data.Environment)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: CompiledExpression(Of T)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: TimeCockpit.Data.QueryLanguage.CompiledExpression(Of T)
  name.vb: CompiledExpression(Of T)
- uid: TimeCockpit.Data.QueryLanguage.CompiledExpression`1.Function
  commentId: P:TimeCockpit.Data.QueryLanguage.CompiledExpression`1.Function
  id: Function
  parent: TimeCockpit.Data.QueryLanguage.CompiledExpression`1
  langs:
  - csharp
  - vb
  name: Function
  nameWithType: CompiledExpression<T>.Function
  fullName: TimeCockpit.Data.QueryLanguage.CompiledExpression<T>.Function
  type: Property
  source:
    remote:
      path: E:/Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/QueryLanguage/CompiledExpression.cs
    id: Function
    path: ../../Projects/TimeCockpit.Development/Production/V 1.53/Hotfix/Source/TimeCockpit.Data/WPF/TimeCockpit.Data/QueryLanguage/CompiledExpression.cs
    startLine: 60
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.QueryLanguage
  summary: "\nGets a compiled function created from <xref href=\"System.Linq.Expressions.Expression\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public Func<EntityObject, T> Function { get; }
    parameters: []
    return:
      type: System.Func{TimeCockpit.Data.EntityObject,{T}}
    content.vb: Public ReadOnly Property Function As Func(Of EntityObject, T)
  overload: TimeCockpit.Data.QueryLanguage.CompiledExpression`1.Function*
  nameWithType.vb: CompiledExpression(Of T).Function
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: TimeCockpit.Data.QueryLanguage.CompiledExpression(Of T).Function
references:
- uid: TimeCockpit.Data.QueryLanguage.AstSourceContext
  commentId: T:TimeCockpit.Data.QueryLanguage.AstSourceContext
- uid: CompiledExpression.Function
  commentId: M:CompiledExpression.Function
- uid: TimeCockpit.Data.QueryLanguage
  commentId: N:TimeCockpit.Data.QueryLanguage
  isExternal: false
  name: TimeCockpit.Data.QueryLanguage
  nameWithType: TimeCockpit.Data.QueryLanguage
  fullName: TimeCockpit.Data.QueryLanguage
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: TimeCockpit.Data.QueryLanguage.CompiledExpressionBase{{T}}
  commentId: T:TimeCockpit.Data.QueryLanguage.CompiledExpressionBase{`0}
  parent: TimeCockpit.Data.QueryLanguage
  definition: TimeCockpit.Data.QueryLanguage.CompiledExpressionBase`1
  name: CompiledExpressionBase<T>
  nameWithType: CompiledExpressionBase<T>
  fullName: TimeCockpit.Data.QueryLanguage.CompiledExpressionBase<T>
  nameWithType.vb: CompiledExpressionBase(Of T)
  fullName.vb: TimeCockpit.Data.QueryLanguage.CompiledExpressionBase(Of T)
  name.vb: CompiledExpressionBase(Of T)
  spec.csharp:
  - uid: TimeCockpit.Data.QueryLanguage.CompiledExpressionBase`1
    name: CompiledExpressionBase
    nameWithType: CompiledExpressionBase
    fullName: TimeCockpit.Data.QueryLanguage.CompiledExpressionBase
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: TimeCockpit.Data.QueryLanguage.CompiledExpressionBase`1
    name: CompiledExpressionBase
    nameWithType: CompiledExpressionBase
    fullName: TimeCockpit.Data.QueryLanguage.CompiledExpressionBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.QueryLanguage.CompiledExpressionBase{{T}}.FindAccessedElements(TimeCockpit.Data.DataModel.ModelEntityBase,System.Boolean,TimeCockpit.Data.Environment)
  commentId: M:TimeCockpit.Data.QueryLanguage.CompiledExpressionBase{`0}.FindAccessedElements(TimeCockpit.Data.DataModel.ModelEntityBase,System.Boolean,TimeCockpit.Data.Environment)
  parent: TimeCockpit.Data.QueryLanguage.CompiledExpressionBase{{T}}
  definition: TimeCockpit.Data.QueryLanguage.CompiledExpressionBase`1.FindAccessedElements(TimeCockpit.Data.DataModel.ModelEntityBase,System.Boolean,TimeCockpit.Data.Environment)
  name: FindAccessedElements(ModelEntityBase, Boolean, Environment)
  nameWithType: CompiledExpressionBase<T>.FindAccessedElements(ModelEntityBase, Boolean, Environment)
  fullName: TimeCockpit.Data.QueryLanguage.CompiledExpressionBase<T>.FindAccessedElements(TimeCockpit.Data.DataModel.ModelEntityBase, System.Boolean, TimeCockpit.Data.Environment)
  nameWithType.vb: CompiledExpressionBase(Of T).FindAccessedElements(ModelEntityBase, Boolean, Environment)
  fullName.vb: TimeCockpit.Data.QueryLanguage.CompiledExpressionBase(Of T).FindAccessedElements(TimeCockpit.Data.DataModel.ModelEntityBase, System.Boolean, TimeCockpit.Data.Environment)
  spec.csharp:
  - uid: TimeCockpit.Data.QueryLanguage.CompiledExpressionBase`1.FindAccessedElements(TimeCockpit.Data.DataModel.ModelEntityBase,System.Boolean,TimeCockpit.Data.Environment)
    name: FindAccessedElements
    nameWithType: CompiledExpressionBase<T>.FindAccessedElements
    fullName: TimeCockpit.Data.QueryLanguage.CompiledExpressionBase<T>.FindAccessedElements
  - name: (
    nameWithType: (
    fullName: (
  - uid: TimeCockpit.Data.DataModel.ModelEntityBase
    name: ModelEntityBase
    nameWithType: ModelEntityBase
    fullName: TimeCockpit.Data.DataModel.ModelEntityBase
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TimeCockpit.Data.Environment
    name: Environment
    nameWithType: Environment
    fullName: TimeCockpit.Data.Environment
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TimeCockpit.Data.QueryLanguage.CompiledExpressionBase`1.FindAccessedElements(TimeCockpit.Data.DataModel.ModelEntityBase,System.Boolean,TimeCockpit.Data.Environment)
    name: FindAccessedElements
    nameWithType: CompiledExpressionBase(Of T).FindAccessedElements
    fullName: TimeCockpit.Data.QueryLanguage.CompiledExpressionBase(Of T).FindAccessedElements
  - name: (
    nameWithType: (
    fullName: (
  - uid: TimeCockpit.Data.DataModel.ModelEntityBase
    name: ModelEntityBase
    nameWithType: ModelEntityBase
    fullName: TimeCockpit.Data.DataModel.ModelEntityBase
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TimeCockpit.Data.Environment
    name: Environment
    nameWithType: Environment
    fullName: TimeCockpit.Data.Environment
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: TimeCockpit.Data.QueryLanguage.CompiledExpressionBase`1
  commentId: T:TimeCockpit.Data.QueryLanguage.CompiledExpressionBase`1
  isExternal: false
  name: CompiledExpressionBase<T>
  nameWithType: CompiledExpressionBase<T>
  fullName: TimeCockpit.Data.QueryLanguage.CompiledExpressionBase<T>
  nameWithType.vb: CompiledExpressionBase(Of T)
  fullName.vb: TimeCockpit.Data.QueryLanguage.CompiledExpressionBase(Of T)
  name.vb: CompiledExpressionBase(Of T)
  spec.csharp:
  - uid: TimeCockpit.Data.QueryLanguage.CompiledExpressionBase`1
    name: CompiledExpressionBase
    nameWithType: CompiledExpressionBase
    fullName: TimeCockpit.Data.QueryLanguage.CompiledExpressionBase
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: TimeCockpit.Data.QueryLanguage.CompiledExpressionBase`1
    name: CompiledExpressionBase
    nameWithType: CompiledExpressionBase
    fullName: TimeCockpit.Data.QueryLanguage.CompiledExpressionBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeCockpit.Data.QueryLanguage.CompiledExpressionBase`1.FindAccessedElements(TimeCockpit.Data.DataModel.ModelEntityBase,System.Boolean,TimeCockpit.Data.Environment)
  commentId: M:TimeCockpit.Data.QueryLanguage.CompiledExpressionBase`1.FindAccessedElements(TimeCockpit.Data.DataModel.ModelEntityBase,System.Boolean,TimeCockpit.Data.Environment)
  isExternal: true
  name: FindAccessedElements(ModelEntityBase, Boolean, Environment)
  nameWithType: CompiledExpressionBase<T>.FindAccessedElements(ModelEntityBase, Boolean, Environment)
  fullName: TimeCockpit.Data.QueryLanguage.CompiledExpressionBase<T>.FindAccessedElements(TimeCockpit.Data.DataModel.ModelEntityBase, System.Boolean, TimeCockpit.Data.Environment)
  nameWithType.vb: CompiledExpressionBase(Of T).FindAccessedElements(ModelEntityBase, Boolean, Environment)
  fullName.vb: TimeCockpit.Data.QueryLanguage.CompiledExpressionBase(Of T).FindAccessedElements(TimeCockpit.Data.DataModel.ModelEntityBase, System.Boolean, TimeCockpit.Data.Environment)
  spec.csharp:
  - uid: TimeCockpit.Data.QueryLanguage.CompiledExpressionBase`1.FindAccessedElements(TimeCockpit.Data.DataModel.ModelEntityBase,System.Boolean,TimeCockpit.Data.Environment)
    name: FindAccessedElements
    nameWithType: CompiledExpressionBase<T>.FindAccessedElements
    fullName: TimeCockpit.Data.QueryLanguage.CompiledExpressionBase<T>.FindAccessedElements
  - name: (
    nameWithType: (
    fullName: (
  - uid: TimeCockpit.Data.DataModel.ModelEntityBase
    name: ModelEntityBase
    nameWithType: ModelEntityBase
    fullName: TimeCockpit.Data.DataModel.ModelEntityBase
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TimeCockpit.Data.Environment
    name: Environment
    nameWithType: Environment
    fullName: TimeCockpit.Data.Environment
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TimeCockpit.Data.QueryLanguage.CompiledExpressionBase`1.FindAccessedElements(TimeCockpit.Data.DataModel.ModelEntityBase,System.Boolean,TimeCockpit.Data.Environment)
    name: FindAccessedElements
    nameWithType: CompiledExpressionBase(Of T).FindAccessedElements
    fullName: TimeCockpit.Data.QueryLanguage.CompiledExpressionBase(Of T).FindAccessedElements
  - name: (
    nameWithType: (
    fullName: (
  - uid: TimeCockpit.Data.DataModel.ModelEntityBase
    name: ModelEntityBase
    nameWithType: ModelEntityBase
    fullName: TimeCockpit.Data.DataModel.ModelEntityBase
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TimeCockpit.Data.Environment
    name: Environment
    nameWithType: Environment
    fullName: TimeCockpit.Data.Environment
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions.Expression
  commentId: T:System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: true
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: TimeCockpit.Data.QueryLanguage.CompiledExpression`1.Function*
  commentId: Overload:TimeCockpit.Data.QueryLanguage.CompiledExpression`1.Function
  isExternal: false
  name: Function
  nameWithType: CompiledExpression<T>.Function
  fullName: TimeCockpit.Data.QueryLanguage.CompiledExpression<T>.Function
  nameWithType.vb: CompiledExpression(Of T).Function
  fullName.vb: TimeCockpit.Data.QueryLanguage.CompiledExpression(Of T).Function
- uid: System.Func{TimeCockpit.Data.EntityObject,{T}}
  commentId: T:System.Func{TimeCockpit.Data.EntityObject,`0}
  parent: System
  definition: System.Func`2
  name: Func<EntityObject, T>
  nameWithType: Func<EntityObject, T>
  fullName: System.Func<TimeCockpit.Data.EntityObject, T>
  nameWithType.vb: Func(Of EntityObject, T)
  fullName.vb: System.Func(Of TimeCockpit.Data.EntityObject, T)
  name.vb: Func(Of EntityObject, T)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TimeCockpit.Data.EntityObject
    name: EntityObject
    nameWithType: EntityObject
    fullName: TimeCockpit.Data.EntityObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TimeCockpit.Data.EntityObject
    name: EntityObject
    nameWithType: EntityObject
    fullName: TimeCockpit.Data.EntityObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions
  commentId: N:System.Linq.Expressions
  isExternal: false
  name: System.Linq.Expressions
  nameWithType: System.Linq.Expressions
  fullName: System.Linq.Expressions
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
