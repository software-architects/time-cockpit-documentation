### YamlMime:ManagedReference
items:
- uid: TimeCockpit.Data.Geolocation.OSM.Address
  commentId: T:TimeCockpit.Data.Geolocation.OSM.Address
  id: Address
  parent: TimeCockpit.Data.Geolocation.OSM
  children:
  - TimeCockpit.Data.Geolocation.OSM.Address.#ctor
  - TimeCockpit.Data.Geolocation.OSM.Address.#ctor(TimeCockpit.Data.Geolocation.OSM.Address)
  - TimeCockpit.Data.Geolocation.OSM.Address.City
  - TimeCockpit.Data.Geolocation.OSM.Address.Country
  - TimeCockpit.Data.Geolocation.OSM.Address.Postalcode
  - TimeCockpit.Data.Geolocation.OSM.Address.Street
  langs:
  - csharp
  - vb
  name: Address
  nameWithType: Address
  fullName: TimeCockpit.Data.Geolocation.OSM.Address
  type: Class
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Geolocation.OSM
  summary: "\nAddress for OSM requests.\n"
  syntax:
    content: public class Address
    content.vb: Public Class Address
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TimeCockpit.Data.Geolocation.OSM.Address.#ctor
  commentId: M:TimeCockpit.Data.Geolocation.OSM.Address.#ctor
  id: '#ctor'
  parent: TimeCockpit.Data.Geolocation.OSM.Address
  langs:
  - csharp
  - vb
  name: Address()
  nameWithType: Address.Address()
  fullName: TimeCockpit.Data.Geolocation.OSM.Address.Address()
  type: Constructor
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Geolocation.OSM
  summary: "\nInitializes a new instance of the Address class.\n"
  syntax:
    content: public Address()
    content.vb: Public Sub New
  overload: TimeCockpit.Data.Geolocation.OSM.Address.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Geolocation.OSM.Address.#ctor(TimeCockpit.Data.Geolocation.OSM.Address)
  commentId: M:TimeCockpit.Data.Geolocation.OSM.Address.#ctor(TimeCockpit.Data.Geolocation.OSM.Address)
  id: '#ctor(TimeCockpit.Data.Geolocation.OSM.Address)'
  parent: TimeCockpit.Data.Geolocation.OSM.Address
  langs:
  - csharp
  - vb
  name: Address(Address)
  nameWithType: Address.Address(Address)
  fullName: TimeCockpit.Data.Geolocation.OSM.Address.Address(TimeCockpit.Data.Geolocation.OSM.Address)
  type: Constructor
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Geolocation.OSM
  summary: "\nInitializes a new instance of the Address class by copying values from an original.\n"
  syntax:
    content: public Address(Address original)
    parameters:
    - id: original
      type: TimeCockpit.Data.Geolocation.OSM.Address
      description: Original address.
    content.vb: Public Sub New(original As Address)
  overload: TimeCockpit.Data.Geolocation.OSM.Address.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Geolocation.OSM.Address.Postalcode
  commentId: P:TimeCockpit.Data.Geolocation.OSM.Address.Postalcode
  id: Postalcode
  parent: TimeCockpit.Data.Geolocation.OSM.Address
  langs:
  - csharp
  - vb
  name: Postalcode
  nameWithType: Address.Postalcode
  fullName: TimeCockpit.Data.Geolocation.OSM.Address.Postalcode
  type: Property
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Geolocation.OSM
  summary: "\nGets or sets the postal code.\n"
  syntax:
    content: public string Postalcode { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Postalcode As String
  overload: TimeCockpit.Data.Geolocation.OSM.Address.Postalcode*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Geolocation.OSM.Address.City
  commentId: P:TimeCockpit.Data.Geolocation.OSM.Address.City
  id: City
  parent: TimeCockpit.Data.Geolocation.OSM.Address
  langs:
  - csharp
  - vb
  name: City
  nameWithType: Address.City
  fullName: TimeCockpit.Data.Geolocation.OSM.Address.City
  type: Property
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Geolocation.OSM
  summary: "\nGets or sets the city.\n"
  syntax:
    content: public string City { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property City As String
  overload: TimeCockpit.Data.Geolocation.OSM.Address.City*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Geolocation.OSM.Address.Country
  commentId: P:TimeCockpit.Data.Geolocation.OSM.Address.Country
  id: Country
  parent: TimeCockpit.Data.Geolocation.OSM.Address
  langs:
  - csharp
  - vb
  name: Country
  nameWithType: Address.Country
  fullName: TimeCockpit.Data.Geolocation.OSM.Address.Country
  type: Property
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Geolocation.OSM
  summary: "\nGets or sets the country.\n"
  syntax:
    content: public string Country { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Country As String
  overload: TimeCockpit.Data.Geolocation.OSM.Address.Country*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TimeCockpit.Data.Geolocation.OSM.Address.Street
  commentId: P:TimeCockpit.Data.Geolocation.OSM.Address.Street
  id: Street
  parent: TimeCockpit.Data.Geolocation.OSM.Address
  langs:
  - csharp
  - vb
  name: Street
  nameWithType: Address.Street
  fullName: TimeCockpit.Data.Geolocation.OSM.Address.Street
  type: Property
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data.Geolocation.OSM
  summary: "\nGets or sets the street (including numbers).\n"
  syntax:
    content: public string Street { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Street As String
  overload: TimeCockpit.Data.Geolocation.OSM.Address.Street*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: TimeCockpit.Data.Geolocation.OSM
  commentId: N:TimeCockpit.Data.Geolocation.OSM
  isExternal: true
  name: TimeCockpit.Data.Geolocation.OSM
  nameWithType: TimeCockpit.Data.Geolocation.OSM
  fullName: TimeCockpit.Data.Geolocation.OSM
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TimeCockpit.Data.Geolocation.OSM.Address.#ctor*
  commentId: Overload:TimeCockpit.Data.Geolocation.OSM.Address.#ctor
  isExternal: true
  name: Address
  nameWithType: Address.Address
  fullName: TimeCockpit.Data.Geolocation.OSM.Address.Address
- uid: TimeCockpit.Data.Geolocation.OSM.Address
  commentId: T:TimeCockpit.Data.Geolocation.OSM.Address
  parent: TimeCockpit.Data.Geolocation.OSM
  isExternal: true
  name: Address
  nameWithType: Address
  fullName: TimeCockpit.Data.Geolocation.OSM.Address
- uid: TimeCockpit.Data.Geolocation.OSM.Address.Postalcode*
  commentId: Overload:TimeCockpit.Data.Geolocation.OSM.Address.Postalcode
  isExternal: true
  name: Postalcode
  nameWithType: Address.Postalcode
  fullName: TimeCockpit.Data.Geolocation.OSM.Address.Postalcode
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: TimeCockpit.Data.Geolocation.OSM.Address.City*
  commentId: Overload:TimeCockpit.Data.Geolocation.OSM.Address.City
  isExternal: true
  name: City
  nameWithType: Address.City
  fullName: TimeCockpit.Data.Geolocation.OSM.Address.City
- uid: TimeCockpit.Data.Geolocation.OSM.Address.Country*
  commentId: Overload:TimeCockpit.Data.Geolocation.OSM.Address.Country
  isExternal: true
  name: Country
  nameWithType: Address.Country
  fullName: TimeCockpit.Data.Geolocation.OSM.Address.Country
- uid: TimeCockpit.Data.Geolocation.OSM.Address.Street*
  commentId: Overload:TimeCockpit.Data.Geolocation.OSM.Address.Street
  isExternal: true
  name: Street
  nameWithType: Address.Street
  fullName: TimeCockpit.Data.Geolocation.OSM.Address.Street
