### YamlMime:ManagedReference
items:
- uid: TimeCockpit.Data.DataContextScriptExtensions
  commentId: T:TimeCockpit.Data.DataContextScriptExtensions
  id: DataContextScriptExtensions
  parent: TimeCockpit.Data
  children:
  - TimeCockpit.Data.DataContextScriptExtensions.ExecuteScript(TimeCockpit.Data.DataContext,TimeCockpit.Data.Scripting.ExecutionInfo)
  - TimeCockpit.Data.DataContextScriptExtensions.ExecuteScript(TimeCockpit.Data.DataContext,TimeCockpit.Data.Scripting.ExecutionInfo,System.IO.Stream)
  - TimeCockpit.Data.DataContextScriptExtensions.ExecuteScriptFromResource(TimeCockpit.Data.DataContext,System.Reflection.Assembly,System.String,System.IO.Stream)
  - TimeCockpit.Data.DataContextScriptExtensions.ExecuteScriptReturnOutput(TimeCockpit.Data.DataContext,TimeCockpit.Data.Scripting.ExecutionInfo)
  - TimeCockpit.Data.DataContextScriptExtensions.GetFunctionScriptResult``1(TimeCockpit.Data.DataContext,TimeCockpit.Data.Scripting.ExecutionInfo,System.String,System.Object[],System.IO.Stream)
  - TimeCockpit.Data.DataContextScriptExtensions.GetScriptResult(TimeCockpit.Data.DataContext,TimeCockpit.Data.Scripting.ExecutionInfo,System.IO.Stream)
  langs:
  - csharp
  - vb
  name: DataContextScriptExtensions
  nameWithType: DataContextScriptExtensions
  fullName: TimeCockpit.Data.DataContextScriptExtensions
  type: Class
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data
  summary: "\nclass providing extension methods for backwards compatibility.\n"
  syntax:
    content: public static class DataContextScriptExtensions
    content.vb: Public Module DataContextScriptExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: TimeCockpit.Data.DataContextScriptExtensions.ExecuteScript(TimeCockpit.Data.DataContext,TimeCockpit.Data.Scripting.ExecutionInfo)
  commentId: M:TimeCockpit.Data.DataContextScriptExtensions.ExecuteScript(TimeCockpit.Data.DataContext,TimeCockpit.Data.Scripting.ExecutionInfo)
  id: ExecuteScript(TimeCockpit.Data.DataContext,TimeCockpit.Data.Scripting.ExecutionInfo)
  isExtensionMethod: true
  parent: TimeCockpit.Data.DataContextScriptExtensions
  langs:
  - csharp
  - vb
  name: ExecuteScript(DataContext, ExecutionInfo)
  nameWithType: DataContextScriptExtensions.ExecuteScript(DataContext, ExecutionInfo)
  fullName: TimeCockpit.Data.DataContextScriptExtensions.ExecuteScript(TimeCockpit.Data.DataContext, TimeCockpit.Data.Scripting.ExecutionInfo)
  type: Method
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data
  summary: "\nCreates a new script context and executes a script.\n"
  syntax:
    content: public static void ExecuteScript(this DataContext dataContext, ExecutionInfo script)
    parameters:
    - id: dataContext
      type: TimeCockpit.Data.DataContext
      description: DataContext to execute script agains.
    - id: script
      type: TimeCockpit.Data.Scripting.ExecutionInfo
      description: the script source to execute.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub ExecuteScript(dataContext As DataContext, script As ExecutionInfo)
  overload: TimeCockpit.Data.DataContextScriptExtensions.ExecuteScript*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: TimeCockpit.Data.DataContextScriptExtensions.ExecuteScript(TimeCockpit.Data.DataContext,TimeCockpit.Data.Scripting.ExecutionInfo,System.IO.Stream)
  commentId: M:TimeCockpit.Data.DataContextScriptExtensions.ExecuteScript(TimeCockpit.Data.DataContext,TimeCockpit.Data.Scripting.ExecutionInfo,System.IO.Stream)
  id: ExecuteScript(TimeCockpit.Data.DataContext,TimeCockpit.Data.Scripting.ExecutionInfo,System.IO.Stream)
  isExtensionMethod: true
  parent: TimeCockpit.Data.DataContextScriptExtensions
  langs:
  - csharp
  - vb
  name: ExecuteScript(DataContext, ExecutionInfo, Stream)
  nameWithType: DataContextScriptExtensions.ExecuteScript(DataContext, ExecutionInfo, Stream)
  fullName: TimeCockpit.Data.DataContextScriptExtensions.ExecuteScript(TimeCockpit.Data.DataContext, TimeCockpit.Data.Scripting.ExecutionInfo, System.IO.Stream)
  type: Method
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data
  summary: "\nCreates a new script context and executes a script.\n"
  syntax:
    content: public static void ExecuteScript(this DataContext dataContext, ExecutionInfo script, Stream outputStream)
    parameters:
    - id: dataContext
      type: TimeCockpit.Data.DataContext
      description: DataContext to execute script agains.
    - id: script
      type: TimeCockpit.Data.Scripting.ExecutionInfo
      description: the script source to execute.
    - id: outputStream
      type: System.IO.Stream
      description: stream accepting output.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub ExecuteScript(dataContext As DataContext, script As ExecutionInfo, outputStream As Stream)
  overload: TimeCockpit.Data.DataContextScriptExtensions.ExecuteScript*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: TimeCockpit.Data.DataContextScriptExtensions.ExecuteScriptReturnOutput(TimeCockpit.Data.DataContext,TimeCockpit.Data.Scripting.ExecutionInfo)
  commentId: M:TimeCockpit.Data.DataContextScriptExtensions.ExecuteScriptReturnOutput(TimeCockpit.Data.DataContext,TimeCockpit.Data.Scripting.ExecutionInfo)
  id: ExecuteScriptReturnOutput(TimeCockpit.Data.DataContext,TimeCockpit.Data.Scripting.ExecutionInfo)
  isExtensionMethod: true
  parent: TimeCockpit.Data.DataContextScriptExtensions
  langs:
  - csharp
  - vb
  name: ExecuteScriptReturnOutput(DataContext, ExecutionInfo)
  nameWithType: DataContextScriptExtensions.ExecuteScriptReturnOutput(DataContext, ExecutionInfo)
  fullName: TimeCockpit.Data.DataContextScriptExtensions.ExecuteScriptReturnOutput(TimeCockpit.Data.DataContext, TimeCockpit.Data.Scripting.ExecutionInfo)
  type: Method
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data
  summary: "\nCreates a new script context and executes a script.\n"
  syntax:
    content: public static string ExecuteScriptReturnOutput(this DataContext dataContext, ExecutionInfo script)
    parameters:
    - id: dataContext
      type: TimeCockpit.Data.DataContext
      description: DataContext to execute script agains.
    - id: script
      type: TimeCockpit.Data.Scripting.ExecutionInfo
      description: the script source to execute.
    return:
      type: System.String
      description: returns the script output
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ExecuteScriptReturnOutput(dataContext As DataContext, script As ExecutionInfo) As String
  overload: TimeCockpit.Data.DataContextScriptExtensions.ExecuteScriptReturnOutput*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: TimeCockpit.Data.DataContextScriptExtensions.ExecuteScriptFromResource(TimeCockpit.Data.DataContext,System.Reflection.Assembly,System.String,System.IO.Stream)
  commentId: M:TimeCockpit.Data.DataContextScriptExtensions.ExecuteScriptFromResource(TimeCockpit.Data.DataContext,System.Reflection.Assembly,System.String,System.IO.Stream)
  id: ExecuteScriptFromResource(TimeCockpit.Data.DataContext,System.Reflection.Assembly,System.String,System.IO.Stream)
  isExtensionMethod: true
  parent: TimeCockpit.Data.DataContextScriptExtensions
  langs:
  - csharp
  - vb
  name: ExecuteScriptFromResource(DataContext, Assembly, String, Stream)
  nameWithType: DataContextScriptExtensions.ExecuteScriptFromResource(DataContext, Assembly, String, Stream)
  fullName: TimeCockpit.Data.DataContextScriptExtensions.ExecuteScriptFromResource(TimeCockpit.Data.DataContext, System.Reflection.Assembly, System.String, System.IO.Stream)
  type: Method
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data
  summary: "\nExecutes the script from resource.\n"
  syntax:
    content: public static void ExecuteScriptFromResource(this DataContext dataContext, Assembly assembly, string resourceName, Stream outputStream = null)
    parameters:
    - id: dataContext
      type: TimeCockpit.Data.DataContext
      description: The data context.
    - id: assembly
      type: System.Reflection.Assembly
      description: The assembly.
    - id: resourceName
      type: System.String
      description: Name of the resource.
    - id: outputStream
      type: System.IO.Stream
      description: stream accepting output.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub ExecuteScriptFromResource(dataContext As DataContext, assembly As Assembly, resourceName As String, outputStream As Stream = Nothing)
  overload: TimeCockpit.Data.DataContextScriptExtensions.ExecuteScriptFromResource*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: TimeCockpit.Data.DataContextScriptExtensions.GetScriptResult(TimeCockpit.Data.DataContext,TimeCockpit.Data.Scripting.ExecutionInfo,System.IO.Stream)
  commentId: M:TimeCockpit.Data.DataContextScriptExtensions.GetScriptResult(TimeCockpit.Data.DataContext,TimeCockpit.Data.Scripting.ExecutionInfo,System.IO.Stream)
  id: GetScriptResult(TimeCockpit.Data.DataContext,TimeCockpit.Data.Scripting.ExecutionInfo,System.IO.Stream)
  isExtensionMethod: true
  parent: TimeCockpit.Data.DataContextScriptExtensions
  langs:
  - csharp
  - vb
  name: GetScriptResult(DataContext, ExecutionInfo, Stream)
  nameWithType: DataContextScriptExtensions.GetScriptResult(DataContext, ExecutionInfo, Stream)
  fullName: TimeCockpit.Data.DataContextScriptExtensions.GetScriptResult(TimeCockpit.Data.DataContext, TimeCockpit.Data.Scripting.ExecutionInfo, System.IO.Stream)
  type: Method
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data
  summary: "\nGets the script resource.\n"
  syntax:
    content: public static ScriptResult GetScriptResult(this DataContext dataContext, ExecutionInfo script, Stream outputStream = null)
    parameters:
    - id: dataContext
      type: TimeCockpit.Data.DataContext
      description: The data context.
    - id: script
      type: TimeCockpit.Data.Scripting.ExecutionInfo
      description: The script.
    - id: outputStream
      type: System.IO.Stream
      description: stream accepting output.
    return:
      type: TimeCockpit.Data.ScriptResult
      description: returns a new script result.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetScriptResult(dataContext As DataContext, script As ExecutionInfo, outputStream As Stream = Nothing) As ScriptResult
  overload: TimeCockpit.Data.DataContextScriptExtensions.GetScriptResult*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: TimeCockpit.Data.DataContextScriptExtensions.GetFunctionScriptResult``1(TimeCockpit.Data.DataContext,TimeCockpit.Data.Scripting.ExecutionInfo,System.String,System.Object[],System.IO.Stream)
  commentId: M:TimeCockpit.Data.DataContextScriptExtensions.GetFunctionScriptResult``1(TimeCockpit.Data.DataContext,TimeCockpit.Data.Scripting.ExecutionInfo,System.String,System.Object[],System.IO.Stream)
  id: GetFunctionScriptResult``1(TimeCockpit.Data.DataContext,TimeCockpit.Data.Scripting.ExecutionInfo,System.String,System.Object[],System.IO.Stream)
  isExtensionMethod: true
  parent: TimeCockpit.Data.DataContextScriptExtensions
  langs:
  - csharp
  - vb
  name: GetFunctionScriptResult<T>(DataContext, ExecutionInfo, String, Object[], Stream)
  nameWithType: DataContextScriptExtensions.GetFunctionScriptResult<T>(DataContext, ExecutionInfo, String, Object[], Stream)
  fullName: TimeCockpit.Data.DataContextScriptExtensions.GetFunctionScriptResult<T>(TimeCockpit.Data.DataContext, TimeCockpit.Data.Scripting.ExecutionInfo, System.String, System.Object[], System.IO.Stream)
  type: Method
  source:
    path: TimeCockpit.Data
    isExternal: true
  assemblies:
  - TimeCockpit.Data
  namespace: TimeCockpit.Data
  summary: "\nGets the script resource.\n"
  syntax:
    content: >-
      public static T GetFunctionScriptResult<T>(this DataContext dataContext, ExecutionInfo script, string functionName, object[] parameters, Stream outputStream = null)
          where T : class
    parameters:
    - id: dataContext
      type: TimeCockpit.Data.DataContext
      description: The data context.
    - id: script
      type: TimeCockpit.Data.Scripting.ExecutionInfo
      description: The script.
    - id: functionName
      type: System.String
      description: The name of the function to execute.
    - id: parameters
      type: System.Object[]
      description: A list of parameters for the function.
    - id: outputStream
      type: System.IO.Stream
      description: stream accepting output.
    typeParameters:
    - id: T
      description: Type of the result
    return:
      type: '{T}'
      description: returns a new script result.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetFunctionScriptResult(Of T As Class)(dataContext As DataContext, script As ExecutionInfo, functionName As String, parameters As Object(), outputStream As Stream = Nothing) As T
  overload: TimeCockpit.Data.DataContextScriptExtensions.GetFunctionScriptResult*
  nameWithType.vb: DataContextScriptExtensions.GetFunctionScriptResult(Of T)(DataContext, ExecutionInfo, String, Object(), Stream)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TimeCockpit.Data.DataContextScriptExtensions.GetFunctionScriptResult(Of T)(TimeCockpit.Data.DataContext, TimeCockpit.Data.Scripting.ExecutionInfo, System.String, System.Object(), System.IO.Stream)
  name.vb: GetFunctionScriptResult(Of T)(DataContext, ExecutionInfo, String, Object(), Stream)
references:
- uid: TimeCockpit.Data
  commentId: N:TimeCockpit.Data
  isExternal: true
  name: TimeCockpit.Data
  nameWithType: TimeCockpit.Data
  fullName: TimeCockpit.Data
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TimeCockpit.Data.DataContextScriptExtensions.ExecuteScript*
  commentId: Overload:TimeCockpit.Data.DataContextScriptExtensions.ExecuteScript
  isExternal: true
  name: ExecuteScript
  nameWithType: DataContextScriptExtensions.ExecuteScript
  fullName: TimeCockpit.Data.DataContextScriptExtensions.ExecuteScript
- uid: TimeCockpit.Data.DataContext
  commentId: T:TimeCockpit.Data.DataContext
  parent: TimeCockpit.Data
  isExternal: true
  name: DataContext
  nameWithType: DataContext
  fullName: TimeCockpit.Data.DataContext
- uid: TimeCockpit.Data.Scripting.ExecutionInfo
  commentId: T:TimeCockpit.Data.Scripting.ExecutionInfo
  parent: TimeCockpit.Data.Scripting
  isExternal: true
  name: ExecutionInfo
  nameWithType: ExecutionInfo
  fullName: TimeCockpit.Data.Scripting.ExecutionInfo
- uid: TimeCockpit.Data.Scripting
  commentId: N:TimeCockpit.Data.Scripting
  isExternal: true
  name: TimeCockpit.Data.Scripting
  nameWithType: TimeCockpit.Data.Scripting
  fullName: TimeCockpit.Data.Scripting
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: TimeCockpit.Data.DataContextScriptExtensions.ExecuteScriptReturnOutput*
  commentId: Overload:TimeCockpit.Data.DataContextScriptExtensions.ExecuteScriptReturnOutput
  isExternal: true
  name: ExecuteScriptReturnOutput
  nameWithType: DataContextScriptExtensions.ExecuteScriptReturnOutput
  fullName: TimeCockpit.Data.DataContextScriptExtensions.ExecuteScriptReturnOutput
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: TimeCockpit.Data.DataContextScriptExtensions.ExecuteScriptFromResource*
  commentId: Overload:TimeCockpit.Data.DataContextScriptExtensions.ExecuteScriptFromResource
  isExternal: true
  name: ExecuteScriptFromResource
  nameWithType: DataContextScriptExtensions.ExecuteScriptFromResource
  fullName: TimeCockpit.Data.DataContextScriptExtensions.ExecuteScriptFromResource
- uid: System.Reflection.Assembly
  commentId: T:System.Reflection.Assembly
  parent: System.Reflection
  isExternal: true
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.Reflection
  commentId: N:System.Reflection
  isExternal: true
  name: System.Reflection
  nameWithType: System.Reflection
  fullName: System.Reflection
- uid: TimeCockpit.Data.DataContextScriptExtensions.GetScriptResult*
  commentId: Overload:TimeCockpit.Data.DataContextScriptExtensions.GetScriptResult
  isExternal: true
  name: GetScriptResult
  nameWithType: DataContextScriptExtensions.GetScriptResult
  fullName: TimeCockpit.Data.DataContextScriptExtensions.GetScriptResult
- uid: TimeCockpit.Data.ScriptResult
  commentId: T:TimeCockpit.Data.ScriptResult
  parent: TimeCockpit.Data
  isExternal: true
  name: ScriptResult
  nameWithType: ScriptResult
  fullName: TimeCockpit.Data.ScriptResult
- uid: TimeCockpit.Data.DataContextScriptExtensions.GetFunctionScriptResult*
  commentId: Overload:TimeCockpit.Data.DataContextScriptExtensions.GetFunctionScriptResult
  isExternal: true
  name: GetFunctionScriptResult
  nameWithType: DataContextScriptExtensions.GetFunctionScriptResult
  fullName: TimeCockpit.Data.DataContextScriptExtensions.GetFunctionScriptResult
- uid: System.Object[]
  isExternal: true
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  nameWithType.vb: Object()
  fullName.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
